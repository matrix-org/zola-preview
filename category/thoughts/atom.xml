<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
	<title> - Thoughts</title>
	<link href="/category/thoughts/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="/"/>
	<generator uri="https://www.getzola.org/">Zola</generator>
	<updated>2020-01-02T00:00:00+00:00</updated>
	<id>/category/thoughts/atom.xml</id>
	<entry xml:lang="en">
		<title>On Privacy versus Freedom</title>
		<published>2020-01-02T00:00:00+00:00</published>
		<updated>2020-01-02T00:00:00+00:00</updated>
		<link rel="alternate" href="/blog/2020/01/02/on-privacy-versus-freedom/" type="text/html"/>
		<id>/blog/2020/01/02/on-privacy-versus-freedom/</id>
		<content type="html">&lt;p&gt;A few years ago, back when Matrix was originally implementing end-to-end encryption, we asked Moxie (the project lead for Signal) whether he’d ever consider connecting Signal (then TextSecure) to Matrix.  After all, one of Matrix’s goals is to be an interoperability layer between other communication silos, and one of the reasons for us using Signal’s Double Ratchet Algorithm for Matrix’s encryption was to increase our chances of one day connecting with other apps using the same algorithm (Signal, WhatsApp, Google Allo, Skype, etc).  Moxie politely declined, and then a few months later wrote “&lt;a href=&quot;https:&#x2F;&#x2F;signal.org&#x2F;blog&#x2F;the-ecosystem-is-moving&#x2F;&quot;&gt;The ecosystem is moving&lt;&#x2F;a&gt;” to elaborate his thoughts on why he feels he “no longer believes that it is possible to build a competitive federated messenger at all.”&lt;&#x2F;p&gt;
&lt;p&gt;At the time we didn’t respond via a blog post; instead we ended up talking it through a few times in person to see how misaligned we really were. The conclusion was that we agreed to disagree and Moxie said he’d be happy to be proved wrong, and wished us good luck.  However, the subject has come up again thanks to &lt;a href=&quot;https:&#x2F;&#x2F;fahrplan.events.ccc.de&#x2F;congress&#x2F;2019&#x2F;Fahrplan&#x2F;events&#x2F;11086.html&quot;&gt;Moxie’s talk on the same subject&lt;&#x2F;a&gt; at 36C3 last week, and we &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=21933891&quot;&gt;keep&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=21935219&quot;&gt;getting&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;!OGEhHVWSdvArJzumhm:matrix.org&#x2F;$SzdpeR_Hji5AMOkydnYzv5UN_UaGdN710ThF-lfAt9A?via=matrix.org&amp;amp;via=t2bot.io&amp;amp;via=privacytools.io&quot;&gt;asked&lt;&#x2F;a&gt; to write a formal response on the Matrix side.  So, here’s an attempt to do so.  (Moxie didn’t want the 36C3 talk recorded, and I haven’t watched it, so this is responding to the original blog post).&lt;&#x2F;p&gt;
&lt;p&gt;From my perspective, the main points proposed in ‘The ecosystem is moving’ boil down to:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Decentralised systems are harder to design and build than centralised ones, as coordination is harder if you don’t have a single authority to trust.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Decentralised systems are harder and slower to evolve than centralised ones, as you can’t force participants to rapidly roll out (or even agree on) new features.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Users in federated systems tend to coalesce around the best&#x2F;biggest server that the bulk of people use - which means that server typically gets to see a disproportionate amount of communication metadata (who’s talking to who, and when), and has disproportionate power over the network, which could bully others away from running their own deployments.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;If users don’t trust their app provider, they can always go switch apps, which gives them freedom.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Open systems are less secure because you have no control over the quality of the implementations - if anyone can bring their own client or server to the table, all it takes is one bad implementation to compromise everyone in the vicinity.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Now, all of these points are valid to some extent.&lt;&#x2F;p&gt;
&lt;p&gt;It’s absolutely true that decentralised systems are harder than centralised ones.  Prior to Matrix we built centralised comms systems - we literally can do a side-by-side comparison for the same team to see how easily and fast we built our centralised comms system relative to Matrix.  Empirically It took us around 6 times longer to get to the same feature-set with Matrix.&lt;&#x2F;p&gt;
&lt;p&gt;It’s also true that decentralised systems are harder to evolve than centralised ones - you can’t just push out a given feature with a single app update, but you have to agree and publish a public spec, support incremental migration, and build governance processes and community dynamics which encourage everyone to implement and upgrade.  This is hard, but not impossible: we’ve spent loads of time and money on Matrix’s &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;foundation&#x2F;&quot;&gt;governance model&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;matrix.org&#x2F;docs&#x2F;spec&#x2F;proposals&quot;&gt;spec process&lt;&#x2F;a&gt; to get it right.  It’s still not perfect, but we haven’t seen much fragmentation so far, and when we’re pushing out a feature empirically we can and do go just as fast as the centralised alternatives. (E2E by default is a bit of a special case because we’ve had to go and reimplement many features users take for granted today in an E2E-capable manner, but we’re sprinting to get it done in the coming weeks).  A bigger problem is that there are hundreds of spec change proposals which folks would like to see in the protocol, and finding a way to manage expectations and parallelise spec progress is hard - something we’re looking to improve in 2020 (although still figuring out how!)&lt;&#x2F;p&gt;
&lt;p&gt;It’s also fair that in a multi-server federated model, users naturally tend to sign up on the most prominent server(s) (e.g. the matrix.org homeserver in the case of Matrix).  In practice, the matrix.org homeserver currently makes up about 35% of the visible Matrix network by active users.  It’s also true that Matrix servers currently store metadata about who’s talking to who, and when, as a side-effect of storing and relaying messages on behalf of their users.  And without an adequate protocol governance system in place, a large server could start pushing around smaller ones in terms of protocol behaviour.  In practice, we’re looking into solving metadata protection in Matrix by experimenting with hybrid P2P &#x2F; Client Server models - letting users store their metadata purely clientside if they so desire, and potentially obfuscating who’s talking to who via mixnets of blinded store &amp;amp; forward servers (more about this coming up at &lt;a href=&quot;https:&#x2F;&#x2F;fosdem.org&#x2F;2020&#x2F;schedule&#x2F;event&#x2F;dip_p2p_matrix&#x2F;&quot;&gt;FOSDEM&lt;&#x2F;a&gt;). Combined with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;blob&#x2F;rav&#x2F;proposal&#x2F;remove_mxids_from_events&#x2F;proposals&#x2F;1228-removing-mxids-from-events.md&quot;&gt;nomadic accounts&lt;&#x2F;a&gt;, this would let us eventually turn off the matrix.org server entirely and eliminate the pseudo-centralisation effect - the default ‘server’ would be the one running on your client.&lt;&#x2F;p&gt;
&lt;p&gt;It’s true that if a user doesn’t trust (say) Telegram, they are free to go switch to Signal or WhatsApp or whatever instead… at the massive expense of having to persuade all their friends to install yet another app, and fragmenting their conversation history across multiple apps.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, it’s also true that because anyone can develop a Matrix client or server and connect to the global network, there’s a risk of bad quality implementations in the wild.  There are many forks of Riot on the app stores - we simply can’t vouch for whether they are secure.  Similarly there are Matrix clients whose E2E encryption is partial, missing, or unreviewed.  And there are a wide range of different Matrix servers run by different people with different agendas in different locations, which may be more or less trustworthy.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;HOWEVER: all of this completely ignores one critical thing - the value of freedom&lt;&#x2F;strong&gt;.  Freedom to select which server to use.  Freedom to run your own server (perhaps invisibly in your app, in a P2P world). Freedom to pick which country your server runs in. Freedom to select how much metadata and history to keep. Freedom to choose which apps to use - while still having the freedom to talk to anyone you like (without them necessarily installing yet another app).  Freedom to connect your own functionality - bots, bridges, integrations etc.  Freedom to select which identifiers (if any) to use to register your account.  Freedom to extend the protocol.  Freedom to write your own client, or build whole new as-yet-unimagined systems on top.&lt;&#x2F;p&gt;
&lt;p&gt;It’s true that if you’re writing a messaging app optimised for privacy at any cost, Moxie’s approach is one way to do it. However, this ends up being a perversely closed world - a closed network, where unofficial clients are banned, with no platform to build on, no open standards, and you end up thoroughly putting all your eggs in one basket, trusting past, present &amp;amp; future Signal to retain its values, stay up and somehow dodge compromise &amp;amp; censorship… despite probably being the single highest value attack target on the ‘net.&lt;&#x2F;p&gt;
&lt;p&gt;Quite simply, that isn’t a world I want to live in.&lt;&#x2F;p&gt;
&lt;p&gt;We owe the entire success of the Internet (let alone the Web) to openness, interoperability and decentralisation.  To declare that openness, interoperability and decentralisation is ‘too hard’ and not worth the effort when building a messaging solution is to throw away &lt;em&gt;all&lt;&#x2F;em&gt; the potential of the vibrancy, creativity and innovation that comes from an open network.  Sure, you may end up with a super-private messaging app - but one that starts to smell alarmingly like a walled garden like Facebook’s Internet.org initiative, or an AOL keyword, or Google’s AMP.&lt;&#x2F;p&gt;
&lt;p&gt;So, we continue to gladly take up Moxie’s challenge to prove him wrong - to show that it’s both possible and imperative to create an open decentralised messaging platform which (if you use reputable apps and servers) can be as secure and metadata-protecting as Signal… and indeed more so, given you can run your server off the grid, and don’t need to register with a phone number, and in future may not even need a server at all.&lt;&#x2F;p&gt;
&lt;p&gt;--Matthew&lt;&#x2F;p&gt;
&lt;p&gt;(Comments over at &lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=21936929&quot;&gt;HN&lt;&#x2F;a&gt;)&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Ben&#x27;s favourite projects 2018</title>
		<published>2019-01-17T00:00:00+00:00</published>
		<updated>2019-01-17T00:00:00+00:00</updated>
		<link rel="alternate" href="/blog/2019/01/17/ben-s-favourite-projects-2018/" type="text/html"/>
		<id>/blog/2019/01/17/ben-s-favourite-projects-2018/</id>
		<content type="html">&lt;p&gt;Hi all, Ben here.&lt;&#x2F;p&gt;
&lt;p&gt;Since joining the core team as Developer Advocate last year it&#x27;s been quite a ride. One of the best things about the job is getting the chance to talk to so many people about their projects and what they would like to see happen in the matrix ecosystem. With so much going on, I just want to say thanks to everyone who has been so welcoming to me and share some of my personal highlights, as I recall them, from 2018!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;clients&quot;&gt;Clients&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;wiki.gnome.org&#x2F;Apps&#x2F;Fractal&quot;&gt;Fractal&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; was featured in the very first TWIM, announcing v1.26. Since then, the team have hosted two IRL hackfest events (Strasbourg and Seville - where to next, Stockholm? Salisbury?), engaged two GSOC students and continued to push out releases. At this point, Fractal is a full-featured Matrix client for GNOME.&lt;&#x2F;p&gt;
&lt;p&gt;Matrique became &lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;spectral-im&#x2F;spectral&quot;&gt;Spectral&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;, and is generally awesome. Apparently the name &amp;quot;Matrique&amp;quot; was chosen because it sounds French, but those who speak the language well revealed that this name was not ideal! The project was re-named &amp;quot;Spectral&amp;quot;, and is going strong. I really appreciate the multi-user facility! It&#x27;s a great looking client, and runs great on macOS too (protip: get more attention from &lt;code&gt;&#x2F;me&lt;&#x2F;code&gt; by providing a macOS build…)&lt;&#x2F;p&gt;
&lt;p&gt;On which subject, &lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;neilalexander&#x2F;seaglass&quot;&gt;Seaglass&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; is a native macOS client. First announced in June, this client supports E2EE rooms (via &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-ios-sdk&quot;&gt;matrix-ios-sdk&lt;&#x2F;a&gt;), and is also available on homebrew.&lt;&#x2F;p&gt;
&lt;p&gt;Ubuntu Touch has the most Matrix clients per-user of any platform. UT epitomises the resilience and collaborative spirit of Open Source. It&#x27;s a true community maintenance effort, and is as friendly a community as you might meet. &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;uMatriks&#x2F;uMatriks&quot;&gt;uMatriks&lt;&#x2F;a&gt; came first, but it&#x27;s &lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ChristianPauly&#x2F;fluffychat&quot;&gt;FluffyChat&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; that prompted me to install it on my battered old OnePlus One. FluffyChat is now extremely full-featured, with E2EE support being actively discussed.&lt;&#x2F;p&gt;
&lt;p&gt;In the command line, &lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tulir&#x2F;gomuks&quot;&gt;gomuks&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; appeared and quickly became a competent client, but in terms of sheer enthusiasm and momentum, I must give commendation to &lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jgkamat&#x2F;matrix-client-el&quot;&gt;matrix-client.el&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;, a newly revived mode for Emacs which turns your editor&#x2F;OS into a great Matrix Client. I enjoyed using it enough that it began to change my mind about using emacs. Laptops have more than 8mb memory these days anyway.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;a-culture-of-bots&quot;&gt;A culture of bots&lt;&#x2F;h3&gt;
&lt;p&gt;There is a tendency in the community to build a bot for everything and anything. This has reached the point where there are multiple flairs available depending on what bots you like to make (silly vs serious.)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;turt2live&quot;&gt;TravisR&lt;&#x2F;a&gt; was perhaps the first person I saw to get the obsession, creating&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;turt2live&#x2F;matrix-monitor-bot&quot;&gt;matrix-monitor-bot&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
 	&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;turt2live&#x2F;matrix-trello-bot&quot;&gt;matrix-trello-bot&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
 	&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;turt2live&#x2F;matrix-alias-bot&quot;&gt;matrix-alias-bot&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
 	&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;turt2live&#x2F;matrix-hashtag-bot&quot;&gt;hashtag bot&lt;&#x2F;a&gt; (perhaps the most absurd!)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
and more…
&lt;p&gt;Cadair even made &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Cadair&#x2F;skill-twim&quot;&gt;twimbot&lt;&#x2F;a&gt;, designed to make it easier to consume and produce &lt;a href=&quot;&#x2F;twim&quot;&gt;This Week in Matrix&lt;&#x2F;a&gt; itself.&lt;&#x2F;p&gt;
&lt;p&gt;In June &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;@tulir:maunium.net&quot;&gt;tulir&lt;&#x2F;a&gt; started &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;maubot&#x2F;maubot&quot;&gt;maubot&lt;&#x2F;a&gt;, a plugin-based bot system built in Python, which now also has a management UI.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;all-bridges-lead-to-matrix&quot;&gt;All bridges lead to Matrix&lt;&#x2F;h3&gt;
&lt;p&gt;Or from Matrix, depending on which way you want to send the message.&lt;&#x2F;p&gt;
&lt;p&gt;Around May, I started to notice another obsession brewing in the community. Bridging is a core part of the Matrix mission, but it was around this time I started seeing it in the wild.&lt;&#x2F;p&gt;
&lt;p&gt;Summer 2018 &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;@Half-Shot:half-shot.uk&quot;&gt;Half-Shot&lt;&#x2F;a&gt; began working in the Matrix core team, and was &lt;em&gt;hugely&lt;&#x2F;em&gt; productive in maintaining and developing the bridge infrastructure for matrix.org. IRC bridging is far more stable and reliable now than it was a year ago. And yet there are still more bridges - too many to list, so I&#x27;m picking the ones I&#x27;ve used and enjoyed.&lt;&#x2F;p&gt;
&lt;p&gt;Discord is bridged by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Half-Shot&#x2F;matrix-appservice-discord&quot;&gt;matrix-appservice-discord&lt;&#x2F;a&gt;, handled by &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;@Half-Shot:half-shot.uk&quot;&gt;Half-Shot&lt;&#x2F;a&gt;, aided and abetted by &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;@andrewm:amorgan.xyz&quot;&gt;anoa&lt;&#x2F;a&gt; but with a new maintainer this year, &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;@sorunome:sorunome.de&quot;&gt;Sorunome&lt;&#x2F;a&gt;. This bridge is now feature-rich and sits at v0.3.1.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;@tulir:maunium.net&quot;&gt;tulir&lt;&#x2F;a&gt;&#x27;s suite of bridges including &lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tulir&#x2F;mautrix-telegram&quot;&gt;mautrix-telegram&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; and &lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tulir&#x2F;mautrix-whatsapp&quot;&gt;mautrix-whatsapp&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; are extremely stable and useful - big thank you to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;turt2live&quot;&gt;TravisR&lt;&#x2F;a&gt; for maintaining &lt;a href=&quot;https:&#x2F;&#x2F;t2bot.io&#x2F;&quot;&gt;t2bot.io&lt;&#x2F;a&gt; and hosting the Telegram bridge too.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tijder&#x2F;SmsMatrix&quot;&gt;SMSMatrix&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;, a phone-hosted bridge is simple and works great for SMS bridging.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;libraries-sdks-frameworks&quot;&gt;Libraries, SDKs, Frameworks&lt;&#x2F;h3&gt;
&lt;p&gt;I enjoyed using &lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;turt2live&#x2F;matrix-bot-sdk&quot;&gt;matrix-bot-sdk&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; for building &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;benparsons&#x2F;elizabot&quot;&gt;elizabot&lt;&#x2F;a&gt; (more coverage needed for that!), and the SDK recently received support for application services.&lt;&#x2F;p&gt;
&lt;p&gt;In April, &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;@kitsune:matrix.org&quot;&gt;kitsune&lt;&#x2F;a&gt; announced v0.2 of &lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QMatrixClient&#x2F;libqmatrixclient&quot;&gt;libqmatrixclient&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; describing it as “the first one more or less functional and stable&amp;quot; - confidence! This library now powers both Quaternion and Spectral. QMatrixClient has continued to get updates, plus features including lazy loading and VoIP signalling.&lt;&#x2F;p&gt;
&lt;p&gt;There are a few libs I want to pay more attention to this year, starting with &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;@tulir:maunium.net&quot;&gt;tulir&lt;&#x2F;a&gt;&#x27;s &lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;maubot&#x2F;maubot&quot;&gt;maubot&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; now that it has been rewritten in Python. I&#x27;m also excited to see &lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ma1uta&#x2F;jmsdk&quot;&gt;jmsdk&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;, part of &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;@ma1uta:matrix.org&quot;&gt;ma1uta&lt;&#x2F;a&gt;&#x27;s broader ecosystem of Matrix tooling - a Java-based SDK.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ruma-resurrection&quot;&gt;Ruma Resurrection&lt;&#x2F;h3&gt;
&lt;p&gt;Until around June, &lt;strong&gt;Ruma&lt;&#x2F;strong&gt; was receiving regular updates. There was a pause as the team waited for Rust async&#x2F;await to land, and also to get some stability in the Matrix Spec. Still waiting on Rust, but now that the Matrix Spec is stabilising, Ruma is showing signs of life too. I have also been watching other homeserver projects begin to restart, which makes for a great start to 2019.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;dsn-traveller-by-florian&quot;&gt;DSN Traveller by Florian&lt;&#x2F;h3&gt;
&lt;p&gt;Matrix was featured as part of a Master&#x27;s thesis by Florian Jacob.&lt;&#x2F;p&gt;
&lt;blockquote&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dsn-traveller.dsn.scc.kit.edu&#x2F;&quot;&gt;DSN Traveller&lt;&#x2F;a&gt; tries to get a rough overview of how the Matrix network is structured today. It records how many rooms it finds, how many users and servers take part in those rooms, and how they relate to each other, meaning how many users a server has and of how many rooms it is part of.&lt;&#x2F;blockquote&gt;
Florian&#x27;s thesis was handed in last August. &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;florianjacob&#x2F;dsn-traveller&quot;&gt;Source code is available&lt;&#x2F;a&gt;.
&lt;blockquote&gt;All details at &lt;a href=&quot;https:&#x2F;&#x2F;dsn-traveller.dsn.scc.kit.edu&#x2F;&quot;&gt;https:&#x2F;&#x2F;dsn-traveller.dsn.scc.kit.edu&#x2F;&lt;&#x2F;a&gt;, room at &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#dsn-traveller:dsn-traveller.dsn.scc.kit.edu&quot;&gt;#dsn-traveller:dsn-traveller.dsn.scc.kit.edu&lt;&#x2F;a&gt;.&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;still-more&quot;&gt;Still more&lt;&#x2F;h3&gt;
&lt;p&gt;Synapse dominates the homeserver space right now, so if you want to host your own homeserver today it&#x27;s the obvious choice. Too great a variety of installation guides was doing more harm than good, so &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;@natrius:matrix.org&quot;&gt;Stefan&lt;&#x2F;a&gt; took the initiative to create a &lt;strong&gt;definitive community-driven Synapse installation guide&lt;&#x2F;strong&gt;, including a room to discuss and improve the text. Find the &lt;a href=&quot;&#x2F;docs&#x2F;guides&#x2F;installing-synapse&quot;&gt;guide linked from here&lt;&#x2F;a&gt;, and chat about the guide in &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;synapseguide:matrix.org&quot;&gt;#synapseguide:matrix.org&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;I want to use Matrix, and I want to host my own homeserver. As such, &lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spantaleev&#x2F;matrix-docker-ansible-deploy&quot;&gt;matrix-docker-ansible-deploy&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; is a project I absolutely love. It uses Synapse docker images from the Matrix core team, and combines them with Ansible playbooks written and organised by &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;@slavi:devture.com&quot;&gt;Slavi&lt;&#x2F;a&gt;. It lets you quickly deploy everything needed for a Synapse homeserver, and it&#x27;s simple enough that even I can use it.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-construct&#x2F;construct&quot;&gt;Construct&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;, a homeserver implementation in C++ began successfully federating with Matrix, work progressed &lt;a href=&quot;&#x2F;blog&#x2F;2018&#x2F;05&#x2F;18&#x2F;this-week-in-matrix-2018-05-18&#x2F;&quot;&gt;from around April&#x2F;May&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Having a &lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;shields.io&#x2F;#&#x2F;examples&#x2F;chat&quot;&gt;Matrix-native mode for shields.io&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; (those counter&#x2F;indicator images you often see at the top of repos) seems like something petty at first, but it&#x27;s actually a great indicator of the importance of Matrix from the outside. Plus, I love seeing the images at the top of different repos. Thanks &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;@brendan:abolivier.bzh&quot;&gt;Brendan&lt;&#x2F;a&gt; for helping this along.&lt;&#x2F;p&gt;
&lt;p&gt;Two students worked on Matrix-related projects during &lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;summerofcode.withgoogle.com&#x2F;projects&#x2F;?sp-search=matrix&quot;&gt;GSOC 2018&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;@Zil0:matrix.org&quot;&gt;Zil0&lt;&#x2F;a&gt; created E2EE bindings for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-python-sdk&quot;&gt;matrix-python-sdk&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
 	&lt;li&gt;&lt;a href=&quot;@apwhitehat:matrix.org&quot;&gt;APwhitehat&lt;&#x2F;a&gt; worked on the federation APIs in Dendrite&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Something which came in super-helpful for me when testing homeserver installations was &lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;neo.lain.haus&#x2F;fed-tester&#x2F;&quot;&gt;f0x&#x27;s fed-tester&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;. &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;f0x52&#x2F;fed-tester&#x2F;&quot;&gt;Source code available&lt;&#x2F;a&gt; (obv.)
&lt;h3 id=&quot;thanks-for-all-the-projects&quot;&gt;Thanks for all the projects&lt;&#x2F;h3&gt;
&lt;p&gt;Thanks for a great 2018. There was so much to learn about, so much to write about, and so many great community members to meet and chat to! If I didn&#x27;t mention your project, I&#x27;m sorry to have been either forgetful or to not be able to include everything.&lt;&#x2F;p&gt;
&lt;p&gt;If you think I&#x27;ve missed something, or if there&#x27;s a project I should have included rather than another, or even if you just disagree with my choices, let&#x27;s discuss it in &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#TWIM:matrix.org&quot;&gt;#twim:matrix.org&lt;&#x2F;a&gt;. See you there, and let&#x27;s all parade ahead to a productive, open, interoperable 2019!&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>So long Half-Shot, thanks for all the bridges</title>
		<published>2018-08-31T00:00:00+00:00</published>
		<updated>2018-08-31T00:00:00+00:00</updated>
		<link rel="alternate" href="/blog/2018/08/31/so-long-half-shot-thanks-for-all-the-bridges/" type="text/html"/>
		<id>/blog/2018/08/31/so-long-half-shot-thanks-for-all-the-bridges/</id>
		<content type="html">&lt;p&gt;Thank you to Half-Shot for all your work on Bridges over the last months and beyond. Today is your last day, but I&#x27;m sure we&#x27;ll see you again before long. Text below is from Half-Shot.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Today marks my last day of my 3 month internship at New Vector (the startup which hires many of the core Matrix team). For those of you who haven&#x27;t been reading Ben&#x27;s fabulous blog posts, I&#x27;ve been working exclusively on bridges; in particular the IRC bridge.&lt;&#x2F;p&gt;
&lt;p&gt;Tasked with the goal of making it crash less and run faster, I hope that the evidence is visible and people are generally having a better experience on it!&lt;&#x2F;p&gt;
&lt;p&gt;Some stats pulled from the matrix-appservice-irc repo:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;39 PRs closed (4 remain open)&lt;&#x2F;li&gt;
 	&lt;li&gt;27 issues closed, 27 issues opened.&lt;&#x2F;li&gt;
 	&lt;li&gt;334 commits, averaging 7.6 commits a PR.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Commits this year:
&lt;img class=&quot;alignnone size-full wp-image-3506&quot; src=&quot;&#x2F;blog&#x2F;wp-content&#x2F;uploads&#x2F;2018&#x2F;08&#x2F;commits_year.png&quot; alt=&quot;Commits this year&quot; width=&quot;751&quot; height=&quot;179&quot; &#x2F;&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;But aside from showing off some stats, I wanted to mention all the new features:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;Replies on Matrix translate well to IRC, or as well as IRC allows.&lt;&#x2F;li&gt;
 	&lt;li&gt;People mentioning your IRC nick now ping your matrix user, finally!&lt;&#x2F;li&gt;
 	&lt;li&gt;So. Many. Metrics. Everything you wanted to know about the internals of the bridge, but were too afraid to &lt;code&gt;--inspect&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
 	&lt;li&gt;Not spamming homeservers with join requests on startup (it makes for a happy ops team).&lt;&#x2F;li&gt;
 	&lt;li&gt;No longer are IRC users shackled to a &quot;(IRC)&quot; extension on their displayname, you can be who you want
with group flairs!&lt;&#x2F;li&gt;
 	&lt;li&gt;Support for node 4 has been dropped, and support for 6,8 and 10 has been assured.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
On the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-appservice-bridge&quot;&gt;matrix-appservice-bridge&lt;&#x2F;a&gt; side, I optimised some calls to cache locally and avoid hitting the homeserver too often, and disabling presence for homeservers that don&#x27;t support it.
&lt;p&gt;There are future plans to make bridging more visible to Matrix Clients as a first class citizen. Ideas like &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;matrix-doc&#x2F;issues&#x2F;1410&quot;&gt;speccing a state event (MSC1410)&lt;&#x2F;a&gt; so that bridges can interact with each other properly and clients can create full bridge management views which are still decentralised from an integration manager.&lt;&#x2F;p&gt;
&lt;p&gt;I&#x27;d like to give a shoutout to Travis who has reviewed nearly all my changes that have made their way into the bridge, on top of all the other tasks he has on his plate. And of course a thank you to all of the Matrix team who have been very supportive during my time here.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Matrix &amp; Riot for Cryptocurrency Communities</title>
		<published>2017-09-19T00:00:00+00:00</published>
		<updated>2017-09-19T00:00:00+00:00</updated>
		<link rel="alternate" href="/blog/2017/09/19/matrix-riot-for-cryptocurrency-communities/" type="text/html"/>
		<id>/blog/2017/09/19/matrix-riot-for-cryptocurrency-communities/</id>
		<content type="html">&lt;p&gt;Hi folks,&lt;&#x2F;p&gt;
&lt;p&gt;Over the last few weeks there&#x27;s been a huge movement in the cryptocurrency communities over needing to find a better communication medium than Slack.  Some of the biggest communities for projects like &lt;a href=&quot;https:&#x2F;&#x2F;status.im&quot;&gt;Status&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;aragon.one&quot;&gt;Aragon&lt;&#x2F;a&gt;, &lt;a href=&quot;http:&#x2F;&#x2F;www.tenx.tech&#x2F;&quot;&gt;TenX&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;www.tezos.com&#x2F;&quot;&gt;Tezos&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;omg.omise.co&#x2F;&quot;&gt;OmiseGo&lt;&#x2F;a&gt;, &lt;a href=&quot;http:&#x2F;&#x2F;polkadot.network&quot;&gt;Polkadot&lt;&#x2F;a&gt; and many others are getting overrun by phishing attacks where malicious users have set up bots which auto-DM users joining the room in order to try to extract private keys to steal funds.  Slack has very limited support for avoiding this sort of abuse (especially at the free service tiers), so the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aragon&#x2F;governance&#x2F;issues&#x2F;7&quot;&gt;search is on&lt;&#x2F;a&gt; for an alternative solution.  There seems to be some confusion over what Matrix &amp;amp; Riot can and can&#x27;t do to help the situation, so we thought we&#x27;d write a blog post about it (especially after we &lt;a href=&quot;http:&#x2F;&#x2F;www.trustnodes.com&#x2F;2017&#x2F;09&#x2F;14&#x2F;matrix-demo-steals-show-ethereum-london-conference-meetup&quot;&gt;had so much fun&lt;&#x2F;a&gt; at the ETHLDN meetup last week!).&lt;&#x2F;p&gt;
&lt;p&gt;To be clear: we see Ethereum, Bitcoin, Ripple, Stellar and all the other decentralised currencies as being very closely related to Matrix.  Just as distributed ledgers disrupt the fragmented oligopoly old-school banking industry, we want Matrix to disrupt the relatively old-school communications systems of today. And so we&#x27;d really rather like that Matrix and Riot rocked when it comes to supporting cryptocurrency communities, and this is something we intend to dedicate resources to long term: we&#x27;ve got some big plans.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;things-matrix-provides&quot;&gt;Things Matrix provides:&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;strong&gt;Decentralisation&lt;&#x2F;strong&gt;. Rather than each community having its own silo, with users having to juggle accounts over all of them, Matrix decentralises rooms over all the different servers. Users can have a single account and still jump into all the other communities (as well as the rest of the Matrix universe). However, each community can run its own server instance (if they want to) and have complete control over its behaviour.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Encryption&lt;&#x2F;strong&gt;. Matrix has &lt;a href=&quot;&#x2F;blog&#x2F;2016&#x2F;11&#x2F;21&#x2F;matrixs-olm-end-to-end-encryption-security-assessment-released-and-implemented-cross-platform-on-riot-at-last&#x2F;&quot;&gt;first-class end-to-end encryption&lt;&#x2F;a&gt; (although the UX in Riot needs refinement and is technically still beta).  This is great for encrypting rooms which need privacy - although it does come at the expense of being able to do server-side content filtering, which is desirable for fixing phishing attacks. So you probably don&#x27;t want to turn on encryption for rooms which need phish filtering (or you could use a bot to decrypt and autoremove malicious content).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;A standard real-time API.&lt;&#x2F;strong&gt; One bit of feedback we&#x27;ve heard recently is that “Riot has no realtime API”.  This is spectacularly untrue; Riot is a client for the Matrix protocol, which is in and of itself an open standard realtime API for messaging, which you can use for writing whatever bots and extensions your heart desires.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Finely grained permissions per room.&lt;&#x2F;strong&gt; Likewise there seems to be some confusion over Matrix&#x27;s access control model.  In Matrix, each user in a room has a ‘power level&#x27; - typically a number between 0 and 100.  By convention, normal users who have just joined the room have 0; the room creator and ‘admins&#x27; have 100; and ‘moderators&#x27; have 50.  Pretty much every access you can do in a room then has a threshold which defines how much power a user needs to perform the action.  It doesn&#x27;t get much more finely grained than this!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Ability to disable DMs and room invites.&lt;&#x2F;strong&gt; Architecturally Matrix lets you prevent users who use a given server from receiving invites (the homeserver can just autoreject the invites, based on some set of rules). &lt;del&gt;We&#x27;re currently putting together a quick demo to show this off in the Synapse server implementation, but it boils down to having an option to cancel invites &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;blob&#x2F;5a7f561a9bff5163ce7fce719eea083cdd0eabd9&#x2F;synapse&#x2F;handlers&#x2F;federation.py#L1066&quot;&gt;here&lt;&#x2F;a&gt; (federated) and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;blob&#x2F;e5ae386ea4112ec91b47de339a3c8a4e034898c0&#x2F;synapse&#x2F;handlers&#x2F;room_member.py#L243&quot;&gt;here&lt;&#x2F;a&gt; (local).&lt;&#x2F;del&gt;
Check out the demo below!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Ability to filter content.&lt;&#x2F;strong&gt; Similarly, Matrix architecturally lets a given server filter out messages based on content or some other pattern from being received by its users. &lt;del&gt; We&#x27;re also putting together a demo of this too in Synapse, which boils down to redacting inappropriate events &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;blob&#x2F;e5ae386ea4112ec91b47de339a3c8a4e034898c0&#x2F;synapse&#x2F;federation&#x2F;federation_base.py#L119&quot;&gt;here&lt;&#x2F;a&gt; (federated) and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;blob&#x2F;e5ae386ea4112ec91b47de339a3c8a4e034898c0&#x2F;synapse&#x2F;handlers&#x2F;message.py#L239&quot;&gt;here&lt;&#x2F;a&gt; (local).  The demo isn&#x27;t quite ready yet but we&#x27;ll update this &amp;amp; yell when it is.&lt;&#x2F;del&gt;
Check out the demo below!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;UPDATE&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;2457&quot;&gt;DM&#x2F;invite disabling&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;synapse&#x2F;pull&#x2F;2456&quot;&gt;spam&#x2F;phish filtering&lt;&#x2F;a&gt; code has now landed on the develop branch of Synapse, and we&#x27;ve deployed an demo example of it at &lt;a href=&quot;https:&#x2F;&#x2F;phishfree.riot.im&quot;&gt;https:&#x2F;&#x2F;phishfree.riot.im&lt;&#x2F;a&gt;.  Messages containing the word &#x27;SPAM&#x27; are filtered, and invites are disabled (unless you are the local server admin).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Other stuff.&lt;&#x2F;strong&gt; Matrix and Riot give loads of other fun stuff too:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Widgets - the ability to embed arbitrary apps into your rooms (video conferences; currency tickers; DApps; wallets; monitoring dashboards; etc.).
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;100% Native clients on iOS &amp;amp; Android (including Jitsi video conferencing &amp;amp; Widgets, as of the develop branch!)
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Read receipts! (how can you live without them on Slack?!)
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Internationalised to 20+ languages (thanks to the community! :)
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;&lt;a href=&quot;&#x2F;blog&#x2F;2017&#x2F;03&#x2F;11&#x2F;how-do-i-bridge-thee-let-me-count-the-ways&#x2F;&quot;&gt;Bridges&lt;&#x2F;a&gt; through to IRC, Slack, Gitter, and more.
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;All sorts of alternative clients (e.g. &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mujx&#x2F;nheko&quot;&gt;nheko&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;QMatrixClient&#x2F;Quaternion&quot;&gt;quaternion&lt;&#x2F;a&gt;) and &lt;a href=&quot;&#x2F;docs&#x2F;projects&#x2F;try-matrix-now.html&quot;&gt;SDKs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Insanely scalable and performant next-generation server (
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;matrix-org&#x2F;dendrite&quot;&gt;Dendrite&lt;&#x2F;a&gt;) on the horizon
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;An &lt;a href=&quot;&#x2F;docs&#x2F;spec&quot;&gt;open spec&lt;&#x2F;a&gt; for the protocol.
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;100% Apache-licensed FLOSS.  Riot&#x2F;Web is particularly easy to hack on and theme &amp;amp; customise as needed.
&lt;&#x2F;li&gt;
 	&lt;li style=&quot;font-weight: 400;&quot;&gt;Ability to disable federation for a room if you really want to lock it down to the users &amp;amp; rules of a single server.
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;things-we-need-to-improve&quot;&gt;Things we need to improve:&lt;&#x2F;h3&gt;
&lt;p&gt;**Groups (aka Communities):  **One of the biggest missing features in Matrix is the ability to define groups of users &amp;amp; rooms, similar to a Slack team or Discord server, which can be used to organise together a set of discussions and generally give a feeling of community.  We&#x27;ve been working hard at this and expect to see it land in Riot&#x2F;Web in the next few weeks.  In the meanwhile, you can see some of the UX we&#x27;re aiming for &lt;a href=&quot;https:&#x2F;&#x2F;docs.google.com&#x2F;document&#x2F;d&#x2F;1wv78GqgG59CLjIKPi7GGkdqI6KOeQUBl9Bnf-uA-Kc0&#x2F;edit#heading=h.xravd1v7n60m&quot;&gt;here&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;p&gt;**E2E UX (and Riot UX in general):  **While the underlying encryption of Matrix is solid, the UX exposed by Riot needs considerable work - specifically to improve the device verification flow and automatically share keys between trusted devices.  We&#x27;re continuing to work on this over the next few months.  Likewise there are &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vector-im&#x2F;riot-web&#x2F;issues&#x2F;2984&quot;&gt;many areas&lt;&#x2F;a&gt; for possible improvement in Riot&#x27;s overall UX and design that we&#x27;re working through as urgently as we can.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Active Application Services&lt;&#x2F;strong&gt;: The per-server filtering described above is good if you just want to protect users on a given server (e.g. the server you point your community at).  However, if you want to filter all the messages for a given room which may be federated over multiple servers, you need a way to define a centralised chokepoint to define the filtering rules.  Architecturally this is meant to be performed by an ‘Active Application Service&#x27; in Matrix, but we&#x27;ve not yet defined or implemented this API.  The idea for the room to define a list of services that messages are filtered through by all servers before they may be accepted for the room.  This would be the ideal solution to the phishing-filtering problem, but in practice filtering just local users (and perhaps disabling federation for particularly sensitive rooms or servers) is probably good enough for the immediate problem here.&lt;&#x2F;p&gt;
&lt;p&gt;Hope this provides some much-needed clarity to the debate! If there are other features cryptocurrency communities need to thrive please let us know, as we&#x27;d like to actively help to support decentralized communities.  
&lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#matrix-dev:matrix.org&quot;&gt;#matrix-dev:matrix.org&lt;&#x2F;a&gt; is probably the best place for further questions :)&lt;&#x2F;p&gt;
&lt;p&gt;Finally: one thing that has come up a few times in this discussion has been “Matrix&#x27;s funding crisis means they may not be here to stay”.  All I can say is that 
&lt;strong&gt;Matrix is here to stay&lt;&#x2F;strong&gt;. Even if the core team ended up just being Matthew hacking away by himself funded by &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;matrixdotorg&quot;&gt;Patreon&lt;&#x2F;a&gt;&#x2F;
&lt;a href=&quot;https:&#x2F;&#x2F;liberapay.com&#x2F;matrixdotorg&quot;&gt;Liberapay&lt;&#x2F;a&gt;, we have a large and passionate wider dev community who aren&#x27;t going anywhere.  But more importantly (and not wishing to jinx it), in the last few weeks we have received offers of significant funding which may hopefully resolve the funding crisis for the foreseeable.  Nothing is signed yet, but watch this space, and meanwhile I strongly suggest betting on Matrix being here to stay!&lt;&#x2F;p&gt;
&lt;p&gt;--Matthew&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Thoughts on cryptocurrencies</title>
		<published>2017-08-22T00:00:00+00:00</published>
		<updated>2017-08-22T00:00:00+00:00</updated>
		<link rel="alternate" href="/blog/2017/08/22/thoughts-on-cryptocurrencies/" type="text/html"/>
		<id>/blog/2017/08/22/thoughts-on-cryptocurrencies/</id>
		<content type="html">&lt;p&gt;Hi folks,&lt;&#x2F;p&gt;
&lt;p&gt;Something that has kept coming up since we ran into funding problems in July is the idea that Matrix could launch a cryptocurrency - a token for use when exchanging items of value within Matrix. This isn&#x27;t such a far-fetched idea: folks are already starting to look at how to sell content&#x2F;services within Matrix, and the idea of using a Matrix-specific currency rather than credit card, PayPal, or an existing cryptocurrency could have some major advantages. Specifically:&lt;&#x2F;p&gt;
&lt;ul&gt;
 	&lt;li&gt;It would let the value of the currency (in terms of its exchange rate relative to other currencies) grow in value directly linked to the growth and success of the Matrix ecosystem as a whole.&lt;&#x2F;li&gt;
 	&lt;li&gt;In future it could help us reward folks who run Matrix infrastructure (homeservers, identity servers, etc) by &quot;mining&quot; or &quot;farming&quot; style allocations of currency&lt;&#x2F;li&gt;
 	&lt;li&gt;It could also be a very useful tool for helping fight spam in future.  One way of proving that a user should be allowed to contact strangers (other than a vouching system) could be to spend some money.&lt;&#x2F;li&gt;
 	&lt;li&gt;An &quot;token generation event&quot; or &quot;initial coin offering&quot; where we sell initial allocations of the currency to the Matrix &amp;amp; cryptocurrency community could be a rather useful way to raise enough money to fully support the core Matrix team going forwards.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
Meanwhile, Matrix itself is obviously already a fairly successful decentralised application ecosystem, and we believe that the above points give us a much better reason than average to actually launch a currency.  It&#x27;s important to note that we don&#x27;t have plans at this point to evolve the Matrix protocol itself into being able to support cryptocurrencies - we&#x27;d instead piggyback on top of an existing established distributed currency ledger.  (Later on, rewarding folks who run Matrix infrastructure by mining would require more interesting integration with Matrix, of course).
&lt;p&gt;&lt;strong&gt;However (and this is the important bit), whilst we&#x27;ve been thinking about this a lot over the last few months, we have not yet announced anything concrete.  Over the last few days it&#x27;s come to our attention that there are some people advertising a &amp;quot;Matrix.org ICO Presale&amp;quot;.  This is not legitimate - we are not yet running an ICO or presale, and if&#x2F;when we do the only place you will hear about it is here on the Matrix.org website. 
 It looks possible that this is a scam to try to steal Ethereum.  We have not yet authorised anyone to sell hypothetical Matrix currency.  If you see this rumour around please let us know so we can try to understand where it&#x27;s coming from and set the record straight.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Anyway, we thought it was worth giving an update on our thoughts about cryptocurrencies - and to publicly clarify that anyone claiming that they are running a Matrix.org ICO is lying.&lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;d genuinely be very interested to hear feedback from the community on whether an ICO for Matrix would be a good idea or not - &lt;a href=&quot;https:&#x2F;&#x2F;matrix.to&#x2F;#&#x2F;#matrix:matrix.org&quot;&gt;#matrix:matrix.org&lt;&#x2F;a&gt; is probably the best place to discuss it.  It&#x27;s important to understand that our core focus will always be on Matrix itself, where we still have a lot of work to get through - and if we do an ICO it&#x27;ll be in partnership with specialist cryptocurrency experts, and hopefully minimise the impact to the core Matrix project itself.  But right now, we would be foolish not to be seriously considering the option.&lt;&#x2F;p&gt;
&lt;p&gt;thanks,&lt;&#x2F;p&gt;
&lt;p&gt;Matthew, Amandine &amp;amp; the team.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Use you a Matrix for Great Good!</title>
		<published>2017-06-14T00:00:00+00:00</published>
		<updated>2017-06-14T00:00:00+00:00</updated>
		<link rel="alternate" href="/blog/2017/06/14/use-you-a-matrix-for-great-good/" type="text/html"/>
		<id>/blog/2017/06/14/use-you-a-matrix-for-great-good/</id>
		<content type="html">&lt;p&gt;Hi all,&lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;re currently looking into different ways that Matrix is being used in the wild, and an important question that has come up is whether anyone is using Matrix yet for decentralised communication in parts of the world where centralised communication poses a problem - due to bad connectivity or privacy concerns.  Similarly we&#x27;d love to hear from anyone who is seriously trialling Matrix&#x27;s end-to-end encryption for use in geographies where privacy is a particularly big issue for human rights.&lt;&#x2F;p&gt;
&lt;p&gt;So, if anyone has stories (anecdotal or otherwise) about how they&#x27;re using or planning to use Matrix to make the world a better place, in a location where that&#x27;s particularly critical, please can you let us know as soon as possible (@matthew:matrix.org or @Amandine:matrix.org).  This is fairly urgent because we&#x27;re currently looking at various options for how to prioritise effort and funding for Matrix, and if there are people out there who are depending on Matrix in this manner it would significantly help us support them!&lt;&#x2F;p&gt;
&lt;p&gt;thanks,&lt;&#x2F;p&gt;
&lt;p&gt;Matthew, Amandine &amp;amp; the team.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>&quot;What is The Matrix?&quot;</title>
		<published>2014-11-05T00:00:00+00:00</published>
		<updated>2014-11-05T00:00:00+00:00</updated>
		<link rel="alternate" href="/blog/2014/11/05/what-is-the-matrix/" type="text/html"/>
		<id>/blog/2014/11/05/what-is-the-matrix/</id>
		<content type="html">&lt;p&gt;&lt;em&gt;As part of our semi-regular series of having Matrix core team members write about how they see the overall project, here&#x27;s Oddvar Lovaas&#x27; view.  Oddvar helps out with project management and promoting Matrix.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;According to the homepage, Matrix is &amp;quot;a new open standard for interoperable Instant Messaging and VoIP, providing pragmatic HTTP APIs and open source reference implementations for creating and running your own real-time communication infrastructure. &amp;quot;&lt;&#x2F;p&gt;
&lt;p&gt;That&#x27;s all good - but you might be asking yourself &amp;quot;sure, but what can it do?&amp;quot; And more importantly, &amp;quot;what can it do for me?&amp;quot;&lt;&#x2F;p&gt;
&lt;p&gt;The original inspiration for Matrix was to fix the problem of fragmented IP communications, by creating a standard for creating and running your own real-time communication infrastructure. This means that if you want your app or program or website to be able to communicate user to user for example, you can use Matrix. Matrix is the protocol through which your communication packets are sent and received, and we provide HTTP APIs to make it easy to make use of this protocol in your code.&lt;&#x2F;p&gt;
&lt;p&gt;The nice thing here is that the user can to talk to any other user anywhere in the Matrix ecosystem, much like email or the web. For example, let&#x27;s imagine I have an app whose goal is to keep the user updated on anything happening in the football world. Whenever any news drops in, the app is notified and thousands of users check the app for the news. This app could have a communication element where the users can talk in rooms (maybe a #general room and rooms for each football club) - or even between themselves or in groups of friends. Today, a lot of people would use an IM-client to do this, but with Matrix it wouldn&#x27;t matter if you use a dedicated IM-app or talk inside the football app - since you are using the same Matrix account, you will get the same conversations in both clients!&lt;&#x2F;p&gt;
&lt;p&gt;In fact, imagine that later on you are chatting with some (non-football) friends on your Matrix-supporting chat-application. You can then easily check the previous conversation to see if anyone&#x27;s appreciated the great joke you made earlier - without having to go back into the football app.&lt;&#x2F;p&gt;
&lt;p&gt;But Matrix&#x27;s real potential and ultimate mission is to be a generic messaging and data synchronisation system for the web - allowing people, services and devices to easily communicate with each other with full history. It&#x27;s easier to visualise the chat-application because we are used to chat-messages going back and to, but there&#x27;s nothing stopping you from putting other data instead of chat-messages. For example, you could use the Matrix protocol to exchange moves - encrypted and secured, of course - in your Chess-game. In fact, your Chess-game could use Matrix both for chatting and exchanging payloads of data.&lt;&#x2F;p&gt;
&lt;p&gt;Imagine if you open up your favourite chat-application, and your contacts there include other users of the same app and also other Matrix-users (so the app has exposed itself to Matrix). Your friend, however, much prefers a different app, but he can still talk to you over the Matrix protocol. And if he ever moves to the other app (or any other Matrix-supporting app) - he would still have all the backlog and history of the conversation!&lt;&#x2F;p&gt;
&lt;p&gt;Obviously the problem here is that we can&#x27;t instantly make the various chat-applications support Matrix. We believe if we can encourage and grow a truly open communication ecosystem, users will get used to the availability and benefits of interoperable services and they will demand it everywhere.&lt;&#x2F;p&gt;
</content>
	</entry>
</feed>
